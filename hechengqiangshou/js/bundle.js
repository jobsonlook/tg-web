var Laya = window.Laya = function(l, t) {
    var u = {
        __internals: [],
        __packages: {},
        __classmap: {
            Object: Object,
            Function: Function,
            Array: Array,
            String: String
        },
        __sysClass: {
            object: "Object",
            array: "Array",
            string: "String",
            dictionary: "Dictionary"
        },
        __propun: {
            writable: !0,
            enumerable: !1,
            configurable: !0
        },
        __presubstr: String.prototype.substr,
        __substr: function(t, e) {
            return 1 == arguments.length ? u.__presubstr.call(this, t) : u.__presubstr.call(this, t, 0 < e ? e : this.length + e);
        },
        __init: function(t) {
            t.forEach(function(t) {
                t.__init$ && t.__init$();
            });
        },
        __isClass: function(t) {
            return t && (t.__isclass || t == Object || t == String || t == Array);
        },
        __newvec: function(t, e) {
            var i = [];
            i.length = t;
            for (var n = 0; n < t; n++)
                i[n] = e;
            return i;
        },
        __extend: function(t, e) {
            for (var i in e)
                if (e.hasOwnProperty(i)) {
                    var n = Object.getOwnPropertyDescriptor(e, i)
                      , a = n.get
                      , s = n.set;
                    a || s ? a && s ? Object.defineProperty(t, i, n) : (a && Object.defineProperty(t, i, a),
                    s && Object.defineProperty(t, i, s)) : t[i] = e[i];
                }
            function r() {
                u.un(this, "constructor", t);
            }
            r.prototype = e.prototype,
            t.prototype = new r(),
            u.un(t.prototype, "__imps", u.__copy({}, e.prototype.__imps));
        },
        __copy: function(t, e) {
            if (!e)
                return null;
            for (var i in t = t || {},
            e)
                t[i] = e[i];
            return t;
        },
        __package: function(t, e) {
            if (!u.__packages[t]) {
                u.__packages[t] = !0;
                var i = l
                  , n = t.split(".");
                if (1 < n.length)
                    for (var a = 0, s = n.length - 1; a < s; a++) {
                        var r = i[n[a]];
                        i = r || (i[n[a]] = {});
                    }
                i[n[n.length - 1]] || (i[n[n.length - 1]] = e || {});
            }
        },
        __hasOwnProperty: function(t, e) {
            return e = e || this,
            Object.hasOwnProperty.call(e, t) || function t(e, i) {
                if (Object.hasOwnProperty.call(i.prototype, e))
                    return !0;
                var n = i.prototype.__super;
                return null == n ? null : t(e, n);
            }(t, e.__class);
        },
        __typeof: function(t, e) {
            if (!t || !e)
                return !1;
            if (e === String)
                return "string" == typeof t;
            if (e === Number)
                return "number" == typeof t;
            if (e.__interface__)
                e = e.__interface__;
            else if ("string" != typeof e)
                return t instanceof e;
            return t.__imps && t.__imps[e] || t.__class == e;
        },
        __as: function(t, e) {
            return this.__typeof(t, e) ? t : null;
        },
        __int: function(t) {
            return t ? parseInt(t) : 0;
        },
        interface: function(t, e) {
            u.__package(t, {});
            var i = u.__internals
              , n = i[t] = i[t] || {
                self: t
            };
            if (e) {
                var a = e.split(",");
                n.extend = [];
                for (var s = 0; s < a.length; s++) {
                    var r = a[s];
                    i[r] = i[r] || {
                        self: r
                    },
                    n.extend.push(i[r]);
                }
            }
            var o = l
              , h = t.split(".");
            for (s = 0; s < h.length - 1; s++)
                o = o[h[s]];
            o[h[h.length - 1]] = {
                __interface__: t
            };
        },
        class: function(t, e, i, n) {
            if (i && u.__extend(t, i),
            e)
                if (u.__package(e, t),
                u.__classmap[e] = t,
                0 < e.indexOf(".")) {
                    if (0 == e.indexOf("laya.")) {
                        var a = e.split(".");
                        n = n || a[a.length - 1],
                        u[n] && console.log("Warning!,this class[" + n + "] already exist:", u[n]),
                        u[n] = t;
                    }
                } else
                    "Main" == e ? l.Main = t : (u[e] && console.log("Error!,this class[" + e + "] already exist:", u[e]),
                    u[e] = t);
            var s = u.un
              , r = t.prototype;
            s(r, "hasOwnProperty", u.__hasOwnProperty),
            s(r, "__class", t),
            s(r, "__super", i),
            s(r, "__className", e),
            s(t, "__super", i),
            s(t, "__className", e),
            s(t, "__isclass", !0),
            s(t, "super", function(t) {
                this.__super.call(t);
            });
        },
        imps: function(t, e) {
            if (!e)
                return null;
            var a = t.__imps || u.un(t, "__imps", {});
            function s(t) {
                var e, i;
                if ((e = u.__internals[t]) && (a[t] = !0,
                i = e.extend))
                    for (var n = 0; n < i.length; n++)
                        s(i[n].self);
            }
            for (var i in e)
                s(i);
        },
        superSet: function(t, e, i, n) {
            var a = t.prototype["_$set_" + i];
            a && a.call(e, n);
        },
        superGet: function(t, e, i) {
            var n = t.prototype["_$get_" + i];
            return n ? n.call(e) : null;
        },
        getset: function(t, e, i, n, a) {
            t ? (n && (e["_$GET_" + i] = n),
            a && (e["_$SET_" + i] = a)) : (n && u.un(e, "_$get_" + i, n),
            a && u.un(e, "_$set_" + i, a)),
            n && a ? Object.defineProperty(e, i, {
                get: n,
                set: a,
                enumerable: !1,
                configurable: !0
            }) : (n && Object.defineProperty(e, i, {
                get: n,
                enumerable: !1,
                configurable: !0
            }),
            a && Object.defineProperty(e, i, {
                set: a,
                enumerable: !1,
                configurable: !0
            }));
        },
        static: function(i, n) {
            for (var a = 0, t = n.length; a < t; a += 2)
                if ("length" == n[a])
                    i.length = n[a + 1].call(i);
                else {
                    function e() {
                        var e = n[a]
                          , t = n[a + 1];
                        Object.defineProperty(i, e, {
                            get: function() {
                                return delete this[e],
                                this[e] = t.call(this);
                            },
                            set: function(t) {
                                delete this[e],
                                this[e] = t;
                            },
                            enumerable: !0,
                            configurable: !0
                        });
                    }
                    e();
                }
        },
        un: function(t, e, i) {
            return i || (i = t[e]),
            u.__propun.value = i,
            Object.defineProperty(t, e, u.__propun),
            i;
        },
        uns: function(e, t) {
            t.forEach(function(t) {
                u.un(e, t);
            });
        }
    };
    return l.console = l.console || {
        log: function() {}
    },
    l.trace = l.console.log,
    Error.prototype.throwError = function() {
        throw arguments;
    }
    ,
    Object.defineProperty(Array.prototype, "fixed", {
        enumerable: !1
    }),
    u;
}(window, document);

!function(t, e, i) {
    i.un,
    i.uns,
    i.static,
    i.class,
    i.getset,
    i.__newvec;
}(window, document, Laya),
function(r, e, w) {
    w.un,
    w.uns;
    var h = w.static
      , f = w.class
      , u = w.getset;
    w.__newvec;
    w.interface("laya.runtime.IMarket"),
    w.interface("laya.filters.IFilter"),
    w.interface("laya.display.ILayout"),
    w.interface("laya.resource.IDispose"),
    w.interface("laya.runtime.IPlatform"),
    w.interface("laya.resource.IDestroy"),
    w.interface("laya.runtime.IConchNode"),
    w.interface("laya.filters.IFilterAction"),
    w.interface("laya.runtime.ICPlatformClass"),
    w.interface("laya.resource.ICreateResource"),
    w.interface("laya.runtime.IConchRenderObject"),
    w.interface("laya.runtime.IPlatformClass", "laya.runtime.IPlatform");
    var P = function() {
        function s() {}
        return f(s, "laya.utils.RunDriver"),
        s.FILTER_ACTIONS = [],
        s.pixelRatio = -1,
        s._charSizeTestDiv = null,
        s.now = function() {
            return Date.now();
        }
        ,
        s.getWindow = function() {
            return r;
        }
        ,
        s.getPixelRatio = function() {
            if (s.pixelRatio < 0) {
                var t = G.context
                  , e = t.backingStorePixelRatio || t.webkitBackingStorePixelRatio || t.mozBackingStorePixelRatio || t.msBackingStorePixelRatio || t.oBackingStorePixelRatio || t.backingStorePixelRatio || 1;
                (s.pixelRatio = (G.window.devicePixelRatio || 1) / e) < 1 && (s.pixelRatio = 1);
            }
            return s.pixelRatio;
        }
        ,
        s.getIncludeStr = function(t) {
            return null;
        }
        ,
        s.createShaderCondition = function(t) {
            var e = "(function() {return " + t + ";})";
            return w._runScript(e);
        }
        ,
        s.fontMap = [],
        s.measureText = function(t, e) {
            var i = s.hanzi.test(t);
            if (i && s.fontMap[e])
                return s.fontMap[e];
            var n = G.context;
            n.font = e;
            var a = n.measureText(t);
            return i && (s.fontMap[e] = a),
            a;
        }
        ,
        s.getWebGLContext = function(t) {}
        ,
        s.beginFlush = function() {}
        ,
        s.endFinish = function() {}
        ,
        s.addToAtlas = null,
        s.flashFlushImage = function(t) {}
        ,
        s.drawToCanvas = function(t, e, i, n, a, s) {
            var r = vt.create("2D")
              , o = new k(i,n,r);
            return N.renders[e]._fun(t, o, a, s),
            r;
        }
        ,
        s.createParticleTemplate2D = null,
        s.createGLTextur = null,
        s.createWebGLContext2D = null,
        s.changeWebGLSize = function(t, e) {}
        ,
        s.createRenderSprite = function(t, e) {
            return new N(t,e);
        }
        ,
        s.createFilterAction = function(t) {
            return new v();
        }
        ,
        s.createGraphics = function() {
            return new d();
        }
        ,
        s.clear = function(t) {
            R._context.ctx.clear();
        }
        ,
        s.cancelLoadByUrl = function(t) {}
        ,
        s.clearAtlas = function(t) {}
        ,
        s.isAtlas = function(t) {
            return !1;
        }
        ,
        s.addTextureToAtlas = function(t) {}
        ,
        s.getTexturePixels = function(t, e, i, n, a) {
            return null;
        }
        ,
        s.skinAniSprite = function() {
            return null;
        }
        ,
        s.update3DLoop = function() {}
        ,
        h(s, ["hanzi", function() {
            return this.hanzi = new RegExp("^[一-龥]$");
        }
        ]),
        s;
    }()
      , n = (u(1, w, "alertGlobalError", null, function(t) {
        var s = 0;
        G.window.onerror = t ? function(t, e, i, n, a) {
            s++ < 5 && a && alert("出错啦，请把此信息截图给研发商\n" + t + "\n" + a.stack || a);
        }
        : null;
    }),
    w.init = function(t, e, i) {
        for (var n = [], a = 2, s = arguments.length; a < s; a++)
            n.push(arguments[a]);
        if (!w._isinit) {
            ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = w._arrayBufferSlice),
            w._isinit = !0,
            G.__init__(),
            O.__init__(),
            d.__init__(),
            w.timer = new j(),
            w.scaleTimer = new j(),
            w.loader = new ht(),
            J.__init__(),
            a = 0;
            for (var r = n.length; a < r; a++)
                n[a].enable && n[a].enable();
            return _.__init__(),
            o.__init__(),
            B.__init__(),
            U.beginCheck(),
            w._currentStage = w.stage = new mt(),
            w.stage.conchModel && w.stage.conchModel.setRootNode(),
            w._getUrlPath(),
            w.render = new R(0,0),
            w.stage.size(t, e),
            N.__init__(),
            c.__init__(),
            p.instance.__init__(w.stage, R.canvas),
            xt.__init__(),
            E.autoStopMusic = !0,
            T.__init__(),
            R.canvas;
        }
    }
    ,
    w._getUrlPath = function() {
        var t = G.window.location
          , e = t.pathname;
        e = ":" == e.charAt(2) ? e.substring(1) : e,
        D.rootPath = D.basePath = D.getPath("file:" == t.protocol ? e : t.protocol + "//" + t.host + t.pathname);
    }
    ,
    w._arrayBufferSlice = function(t, e) {
        var i = new Uint8Array(this,t,e - t)
          , n = new Uint8Array(i.length);
        return n.set(i),
        n.buffer;
    }
    ,
    w._runScript = function(t) {
        return G.window[w._evcode](t);
    }
    ,
    w.stage = null,
    w.timer = null,
    w.scaleTimer = null,
    w.loader = null,
    w.version = "1.8.0beta",
    w.render = null,
    w._currentStage = null,
    w._isinit = !1,
    w.MiniAdpter = {
        init: function() {
            r.navigator && r.navigator.userAgent && -1 < r.navigator.userAgent.indexOf("MiniGame") && console.error("");
        }
    },
    h(w, ["conchMarket", function() {
        return this.conchMarket = r.conch ? conchMarket : null;
    }
    , "PlatformClass", function() {
        return this.PlatformClass = r.PlatformClass;
    }
    , "_evcode", function() {
        return this._evcode = "e" + String.fromCharCode(118) + "al";
    }
    ]),
    function() {
        function t() {}
        return f(t, "Config"),
        t.WebGLTextCacheCount = 500,
        t.atlasEnable = !1,
        t.showCanvasMark = !1,
        t.animationInterval = 50,
        t.isAntialias = !1,
        t.isAlpha = !1,
        t.premultipliedAlpha = !0,
        t.isStencil = !0,
        t.preserveDrawingBuffer = !1,
        t;
    }())
      , l = function() {
        var h;
        function e() {
            this._events = null;
        }
        f(e, "laya.events.EventDispatcher");
        var t = e.prototype;
        return t.hasListener = function(t) {
            return !!(this._events && this._events[t]);
        }
        ,
        t.event = function(t, e) {
            if (!this._events || !this._events[t])
                return !1;
            var i = this._events[t];
            if (i.run)
                i.once && delete this._events[t],
                null != e ? i.runWith(e) : i.run();
            else {
                for (var n = 0, a = i.length; n < a; n++) {
                    var s = i[n];
                    s && (null != e ? s.runWith(e) : s.run()),
                    s && !s.once || (i.splice(n, 1),
                    n--,
                    a--);
                }
                0 === i.length && this._events && delete this._events[t];
            }
            return !0;
        }
        ,
        t.on = function(t, e, i, n) {
            return this._createListener(t, e, i, n, !1);
        }
        ,
        t.once = function(t, e, i, n) {
            return this._createListener(t, e, i, n, !0);
        }
        ,
        t._createListener = function(t, e, i, n, a, s) {
            void 0 === s && (s = !0),
            s && this.off(t, e, i, a);
            var r = h.create(e || this, i, n, a);
            this._events || (this._events = {});
            var o = this._events;
            return o[t] ? o[t].run ? o[t] = [o[t], r] : o[t].push(r) : o[t] = r,
            this;
        }
        ,
        t.off = function(t, e, i, n) {
            if (void 0 === n && (n = !1),
            !this._events || !this._events[t])
                return this;
            var a = this._events[t];
            if (null != a)
                if (a.run)
                    e && a.caller !== e || a.method !== i || n && !a.once || (delete this._events[t],
                    a.recover());
                else {
                    for (var s = 0, r = 0, o = a.length; r < o; r++) {
                        var h = a[r];
                        h ? !h || e && h.caller !== e || h.method !== i || n && !h.once || (s++,
                        a[r] = null,
                        h.recover()) : s++;
                    }
                    s === o && delete this._events[t];
                }
            return this;
        }
        ,
        t.offAll = function(t) {
            var e = this._events;
            if (!e)
                return this;
            if (t)
                this._recoverHandlers(e[t]),
                delete e[t];
            else {
                for (var i in e)
                    this._recoverHandlers(e[i]);
                this._events = null;
            }
            return this;
        }
        ,
        t._recoverHandlers = function(t) {
            if (t)
                if (t.run)
                    t.recover();
                else
                    for (var e = t.length - 1; -1 < e; e--)
                        t[e] && (t[e].recover(),
                        t[e] = null);
        }
        ,
        t.isMouseEvent = function(t) {
            return e.MOUSE_EVENTS[t];
        }
        ,
        e.MOUSE_EVENTS = {
            rightmousedown: !0,
            rightmouseup: !0,
            rightclick: !0,
            mousedown: !0,
            mouseup: !0,
            mousemove: !0,
            mouseover: !0,
            mouseout: !0,
            click: !0,
            doubleclick: !0
        },
        e.__init$ = function() {
            Object.defineProperty(laya.events.EventDispatcher.prototype, "_events", {
                enumerable: !1,
                writable: !0
            }),
            h = function(t) {
                function a(t, e, i, n) {
                    a.__super.call(this, t, e, i, n);
                }
                return f(a, "", y),
                a.prototype.recover = function() {
                    0 < this._id && (this._id = 0,
                    a._pool.push(this.clear()));
                }
                ,
                a.create = function(t, e, i, n) {
                    return void 0 === n && (n = !0),
                    a._pool.length ? a._pool.pop().setTo(t, e, i, n) : new a(t,e,i,n);
                }
                ,
                a._pool = [],
                a;
            }();
        }
        ,
        e;
    }()
      , y = function() {
        function a(t, e, i, n) {
            this.once = !1,
            void (this._id = 0) === n && (n = !1),
            this.setTo(t, e, i, n);
        }
        f(a, "laya.utils.Handler");
        var t = a.prototype;
        return t.setTo = function(t, e, i, n) {
            return this._id = a._gid++,
            this.caller = t,
            this.method = e,
            this.args = i,
            this.once = n,
            this;
        }
        ,
        t.run = function() {
            if (null == this.method)
                return null;
            var t = this._id
              , e = this.method.apply(this.caller, this.args);
            return this._id === t && this.once && this.recover(),
            e;
        }
        ,
        t.runWith = function(t) {
            if (null == this.method)
                return null;
            var e = this._id;
            if (null == t)
                var i = this.method.apply(this.caller, this.args);
            else
                i = this.args || t.unshift ? this.args ? this.method.apply(this.caller, this.args.concat(t)) : this.method.apply(this.caller, t) : this.method.call(this.caller, t);
            return this._id === e && this.once && this.recover(),
            i;
        }
        ,
        t.clear = function() {
            return this.caller = null,
            this.method = null,
            this.args = null,
            this;
        }
        ,
        t.recover = function() {
            0 < this._id && (this._id = 0,
            a._pool.push(this.clear()));
        }
        ,
        a.create = function(t, e, i, n) {
            return void 0 === n && (n = !0),
            a._pool.length ? a._pool.pop().setTo(t, e, i, n) : new a(t,e,i,n);
        }
        ,
        a._pool = [],
        a._gid = 1,
        a;
    }()
      , C = function() {
        function t() {
            this._texture = null,
            this._fontCharDic = {},
            this._fontWidthMap = {},
            this._complete = null,
            this._path = null,
            this._maxWidth = 0,
            this._spaceWidth = 10,
            this._padding = null,
            this.fontSize = 12,
            this.autoScaleSize = !1,
            this.letterSpacing = 0;
        }
        f(t, "laya.display.BitmapFont");
        var e = t.prototype;
        return e.loadFont = function(t, e) {
            this._path = t,
            this._complete = e,
            w.loader.load([{
                url: this._path,
                type: "xml"
            }, {
                url: this._path.replace(".fnt", ".png"),
                type: "image"
            }], y.create(this, this.onLoaded));
        }
        ,
        e.onLoaded = function() {
            this.parseFont(ot.getRes(this._path), ot.getRes(this._path.replace(".fnt", ".png"))),
            this._complete && this._complete.runWith(this._texture ? this : null);
        }
        ,
        e.parseFont = function(t, e) {
            if (null != t && null != e) {
                this._texture = e;
                var i = t.getElementsByTagName("info");
                if (!i[0].getAttributeNode)
                    return this.parseFont2(t, e);
                this.fontSize = parseInt(i[0].getAttributeNode("size").nodeValue);
                var n, a = i[0].getAttributeNode("padding").nodeValue.split(",");
                this._padding = [parseInt(a[0]), parseInt(a[1]), parseInt(a[2]), parseInt(a[3])],
                n = t.getElementsByTagName("char");
                var s = 0;
                for (s = 0; s < n.length; s++) {
                    var r = n[s]
                      , o = parseInt(r.getAttributeNode("id").nodeValue)
                      , h = parseInt(r.getAttributeNode("xoffset").nodeValue) / 1
                      , l = parseInt(r.getAttributeNode("yoffset").nodeValue) / 1
                      , u = parseInt(r.getAttributeNode("xadvance").nodeValue) / 1
                      , c = new I();
                    c.x = parseInt(r.getAttributeNode("x").nodeValue),
                    c.y = parseInt(r.getAttributeNode("y").nodeValue),
                    c.width = parseInt(r.getAttributeNode("width").nodeValue),
                    c.height = parseInt(r.getAttributeNode("height").nodeValue);
                    var d = ut.create(e, c.x, c.y, c.width, c.height, h, l);
                    this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing),
                    this._fontCharDic[o] = d,
                    this._fontWidthMap[o] = u;
                }
            }
        }
        ,
        e.parseFont2 = function(t, e) {
            if (null != t && null != e) {
                this._texture = e;
                var i = t.getElementsByTagName("info");
                this.fontSize = parseInt(i[0].attributes.size.nodeValue);
                var n = i[0].attributes.padding.nodeValue.split(",");
                this._padding = [parseInt(n[0]), parseInt(n[1]), parseInt(n[2]), parseInt(n[3])];
                var a = t.getElementsByTagName("char")
                  , s = 0;
                for (s = 0; s < a.length; s++) {
                    var r = a[s].attributes
                      , o = parseInt(r.id.nodeValue)
                      , h = parseInt(r.xoffset.nodeValue) / 1
                      , l = parseInt(r.yoffset.nodeValue) / 1
                      , u = parseInt(r.xadvance.nodeValue) / 1
                      , c = new I();
                    c.x = parseInt(r.x.nodeValue),
                    c.y = parseInt(r.y.nodeValue),
                    c.width = parseInt(r.width.nodeValue),
                    c.height = parseInt(r.height.nodeValue);
                    var d = ut.create(e, c.x, c.y, c.width, c.height, h, l);
                    this._maxWidth = Math.max(this._maxWidth, u + this.letterSpacing),
                    this._fontCharDic[o] = d,
                    this._fontWidthMap[o] = u;
                }
            }
        }
        ,
        e.getCharTexture = function(t) {
            return this._fontCharDic[t.charCodeAt(0)];
        }
        ,
        e.destroy = function() {
            if (this._texture) {
                for (var t in this._fontCharDic) {
                    var e = this._fontCharDic[t];
                    e && e.destroy();
                }
                this._texture.destroy(),
                this._fontCharDic = null,
                this._fontWidthMap = null,
                this._texture = null;
            }
        }
        ,
        e.setSpaceWidth = function(t) {
            this._spaceWidth = t;
        }
        ,
        e.getCharWidth = function(t) {
            var e = t.charCodeAt(0);
            return this._fontWidthMap[e] ? this._fontWidthMap[e] + this.letterSpacing : " " == t ? this._spaceWidth + this.letterSpacing : 0;
        }
        ,
        e.getTextWidth = function(t) {
            for (var e = 0, i = 0, n = t.length; i < n; i++)
                e += this.getCharWidth(t.charAt(i));
            return e;
        }
        ,
        e.getMaxWidth = function() {
            return this._maxWidth;
        }
        ,
        e.getMaxHeight = function() {
            return this.fontSize;
        }
        ,
        e.drawText = function(t, e, i, n, a, s) {
            var r, o = this.getTextWidth(t), h = 0;
            "center" === a && (h = (s - o) / 2),
            "right" === a && (h = s - o);
            for (var l = 0, u = 0, c = t.length; u < c; u++)
                (r = this.getCharTexture(t.charAt(u))) && (e.graphics.drawTexture(r, i + l + h, n),
                l += this.getCharWidth(t.charAt(u)));
        }
        ,
        t;
    }()
      , o = function() {
        function i() {
            this.alpha = 1,
            this.visible = !0,
            this.scrollRect = null,
            this.blendMode = null,
            this._type = 0,
            this._tf = i._TF_EMPTY;
        }
        f(i, "laya.display.css.Style");
        var t = i.prototype;
        return t.getTransform = function() {
            return this._tf;
        }
        ,
        t.setTransform = function(t) {
            this._tf = "none" !== t && t ? t : i._TF_EMPTY;
        }
        ,
        t.setTranslateX = function(t) {
            this._tf === i._TF_EMPTY && (this._tf = new a()),
            this._tf.translateX = t;
        }
        ,
        t.setTranslateY = function(t) {
            this._tf === i._TF_EMPTY && (this._tf = new a()),
            this._tf.translateY = t;
        }
        ,
        t.setScaleX = function(t) {
            this._tf === i._TF_EMPTY && (this._tf = new a()),
            this._tf.scaleX = t;
        }
        ,
        t.setScale = function(t, e) {
            this._tf === i._TF_EMPTY && (this._tf = new a()),
            this._tf.scaleX = t,
            this._tf.scaleY = e;
        }
        ,
        t.setScaleY = function(t) {
            this._tf === i._TF_EMPTY && (this._tf = new a()),
            this._tf.scaleY = t;
        }
        ,
        t.setRotate = function(t) {
            this._tf === i._TF_EMPTY && (this._tf = new a()),
            this._tf.rotate = t;
        }
        ,
        t.setSkewX = function(t) {
            this._tf === i._TF_EMPTY && (this._tf = new a()),
            this._tf.skewX = t;
        }
        ,
        t.setSkewY = function(t) {
            this._tf === i._TF_EMPTY && (this._tf = new a()),
            this._tf.skewY = t;
        }
        ,
        t.destroy = function() {
            this.scrollRect = null;
        }
        ,
        t.render = function(t, e, i, n) {}
        ,
        t.getCSSStyle = function() {
            return et.EMPTY;
        }
        ,
        t._enableLayout = function() {
            return !1;
        }
        ,
        u(0, t, "scaleX", function() {
            return this._tf.scaleX;
        }, function(t) {
            this.setScaleX(t);
        }),
        u(0, t, "transform", function() {
            return this.getTransform();
        }, function(t) {
            this.setTransform(t);
        }),
        u(0, t, "translateX", function() {
            return this._tf.translateX;
        }, function(t) {
            this.setTranslateX(t);
        }),
        u(0, t, "translateY", function() {
            return this._tf.translateY;
        }, function(t) {
            this.setTranslateY(t);
        }),
        u(0, t, "scaleY", function() {
            return this._tf.scaleY;
        }, function(t) {
            this.setScaleY(t);
        }),
        u(0, t, "block", function() {
            return 0 != (1 & this._type);
        }),
        u(0, t, "skewY", function() {
            return this._tf.skewY;
        }, function(t) {
            this.setSkewY(t);
        }),
        u(0, t, "rotate", function() {
            return this._tf.rotate;
        }, function(t) {
            this.setRotate(t);
        }),
        u(0, t, "skewX", function() {
            return this._tf.skewX;
        }, function(t) {
            this.setSkewX(t);
        }),
        u(0, t, "paddingLeft", function() {
            return 0;
        }),
        u(0, t, "paddingTop", function() {
            return 0;
        }),
        u(0, t, "absolute", function() {
            return !0;
        }),
        i.__init__ = function() {
            i._TF_EMPTY = new a(),
            i.EMPTY = new i();
        }
        ,
        i.EMPTY = null,
        i._TF_EMPTY = null,
        i;
    }()
      , _ = function() {
        function e(t) {
            this._type = 0,
            this._weight = 0,
            this._decoration = null,
            this._text = null,
            this.indent = 0,
            this._color = V.create(e.defaultColor),
            this.family = e.defaultFamily,
            this.stroke = e._STROKE,
            this.size = e.defaultSize,
            t && t !== e.EMPTY && t.copyTo(this);
        }
        f(e, "laya.display.css.Font");
        var t = e.prototype;
        return t.set = function(t) {
            this._text = null;
            for (var e = t.split(" "), i = 0, n = e.length; i < n; i++) {
                var a = e[i];
                switch (a) {
                case "italic":
                    this.italic = !0;
                    continue;

                case "bold":
                    this.bold = !0;
                    continue;
                }
                0 < a.indexOf("px") && (this.size = parseInt(a),
                this.family = e[i + 1],
                i++);
            }
        }
        ,
        t.toString = function() {
            return this._text = "",
            this.italic && (this._text += "italic "),
            this.bold && (this._text += "bold "),
            this._text += this.size + "px " + this.family;
        }
        ,
        t.copyTo = function(t) {
            t._type = this._type,
            t._text = this._text,
            t._weight = this._weight,
            t._color = this._color,
            t.family = this.family,
            t.stroke = this.stroke != e._STROKE ? this.stroke.slice() : e._STROKE,
            t.indent = this.indent,
            t.size = this.size;
        }
        ,
        u(0, t, "password", function() {
            return 0 != (1024 & this._type);
        }, function(t) {
            t ? this._type |= 1024 : this._type &= -1025;
        }),
        u(0, t, "color", function() {
            return this._color.strColor;
        }, function(t) {
            this._color = V.create(t);
        }),
        u(0, t, "italic", function() {
            return 0 != (512 & this._type);
        }, function(t) {
            t ? this._type |= 512 : this._type &= -513;
        }),
        u(0, t, "bold", function() {
            return 0 != (2048 & this._type);
        }, function(t) {
            t ? this._type |= 2048 : this._type &= -2049;
        }),
        u(0, t, "weight", function() {
            return "" + this._weight;
        }, function(t) {
            var e = 0;
            switch (t) {
            case "normal":
                break;

            case "bold":
                this.bold = !0,
                e = 700;
                break;

            case "bolder":
                e = 800;
                break;

            case "lighter":
                e = 100;
                break;

            default:
                e = parseInt(t);
            }
            this._weight = e,
            this._text = null;
        }),
        u(0, t, "decoration", function() {
            return this._decoration ? this._decoration.value : null;
        }, function(t) {
            var e = t.split(" ");
            switch (this._decoration || (this._decoration = {}),
            e[0]) {
            case "_":
                this._decoration.type = "underline";
                break;

            case "-":
                this._decoration.type = "line-through";
                break;

            case "overline":
                this._decoration.type = "overline";
                break;

            default:
                this._decoration.type = e[0];
            }
            e[1] && (this._decoration.color = V.create(e)),
            this._decoration.value = t;
        }),
        e.__init__ = function() {
            e.EMPTY = new e(null);
        }
        ,
        e.EMPTY = null,
        e.defaultColor = "#000000",
        e.defaultSize = 12,
        e.defaultFamily = "Arial",
        e.defaultFont = "12px Arial",
        e._STROKE = [0, "#000000"],
        e._ITALIC = 512,
        e._PASSWORD = 1024,
        e._BOLD = 2048,
        e;
    }()
      , a = function() {
        function t() {
            this.translateX = 0,
            this.translateY = 0,
            this.scaleX = 1,
            this.scaleY = 1,
            this.rotate = 0,
            this.skewX = 0,
            this.skewY = 0;
        }
        return f(t, "laya.display.css.TransformInfo"),
        t;
    }()
      , d = function() {
        function c() {
            if (this._one = null,
            this._cmds = null,
            this._render = this._renderEmpty,
            R.isConchNode) {
                this._nativeObj = new r._conchGraphics(),
                this.id = this._nativeObj.conchID;
            }
        }
        f(c, "laya.display.Graphics");
        var t = c.prototype;
        return t.destroy = function() {
            this.clear(),
            this._graphicBounds && this._graphicBounds.destroy(),
            this._graphicBounds = null,
            this._vectorgraphArray = null,
            this._sp && (this._sp._renderType = 0),
            this._sp = null;
        }
        ,
        t.clear = function(t) {
            void 0 === t && (t = !1);
            var e = 0
              , i = 0;
            if (t) {
                var n = this._one;
                if (this._cmds) {
                    for (i = this._cmds.length,
                    e = 0; e < i; e++)
                        !(n = this._cmds[e]) || n.callee !== R._context._drawTexture && n.callee !== R._context._drawTextureWithTransform || (n[0] = null,
                        c._cache.push(n));
                    this._cmds.length = 0;
                } else
                    n && (!n || n.callee !== R._context._drawTexture && n.callee !== R._context._drawTextureWithTransform || (n[0] = null,
                    c._cache.push(n)));
            } else
                this._cmds = null;
            if (this._one = null,
            this._render = this._renderEmpty,
            this._sp && (this._sp._renderType &= -514),
            this._repaint(),
            this._vectorgraphArray) {
                for (e = 0,
                i = this._vectorgraphArray.length; e < i; e++)
                    Q.getInstance().deleteShape(this._vectorgraphArray[e]);
                this._vectorgraphArray.length = 0;
            }
        }
        ,
        t._clearBoundsCache = function() {
            this._graphicBounds && this._graphicBounds.reset();
        }
        ,
        t._initGraphicBounds = function() {
            this._graphicBounds || (this._graphicBounds = new i(),
            this._graphicBounds._graphics = this);
        }
        ,
        t._repaint = function() {
            this._clearBoundsCache(),
            this._sp && this._sp.repaint();
        }
        ,
        t._isOnlyOne = function() {
            return !this._cmds || 0 === this._cmds.length;
        }
        ,
        t.getBounds = function(t) {
            return void 0 === t && (t = !1),
            this._initGraphicBounds(),
            this._graphicBounds.getBounds(t);
        }
        ,
        t.getBoundPoints = function(t) {
            return void 0 === t && (t = !1),
            this._initGraphicBounds(),
            this._graphicBounds.getBoundPoints(t);
        }
        ,
        t._addCmd = function(t) {
            this._cmds = this._cmds || [],
            t.callee = t.shift(),
            this._cmds.push(t);
        }
        ,
        t.setFilters = function(t) {
            this._saveToCmd(R._context._setFilters, t);
        }
        ,
        t.drawTexture = function(t, e, i, n, a, s, r) {
            if (void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            void 0 === r && (r = 1),
            !t || r < .01)
                return null;
            n || (n = t.sourceWidth),
            a || (a = t.sourceHeight),
            r = r < 0 ? 0 : 1 < r ? 1 : r;
            var o, h = !R.isWebGL && (G.onFirefox || G.onEdge || G.onIE || G.onSafari) ? .5 : 0, l = n / t.sourceWidth, u = a / t.sourceHeight;
            return n = t.width * l,
            a = t.height * u,
            t.loaded && (n <= 0 || a <= 0) ? null : (e += t.offsetX * l,
            i += t.offsetY * u,
            this._sp && (this._sp._renderType |= 512),
            e -= h,
            i -= h,
            n += 2 * h,
            a += 2 * h,
            c._cache.length ? ((o = c._cache.pop())[0] = t,
            o[1] = e,
            o[2] = i,
            o[3] = n,
            o[4] = a,
            o[5] = s,
            o[6] = r) : o = [t, e, i, n, a, s, r],
            o.callee = s || 1 != r ? R._context._drawTextureWithTransform : R._context._drawTexture,
            null != this._one || s || 1 != r ? this._saveToCmd(o.callee, o) : (this._one = o,
            this._render = this._renderOneImg),
            t.loaded || t.once("loaded", this, this._textureLoaded, [t, o]),
            this._repaint(),
            o);
        }
        ,
        t.cleanByTexture = function(t, e, i, n, a) {
            if (void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            !t)
                return this.clear();
            if (this._one && this._render === this._renderOneImg) {
                n || (n = t.sourceWidth),
                a || (a = t.sourceHeight);
                var s = n / t.sourceWidth
                  , r = a / t.sourceHeight;
                n = t.width * s,
                a = t.height * r,
                e += t.offsetX * s,
                i += t.offsetY * r,
                this._one[0] = t,
                this._one[1] = e,
                this._one[2] = i,
                this._one[3] = n,
                this._one[4] = a,
                this._repaint();
            } else
                this.clear(),
                t && this.drawTexture(t, e, i, n, a);
        }
        ,
        t.drawTextures = function(t, e) {
            t && this._saveToCmd(R._context._drawTextures, [t, e]);
        }
        ,
        t.fillTexture = function(t, e, i, n, a, s, r) {
            if (void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            void 0 === s && (s = "repeat"),
            t) {
                var o = [t, e, i, n, a, s, r || M.EMPTY, {}];
                t.loaded || t.once("loaded", this, this._textureLoaded, [t, o]),
                this._saveToCmd(R._context._fillTexture, o);
            }
        }
        ,
        t._textureLoaded = function(t, e) {
            e[3] = e[3] || t.width,
            e[4] = e[4] || t.height,
            this._repaint();
        }
        ,
        t.fillCircle = function(t, e, i, n, a, s, r) {
            i.bitmap.enableMerageInAtlas = !1;
            var o = new Float32Array(2 * (r + 1))
              , h = new Float32Array(2 * (r + 1))
              , l = new Uint16Array(3 * r)
              , u = 2 * Math.PI / r
              , c = 0;
            o[0] = n,
            o[1] = a,
            h[0] = n / i.width,
            h[1] = a / i.height;
            for (var d = 2, _ = 0; _ < r; _++) {
                var p = s * Math.cos(c) + n
                  , f = s * Math.sin(c) + a;
                o[d] = p,
                o[d + 1] = f,
                h[d] = p / i.width,
                h[d + 1] = f / i.height,
                c += u,
                d += 2;
            }
            for (_ = d = 0; _ < r; _++)
                l[d++] = 0,
                l[d++] = _ + 1,
                l[d++] = r + 1 <= _ + 2 ? 1 : _ + 2;
            this.drawTriangles(i, t, e, o, h, l);
        }
        ,
        t.drawTriangles = function(t, e, i, n, a, s, r, o, h, l) {
            void 0 === o && (o = 1),
            this._saveToCmd(R._context.drawTriangles, [t, e, i, n, a, s, r, o, h, l]);
        }
        ,
        t._saveToCmd = function(t, e) {
            return this._sp && (this._sp._renderType |= 512),
            null == this._one ? (this._one = e,
            this._render = this._renderOne) : (this._sp && (this._sp._renderType &= -2),
            this._render = this._renderAll,
            0 === (this._cmds || (this._cmds = [])).length && this._cmds.push(this._one),
            this._cmds.push(e)),
            e.callee = t,
            this._repaint(),
            e;
        }
        ,
        t.clipRect = function(t, e, i, n) {
            this._saveToCmd(R._context._clipRect, [t, e, i, n]);
        }
        ,
        t.fillText = function(t, e, i, n, a, s, r) {
            void 0 === r && (r = 0),
            this._saveToCmd(R._context._fillText, [t, e, i, n || _.defaultFont, a, s]);
        }
        ,
        t.fillBorderText = function(t, e, i, n, a, s, r, o) {
            this._saveToCmd(R._context._fillBorderText, [t, e, i, n || _.defaultFont, a, s, r, o]);
        }
        ,
        t.strokeText = function(t, e, i, n, a, s, r) {
            this._saveToCmd(R._context._strokeText, [t, e, i, n || _.defaultFont, a, s, r]);
        }
        ,
        t.alpha = function(t) {
            t = t < 0 ? 0 : 1 < t ? 1 : t,
            this._saveToCmd(R._context._alpha, [t]);
        }
        ,
        t.setAlpha = function(t) {
            t = t < 0 ? 0 : 1 < t ? 1 : t,
            this._saveToCmd(R._context._setAlpha, [t]);
        }
        ,
        t.transform = function(t, e, i) {
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            this._saveToCmd(R._context._transform, [t, e, i]);
        }
        ,
        t.rotate = function(t, e, i) {
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            this._saveToCmd(R._context._rotate, [t, e, i]);
        }
        ,
        t.scale = function(t, e, i, n) {
            void 0 === i && (i = 0),
            void 0 === n && (n = 0),
            this._saveToCmd(R._context._scale, [t, e, i, n]);
        }
        ,
        t.translate = function(t, e) {
            this._saveToCmd(R._context._translate, [t, e]);
        }
        ,
        t.save = function() {
            this._saveToCmd(R._context._save, []);
        }
        ,
        t.restore = function() {
            this._saveToCmd(R._context._restore, []);
        }
        ,
        t.replaceText = function(t) {
            this._repaint();
            var e = this._cmds;
            if (e) {
                for (var i = e.length - 1; -1 < i; i--)
                    if (this._isTextCmd(e[i].callee))
                        return e[i][0].toUpperCase ? e[i][0] = t : e[i][0].setText(t),
                        !0;
            } else if (this._one && this._isTextCmd(this._one.callee))
                return this._one[0].toUpperCase ? this._one[0] = t : this._one[0].setText(t),
                !0;
            return !1;
        }
        ,
        t._isTextCmd = function(t) {
            return t === R._context._fillText || t === R._context._fillBorderText || t === R._context._strokeText;
        }
        ,
        t.replaceTextColor = function(t) {
            this._repaint();
            var e = this._cmds;
            if (e)
                for (var i = e.length - 1; -1 < i; i--)
                    this._isTextCmd(e[i].callee) && (e[i][4] = t,
                    e[i][0].toUpperCase || (e[i][0].changed = !0));
            else
                this._one && this._isTextCmd(this._one.callee) && (this._one[4] = t,
                this._one[0].toUpperCase || (this._one[0].changed = !0));
        }
        ,
        t.loadImage = function(t, e, i, n, a, s) {
            var r = this;
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 0),
            void 0 === a && (a = 0);
            var o = ot.getRes(t);
            function h(t) {
                t && (r.drawTexture(t, e, i, n, a),
                null != s && s.call(r._sp, t));
            }
            o ? h(o) : w.loader.load(t, y.create(null, h), null, "image");
        }
        ,
        t._renderEmpty = function(t, e, i, n) {}
        ,
        t._renderAll = function(t, e, i, n) {
            for (var a, s = this._cmds, r = 0, o = s.length; r < o; r++)
                (a = s[r]).callee.call(e, i, n, a);
        }
        ,
        t._renderOne = function(t, e, i, n) {
            this._one.callee.call(e, i, n, this._one);
        }
        ,
        t._renderOneImg = function(t, e, i, n) {
            this._one.callee.call(e, i, n, this._one),
            2305 !== t._renderType && (t._renderType |= 1);
        }
        ,
        t.drawLine = function(t, e, i, n, a, s) {
            void 0 === s && (s = 1);
            var r = 0;
            R.isWebGL && (r = Q.getInstance().getId(),
            null == this._vectorgraphArray && (this._vectorgraphArray = []),
            this._vectorgraphArray.push(r));
            var o = s % 2 == 0 ? 0 : .5
              , h = [t + o, e + o, i + o, n + o, a, s, r];
            this._saveToCmd(R._context._drawLine, h);
        }
        ,
        t.drawLines = function(t, e, i, n, a) {
            void 0 === a && (a = 1);
            var s = 0;
            if (i && !(i.length < 4)) {
                R.isWebGL && (s = Q.getInstance().getId(),
                null == this._vectorgraphArray && (this._vectorgraphArray = []),
                this._vectorgraphArray.push(s));
                var r = a % 2 == 0 ? 0 : .5
                  , o = [t + r, e + r, i, n, a, s];
                this._saveToCmd(R._context._drawLines, o);
            }
        }
        ,
        t.drawCurves = function(t, e, i, n, a) {
            void 0 === a && (a = 1);
            var s = [t, e, i, n, a];
            this._saveToCmd(R._context._drawCurves, s);
        }
        ,
        t.drawRect = function(t, e, i, n, a, s, r) {
            void 0 === r && (r = 1);
            var o = s ? r / 2 : 0
              , h = s ? r : 0
              , l = [t + o, e + o, i - h, n - h, a, s, r];
            this._saveToCmd(R._context._drawRect, l);
        }
        ,
        t.drawCircle = function(t, e, i, n, a, s) {
            void 0 === s && (s = 1);
            var r = a ? s / 2 : 0
              , o = 0;
            R.isWebGL && (o = Q.getInstance().getId(),
            null == this._vectorgraphArray && (this._vectorgraphArray = []),
            this._vectorgraphArray.push(o));
            var h = [t, e, i - r, n, a, s, o];
            this._saveToCmd(R._context._drawCircle, h);
        }
        ,
        t.drawPie = function(t, e, i, n, a, s, r, o) {
            void 0 === o && (o = 1);
            var h = r ? o / 2 : 0
              , l = r ? o : 0
              , u = 0;
            R.isWebGL && (u = Q.getInstance().getId(),
            null == this._vectorgraphArray && (this._vectorgraphArray = []),
            this._vectorgraphArray.push(u));
            var c = [t + h, e + h, i - l, n, a, s, r, o, u];
            c[3] = q.toRadian(n),
            c[4] = q.toRadian(a),
            this._saveToCmd(R._context._drawPie, c);
        }
        ,
        t.drawPoly = function(t, e, i, n, a, s) {
            void 0 === s && (s = 1);
            var r = 0
              , o = !1;
            R.isWebGL && (r = Q.getInstance().getId(),
            null == this._vectorgraphArray && (this._vectorgraphArray = []),
            this._vectorgraphArray.push(r),
            o = !(6 < i.length));
            var h = a ? s % 2 == 0 ? 0 : .5 : 0
              , l = [t + h, e + h, i, n, a, s, r, o];
            this._saveToCmd(R._context._drawPoly, l);
        }
        ,
        t.drawPath = function(t, e, i, n, a) {
            var s = [t, e, i, n, a];
            this._saveToCmd(R._context._drawPath, s);
        }
        ,
        u(0, t, "cmds", function() {
            return this._cmds;
        }, function(t) {
            this._sp && (this._sp._renderType |= 512),
            this._cmds = t,
            this._render = this._renderAll,
            this._repaint();
        }),
        c.__init__ = function() {
            if (R.isConchNode) {
                for (var t = laya.display.Graphics.prototype, e = G.window.ConchGraphics.prototype, i = ["clear", "destroy", "alpha", "rotate", "transform", "scale", "translate", "save", "restore", "clipRect", "blendMode", "fillText", "fillBorderText", "_fands", "drawRect", "drawCircle", "drawPie", "drawPoly", "drawPath", "drawImageM", "drawLine", "drawLines", "_drawPs", "drawCurves", "replaceText", "replaceTextColor", "_fillImage", "fillTexture", "setSkinMesh", "drawParticle", "drawImageS"], n = 0, a = i.length; n <= a; n++) {
                    var s = i[n];
                    t[s] = e[s];
                }
                t._saveToCmd = null,
                e.drawImageS && (t.drawTextures = function(t, e) {
                    if (t && t.loaded && t.bitmap && t.source) {
                        var i = t.uv
                          , n = t.bitmap.width
                          , a = t.bitmap.height;
                        this.drawImageS(t.bitmap.source, i[0] * n, i[1] * a, (i[2] - i[0]) * n, (i[5] - i[3]) * a, t.offsetX, t.offsetY, t.width, t.height, e);
                    }
                }
                ),
                t.drawTexture = function(t, e, i, n, a, s, r) {
                    if (void 0 === e && (e = 0),
                    void 0 === i && (i = 0),
                    void 0 === n && (n = 0),
                    void 0 === a && (a = 0),
                    void 0 === r && (r = 1),
                    t)
                        if (t.loaded) {
                            if (t.loaded && t.bitmap && t.source && (n || (n = t.sourceWidth),
                            a || (a = t.sourceHeight),
                            r = r < 0 ? 0 : 1 < r ? 1 : r,
                            n = n - t.sourceWidth + t.width,
                            a = a - t.sourceHeight + t.height,
                            !(n <= 0 || a <= 0))) {
                                e += t.offsetX,
                                i += t.offsetY;
                                var o = t.uv
                                  , h = t.bitmap.width
                                  , l = t.bitmap.height;
                                o[4] < o[0] && o[5] < o[1] ? this.drawImageM(t.bitmap.source, o[4] * h, o[5] * l, (o[0] - o[4]) * h, (o[1] - o[5]) * l, e, i, n, a, s, r) : this.drawImageM(t.bitmap.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e, i, n, a, s, r),
                                this._repaint();
                            }
                        } else
                            t.once("loaded", this, function() {
                                this.drawTexture(t, e, i, n, a, s);
                            });
                }
                ,
                t.fillTexture = function(t, e, i, n, a, s, r) {
                    if (void 0 === n && (n = 0),
                    void 0 === a && (a = 0),
                    void 0 === s && (s = "repeat"),
                    t && t.loaded) {
                        var o, h = R._context.ctx, l = t.bitmap.width, u = t.bitmap.height, c = t.uv;
                        o = t.uv != ut.DEF_UV ? h.createPattern(t.bitmap.source, s, c[0] * l, c[1] * u, (c[2] - c[0]) * l, (c[5] - c[3]) * u) : h.createPattern(t.bitmap.source, s);
                        var d = 0
                          , _ = 0;
                        r && (e += r.x % t.width,
                        i += r.y % t.height,
                        d -= r.x % t.width,
                        _ -= r.y % t.height),
                        this._fillImage(o, e, i, d, _, n, a);
                    }
                }
                ;
            }
        }
        ,
        c._cache = [],
        c;
    }()
      , i = function() {
        function v() {
            this._cacheBoundsType = !1;
        }
        f(v, "laya.display.GraphicsBounds");
        var t = v.prototype;
        return t.destroy = function() {
            this._graphics = null,
            this._temp = null,
            this._rstBoundPoints = null,
            this._bounds = null;
        }
        ,
        t.reset = function() {
            this._temp && (this._temp.length = 0);
        }
        ,
        t.getBounds = function(t) {
            return void 0 === t && (t = !1),
            (!this._bounds || !this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._bounds = I._getWrapRec(this.getBoundPoints(t), this._bounds)),
            this._cacheBoundsType = t,
            this._bounds;
        }
        ,
        t.getBoundPoints = function(t) {
            return void 0 === t && (t = !1),
            (!this._temp || this._temp.length < 1 || t != this._cacheBoundsType) && (this._temp = this._getCmdPoints(t)),
            this._cacheBoundsType = t,
            this._rstBoundPoints = q.copyArray(this._rstBoundPoints, this._temp);
        }
        ,
        t._getCmdPoints = function(t) {
            void 0 === t && (t = !1);
            var e, i, n = R._context, a = this._graphics.cmds;
            if ((e = this._temp || (this._temp = [])).length = 0,
            a || null == this._graphics._one || (v._tempCmds.length = 0,
            v._tempCmds.push(this._graphics._one),
            a = v._tempCmds),
            !a)
                return e;
            (i = v._tempMatrixArrays).length = 0;
            var s = v._initMatrix;
            s.identity();
            for (var r, o, h = v._tempMatrix, l = NaN, u = NaN, c = NaN, d = NaN, _ = NaN, p = NaN, f = 0, g = a.length; f < g; f++)
                if ((r = a[f]).callee)
                    switch (r.callee) {
                    case n._save:
                    case 7:
                        i.push(s),
                        s = s.clone();
                        break;

                    case n._restore:
                    case 8:
                        s = i.pop();
                        break;

                    case n._scale:
                    case 5:
                        h.identity(),
                        h.translate(-r[2], -r[3]),
                        h.scale(r[0], r[1]),
                        h.translate(r[2], r[3]),
                        this._switchMatrix(s, h);
                        break;

                    case n._rotate:
                    case 3:
                        h.identity(),
                        h.translate(-r[1], -r[2]),
                        h.rotate(r[0]),
                        h.translate(r[1], r[2]),
                        this._switchMatrix(s, h);
                        break;

                    case n._translate:
                    case 6:
                        h.identity(),
                        h.translate(r[0], r[1]),
                        this._switchMatrix(s, h);
                        break;

                    case n._transform:
                    case 4:
                        h.identity(),
                        h.translate(-r[1], -r[2]),
                        h.concat(r[0]),
                        h.translate(r[1], r[2]),
                        this._switchMatrix(s, h);
                        break;

                    case 16:
                    case 24:
                        v._addPointArrToRst(e, I._getBoundPointS(r[0], r[1], r[2], r[3]), s);
                        break;

                    case 17:
                        s.copyTo(h),
                        h.concat(r[4]),
                        v._addPointArrToRst(e, I._getBoundPointS(r[0], r[1], r[2], r[3]), h);
                        break;

                    case n._drawTexture:
                        o = r[0],
                        t ? r[3] && r[4] ? v._addPointArrToRst(e, I._getBoundPointS(r[1], r[2], r[3], r[4]), s) : (o = r[0],
                        v._addPointArrToRst(e, I._getBoundPointS(r[1], r[2], o.width, o.height), s)) : (l = (r[3] || o.sourceWidth) / o.width,
                        u = (r[4] || o.sourceHeight) / o.height,
                        c = l * o.sourceWidth,
                        d = u * o.sourceHeight,
                        _ = 0 < o.offsetX ? o.offsetX : 0,
                        p = 0 < o.offsetY ? o.offsetY : 0,
                        _ *= l,
                        p *= u,
                        v._addPointArrToRst(e, I._getBoundPointS(r[1] - _, r[2] - p, c, d), s));
                        break;

                    case n._fillTexture:
                        r[3] && r[4] ? v._addPointArrToRst(e, I._getBoundPointS(r[1], r[2], r[3], r[4]), s) : (o = r[0],
                        v._addPointArrToRst(e, I._getBoundPointS(r[1], r[2], o.width, o.height), s));
                        break;

                    case n._drawTextureWithTransform:
                        var m;
                        m = r[5] ? (s.copyTo(h),
                        h.concat(r[5]),
                        h) : s,
                        t ? r[3] && r[4] ? v._addPointArrToRst(e, I._getBoundPointS(r[1], r[2], r[3], r[4]), m) : (o = r[0],
                        v._addPointArrToRst(e, I._getBoundPointS(r[1], r[2], o.width, o.height), m)) : (o = r[0],
                        l = (r[3] || o.sourceWidth) / o.width,
                        u = (r[4] || o.sourceHeight) / o.height,
                        c = l * o.sourceWidth,
                        d = u * o.sourceHeight,
                        _ = 0 < o.offsetX ? o.offsetX : 0,
                        p = 0 < o.offsetY ? o.offsetY : 0,
                        _ *= l,
                        p *= u,
                        v._addPointArrToRst(e, I._getBoundPointS(r[1] - _, r[2] - p, c, d), m));
                        break;

                    case n._drawRect:
                    case 13:
                        v._addPointArrToRst(e, I._getBoundPointS(r[0], r[1], r[2], r[3]), s);
                        break;

                    case n._drawCircle:
                    case n._fillCircle:
                    case 14:
                        v._addPointArrToRst(e, I._getBoundPointS(r[0] - r[2], r[1] - r[2], r[2] + r[2], r[2] + r[2]), s);
                        break;

                    case n._drawLine:
                    case 20:
                        v._tempPoints.length = 0;
                        var y;
                        y = .5 * r[5],
                        r[0] == r[2] ? v._tempPoints.push(r[0] + y, r[1], r[2] + y, r[3], r[0] - y, r[1], r[2] - y, r[3]) : r[1] == r[3] ? v._tempPoints.push(r[0], r[1] + y, r[2], r[3] + y, r[0], r[1] - y, r[2], r[3] - y) : v._tempPoints.push(r[0], r[1], r[2], r[3]),
                        v._addPointArrToRst(e, v._tempPoints, s);
                        break;

                    case n._drawCurves:
                    case 22:
                        v._addPointArrToRst(e, S.I.getBezierPoints(r[2]), s, r[0], r[1]);
                        break;

                    case n._drawPoly:
                    case n._drawLines:
                    case 18:
                        v._addPointArrToRst(e, r[2], s, r[0], r[1]);
                        break;

                    case n._drawPath:
                    case 19:
                        v._addPointArrToRst(e, this._getPathPoints(r[2]), s, r[0], r[1]);
                        break;

                    case n._drawPie:
                    case 15:
                        v._addPointArrToRst(e, this._getPiePoints(r[0], r[1], r[2], r[3], r[4]), s);
                    }
            return 200 < e.length ? e = q.copyArray(e, I._getWrapRec(e)._getBoundPoints()) : 8 < e.length && (e = x.scanPList(e)),
            e;
        }
        ,
        t._switchMatrix = function(t, e) {
            e.concat(t),
            e.copyTo(t);
        }
        ,
        t._getPiePoints = function(t, e, i, n, a) {
            var s = v._tempPoints;
            v._tempPoints.length = 0,
            s.push(t, e);
            var r = (a - n) % (2 * Math.PI) / 10
              , o = NaN
              , h = n;
            for (o = 0; o <= 10; o++)
                s.push(t + i * Math.cos(h), e + i * Math.sin(h)),
                h += r;
            return s;
        }
        ,
        t._getPathPoints = function(t) {
            var e, i, n = 0, a = v._tempPoints;
            for (a.length = 0,
            e = t.length,
            n = 0; n < e; n++)
                1 < (i = t[n]).length && (a.push(i[1], i[2]),
                3 < i.length && a.push(i[3], i[4]));
            return a;
        }
        ,
        v._addPointArrToRst = function(t, e, i, n, a) {
            void 0 === n && (n = 0),
            void 0 === a && (a = 0);
            var s, r = 0;
            for (s = e.length,
            r = 0; r < s; r += 2)
                v._addPointToRst(t, e[r] + n, e[r + 1] + a, i);
        }
        ,
        v._addPointToRst = function(t, e, i, n) {
            var a = M.TEMP;
            a.setTo(e || 0, i || 0),
            n.transformPoint(a),
            t.push(a.x, a.y);
        }
        ,
        v._tempPoints = [],
        v._tempMatrixArrays = [],
        v._tempCmds = [],
        h(v, ["_tempMatrix", function() {
            return this._tempMatrix = new A();
        }
        , "_initMatrix", function() {
            return this._initMatrix = new A();
        }
        ]),
        v;
    }()
      , s = function() {
        function t() {}
        f(t, "laya.events.Event");
        var e = t.prototype;
        return e.setTo = function(t, e, i) {
            return this.type = t,
            this.currentTarget = e,
            this.target = i,
            this;
        }
        ,
        e.stopPropagation = function() {
            this._stoped = !0;
        }
        ,
        u(0, e, "stageY", function() {
            return w.stage.mouseY;
        }),
        u(0, e, "charCode", function() {
            return this.nativeEvent.charCode;
        }),
        u(0, e, "touches", function() {
            var t = this.nativeEvent.touches;
            if (t)
                for (var e = w.stage, i = 0, n = t.length; i < n; i++) {
                    var a = t[i]
                      , s = M.TEMP;
                    s.setTo(a.clientX, a.clientY),
                    e._canvasTransform.invertTransformPoint(s),
                    e.transform.invertTransformPoint(s),
                    a.stageX = s.x,
                    a.stageY = s.y;
                }
            return t;
        }),
        u(0, e, "keyLocation", function() {
            return this.nativeEvent.keyLocation;
        }),
        u(0, e, "ctrlKey", function() {
            return this.nativeEvent.ctrlKey;
        }),
        u(0, e, "altKey", function() {
            return this.nativeEvent.altKey;
        }),
        u(0, e, "shiftKey", function() {
            return this.nativeEvent.shiftKey;
        }),
        u(0, e, "stageX", function() {
            return w.stage.mouseX;
        }),
        t.EMPTY = new t(),
        t.MOUSE_DOWN = "mousedown",
        t.MOUSE_UP = "mouseup",
        t.CLICK = "click",
        t.RIGHT_MOUSE_DOWN = "rightmousedown",
        t.RIGHT_MOUSE_UP = "rightmouseup",
        t.RIGHT_CLICK = "rightclick",
        t.MOUSE_MOVE = "mousemove",
        t.MOUSE_OVER = "mouseover",
        t.MOUSE_OUT = "mouseout",
        t.MOUSE_WHEEL = "mousewheel",
        t.ROLL_OVER = "mouseover",
        t.ROLL_OUT = "mouseout",
        t.DOUBLE_CLICK = "doubleclick",
        t.CHANGE = "change",
        t.CHANGED = "changed",
        t.RESIZE = "resize",
        t.ADDED = "added",
        t.REMOVED = "removed",
        t.DISPLAY = "display",
        t.UNDISPLAY = "undisplay",
        t.ERROR = "error",
        t.COMPLETE = "complete",
        t.LOADED = "loaded",
        t.PROGRESS = "progress",
        t.INPUT = "input",
        t.RENDER = "render",
        t.OPEN = "open",
        t.MESSAGE = "message",
        t.CLOSE = "close",
        t.KEY_DOWN = "keydown",
        t.KEY_PRESS = "keypress",
        t.KEY_UP = "keyup",
        t.FRAME = "enterframe",
        t.DRAG_START = "dragstart",
        t.DRAG_MOVE = "dragmove",
        t.DRAG_END = "dragend",
        t.ENTER = "enter",
        t.SELECT = "select",
        t.BLUR = "blur",
        t.FOCUS = "focus",
        t.VISIBILITY_CHANGE = "visibilitychange",
        t.FOCUS_CHANGE = "focuschange",
        t.PLAYED = "played",
        t.PAUSED = "paused",
        t.STOPPED = "stopped",
        t.START = "start",
        t.END = "end",
        t.ENABLE_CHANGED = "enablechanged",
        t.ACTIVE_IN_HIERARCHY_CHANGED = "activeinhierarchychanged",
        t.COMPONENT_ADDED = "componentadded",
        t.COMPONENT_REMOVED = "componentremoved",
        t.LAYER_CHANGED = "layerchanged",
        t.HIERARCHY_LOADED = "hierarchyloaded",
        t.RECOVERED = "recovered",
        t.RELEASED = "released",
        t.LINK = "link",
        t.LABEL = "label",
        t.FULL_SCREEN_CHANGE = "fullscreenchange",
        t.DEVICE_LOST = "devicelost",
        t.MESH_CHANGED = "meshchanged",
        t.MATERIAL_CHANGED = "materialchanged",
        t.WORLDMATRIX_NEEDCHANGE = "worldmatrixneedchanged",
        t.ANIMATION_CHANGED = "animationchanged",
        t.TRIGGER_ENTER = "triggerenter",
        t.TRIGGER_STAY = "triggerstay",
        t.TRIGGER_EXIT = "triggerexit",
        t.TRAIL_FILTER_CHANGE = "trailfilterchange",
        t.DOMINO_FILTER_CHANGE = "dominofilterchange",
        t;
    }()
      , c = (function() {
        function t() {}
        f(t, "laya.events.Keyboard"),
        t.NUMBER_0 = 48,
        t.NUMBER_1 = 49,
        t.NUMBER_2 = 50,
        t.NUMBER_3 = 51,
        t.NUMBER_4 = 52,
        t.NUMBER_5 = 53,
        t.NUMBER_6 = 54,
        t.NUMBER_7 = 55,
        t.NUMBER_8 = 56,
        t.NUMBER_9 = 57,
        t.A = 65,
        t.B = 66,
        t.C = 67,
        t.D = 68,
        t.E = 69,
        t.F = 70,
        t.G = 71,
        t.H = 72,
        t.I = 73,
        t.J = 74,
        t.K = 75,
        t.L = 76,
        t.M = 77,
        t.N = 78,
        t.O = 79,
        t.P = 80,
        t.Q = 81,
        t.R = 82,
        t.S = 83,
        t.T = 84,
        t.U = 85,
        t.V = 86,
        t.W = 87,
        t.X = 88,
        t.Y = 89,
        t.Z = 90,
        t.F1 = 112,
        t.F2 = 113,
        t.F3 = 114,
        t.F4 = 115,
        t.F5 = 116,
        t.F6 = 117,
        t.F7 = 118,
        t.F8 = 119,
        t.F9 = 120,
        t.F10 = 121,
        t.F11 = 122,
        t.F12 = 123,
        t.F13 = 124,
        t.F14 = 125,
        t.F15 = 126,
        t.NUMPAD = 21,
        t.NUMPAD_0 = 96,
        t.NUMPAD_1 = 97,
        t.NUMPAD_2 = 98,
        t.NUMPAD_3 = 99,
        t.NUMPAD_4 = 100,
        t.NUMPAD_5 = 101,
        t.NUMPAD_6 = 102,
        t.NUMPAD_7 = 103,
        t.NUMPAD_8 = 104,
        t.NUMPAD_9 = 105,
        t.NUMPAD_ADD = 107,
        t.NUMPAD_DECIMAL = 110,
        t.NUMPAD_DIVIDE = 111,
        t.NUMPAD_ENTER = 108,
        t.NUMPAD_MULTIPLY = 106,
        t.NUMPAD_SUBTRACT = 109,
        t.SEMICOLON = 186,
        t.EQUAL = 187,
        t.COMMA = 188,
        t.MINUS = 189,
        t.PERIOD = 190,
        t.SLASH = 191,
        t.BACKQUOTE = 192,
        t.LEFTBRACKET = 219,
        t.BACKSLASH = 220,
        t.RIGHTBRACKET = 221,
        t.QUOTE = 222,
        t.ALTERNATE = 18,
        t.BACKSPACE = 8,
        t.CAPS_LOCK = 20,
        t.COMMAND = 15,
        t.CONTROL = 17,
        t.DELETE = 46,
        t.ENTER = 13,
        t.ESCAPE = 27,
        t.PAGE_UP = 33,
        t.PAGE_DOWN = 34,
        t.END = 35,
        t.HOME = 36,
        t.LEFT = 37,
        t.UP = 38,
        t.RIGHT = 39,
        t.DOWN = 40,
        t.SHIFT = 16,
        t.SPACE = 32,
        t.TAB = 9,
        t.INSERT = 45;
    }(),
    function() {
        function a() {}
        return f(a, "laya.events.KeyBoardManager"),
        a.__init__ = function() {
            a._addEvent("keydown"),
            a._addEvent("keypress"),
            a._addEvent("keyup");
        }
        ,
        a._addEvent = function(e) {
            G.document.addEventListener(e, function(t) {
                laya.events.KeyBoardManager._dispatch(t, e);
            }, !0);
        }
        ,
        a._dispatch = function(t, e) {
            if (a.enabled) {
                a._event._stoped = !1,
                a._event.nativeEvent = t,
                a._event.keyCode = t.keyCode || t.which || t.charCode,
                "keydown" === e ? a._pressKeys[a._event.keyCode] = !0 : "keyup" === e && (a._pressKeys[a._event.keyCode] = null);
                for (var i = w.stage.focus && null != w.stage.focus.event && w.stage.focus.displayedInStage ? w.stage.focus : w.stage, n = i; n; )
                    n.event(e, a._event.setTo(e, n, i)),
                    n = n.parent;
            }
        }
        ,
        a.hasKeyDown = function(t) {
            return a._pressKeys[t];
        }
        ,
        a._pressKeys = {},
        a.enabled = !0,
        h(a, ["_event", function() {
            return this._event = new s();
        }
        ]),
        a;
    }())
      , p = (function() {
        function t() {}
        f(t, "laya.events.KeyLocation"),
        t.STANDARD = 0,
        t.LEFT = 1,
        t.RIGHT = 2,
        t.NUM_PAD = 3;
    }(),
    function() {
        function u() {
            this.mouseX = 0,
            this.mouseY = 0,
            this.disableMouseEvent = !1,
            this.mouseDownTime = 0,
            this.mouseMoveAccuracy = 2,
            this._stage = null,
            this._target = null,
            this._lastMoveTimer = 0,
            this._isLeftMouse = !1,
            this._eventList = [],
            this._touchIDs = {},
            this._id = 1,
            this._tTouchID = 0,
            this._event = new s(),
            this._matrix = new A(),
            this._point = new M(),
            this._rect = new I(),
            this._prePoint = new M(),
            this._curTouchID = NaN;
        }
        f(u, "laya.events.MouseManager");
        var t = u.prototype;
        return t.__init__ = function(t, e) {
            var i = this;
            this._stage = t;
            var n = this
              , a = this._eventList;
            e.oncontextmenu = function(t) {
                if (u.enabled)
                    return !1;
            }
            ,
            e.addEventListener("mousedown", function(t) {
                u.enabled && (G.onIE || t.preventDefault(),
                a.push(t),
                n.mouseDownTime = G.now());
            }),
            e.addEventListener("mouseup", function(t) {
                u.enabled && (t.preventDefault(),
                a.push(t),
                n.mouseDownTime = -G.now());
            }, !0),
            e.addEventListener("mousemove", function(t) {
                if (u.enabled) {
                    t.preventDefault();
                    var e = G.now();
                    if (e - n._lastMoveTimer < 10)
                        return;
                    n._lastMoveTimer = e,
                    a.push(t);
                }
            }, !0),
            e.addEventListener("mouseout", function(t) {
                u.enabled && a.push(t);
            }),
            e.addEventListener("mouseover", function(t) {
                u.enabled && a.push(t);
            }),
            e.addEventListener("touchstart", function(t) {
                u.enabled && (a.push(t),
                u._isFirstTouch || xt.isInputting || t.preventDefault(),
                n.mouseDownTime = G.now());
            }),
            e.addEventListener("touchend", function(t) {
                u.enabled ? (u._isFirstTouch || xt.isInputting || t.preventDefault(),
                u._isFirstTouch = !1,
                a.push(t),
                n.mouseDownTime = -G.now()) : i._curTouchID = NaN;
            }, !0),
            e.addEventListener("touchmove", function(t) {
                u.enabled && (t.preventDefault(),
                a.push(t));
            }, !0),
            e.addEventListener("touchcancel", function(t) {
                u.enabled ? (t.preventDefault(),
                a.push(t)) : i._curTouchID = NaN;
            }, !0),
            e.addEventListener("mousewheel", function(t) {
                u.enabled && a.push(t);
            }),
            e.addEventListener("DOMMouseScroll", function(t) {
                u.enabled && a.push(t);
            });
        }
        ,
        t.initEvent = function(t, e) {
            var i, n = this;
            n._event._stoped = !1,
            n._event.nativeEvent = e || t,
            n._target = null,
            this._point.setTo(t.pageX || t.clientX, t.pageY || t.clientY),
            this._stage._canvasTransform.invertTransformPoint(this._point),
            n.mouseX = this._point.x,
            n.mouseY = this._point.y,
            n._event.touchId = t.identifier || 0,
            this._tTouchID = n._event.touchId,
            (i = g.I._event)._stoped = !1,
            i.nativeEvent = n._event.nativeEvent,
            i.touchId = n._event.touchId;
        }
        ,
        t.checkMouseWheel = function(t) {
            this._event.delta = t.wheelDelta ? .025 * t.wheelDelta : -t.detail;
            for (var e = g.I.getLastOvers(), i = 0, n = e.length; i < n; i++) {
                var a = e[i];
                a.event("mousewheel", this._event.setTo("mousewheel", a, this._target));
            }
        }
        ,
        t.onMouseMove = function(t) {
            g.I.onMouseMove(t, this._tTouchID);
        }
        ,
        t.onMouseDown = function(t) {
            if (xt.isInputting && w.stage.focus && w.stage.focus.focus && !w.stage.focus.contains(this._target)) {
                var e = w.stage.focus._tf || w.stage.focus
                  , i = t._tf || t;
                i instanceof laya.display.Input && i.multiline == e.multiline ? e._focusOut() : e.focus = !1;
            }
            g.I.onMouseDown(t, this._tTouchID, this._isLeftMouse);
        }
        ,
        t.onMouseUp = function(t) {
            g.I.onMouseUp(t, this._tTouchID, this._isLeftMouse);
        }
        ,
        t.check = function(t, e, i, n) {
            this._point.setTo(e, i),
            t.fromParentPoint(this._point),
            e = this._point.x,
            i = this._point.y;
            var a = t.scrollRect;
            if (a && (this._rect.setTo(a.x, a.y, a.width, a.height),
            !this._rect.contains(e, i)))
                return !1;
            if (!this.disableMouseEvent) {
                if (t.hitTestPrior && !t.mouseThrough && !this.hitTest(t, e, i))
                    return !1;
                for (var s = t._childs.length - 1; -1 < s; s--) {
                    var r = t._childs[s];
                    if (!r.destroyed && r.mouseEnabled && r.visible && this.check(r, e, i, n))
                        return !0;
                }
            }
            var o = !(!t.hitTestPrior || t.mouseThrough || this.disableMouseEvent) || this.hitTest(t, e, i);
            return o ? (this._target = t,
            n.call(this, t)) : n === this.onMouseUp && t === this._stage && (this._target = this._stage,
            n.call(this, this._target)),
            o;
        }
        ,
        t.hitTest = function(t, e, i) {
            var n = !1;
            if (t.scrollRect && (e -= t.scrollRect.x,
            i -= t.scrollRect.y),
            t.hitArea instanceof laya.utils.HitArea)
                return t.hitArea.isHit(e, i);
            if (0 < t.width && 0 < t.height || t.mouseThrough || t.hitArea)
                if (t.mouseThrough)
                    n = t.getGraphicBounds().contains(e, i);
                else {
                    var a = this._rect;
                    t.hitArea ? a = t.hitArea : a.setTo(0, 0, t.width, t.height),
                    n = a.contains(e, i);
                }
            return n;
        }
        ,
        t.runEvent = function() {
            var t = this._eventList.length;
            if (t) {
                for (var e, i = this, n = 0, a = 0, s = 0; n < t; ) {
                    var r = this._eventList[n];
                    switch ("mousemove" !== r.type && (this._prePoint.x = this._prePoint.y = -1e6),
                    r.type) {
                    case "mousedown":
                        this._touchIDs[0] = this._id++,
                        u._isTouchRespond ? u._isTouchRespond = !1 : (i._isLeftMouse = 0 === r.button,
                        i.initEvent(r),
                        i.check(i._stage, i.mouseX, i.mouseY, i.onMouseDown));
                        break;

                    case "mouseup":
                        i._isLeftMouse = 0 === r.button,
                        i.initEvent(r),
                        i.check(i._stage, i.mouseX, i.mouseY, i.onMouseUp);
                        break;

                    case "mousemove":
                        Math.abs(this._prePoint.x - r.clientX) + Math.abs(this._prePoint.y - r.clientY) >= this.mouseMoveAccuracy && (this._prePoint.x = r.clientX,
                        this._prePoint.y = r.clientY,
                        i.initEvent(r),
                        i.check(i._stage, i.mouseX, i.mouseY, i.onMouseMove));
                        break;

                    case "touchstart":
                        u._isTouchRespond = !0,
                        i._isLeftMouse = !0;
                        var o = r.changedTouches;
                        for (a = 0,
                        s = o.length; a < s; a++)
                            e = o[a],
                            (u.multiTouchEnabled || isNaN(this._curTouchID)) && (this._curTouchID = e.identifier,
                            this._id % 200 == 0 && (this._touchIDs = {}),
                            this._touchIDs[e.identifier] = this._id++,
                            i.initEvent(e, r),
                            i.check(i._stage, i.mouseX, i.mouseY, i.onMouseDown));
                        break;

                    case "touchend":
                    case "touchcancel":
                        u._isTouchRespond = !0,
                        i._isLeftMouse = !0;
                        var h = r.changedTouches;
                        for (a = 0,
                        s = h.length; a < s; a++)
                            if (e = h[a],
                            u.multiTouchEnabled || e.identifier == this._curTouchID) {
                                this._curTouchID = NaN,
                                i.initEvent(e, r);
                                i.check(i._stage, i.mouseX, i.mouseY, i.onMouseUp) || i.onMouseUp(null);
                            }
                        break;

                    case "touchmove":
                        var l = r.changedTouches;
                        for (a = 0,
                        s = l.length; a < s; a++)
                            e = l[a],
                            (u.multiTouchEnabled || e.identifier == this._curTouchID) && (i.initEvent(e, r),
                            i.check(i._stage, i.mouseX, i.mouseY, i.onMouseMove));
                        break;

                    case "wheel":
                    case "mousewheel":
                    case "DOMMouseScroll":
                        i.checkMouseWheel(r);
                        break;

                    case "mouseout":
                        g.I.stageMouseOut();
                        break;

                    case "mouseover":
                        i._stage.event("mouseover", i._event.setTo("mouseover", i._stage, i._stage));
                    }
                    n++;
                }
                this._eventList.length = 0;
            }
        }
        ,
        u.enabled = !0,
        u.multiTouchEnabled = !0,
        u._isTouchRespond = !1,
        u._isFirstTouch = !0,
        h(u, ["instance", function() {
            return this.instance = new u();
        }
        ]),
        u;
    }())
      , g = function() {
        function p() {
            this.preOvers = [],
            this.preDowns = [],
            this.preRightDowns = [],
            this.enable = !0,
            this._lastClickTime = 0,
            this._event = new s();
        }
        f(p, "laya.events.TouchManager");
        var t = p.prototype;
        return t._clearTempArrs = function() {
            p._oldArr.length = 0,
            p._newArr.length = 0,
            p._tEleArr.length = 0;
        }
        ,
        t.getTouchFromArr = function(t, e) {
            var i, n, a = 0;
            for (i = e.length,
            a = 0; a < i; a++)
                if ((n = e[a]).id == t)
                    return n;
            return null;
        }
        ,
        t.removeTouchFromArr = function(t, e) {
            var i = 0;
            for (i = e.length - 1; 0 <= i; i--)
                e[i].id == t && e.splice(i, 1);
        }
        ,
        t.createTouchO = function(t, e) {
            var i;
            return (i = z.getItem("TouchData") || {}).id = e,
            i.tar = t,
            i;
        }
        ,
        t.onMouseDown = function(t, e, i) {
            var n, a, s, r;
            (void 0 === i && (i = !1),
            this.enable) && (n = this.getTouchFromArr(e, this.preOvers),
            s = this.getEles(t, null, p._tEleArr),
            n ? n.tar = t : (a = this.createTouchO(t, e),
            this.preOvers.push(a)),
            G.onMobile && this.sendEvents(s, "mouseover"),
            r = i ? this.preDowns : this.preRightDowns,
            (n = this.getTouchFromArr(e, r)) ? n.tar = t : (a = this.createTouchO(t, e),
            r.push(a)),
            this.sendEvents(s, i ? "mousedown" : "rightmousedown"),
            this._clearTempArrs());
        }
        ,
        t.sendEvents = function(t, e) {
            var i, n, a, s = 0;
            for (i = t.length,
            this._event._stoped = !1,
            n = t[0],
            s = 0; s < i; s++) {
                if ((a = t[s]).destroyed)
                    return;
                if (a.event(e, this._event.setTo(e, a, n)),
                this._event._stoped)
                    break;
            }
        }
        ,
        t.getEles = function(t, e, i) {
            for (i ? i.length = 0 : i = []; t && t != e; )
                i.push(t),
                t = t.parent;
            return i;
        }
        ,
        t.checkMouseOutAndOverOfMove = function(t, e, i) {
            if (void 0 === i && (i = 0),
            e != t) {
                var n, a, s = 0, r = 0;
                if (e.contains(t))
                    a = this.getEles(t, e, p._tEleArr),
                    this.sendEvents(a, "mouseover");
                else if (t.contains(e))
                    a = this.getEles(e, t, p._tEleArr),
                    this.sendEvents(a, "mouseout");
                else {
                    var o, h;
                    (a = p._tEleArr).length = 0,
                    o = this.getEles(e, null, p._oldArr),
                    h = this.getEles(t, null, p._newArr),
                    r = o.length;
                    var l = 0;
                    for (s = 0; s < r; s++) {
                        if (n = o[s],
                        0 <= (l = h.indexOf(n))) {
                            h.splice(l, h.length - l);
                            break;
                        }
                        a.push(n);
                    }
                    0 < a.length && this.sendEvents(a, "mouseout"),
                    0 < h.length && this.sendEvents(h, "mouseover");
                }
            }
        }
        ,
        t.onMouseMove = function(t, e) {
            var i, n;
            this.enable && ((i = this.getTouchFromArr(e, this.preOvers)) ? (this.checkMouseOutAndOverOfMove(t, i.tar),
            i.tar = t,
            n = this.getEles(t, null, p._tEleArr)) : (n = this.getEles(t, null, p._tEleArr),
            this.sendEvents(n, "mouseover"),
            this.preOvers.push(this.createTouchO(t, e))),
            this.sendEvents(n, "mousemove"),
            this._clearTempArrs());
        }
        ,
        t.getLastOvers = function() {
            return (p._tEleArr.length = 0) < this.preOvers.length && this.preOvers[0].tar ? this.getEles(this.preOvers[0].tar, null, p._tEleArr) : (p._tEleArr.push(w.stage),
            p._tEleArr);
        }
        ,
        t.stageMouseOut = function() {
            var t;
            t = this.getLastOvers(),
            this.preOvers.length = 0,
            this.sendEvents(t, "mouseout");
        }
        ,
        t.onMouseUp = function(t, e, i) {
            if (void 0 === i && (i = !1),
            this.enable) {
                var n, a, s, r, o, h, l = 0, u = 0, c = G.onMobile;
                if (a = this.getEles(t, null, p._tEleArr),
                this.sendEvents(a, i ? "mouseup" : "rightmouseup"),
                h = i ? this.preDowns : this.preRightDowns,
                n = this.getTouchFromArr(e, h)) {
                    var d, _ = G.now();
                    if (d = _ - this._lastClickTime < 300,
                    this._lastClickTime = _,
                    t == n.tar)
                        o = a;
                    else
                        for (s = this.getEles(n.tar, null, p._oldArr),
                        (o = p._newArr).length = 0,
                        u = s.length,
                        l = 0; l < u; l++)
                            r = s[l],
                            0 <= a.indexOf(r) && o.push(r);
                    0 < o.length && this.sendEvents(o, i ? "click" : "rightclick"),
                    i && d && this.sendEvents(o, "doubleclick"),
                    this.removeTouchFromArr(e, h),
                    n.tar = null,
                    z.recover("TouchData", n);
                } else
                    ;(n = this.getTouchFromArr(e, this.preOvers)) && c && ((o = this.getEles(n.tar, null, o)) && 0 < o.length && this.sendEvents(o, "mouseout"),
                this.removeTouchFromArr(e, this.preOvers),
                n.tar = null,
                z.recover("TouchData", n)),
                this._clearTempArrs();
            }
        }
        ,
        p._oldArr = [],
        p._newArr = [],
        p._tEleArr = [],
        h(p, ["I", function() {
            return this.I = new p();
        }
        ]),
        p;
    }()
      , m = function() {
        function t() {
            this._action = null;
        }
        f(t, "laya.filters.Filter");
        var e = t.prototype;
        return w.imps(e, {
            "laya.filters.IFilter": !0
        }),
        e.callNative = function(t) {}
        ,
        u(0, e, "type", function() {
            return -1;
        }),
        u(0, e, "action", function() {
            return this._action;
        }),
        t.BLUR = 16,
        t.COLOR = 32,
        t.GLOW = 8,
        t._filterStart = null,
        t._filterEnd = null,
        t._EndTarget = null,
        t._recycleScope = null,
        t._filter = null,
        t._useSrc = null,
        t._endSrc = null,
        t._useOut = null,
        t._endOut = null,
        t;
    }()
      , v = function() {
        function t() {
            this.data = null;
        }
        f(t, "laya.filters.ColorFilterAction");
        var e = t.prototype;
        return w.imps(e, {
            "laya.filters.IFilterAction": !0
        }),
        e.apply = function(t) {
            var e = t.ctx.ctx
              , i = t.ctx.ctx.canvas;
            if (0 == i.width || 0 == i.height)
                return i;
            for (var n, a = e.getImageData(0, 0, i.width, i.height), s = a.data, r = 0, o = s.length; r < o; r += 4)
                n = this.getColor(s[r], s[r + 1], s[r + 2], s[r + 3]),
                0 != s[r + 3] && (s[r] = n[0],
                s[r + 1] = n[1],
                s[r + 2] = n[2],
                s[r + 3] = n[3]);
            return e.putImageData(a, 0, 0),
            t;
        }
        ,
        e.getColor = function(t, e, i, n) {
            var a = [];
            if (this.data._mat && this.data._alpha) {
                var s = this.data._mat
                  , r = this.data._alpha;
                a[0] = s[0] * t + s[1] * e + s[2] * i + s[3] * n + r[0],
                a[1] = s[4] * t + s[5] * e + s[6] * i + s[7] * n + r[1],
                a[2] = s[8] * t + s[9] * e + s[10] * i + s[11] * n + r[2],
                a[3] = s[12] * t + s[13] * e + s[14] * i + s[15] * n + r[3];
            }
            return a;
        }
        ,
        t;
    }()
      , S = (function() {
        function t() {}
        f(t, "laya.maths.Arith"),
        t.formatR = function(t) {
            return t > Math.PI && (t -= 2 * Math.PI),
            t < -Math.PI && (t += 2 * Math.PI),
            t;
        }
        ,
        t.isPOT = function(t, e) {
            return 0 < t && 0 == (t & t - 1) && 0 < e && 0 == (e & e - 1);
        }
        ,
        t.setMatToArray = function(t, e) {
            t.a,
            t.b,
            t.c,
            t.d,
            t.tx,
            t.ty,
            e[0] = t.a,
            e[1] = t.b,
            e[4] = t.c,
            e[5] = t.d,
            e[12] = t.tx,
            e[13] = t.ty;
        }
        ;
    }(),
    function() {
        function t() {
            this._controlPoints = [new M(), new M(), new M()],
            this._calFun = this.getPoint2;
        }
        f(t, "laya.maths.Bezier");
        var e = t.prototype;
        return e._switchPoint = function(t, e) {
            var i = this._controlPoints.shift();
            i.setTo(t, e),
            this._controlPoints.push(i);
        }
        ,
        e.getPoint2 = function(t, e) {
            var i = this._controlPoints[0]
              , n = this._controlPoints[1]
              , a = this._controlPoints[2]
              , s = Math.pow(1 - t, 2) * i.x + 2 * t * (1 - t) * n.x + Math.pow(t, 2) * a.x
              , r = Math.pow(1 - t, 2) * i.y + 2 * t * (1 - t) * n.y + Math.pow(t, 2) * a.y;
            e.push(s, r);
        }
        ,
        e.getPoint3 = function(t, e) {
            var i = this._controlPoints[0]
              , n = this._controlPoints[1]
              , a = this._controlPoints[2]
              , s = this._controlPoints[3]
              , r = Math.pow(1 - t, 3) * i.x + 3 * n.x * t * (1 - t) * (1 - t) + 3 * a.x * t * t * (1 - t) + s.x * Math.pow(t, 3)
              , o = Math.pow(1 - t, 3) * i.y + 3 * n.y * t * (1 - t) * (1 - t) + 3 * a.y * t * t * (1 - t) + s.y * Math.pow(t, 3);
            e.push(r, o);
        }
        ,
        e.insertPoints = function(t, e) {
            var i, n = NaN;
            for (i = 1 / (t = 0 < t ? t : 5),
            n = 0; n <= 1; n += i)
                this._calFun(n, e);
        }
        ,
        e.getBezierPoints = function(t, e, i) {
            void 0 === e && (e = 5),
            void 0 === i && (i = 2);
            var n, a, s = 0;
            if ((n = t.length) < 2 * (i + 1))
                return [];
            switch (a = [],
            i) {
            case 2:
                this._calFun = this.getPoint2;
                break;

            case 3:
                this._calFun = this.getPoint3;
                break;

            default:
                return [];
            }
            for (; this._controlPoints.length <= i; )
                this._controlPoints.push(new M());
            for (s = 0; s < 2 * i; s += 2)
                this._switchPoint(t[s], t[s + 1]);
            for (s = 2 * i; s < n; s += 2)
                this._switchPoint(t[s], t[s + 1]),
                s / 2 % i == 0 && this.insertPoints(e, a);
            return a;
        }
        ,
        h(t, ["I", function() {
            return this.I = new t();
        }
        ]),
        t;
    }())
      , x = function() {
        function l() {}
        return f(l, "laya.maths.GrahamScan"),
        l.multiply = function(t, e, i) {
            return (t.x - i.x) * (e.y - i.y) - (e.x - i.x) * (t.y - i.y);
        }
        ,
        l.dis = function(t, e) {
            return (t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y);
        }
        ,
        l._getPoints = function(t, e, i) {
            for (void 0 === e && (e = !1),
            l._mPointList || (l._mPointList = []); l._mPointList.length < t; )
                l._mPointList.push(new M());
            return i || (i = []),
            i.length = 0,
            e ? l.getFrom(i, l._mPointList, t) : l.getFromR(i, l._mPointList, t),
            i;
        }
        ,
        l.getFrom = function(t, e, i) {
            var n = 0;
            for (n = 0; n < i; n++)
                t.push(e[n]);
            return t;
        }
        ,
        l.getFromR = function(t, e, i) {
            var n = 0;
            for (n = 0; n < i; n++)
                t.push(e.pop());
            return t;
        }
        ,
        l.pListToPointList = function(t, e) {
            void 0 === e && (e = !1);
            var i = 0
              , n = t.length / 2
              , a = l._getPoints(n, e, l._tempPointList);
            for (i = 0; i < n; i++)
                a[i].setTo(t[i + i], t[i + i + 1]);
            return a;
        }
        ,
        l.pointListToPlist = function(t) {
            var e, i = 0, n = t.length, a = l._temPList;
            for (i = a.length = 0; i < n; i++)
                e = t[i],
                a.push(e.x, e.y);
            return a;
        }
        ,
        l.scanPList = function(t) {
            return q.copyArray(t, l.pointListToPlist(l.scan(l.pListToPointList(t, !0))));
        }
        ,
        l.scan = function(t) {
            var e, i, n, a = 0, s = 0, r = 0, o = t.length, h = {};
            for ((i = l._temArr).length = 0,
            a = (o = t.length) - 1; 0 <= a; a--)
                n = (e = t[a]).x + "_" + e.y,
                h.hasOwnProperty(n) || (h[n] = !0,
                i.push(e));
            for (o = i.length,
            q.copyArray(t, i),
            a = 1; a < o; a++)
                (t[a].y < t[r].y || t[a].y == t[r].y && t[a].x < t[r].x) && (r = a);
            for (e = t[0],
            t[0] = t[r],
            t[r] = e,
            a = 1; a < o - 1; a++) {
                for (s = (r = a) + 1; s < o; s++)
                    (0 < l.multiply(t[s], t[r], t[0]) || 0 == l.multiply(t[s], t[r], t[0]) && l.dis(t[0], t[s]) < l.dis(t[0], t[r])) && (r = s);
                e = t[a],
                t[a] = t[r],
                t[r] = e;
            }
            if ((i = l._temArr).length = 0,
            t.length < 3)
                return q.copyArray(i, t);
            for (i.push(t[0], t[1], t[2]),
            a = 3; a < o; a++) {
                for (; 2 <= i.length && 0 <= l.multiply(t[a], i[i.length - 1], i[i.length - 2]); )
                    i.pop();
                t[a] && i.push(t[a]);
            }
            return i;
        }
        ,
        l._mPointList = null,
        l._tempPointList = [],
        l._temPList = [],
        l._temArr = [],
        l;
    }()
      , b = function() {
        function a() {}
        return f(a, "laya.maths.MathUtil"),
        a.subtractVector3 = function(t, e, i) {
            i[0] = t[0] - e[0],
            i[1] = t[1] - e[1],
            i[2] = t[2] - e[2];
        }
        ,
        a.lerp = function(t, e, i) {
            return t * (1 - i) + e * i;
        }
        ,
        a.scaleVector3 = function(t, e, i) {
            i[0] = t[0] * e,
            i[1] = t[1] * e,
            i[2] = t[2] * e;
        }
        ,
        a.lerpVector3 = function(t, e, i, n) {
            var a = t[0]
              , s = t[1]
              , r = t[2];
            n[0] = a + i * (e[0] - a),
            n[1] = s + i * (e[1] - s),
            n[2] = r + i * (e[2] - r);
        }
        ,
        a.lerpVector4 = function(t, e, i, n) {
            var a = t[0]
              , s = t[1]
              , r = t[2]
              , o = t[3];
            n[0] = a + i * (e[0] - a),
            n[1] = s + i * (e[1] - s),
            n[2] = r + i * (e[2] - r),
            n[3] = o + i * (e[3] - o);
        }
        ,
        a.slerpQuaternionArray = function(t, e, i, n, a, s, r) {
            var o, h, l, u, c, d = t[e + 0], _ = t[e + 1], p = t[e + 2], f = t[e + 3], g = i[n + 0], m = i[n + 1], y = i[n + 2], v = i[n + 3];
            return (h = d * g + _ * m + p * y + f * v) < 0 && (h = -h,
            g = -g,
            m = -m,
            y = -y,
            v = -v),
            c = 1e-6 < 1 - h ? (o = Math.acos(h),
            l = Math.sin(o),
            u = Math.sin((1 - a) * o) / l,
            Math.sin(a * o) / l) : (u = 1 - a,
            a),
            s[r + 0] = u * d + c * g,
            s[r + 1] = u * _ + c * m,
            s[r + 2] = u * p + c * y,
            s[r + 3] = u * f + c * v,
            s;
        }
        ,
        a.getRotation = function(t, e, i, n) {
            return Math.atan2(n - e, i - t) / Math.PI * 180;
        }
        ,
        a.sortBigFirst = function(t, e) {
            return t == e ? 0 : t < e ? 1 : -1;
        }
        ,
        a.sortSmallFirst = function(t, e) {
            return t == e ? 0 : t < e ? -1 : 1;
        }
        ,
        a.sortNumBigFirst = function(t, e) {
            return parseFloat(e) - parseFloat(t);
        }
        ,
        a.sortNumSmallFirst = function(t, e) {
            return parseFloat(t) - parseFloat(e);
        }
        ,
        a.sortByKey = function(i, t, e) {
            var n;
            return void 0 === t && (t = !1),
            void 0 === e && (e = !0),
            n = t ? e ? a.sortNumBigFirst : a.sortBigFirst : e ? a.sortNumSmallFirst : a.sortSmallFirst,
            function(t, e) {
                return n(t[i], e[i]);
            }
            ;
        }
        ,
        a;
    }()
      , A = function() {
        function i(t, e, i, n, a, s) {
            this.inPool = !1,
            this.bTransform = !1,
            void 0 === t && (t = 1),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 1),
            void 0 === a && (a = 0),
            void 0 === s && (s = 0),
            this.a = t,
            this.b = e,
            this.c = i,
            this.d = n,
            this.tx = a,
            this.ty = s,
            this._checkTransform();
        }
        f(i, "laya.maths.Matrix");
        var t = i.prototype;
        return t.identity = function() {
            return this.a = this.d = 1,
            this.b = this.tx = this.ty = this.c = 0,
            this.bTransform = !1,
            this;
        }
        ,
        t._checkTransform = function() {
            return this.bTransform = 1 !== this.a || 0 !== this.b || 0 !== this.c || 1 !== this.d;
        }
        ,
        t.setTranslate = function(t, e) {
            return this.tx = t,
            this.ty = e,
            this;
        }
        ,
        t.translate = function(t, e) {
            return this.tx += t,
            this.ty += e,
            this;
        }
        ,
        t.scale = function(t, e) {
            this.a *= t,
            this.d *= e,
            this.c *= t,
            this.b *= e,
            this.tx *= t,
            this.ty *= e,
            this.bTransform = !0;
        }
        ,
        t.rotate = function(t) {
            var e = Math.cos(t)
              , i = Math.sin(t)
              , n = this.a
              , a = this.c
              , s = this.tx;
            this.a = n * e - this.b * i,
            this.b = n * i + this.b * e,
            this.c = a * e - this.d * i,
            this.d = a * i + this.d * e,
            this.tx = s * e - this.ty * i,
            this.ty = s * i + this.ty * e,
            this.bTransform = !0;
        }
        ,
        t.skew = function(t, e) {
            var i = Math.tan(t)
              , n = Math.tan(e)
              , a = this.a
              , s = this.b;
            return this.a += n * this.c,
            this.b += n * this.d,
            this.c += i * a,
            this.d += i * s,
            this;
        }
        ,
        t.invertTransformPoint = function(t) {
            var e = this.a
              , i = this.b
              , n = this.c
              , a = this.d
              , s = this.tx
              , r = e * a - i * n
              , o = a / r
              , h = -i / r
              , l = -n / r
              , u = e / r
              , c = (n * this.ty - a * s) / r
              , d = -(e * this.ty - i * s) / r;
            return t.setTo(o * t.x + l * t.y + c, h * t.x + u * t.y + d);
        }
        ,
        t.transformPoint = function(t) {
            return t.setTo(this.a * t.x + this.c * t.y + this.tx, this.b * t.x + this.d * t.y + this.ty);
        }
        ,
        t.transformPointN = function(t) {
            return t.setTo(this.a * t.x + this.c * t.y, this.b * t.x + this.d * t.y);
        }
        ,
        t.transformPointArray = function(t, e) {
            for (var i = t.length, n = 0; n < i; n += 2) {
                var a = t[n]
                  , s = t[n + 1];
                e[n] = this.a * a + this.c * s + this.tx,
                e[n + 1] = this.b * a + this.d * s + this.ty;
            }
            return e;
        }
        ,
        t.transformPointArrayScale = function(t, e) {
            for (var i = t.length, n = 0; n < i; n += 2) {
                var a = t[n]
                  , s = t[n + 1];
                e[n] = this.a * a + this.c * s,
                e[n + 1] = this.b * a + this.d * s;
            }
            return e;
        }
        ,
        t.getScaleX = function() {
            return 0 === this.b ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);
        }
        ,
        t.getScaleY = function() {
            return 0 === this.c ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);
        }
        ,
        t.invert = function() {
            var t = this.a
              , e = this.b
              , i = this.c
              , n = this.d
              , a = this.tx
              , s = t * n - e * i;
            return this.a = n / s,
            this.b = -e / s,
            this.c = -i / s,
            this.d = t / s,
            this.tx = (i * this.ty - n * a) / s,
            this.ty = -(t * this.ty - e * a) / s,
            this;
        }
        ,
        t.setTo = function(t, e, i, n, a, s) {
            return this.a = t,
            this.b = e,
            this.c = i,
            this.d = n,
            this.tx = a,
            this.ty = s,
            this;
        }
        ,
        t.concat = function(t) {
            var e = this.a
              , i = this.c
              , n = this.tx;
            return this.a = e * t.a + this.b * t.c,
            this.b = e * t.b + this.b * t.d,
            this.c = i * t.a + this.d * t.c,
            this.d = i * t.b + this.d * t.d,
            this.tx = n * t.a + this.ty * t.c + t.tx,
            this.ty = n * t.b + this.ty * t.d + t.ty,
            this;
        }
        ,
        t.scaleEx = function(t, e) {
            var i = this.a
              , n = this.b
              , a = this.c
              , s = this.d;
            this.d = (this.c = 0 !== n || 0 !== a ? (this.a = t * i,
            this.b = t * n,
            e * a) : (this.a = t * i,
            this.b = 0 * s,
            0 * i),
            e * s),
            this.bTransform = !0;
        }
        ,
        t.rotateEx = function(t) {
            var e = Math.cos(t)
              , i = Math.sin(t)
              , n = this.a
              , a = this.b
              , s = this.c
              , r = this.d;
            this.d = 0 !== a || 0 !== s ? (this.a = e * n + i * s,
            this.b = e * a + i * r,
            this.c = -i * n + e * s,
            -i * a + e * r) : (this.a = e * n,
            this.b = i * r,
            this.c = -i * n,
            e * r),
            this.bTransform = !0;
        }
        ,
        t.clone = function() {
            var t = i.create();
            return t.a = this.a,
            t.b = this.b,
            t.c = this.c,
            t.d = this.d,
            t.tx = this.tx,
            t.ty = this.ty,
            t.bTransform = this.bTransform,
            t;
        }
        ,
        t.copyTo = function(t) {
            return t.a = this.a,
            t.b = this.b,
            t.c = this.c,
            t.d = this.d,
            t.tx = this.tx,
            t.ty = this.ty,
            t.bTransform = this.bTransform,
            t;
        }
        ,
        t.toString = function() {
            return this.a + "," + this.b + "," + this.c + "," + this.d + "," + this.tx + "," + this.ty;
        }
        ,
        t.destroy = function() {
            if (!this.inPool) {
                var t = i._cache;
                this.inPool = !0,
                t._length || (t._length = 0),
                (t[t._length++] = this).a = this.d = 1,
                this.b = this.c = this.tx = this.ty = 0,
                this.bTransform = !1;
            }
        }
        ,
        i.mul = function(t, e, i) {
            var n = t.a
              , a = t.b
              , s = t.c
              , r = t.d
              , o = t.tx
              , h = t.ty
              , l = e.a
              , u = e.b
              , c = e.c
              , d = e.d
              , _ = e.tx
              , p = e.ty;
            return i.ty = 0 !== u || 0 !== c ? (i.a = n * l + a * c,
            i.b = n * u + a * d,
            i.c = s * l + r * c,
            i.d = s * u + r * d,
            i.tx = l * o + c * h + _,
            u * o + d * h + p) : (i.a = n * l,
            i.b = a * d,
            i.c = s * l,
            i.d = r * d,
            i.tx = l * o + _,
            d * h + p),
            i;
        }
        ,
        i.mul16 = function(t, e, i) {
            var n = t.a
              , a = t.b
              , s = t.c
              , r = t.d
              , o = t.tx
              , h = t.ty
              , l = e.a
              , u = e.b
              , c = e.c
              , d = e.d
              , _ = e.tx
              , p = e.ty;
            return i[13] = 0 !== u || 0 !== c ? (i[0] = n * l + a * c,
            i[1] = n * u + a * d,
            i[4] = s * l + r * c,
            i[5] = s * u + r * d,
            i[12] = l * o + c * h + _,
            u * o + d * h + p) : (i[0] = n * l,
            i[1] = a * d,
            i[4] = s * l,
            i[5] = r * d,
            i[12] = l * o + _,
            d * h + p),
            i;
        }
        ,
        i.mulPre = function(t, e, i, n, a, s, r, o) {
            var h = t.a
              , l = t.b
              , u = t.c
              , c = t.d
              , d = t.tx
              , _ = t.ty;
            return o.ty = 0 !== i || 0 !== n ? (o.a = h * e + l * n,
            o.b = h * i + l * a,
            o.c = u * e + c * n,
            o.d = u * i + c * a,
            o.tx = e * d + n * _ + s,
            i * d + a * _ + r) : (o.a = h * e,
            o.b = l * a,
            o.c = u * e,
            o.d = c * a,
            o.tx = e * d + s,
            a * _ + r),
            o;
        }
        ,
        i.mulPos = function(t, e, i, n, a, s, r, o) {
            var h = t.a
              , l = t.b
              , u = t.c
              , c = t.d
              , d = t.tx
              , _ = t.ty;
            return o.ty = 0 !== l || 0 !== u ? (o.a = e * h + i * u,
            o.b = e * l + i * c,
            o.c = n * h + a * u,
            o.d = n * l + a * c,
            o.tx = h * s + u * r + d,
            l * s + c * r + _) : (o.a = e * h,
            o.b = i * c,
            o.c = n * h,
            o.d = a * c,
            o.tx = h * s + d,
            c * r + _),
            o;
        }
        ,
        i.preMul = function(t, e, i) {
            var n = t.a
              , a = t.b
              , s = t.c
              , r = t.d
              , o = e.a
              , h = e.b
              , l = e.c
              , u = e.d
              , c = e.tx
              , d = e.ty;
            return i.a = o * n,
            i.b = i.c = 0,
            i.d = u * r,
            i.tx = c * n + t.tx,
            i.ty = d * r + t.ty,
            0 === h && 0 === l && 0 === a && 0 === s || (i.a += h * s,
            i.d += l * a,
            i.b += o * a + h * r,
            i.c += l * n + u * s,
            i.tx += d * s,
            i.ty += c * a),
            i;
        }
        ,
        i.preMulXY = function(t, e, i, n) {
            var a = t.a
              , s = t.b
              , r = t.c
              , o = t.d;
            return n.a = a,
            n.b = s,
            n.c = r,
            n.d = o,
            n.tx = e * a + t.tx + i * r,
            n.ty = i * o + t.ty + e * s,
            n;
        }
        ,
        i.create = function() {
            var t = i._cache
              , e = t._length ? t[--t._length] : new i();
            return e.inPool = !1,
            e;
        }
        ,
        i.EMPTY = new i(),
        i.TEMP = new i(),
        i._cache = [],
        i;
    }()
      , M = function() {
        function t(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            this.x = t,
            this.y = e;
        }
        f(t, "laya.maths.Point");
        var e = t.prototype;
        return e.setTo = function(t, e) {
            return this.x = t,
            this.y = e,
            this;
        }
        ,
        e.distance = function(t, e) {
            return Math.sqrt((this.x - t) * (this.x - t) + (this.y - e) * (this.y - e));
        }
        ,
        e.toString = function() {
            return this.x + "," + this.y;
        }
        ,
        e.normalize = function() {
            var t = Math.sqrt(this.x * this.x + this.y * this.y);
            if (0 < t) {
                var e = 1 / t;
                this.x *= e,
                this.y *= e;
            }
        }
        ,
        t.TEMP = new t(),
        t.EMPTY = new t(),
        t;
    }()
      , I = function() {
        function l(t, e, i, n) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 0),
            this.x = t,
            this.y = e,
            this.width = i,
            this.height = n;
        }
        f(l, "laya.maths.Rectangle");
        var t = l.prototype;
        return t.setTo = function(t, e, i, n) {
            return this.x = t,
            this.y = e,
            this.width = i,
            this.height = n,
            this;
        }
        ,
        t.copyFrom = function(t) {
            return this.x = t.x,
            this.y = t.y,
            this.width = t.width,
            this.height = t.height,
            this;
        }
        ,
        t.contains = function(t, e) {
            return !(this.width <= 0 || this.height <= 0) && (t >= this.x && t < this.right && e >= this.y && e < this.bottom);
        }
        ,
        t.intersects = function(t) {
            return !(t.x > this.x + this.width || t.x + t.width < this.x || t.y > this.y + this.height || t.y + t.height < this.y);
        }
        ,
        t.intersection = function(t, e) {
            return this.intersects(t) ? (e || (e = new l()),
            e.x = Math.max(this.x, t.x),
            e.y = Math.max(this.y, t.y),
            e.width = Math.min(this.right, t.right) - e.x,
            e.height = Math.min(this.bottom, t.bottom) - e.y,
            e) : null;
        }
        ,
        t.union = function(t, e) {
            return e || (e = new l()),
            this.clone(e),
            t.width <= 0 || t.height <= 0 ? e : (e.addPoint(t.x, t.y),
            e.addPoint(t.right, t.bottom),
            this);
        }
        ,
        t.clone = function(t) {
            return t || (t = new l()),
            t.x = this.x,
            t.y = this.y,
            t.width = this.width,
            t.height = this.height,
            t;
        }
        ,
        t.toString = function() {
            return this.x + "," + this.y + "," + this.width + "," + this.height;
        }
        ,
        t.equals = function(t) {
            return !(!t || t.x !== this.x || t.y !== this.y || t.width !== this.width || t.height !== this.height);
        }
        ,
        t.addPoint = function(t, e) {
            return this.x > t && (this.width += this.x - t,
            this.x = t),
            this.y > e && (this.height += this.y - e,
            this.y = e),
            this.width < t - this.x && (this.width = t - this.x),
            this.height < e - this.y && (this.height = e - this.y),
            this;
        }
        ,
        t._getBoundPoints = function() {
            var t = l._temB;
            return (t.length = 0) == this.width || 0 == this.height || t.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height),
            t;
        }
        ,
        t.isEmpty = function() {
            return this.width <= 0 || this.height <= 0;
        }
        ,
        u(0, t, "right", function() {
            return this.x + this.width;
        }),
        u(0, t, "bottom", function() {
            return this.y + this.height;
        }),
        l._getBoundPointS = function(t, e, i, n) {
            var a = l._temA;
            return (a.length = 0) == i || 0 == n || a.push(t, e, t + i, e, t, e + n, t + i, e + n),
            a;
        }
        ,
        l._getWrapRec = function(t, e) {
            if (!t || t.length < 1)
                return e ? e.setTo(0, 0, 0, 0) : l.TEMP.setTo(0, 0, 0, 0);
            e = e || new l();
            var i, n, a, s, r, o = t.length, h = M.TEMP;
            for (a = r = -(n = s = 99999),
            i = 0; i < o; i += 2)
                h.x = t[i],
                h.y = t[i + 1],
                n = n < h.x ? n : h.x,
                s = s < h.y ? s : h.y,
                a = a > h.x ? a : h.x,
                r = r > h.y ? r : h.y;
            return e.setTo(n, s, a - n, r - s);
        }
        ,
        l.EMPTY = new l(),
        l.TEMP = new l(),
        l._temB = [],
        l._temA = [],
        l;
    }()
      , E = function() {
        function h() {}
        return f(h, "laya.media.SoundManager"),
        u(1, h, "useAudioMusic", function() {
            return h._useAudioMusic;
        }, function(t) {
            h._useAudioMusic = t,
            h._musicClass = t ? it : null;
        }),
        u(1, h, "autoStopMusic", function() {
            return h._autoStopMusic;
        }, function(t) {
            w.stage.off("blur", null, h._stageOnBlur),
            w.stage.off("focus", null, h._stageOnFocus),
            w.stage.off("visibilitychange", null, h._visibilityChange),
            (h._autoStopMusic = t) && (w.stage.on("blur", null, h._stageOnBlur),
            w.stage.on("focus", null, h._stageOnFocus),
            w.stage.on("visibilitychange", null, h._visibilityChange));
        }),
        u(1, h, "muted", function() {
            return h._muted;
        }, function(t) {
            t != h._muted && (t && h.stopAllSound(),
            h.musicMuted = t,
            h._muted = t);
        }),
        u(1, h, "musicMuted", function() {
            return h._musicMuted;
        }, function(t) {
            t != h._musicMuted && (t ? (h._tMusic && h._musicChannel && !h._musicChannel.isStopped ? R.isConchApp ? h._musicChannel._audio && (h._musicChannel._audio.muted = !0) : h._musicChannel.pause() : h._musicChannel = null,
            h._musicMuted = t) : (h._musicMuted = t,
            h._tMusic && h._musicChannel && (R.isConchApp ? h._musicChannel._audio && (h._musicChannel._audio.muted = !1) : h._musicChannel.resume())));
        }),
        u(1, h, "soundMuted", function() {
            return h._soundMuted;
        }, function(t) {
            h._soundMuted = t;
        }),
        h.addChannel = function(t) {
            0 <= h._channels.indexOf(t) || h._channels.push(t);
        }
        ,
        h.removeChannel = function(t) {
            var e = 0;
            for (e = h._channels.length - 1; 0 <= e; e--)
                h._channels[e] == t && h._channels.splice(e, 1);
        }
        ,
        h.disposeSoundIfNotUsed = function(t) {
            var e = 0;
            for (e = h._channels.length - 1; 0 <= e; e--)
                if (h._channels[e].url == t)
                    return;
            h.destroySound(t);
        }
        ,
        h._visibilityChange = function() {
            w.stage.isVisibility ? h._stageOnFocus() : h._stageOnBlur();
        }
        ,
        h._stageOnBlur = function() {
            h._isActive = !1,
            h._musicChannel && (h._musicChannel.isStopped || (h._blurPaused = !0,
            h._musicChannel.pause())),
            h.stopAllSound(),
            w.stage.once("mousedown", null, h._stageOnFocus);
        }
        ,
        h._recoverWebAudio = function() {
            st.ctx && "running" != st.ctx.state && st.ctx.resume && st.ctx.resume();
        }
        ,
        h._stageOnFocus = function() {
            h._isActive = !0,
            h._recoverWebAudio(),
            w.stage.off("mousedown", null, h._stageOnFocus),
            h._blurPaused && h._musicChannel && h._musicChannel.isStopped && (h._blurPaused = !1,
            h._musicChannel.resume());
        }
        ,
        h.playSound = function(t, e, i, n, a) {
            if (void 0 === e && (e = 1),
            void 0 === a && (a = 0),
            !h._isActive || !t)
                return null;
            if (h._muted)
                return null;
            if (h._recoverWebAudio(),
            (t = D.formatURL(t)) == h._tMusic) {
                if (h._musicMuted)
                    return null;
            } else {
                if (R.isConchApp) {
                    var s = q.getFileExtension(t);
                    if ("wav" != s && "ogg" != s)
                        return alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document."),
                        null;
                }
                if (h._soundMuted)
                    return null;
            }
            var r, o;
            return G.onMiniGame || (r = w.loader.getRes(t)),
            n || (n = h._soundClass),
            r || ((r = new n()).load(t),
            G.onMiniGame || ot.cacheRes(t, r)),
            (o = r.play(a, e)) ? (o.url = t,
            o.volume = t == h._tMusic ? h.musicVolume : h.soundVolume,
            o.completeHandler = i,
            o) : null;
        }
        ,
        h.destroySound = function(t) {
            var e = w.loader.getRes(t);
            e && (ot.clearRes(t),
            e.dispose());
        }
        ,
        h.playMusic = function(t, e, i, n) {
            return void 0 === e && (e = 0),
            void 0 === n && (n = 0),
            t = D.formatURL(t),
            h._tMusic = t,
            h._musicChannel && h._musicChannel.stop(),
            h._musicChannel = h.playSound(t, e, i, h._musicClass, n);
        }
        ,
        h.stopSound = function(t) {
            t = D.formatURL(t);
            var e, i = 0;
            for (i = h._channels.length - 1; 0 <= i; i--)
                (e = h._channels[i]).url == t && e.stop();
        }
        ,
        h.stopAll = function() {
            h._tMusic = null;
            var t = 0;
            for (t = h._channels.length - 1; 0 <= t; t--)
                h._channels[t].stop();
        }
        ,
        h.stopAllSound = function() {
            var t, e = 0;
            for (e = h._channels.length - 1; 0 <= e; e--)
                (t = h._channels[e]).url != h._tMusic && t.stop();
        }
        ,
        h.stopMusic = function() {
            h._musicChannel && h._musicChannel.stop(),
            h._tMusic = null;
        }
        ,
        h.setSoundVolume = function(t, e) {
            if (e)
                e = D.formatURL(e),
                h._setVolume(e, t);
            else {
                h.soundVolume = t;
                var i, n = 0;
                for (n = h._channels.length - 1; 0 <= n; n--)
                    (i = h._channels[n]).url != h._tMusic && (i.volume = t);
            }
        }
        ,
        h.setMusicVolume = function(t) {
            h.musicVolume = t,
            h._setVolume(h._tMusic, t);
        }
        ,
        h._setVolume = function(t, e) {
            t = D.formatURL(t);
            var i, n = 0;
            for (n = h._channels.length - 1; 0 <= n; n--)
                (i = h._channels[n]).url == t && (i.volume = e);
        }
        ,
        h.musicVolume = 1,
        h.soundVolume = 1,
        h.playbackRate = 1,
        h._useAudioMusic = !0,
        h._muted = !1,
        h._soundMuted = !1,
        h._musicMuted = !1,
        h._tMusic = null,
        h._musicChannel = null,
        h._channels = [],
        h._autoStopMusic = !1,
        h._blurPaused = !1,
        h._isActive = !0,
        h._soundClass = null,
        h._musicClass = null,
        h.autoReleaseSound = !0,
        h;
    }()
      , T = function() {
        var t;
        function i() {}
        return f(i, "laya.net.LocalStorage"),
        i.__init__ = function() {
            i._baseClass || (i._baseClass = t).init(),
            i.items = i._baseClass.items,
            i.support = i._baseClass.support;
        }
        ,
        i.setItem = function(t, e) {
            i._baseClass.setItem(t, e);
        }
        ,
        i.getItem = function(t) {
            return i._baseClass.getItem(t);
        }
        ,
        i.setJSON = function(t, e) {
            i._baseClass.setJSON(t, e);
        }
        ,
        i.getJSON = function(t) {
            return i._baseClass.getJSON(t);
        }
        ,
        i.removeItem = function(t) {
            i._baseClass.removeItem(t);
        }
        ,
        i.clear = function() {
            i._baseClass.clear();
        }
        ,
        i._baseClass = null,
        i.items = null,
        i.support = !1,
        i.__init$ = function() {
            t = function() {
                function i() {}
                return f(i, ""),
                i.init = function() {
                    try {
                        i.support = !0,
                        i.items = r.localStorage,
                        i.setItem("laya", "1"),
                        i.removeItem("laya");
                    } catch (t) {
                        i.support = !1;
                    }
                    i.support || console.log("LocalStorage is not supprot or browser is private mode.");
                }
                ,
                i.setItem = function(t, e) {
                    try {
                        i.support && i.items.setItem(t, e);
                    } catch (t) {
                        console.warn("set localStorage failed", t);
                    }
                }
                ,
                i.getItem = function(t) {
                    return i.support ? i.items.getItem(t) : null;
                }
                ,
                i.setJSON = function(t, e) {
                    try {
                        i.support && i.items.setItem(t, JSON.stringify(e));
                    } catch (t) {
                        console.warn("set localStorage failed", t);
                    }
                }
                ,
                i.getJSON = function(t) {
                    return JSON.parse(i.support ? i.items.getItem(t) : null);
                }
                ,
                i.removeItem = function(t) {
                    i.support && i.items.removeItem(t);
                }
                ,
                i.clear = function() {
                    i.support && i.items.clear();
                }
                ,
                i.items = null,
                i.support = !1,
                i;
            }();
        }
        ,
        i;
    }()
      , L = (function() {
        function n() {}
        f(n, "laya.net.ResourceVersion"),
        n.enable = function(t, e, i) {
            void 0 === i && (i = 2),
            laya.net.ResourceVersion.type = i,
            w.loader.load(t, y.create(null, n.onManifestLoaded, [e]), null, "json"),
            D.customFormat = n.addVersionPrefix;
        }
        ,
        n.onManifestLoaded = function(t, e) {
            n.manifest = e,
            t.run(),
            e || console.warn("资源版本清单文件不存在，不使用资源版本管理。忽略ERR_FILE_NOT_FOUND错误。");
        }
        ,
        n.addVersionPrefix = function(t) {
            return n.manifest && n.manifest[t] ? 2 == n.type ? n.manifest[t] : n.manifest[t] + "/" + t : t;
        }
        ,
        n.FOLDER_VERSION = 1,
        n.FILENAME_VERSION = 2,
        n.manifest = null,
        n.type = 1;
    }(),
    function() {
        function t() {
            this.fontName = null,
            this.complete = null,
            this.err = null,
            this._fontTxt = null,
            this._url = null,
            this._div = null,
            this._txtWidth = NaN,
            this._http = null;
        }
        f(t, "laya.net.TTFLoader");
        var e = t.prototype;
        return e.load = function(t) {
            var e = (this._url = t).split(".ttf")[0].split("/");
            this.fontName = e[e.length - 1],
            G.window.conch ? this._loadConch() : G.window.FontFace ? this._loadWithFontFace() : this._loadWithCSS();
        }
        ,
        e._loadConch = function() {
            this._http = new rt(),
            this._http.on("error", this, this._onErr),
            this._http.on("complete", this, this._onHttpLoaded),
            this._http.send(this._url, null, "get", "arraybuffer");
        }
        ,
        e._onHttpLoaded = function(t) {
            G.window.conch.setFontFaceFromBuffer(this.fontName, t),
            this._clearHttp(),
            this._complete();
        }
        ,
        e._clearHttp = function() {
            this._http && (this._http.off("error", this, this._onErr),
            this._http.off("complete", this, this._onHttpLoaded),
            this._http = null);
        }
        ,
        e._onErr = function() {
            this._clearHttp(),
            this.err && (this.err.runWith("fail:" + this._url),
            this.err = null);
        }
        ,
        e._complete = function() {
            w.timer.clear(this, this._complete),
            w.timer.clear(this, this._checkComplete),
            this._div && this._div.parentNode && (this._div.parentNode.removeChild(this._div),
            this._div = null),
            this.complete && (this.complete.runWith(this),
            this.complete = null);
        }
        ,
        e._checkComplete = function() {
            P.measureText("LayaTTFFont", this._fontTxt).width != this._txtWidth && this._complete();
        }
        ,
        e._loadWithFontFace = function() {
            var t = new G.window.FontFace(this.fontName,"url('" + this._url + "')");
            G.window.document.fonts.add(t);
            var e = this;
            t.loaded.then(function() {
                e._complete();
            }),
            t.load();
        }
        ,
        e._createDiv = function() {
            this._div = G.createElement("div"),
            this._div.innerHTML = "laya";
            var t = this._div.style;
            t.fontFamily = this.fontName,
            t.position = "absolute",
            t.left = "-100px",
            t.top = "-100px",
            G.document.body.appendChild(this._div);
        }
        ,
        e._loadWithCSS = function() {
            var t = this
              , e = G.createElement("style");
            e.type = "text/css",
            G.document.body.appendChild(e),
            e.textContent = "@font-face { font-family:'" + this.fontName + "'; src:url('" + this._url + "');}",
            this._fontTxt = "40px " + this.fontName,
            this._txtWidth = P.measureText("LayaTTFFont", this._fontTxt).width;
            var i = this;
            e.onload = function() {
                w.timer.once(1e4, i, t._complete);
            }
            ,
            w.timer.loop(20, this, this._checkComplete),
            this._createDiv();
        }
        ,
        t._testString = "LayaTTFFont",
        t;
    }())
      , D = function() {
        function s(t) {
            this._url = null,
            this._path = null,
            this._url = s.formatURL(t),
            this._path = s.getPath(t);
        }
        f(s, "laya.net.URL");
        var t = s.prototype;
        return u(0, t, "path", function() {
            return this._path;
        }),
        u(0, t, "url", function() {
            return this._url;
        }),
        s.formatURL = function(t, e) {
            if (!t)
                return "null path";
            if (0 < t.indexOf(":"))
                return t;
            var i = s.fastUrlMapping[t];
            if (i)
                return i;
            null != s.customFormat && (t = s.customFormat(t, e));
            var n = t.charAt(0);
            if ("." === n)
                return s.formatRelativePath((e || s.basePath) + t);
            if ("~" === n)
                return s.rootPath + t.substring(1);
            if ("d" === n) {
                if (0 === t.indexOf("data:image"))
                    return t;
            } else if ("/" === n)
                return t;
            var a = (e || s.basePath) + t;
            return s.fastUrlMapping[t] = a;
        }
        ,
        s.formatRelativePath = function(t) {
            for (var e = t.split("/"), i = 0, n = e.length; i < n; i++)
                ".." == e[i] && (e.splice(i - 1, 2),
                i -= 2);
            return e.join("/");
        }
        ,
        s.isAbsolute = function(t) {
            return 0 < t.indexOf(":") || "/" == t.charAt(0);
        }
        ,
        s.getPath = function(t) {
            var e = t.lastIndexOf("/");
            return 0 < e ? t.substr(0, e + 1) : "";
        }
        ,
        s.getFileName = function(t) {
            var e = t.lastIndexOf("/");
            return 0 < e ? t.substr(e + 1) : t;
        }
        ,
        s.version = {},
        s.fastUrlMapping = {},
        s.basePath = "",
        s.rootPath = "",
        s.customFormat = function(t) {
            var e = s.version[t];
            return !R.isConchApp && e && (t += "?v=" + e),
            t;
        }
        ,
        s;
    }()
      , R = function() {
        function a(t, e) {
            this._timeId = 0;
            var i = a._mainCanvas.source.style;
            i.position = "absolute",
            i.top = i.left = "0px",
            i.background = "#000000",
            a._mainCanvas.source.id = "layaCanvas";
            var n = laya.renders.Render.isWebGL;
            a._mainCanvas.source.width = t,
            a._mainCanvas.source.height = e,
            n && a.WebGL.init(a._mainCanvas, t, e),
            G.container.appendChild(a._mainCanvas.source),
            (a._context = new k(t,e,n ? null : a._mainCanvas)).ctx.setIsMainContext(),
            G.window.requestAnimationFrame(function t(e) {
                w.stage._loop();
                G.window.requestAnimationFrame(t);
            }),
            w.stage.on("visibilitychange", this, this._onVisibilitychange);
        }
        f(a, "laya.renders.Render");
        var t = a.prototype;
        return t._onVisibilitychange = function() {
            w.stage.isVisibility ? 0 != this._timeId && G.window.clearInterval(this._timeId) : this._timeId = G.window.setInterval(this._enterFrame, 1e3);
        }
        ,
        t._enterFrame = function(t) {
            w.stage._loop();
        }
        ,
        u(1, a, "context", function() {
            return a._context;
        }),
        u(1, a, "canvas", function() {
            return a._mainCanvas.source;
        }),
        a._context = null,
        a._mainCanvas = null,
        a.WebGL = null,
        a.isConchNode = !1,
        a.isConchApp = !1,
        a.isConchWebGL = !1,
        a.isWebGL = !1,
        a.is3DMode = !1,
        a.optimizeTextureMemory = function(t, e) {
            return !0;
        }
        ,
        a.__init$ = function() {
            r.ConchRenderType = r.ConchRenderType || 1,
            r.ConchRenderType |= r.conch ? 4 : 0,
            a.isConchNode = 5 == (5 & r.ConchRenderType),
            a.isConchApp = 4 == (4 & r.ConchRenderType),
            a.isConchWebGL = 6 == r.ConchRenderType;
        }
        ,
        a;
    }()
      , k = function() {
        function r(t, e, i) {
            this.x = 0,
            this.y = 0,
            this._drawTexture = function(t, e, i) {
                i[0].loaded && this.ctx.drawTexture(i[0], i[1], i[2], i[3], i[4], t, e);
            }
            ,
            this._fillTexture = function(t, e, i) {
                i[0].loaded && this.ctx.fillTexture(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
            }
            ,
            this._drawTextureWithTransform = function(t, e, i) {
                i[0].loaded && this.ctx.drawTextureWithTransform(i[0], i[1], i[2], i[3], i[4], i[5], t, e, i[6]);
            }
            ,
            this._fillQuadrangle = function(t, e, i) {
                this.ctx.fillQuadrangle(i[0], i[1], i[2], i[3], i[4]);
            }
            ,
            this._drawRect = function(t, e, i) {
                var n = this.ctx;
                null != i[4] && (n.fillStyle = i[4],
                n.fillRect(t + i[0], e + i[1], i[2], i[3], null)),
                null != i[5] && (n.strokeStyle = i[5],
                n.lineWidth = i[6],
                n.strokeRect(t + i[0], e + i[1], i[2], i[3], i[6]));
            }
            ,
            this._drawPie = function(t, e, i) {
                var n = this.ctx;
                R.isWebGL && n.setPathId(i[8]),
                n.beginPath(),
                R.isWebGL ? (n.movePath(i[0] + t, i[1] + e),
                n.moveTo(0, 0)) : n.moveTo(t + i[0], e + i[1]),
                n.arc(t + i[0], e + i[1], i[2], i[3], i[4]),
                n.closePath(),
                this._fillAndStroke(i[5], i[6], i[7], !0);
            }
            ,
            this._clipRect = function(t, e, i) {
                this.ctx.clipRect(t + i[0], e + i[1], i[2], i[3]);
            }
            ,
            this._fillRect = function(t, e, i) {
                this.ctx.fillRect(t + i[0], e + i[1], i[2], i[3], i[4]);
            }
            ,
            this._drawCircle = function(t, e, i) {
                var n = this.ctx;
                R.isWebGL && n.setPathId(i[6]),
                K.drawCall++,
                n.beginPath(),
                R.isWebGL && n.movePath(i[0] + t, i[1] + e),
                n.arc(i[0] + t, i[1] + e, i[2], 0, r.PI2),
                n.closePath(),
                this._fillAndStroke(i[3], i[4], i[5], !0);
            }
            ,
            this._fillCircle = function(t, e, i) {
                K.drawCall++;
                var n = this.ctx;
                n.beginPath(),
                n.fillStyle = i[3],
                n.arc(i[0] + t, i[1] + e, i[2], 0, r.PI2),
                n.fill();
            }
            ,
            this._setShader = function(t, e, i) {
                this.ctx.setShader(i[0]);
            }
            ,
            this._drawLine = function(t, e, i) {
                var n = this.ctx;
                R.isWebGL && n.setPathId(i[6]),
                n.beginPath(),
                n.strokeStyle = i[4],
                n.lineWidth = i[5],
                R.isWebGL ? (n.movePath(t, e),
                n.moveTo(i[0], i[1]),
                n.lineTo(i[2], i[3])) : (n.moveTo(t + i[0], e + i[1]),
                n.lineTo(t + i[2], e + i[3])),
                n.stroke();
            }
            ,
            this._drawLines = function(t, e, i) {
                var n = this.ctx;
                R.isWebGL && n.setPathId(i[5]),
                n.beginPath(),
                t += i[0],
                e += i[1],
                R.isWebGL && n.movePath(t, e),
                n.strokeStyle = i[3],
                n.lineWidth = i[4];
                var a = i[2]
                  , s = 2
                  , r = a.length;
                if (R.isWebGL)
                    for (n.moveTo(a[0], a[1]); s < r; )
                        n.lineTo(a[s++], a[s++]);
                else
                    for (n.moveTo(t + a[0], e + a[1]); s < r; )
                        n.lineTo(t + a[s++], e + a[s++]);
                n.stroke();
            }
            ,
            this._drawLinesWebGL = function(t, e, i) {
                this.ctx.drawLines(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4]);
            }
            ,
            this._drawCurves = function(t, e, i) {
                this.ctx.drawCurves(t, e, i);
            }
            ,
            this._draw = function(t, e, i) {
                i[0].call(null, this, t, e);
            }
            ,
            this._transformByMatrix = function(t, e, i) {
                this.ctx.transformByMatrix(i[0]);
            }
            ,
            this._setTransform = function(t, e, i) {
                this.ctx.setTransform(i[0], i[1], i[2], i[3], i[4], i[5]);
            }
            ,
            this._setTransformByMatrix = function(t, e, i) {
                this.ctx.setTransformByMatrix(i[0]);
            }
            ,
            this._save = function(t, e, i) {
                this.ctx.save();
            }
            ,
            this._restore = function(t, e, i) {
                this.ctx.restore();
            }
            ,
            this._translate = function(t, e, i) {
                this.ctx.translate(i[0], i[1]);
            }
            ,
            this._transform = function(t, e, i) {
                this.ctx.translate(i[1] + t, i[2] + e);
                var n = i[0];
                this.ctx.transform(n.a, n.b, n.c, n.d, n.tx, n.ty),
                this.ctx.translate(-t - i[1], -e - i[2]);
            }
            ,
            this._rotate = function(t, e, i) {
                this.ctx.translate(i[1] + t, i[2] + e),
                this.ctx.rotate(i[0]),
                this.ctx.translate(-t - i[1], -e - i[2]);
            }
            ,
            this._scale = function(t, e, i) {
                this.ctx.translate(i[2] + t, i[3] + e),
                this.ctx.scale(i[0], i[1]),
                this.ctx.translate(-t - i[2], -e - i[3]);
            }
            ,
            this._alpha = function(t, e, i) {
                this.ctx.globalAlpha *= i[0];
            }
            ,
            this._setAlpha = function(t, e, i) {
                this.ctx.globalAlpha = i[0];
            }
            ,
            this._fillText = function(t, e, i) {
                this.ctx.fillText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5]);
            }
            ,
            this._strokeText = function(t, e, i) {
                this.ctx.strokeText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6]);
            }
            ,
            this._fillBorderText = function(t, e, i) {
                this.ctx.fillBorderText(i[0], i[1] + t, i[2] + e, i[3], i[4], i[5], i[6], i[7]);
            }
            ,
            this._blendMode = function(t, e, i) {
                this.ctx.globalCompositeOperation = i[0];
            }
            ,
            this._beginClip = function(t, e, i) {
                this.ctx.beginClip && this.ctx.beginClip(t + i[0], e + i[1], i[2], i[3]);
            }
            ,
            this._setIBVB = function(t, e, i) {
                this.ctx.setIBVB(i[0] + t, i[1] + e, i[2], i[3], i[4], i[5], i[6], i[7]);
            }
            ,
            this._fillTrangles = function(t, e, i) {
                this.ctx.fillTrangles(i[0], i[1] + t, i[2] + e, i[3], i[4]);
            }
            ,
            this._drawPath = function(t, e, i) {
                var n = this.ctx;
                R.isWebGL && n.setPathId(-1),
                n.beginPath(),
                t += i[0],
                e += i[1],
                R.isWebGL && n.movePath(t, e);
                for (var a = i[2], s = 0, r = a.length; s < r; s++) {
                    var o = a[s];
                    switch (o[0]) {
                    case "moveTo":
                        R.isWebGL ? n.moveTo(o[1], o[2]) : n.moveTo(t + o[1], e + o[2]);
                        break;

                    case "lineTo":
                        R.isWebGL ? n.lineTo(o[1], o[2]) : n.lineTo(t + o[1], e + o[2]);
                        break;

                    case "arcTo":
                        R.isWebGL ? n.arcTo(o[1], o[2], o[3], o[4], o[5]) : n.arcTo(t + o[1], e + o[2], t + o[3], e + o[4], o[5]);
                        break;

                    case "closePath":
                        n.closePath();
                    }
                }
                var h = i[3];
                null != h && (n.fillStyle = h.fillStyle,
                n.fill());
                var l = i[4];
                null != l && (n.strokeStyle = l.strokeStyle,
                n.lineWidth = l.lineWidth || 1,
                n.lineJoin = l.lineJoin,
                n.lineCap = l.lineCap,
                n.miterLimit = l.miterLimit,
                n.stroke());
            }
            ,
            this.drawPoly = function(t, e, i) {
                this.ctx.drawPoly(t + this.x + i[0], e + this.y + i[1], i[2], i[3], i[4], i[5], i[6]);
            }
            ,
            this._drawPoly = function(t, e, i) {
                var n = this.ctx
                  , a = i[2]
                  , s = 2
                  , r = a.length;
                if (R.isWebGL)
                    for (n.setPathId(i[6]),
                    n.beginPath(),
                    t += i[0],
                    e += i[1],
                    n.movePath(t, e),
                    n.moveTo(a[0], a[1]); s < r; )
                        n.lineTo(a[s++], a[s++]);
                else
                    for (n.beginPath(),
                    t += i[0],
                    e += i[1],
                    n.moveTo(t + a[0], e + a[1]); s < r; )
                        n.lineTo(t + a[s++], e + a[s++]);
                n.closePath(),
                this._fillAndStroke(i[3], i[4], i[5], i[7]);
            }
            ,
            this._drawSkin = function(t, e, i) {
                var n = i[0];
                if (n) {
                    var a = this.ctx;
                    n.render(a, t, e);
                }
            }
            ,
            this._drawParticle = function(t, e, i) {
                this.ctx.drawParticle(t + this.x, e + this.y, i[0]);
            }
            ,
            this._setFilters = function(t, e, i) {
                this.ctx.setFilters(i);
            }
            ,
            i ? this.ctx = i.getContext("2d") : (i = vt.create("3D"),
            this.ctx = P.createWebGLContext2D(i),
            i._setContext(this.ctx)),
            i.size(t, e),
            this.canvas = i;
        }
        f(r, "laya.renders.RenderContext");
        var t = r.prototype;
        return t.destroy = function() {
            this.canvas && (this.canvas.destroy(),
            this.canvas = null,
            this.ctx = null),
            this.ctx && (this.ctx.destroy(),
            this.ctx = null);
        }
        ,
        t.drawTexture = function(t, e, i, n, a) {
            t.loaded && this.ctx.drawTexture(t, e, i, n, a, this.x, this.y);
        }
        ,
        t._drawTextures = function(t, e, i) {
            i[0].loaded && this.ctx.drawTextures(i[0], i[1], t + this.x, e + this.y);
        }
        ,
        t.drawTextureWithTransform = function(t, e, i, n, a, s, r) {
            t.loaded && this.ctx.drawTextureWithTransform(t, e, i, n, a, s, this.x, this.y, r);
        }
        ,
        t.fillQuadrangle = function(t, e, i, n, a) {
            this.ctx.fillQuadrangle(t, e, i, n, a);
        }
        ,
        t.drawCanvas = function(t, e, i, n, a) {
            this.ctx.drawCanvas(t, e + this.x, i + this.y, n, a);
        }
        ,
        t.drawRect = function(t, e, i, n, a, s) {
            void 0 === s && (s = 1);
            var r = this.ctx;
            r.strokeStyle = a,
            r.lineWidth = s,
            r.strokeRect(t + this.x, e + this.y, i, n, s);
        }
        ,
        t._fillAndStroke = function(t, e, i, n) {
            void 0 === n && (n = !1);
            var a = this.ctx;
            null != t && (a.fillStyle = t,
            R.isWebGL ? a.fill(n) : a.fill()),
            null != e && 0 < i && (a.strokeStyle = e,
            a.lineWidth = i,
            a.stroke());
        }
        ,
        t.clipRect = function(t, e, i, n) {
            this.ctx.clipRect(t + this.x, e + this.y, i, n);
        }
        ,
        t.fillRect = function(t, e, i, n, a) {
            this.ctx.fillRect(t + this.x, e + this.y, i, n, a);
        }
        ,
        t.drawCircle = function(t, e, i, n, a) {
            void 0 === a && (a = 1),
            K.drawCall++;
            var s = this.ctx;
            s.beginPath(),
            s.strokeStyle = n,
            s.lineWidth = a,
            s.arc(t + this.x, e + this.y, i, 0, r.PI2),
            s.stroke();
        }
        ,
        t.drawTriangles = function(t, e, i) {
            if (R.isWebGL)
                this.ctx.drawTriangles(i[0], t + i[1], e + i[2], i[3], i[4], i[5], i[6], i[7], i[8], i[9]);
            else {
                var n = i[5]
                  , a = 0
                  , s = n.length
                  , r = this.ctx;
                for (a = 0; a < s; a += 3) {
                    var o = 2 * n[a]
                      , h = 2 * n[a + 1]
                      , l = 2 * n[a + 2];
                    r.drawTriangle(i[0], i[3], i[4], o, h, l, i[6], !0);
                }
            }
        }
        ,
        t.fillCircle = function(t, e, i, n) {
            K.drawCall++;
            var a = this.ctx;
            a.beginPath(),
            a.fillStyle = n,
            a.arc(t + this.x, e + this.y, i, 0, r.PI2),
            a.fill();
        }
        ,
        t.setShader = function(t) {
            this.ctx.setShader(t);
        }
        ,
        t.drawLine = function(t, e, i, n, a, s) {
            void 0 === s && (s = 1);
            var r = this.ctx;
            r.beginPath(),
            r.strokeStyle = a,
            r.lineWidth = s,
            r.moveTo(this.x + t, this.y + e),
            r.lineTo(this.x + i, this.y + n),
            r.stroke();
        }
        ,
        t.clear = function() {
            this.ctx.clear();
        }
        ,
        t.transformByMatrix = function(t) {
            this.ctx.transformByMatrix(t);
        }
        ,
        t.setTransform = function(t, e, i, n, a, s) {
            this.ctx.setTransform(t, e, i, n, a, s);
        }
        ,
        t.setTransformByMatrix = function(t) {
            this.ctx.setTransformByMatrix(t);
        }
        ,
        t.save = function() {
            this.ctx.save();
        }
        ,
        t.restore = function() {
            this.ctx.restore();
        }
        ,
        t.translate = function(t, e) {
            this.ctx.translate(t, e);
        }
        ,
        t.transform = function(t, e, i, n, a, s) {
            this.ctx.transform(t, e, i, n, a, s);
        }
        ,
        t.rotate = function(t) {
            this.ctx.rotate(t);
        }
        ,
        t.scale = function(t, e) {
            this.ctx.scale(t, e);
        }
        ,
        t.alpha = function(t) {
            this.ctx.globalAlpha *= t;
        }
        ,
        t.setAlpha = function(t) {
            this.ctx.globalAlpha = t;
        }
        ,
        t.fillWords = function(t, e, i, n, a, s) {
            void 0 === s && (s = 0),
            this.ctx.fillWords(t, e, i, n, a, s);
        }
        ,
        t.fillBorderWords = function(t, e, i, n, a, s, r) {
            this.ctx.fillBorderWords(t, e, i, n, a, s, r);
        }
        ,
        t.fillText = function(t, e, i, n, a, s) {
            this.ctx.fillText(t, e + this.x, i + this.y, n, a, s);
        }
        ,
        t.strokeText = function(t, e, i, n, a, s, r) {
            this.ctx.strokeText(t, e + this.x, i + this.y, n, a, s, r);
        }
        ,
        t.blendMode = function(t) {
            this.ctx.globalCompositeOperation = t;
        }
        ,
        t.flush = function() {
            this.ctx.flush && this.ctx.flush();
        }
        ,
        t.addRenderObject = function(t) {
            this.ctx.addRenderObject(t);
        }
        ,
        t.beginClip = function(t, e, i, n) {
            this.ctx.beginClip && this.ctx.beginClip(t, e, i, n);
        }
        ,
        t.endClip = function() {
            this.ctx.endClip && this.ctx.endClip();
        }
        ,
        t.fillTrangles = function(t, e, i) {
            this.ctx.fillTrangles(i[0], i[1], i[2], i[3], 4 < i.length ? i[4] : null);
        }
        ,
        r.PI2 = 2 * Math.PI,
        r;
    }()
      , N = function() {
        function r(t, e) {
            switch (this._next = e || r.NORENDER,
            t) {
            case 0:
                return void (this._fun = this._no);

            case 1:
                return void (this._fun = this._image);

            case 2:
                return void (this._fun = this._alpha);

            case 4:
                return void (this._fun = this._transform);

            case 8:
                return void (this._fun = this._blend);

            case 16:
                return void (this._fun = this._canvas);

            case 64:
                return void (this._fun = this._mask);

            case 128:
                return void (this._fun = this._clip);

            case 256:
                return void (this._fun = this._style);

            case 512:
                return void (this._fun = this._graphics);

            case 2048:
                return void (this._fun = this._childs);

            case 1024:
                return void (this._fun = this._custom);

            case 513:
            case 517:
                return void (this._fun = this._image2);

            case 32:
                return void (this._fun = m._filter);

            case 69905:
                return void (this._fun = r._initRenderFun);
            }
            this.onCreate(t);
        }
        f(r, "laya.renders.RenderSprite");
        var t = r.prototype;
        return t.onCreate = function(t) {}
        ,
        t._style = function(t, e, i, n) {
            t._style.render(t, e, i, n);
            var a = this._next;
            a._fun.call(a, t, e, i, n);
        }
        ,
        t._no = function(t, e, i, n) {}
        ,
        t._custom = function(t, e, i, n) {
            t.customRender(e, i, n);
            var a = t._style._tf;
            this._next._fun.call(this._next, t, e, i - a.translateX, n - a.translateY);
        }
        ,
        t._clip = function(t, e, i, n) {
            var a = this._next;
            if (a != r.NORENDER) {
                var s = t._style.scrollRect;
                e.ctx.save(),
                e.ctx.clipRect(i, n, s.width, s.height),
                a._fun.call(a, t, e, i - s.x, n - s.y),
                e.ctx.restore();
            }
        }
        ,
        t._blend = function(t, e, i, n) {
            var a = t._style;
            a.blendMode && (e.ctx.globalCompositeOperation = a.blendMode);
            var s = this._next;
            s._fun.call(s, t, e, i, n),
            e.ctx.globalCompositeOperation = "source-over";
        }
        ,
        t._mask = function(t, e, i, n) {
            var a = this._next;
            a._fun.call(a, t, e, i, n);
            var s = t.mask;
            s && (e.ctx.globalCompositeOperation = "destination-in",
            (0 < s.numChildren || !s.graphics._isOnlyOne()) && (s.cacheAsBitmap = !0),
            s.render(e, i - t.pivotX, n - t.pivotY)),
            e.ctx.globalCompositeOperation = "source-over";
        }
        ,
        t._graphics = function(t, e, i, n) {
            var a = t._style._tf;
            t._graphics && t._graphics._render(t, e, i - a.translateX, n - a.translateY);
            var s = this._next;
            s._fun.call(s, t, e, i, n);
        }
        ,
        t._image = function(t, e, i, n) {
            var a = t._style;
            e.ctx.drawTexture2(i, n, a._tf.translateX, a._tf.translateY, t.transform, a.alpha, a.blendMode, t._graphics._one);
        }
        ,
        t._image2 = function(t, e, i, n) {
            var a = t._style._tf;
            e.ctx.drawTexture2(i, n, a.translateX, a.translateY, t.transform, 1, null, t._graphics._one);
        }
        ,
        t._alpha = function(t, e, i, n) {
            var a;
            if (.01 < (a = t._style.alpha) || t._needRepaint()) {
                var s = e.ctx.globalAlpha;
                e.ctx.globalAlpha *= a;
                var r = this._next;
                r._fun.call(r, t, e, i, n),
                e.ctx.globalAlpha = s;
            }
        }
        ,
        t._transform = function(t, e, i, n) {
            var a = t.transform
              , s = this._next;
            a && s != r.NORENDER ? (e.save(),
            e.transform(a.a, a.b, a.c, a.d, a.tx + i, a.ty + n),
            s._fun.call(s, t, e, 0, 0),
            e.restore()) : s._fun.call(s, t, e, i, n);
        }
        ,
        t._childs = function(t, e, i, n) {
            var a = t._style
              , s = a._tf;
            if (i = i - s.translateX + a.paddingLeft,
            n = n - s.translateY + a.paddingTop,
            a._calculation) {
                var r = t._getWords();
                if (r) {
                    var o = a;
                    o && (o.stroke ? e.fillBorderWords(r, i, n, o.font, o.color, o.strokeColor, o.stroke) : e.fillWords(r, i, n, o.font, o.color, "none" != o.textDecoration && o.underLine ? 1 : 0));
                }
            }
            var h, l = t._childs, u = l.length;
            if (t.viewport || t.optimizeScrollRect && t._style.scrollRect) {
                var c = t.viewport || t._style.scrollRect
                  , d = c.x
                  , _ = c.y
                  , p = c.right
                  , f = c.bottom
                  , g = NaN
                  , m = NaN;
                for (y = 0; y < u; ++y)
                    (h = l[y]).visible && (g = h._x) < p && g + h.width > d && (m = h._y) < f && m + h.height > _ && h.render(e, i, n);
            } else
                for (var y = 0; y < u; ++y)
                    (h = l[y])._style.visible && h.render(e, i, n);
        }
        ,
        t._canvas = function(t, e, i, n) {
            var a = t._$P.cacheCanvas;
            if (a) {
                "bitmap" === a.type ? K.canvasBitmap++ : K.canvasNormal++;
                var s = a.ctx;
                if (t._needRepaint() || !s)
                    this._canvas_repaint(t, e, i, n);
                else {
                    var r = a._cacheRec;
                    e.drawCanvas(s.canvas, i + r.x, n + r.y, r.width, r.height);
                }
            } else
                this._next._fun.call(this._next, t, e, i, n);
        }
        ,
        t._canvas_repaint = function(t, e, i, n) {
            var a = t._$P.cacheCanvas
              , s = this._next;
            if (a) {
                var r, o, h, l, u = a.ctx, c = t._needRepaint() || !u, d = a.type;
                if ("bitmap" === d ? K.canvasBitmap++ : K.canvasNormal++,
                c) {
                    var _, p;
                    a._cacheRec || (a._cacheRec = new I()),
                    R.isWebGL && "bitmap" !== d ? a._cacheRec.setTo(-t.pivotX, -t.pivotY, 1, 1) : ((l = t.getSelfBounds()).x = l.x - t.pivotX,
                    l.y = l.y - t.pivotY,
                    l.x = l.x - 16,
                    l.y = l.y - 16,
                    l.width = l.width + 32,
                    l.height = l.height + 32,
                    l.x = Math.floor(l.x + i) - i,
                    l.y = Math.floor(l.y + n) - n,
                    l.width = Math.floor(l.width),
                    l.height = Math.floor(l.height),
                    a._cacheRec.copyFrom(l)),
                    l = a._cacheRec;
                    var f, g = R.isWebGL ? 1 : G.pixelRatio * w.stage.clientScaleX, m = R.isWebGL ? 1 : G.pixelRatio * w.stage.clientScaleY;
                    if (!R.isWebGL) {
                        var y, v = 1, S = 1;
                        for (y = t; y && y != w.stage; )
                            v *= y.scaleX,
                            S *= y.scaleY,
                            y = y.parent;
                        R.isWebGL ? (v < 1 && (g *= v),
                        S < 1 && (m *= S)) : (1 < v && (g *= v),
                        1 < S && (m *= S));
                    }
                    if (t.scrollRect) {
                        var x = t.scrollRect;
                        l.x -= x.x,
                        l.y -= x.y;
                    }
                    if (_ = l.width * g,
                    p = l.height * m,
                    o = l.x,
                    h = l.y,
                    R.isWebGL && "bitmap" === d && (2048 < _ || 2048 < p))
                        return console.warn("cache bitmap size larger than 2048,cache ignored"),
                        a.ctx && (z.recover("RenderContext", a.ctx),
                        a.ctx.canvas.size(0, 0),
                        a.ctx = null),
                        void s._fun.call(s, t, e, i, n);
                    if (u || (u = a.ctx = z.getItem("RenderContext") || new k(_,p,vt.create("AUTO"))),
                    u.ctx.sprite = t,
                    (r = u.canvas).clear(),
                    (r.width != _ || r.height != p) && r.size(_, p),
                    "bitmap" === d ? r.context.asBitmap = !0 : "normal" === d && (r.context.asBitmap = !1),
                    1 != g || 1 != m) {
                        var b = u.ctx;
                        b.save(),
                        b.scale(g, m),
                        !R.isConchWebGL && R.isConchApp && (f = t._$P.cf) && b.setFilterMatrix && b.setFilterMatrix(f._mat, f._alpha),
                        s._fun.call(s, t, u, -o, -h),
                        b.restore(),
                        R.isConchApp && !R.isConchWebGL || t._applyFilters();
                    } else
                        b = u.ctx,
                        !R.isConchWebGL && R.isConchApp && (f = t._$P.cf) && b.setFilterMatrix && b.setFilterMatrix(f._mat, f._alpha),
                        s._fun.call(s, t, u, -o, -h),
                        R.isConchApp && !R.isConchWebGL || t._applyFilters();
                    t._$P.staticCache && (a.reCache = !1),
                    K.canvasReCache++;
                } else
                    o = (l = a._cacheRec).x,
                    h = l.y,
                    r = u.canvas;
                e.drawCanvas(r, i + o, n + h, l.width, l.height);
            } else
                s._fun.call(s, t, u, i, n);
        }
        ,
        r.__init__ = function() {
            var t, e, i = 0;
            for (e = P.createRenderSprite(69905, null),
            t = r.renders.length = 4096,
            i = 0; i < t; i++)
                r.renders[i] = e;
            r.renders[0] = P.createRenderSprite(0, null),
            function(t, e) {
                for (var i = 0, n = 0; n < t.length; n++)
                    i |= t[n],
                    r.renders[i] = e;
            }([1, 512, 4, 2], new r(1,null)),
            r.renders[513] = P.createRenderSprite(513, null),
            r.renders[517] = new r(517,null);
        }
        ,
        r._initRenderFun = function(t, e, i, n) {
            var a = t._renderType;
            (r.renders[a] = r._getTypeRender(a))._fun(t, e, i, n);
        }
        ,
        r._getTypeRender = function(t) {
            for (var e = null, i = 2048; 1 < i; )
                i & t && (e = P.createRenderSprite(i, e)),
                i >>= 1;
            return e;
        }
        ,
        r.IMAGE = 1,
        r.ALPHA = 2,
        r.TRANSFORM = 4,
        r.BLEND = 8,
        r.CANVAS = 16,
        r.FILTERS = 32,
        r.MASK = 64,
        r.CLIP = 128,
        r.STYLE = 256,
        r.GRAPHICS = 512,
        r.CUSTOM = 1024,
        r.CHILDS = 2048,
        r.INIT = 69905,
        r.renders = [],
        r.NORENDER = new r(0,null),
        r;
    }()
      , O = function() {
        function o() {
            this._repaint = !1;
        }
        f(o, "laya.resource.Context");
        var t = o.prototype;
        return t.replaceReset = function() {
            var t, e, i = 0;
            for (t = o.replaceKeys.length,
            i = 0; i < t; i++)
                e = o.replaceKeys[i],
                this[o.newKeys[i]] = this[e];
        }
        ,
        t.replaceResotre = function() {
            this.__restore(),
            this.__reset();
        }
        ,
        t.setIsMainContext = function() {}
        ,
        t.drawTextures = function(t, e, i, n) {
            K.drawCall += e.length / 2;
            for (var a = t.width, s = t.height, r = 0, o = e.length; r < o; r += 2)
                this.drawTexture(t, e[r], e[r + 1], a, s, i, n);
        }
        ,
        t.drawCanvas = function(t, e, i, n, a) {
            K.drawCall++,
            this.drawImage(t.source, e, i, n, a);
        }
        ,
        t.fillRect = function(t, e, i, n, a) {
            K.drawCall++,
            a && (this.fillStyle = a),
            this.__fillRect(t, e, i, n);
        }
        ,
        t.fillText = function(t, e, i, n, a, s) {
            K.drawCall++,
            3 < arguments.length && null != n && (this.font = n,
            this.fillStyle = a,
            this.textAlign = s,
            this.textBaseline = "top"),
            this.__fillText(t, e, i);
        }
        ,
        t.fillBorderText = function(t, e, i, n, a, s, r, o) {
            K.drawCall++,
            this.font = n,
            this.fillStyle = a,
            this.textBaseline = "top",
            this.strokeStyle = s,
            this.lineWidth = r,
            this.textAlign = o,
            this.__strokeText(t, e, i),
            this.__fillText(t, e, i);
        }
        ,
        t.strokeText = function(t, e, i, n, a, s, r) {
            K.drawCall++,
            3 < arguments.length && null != n && (this.font = n,
            this.strokeStyle = a,
            this.lineWidth = s,
            this.textAlign = r,
            this.textBaseline = "top"),
            this.__strokeText(t, e, i);
        }
        ,
        t.transformByMatrix = function(t) {
            this.transform(t.a, t.b, t.c, t.d, t.tx, t.ty);
        }
        ,
        t.setTransformByMatrix = function(t) {
            this.setTransform(t.a, t.b, t.c, t.d, t.tx, t.ty);
        }
        ,
        t.clipRect = function(t, e, i, n) {
            K.drawCall++,
            this.beginPath(),
            this.rect(t, e, i, n),
            this.clip();
        }
        ,
        t.drawTexture = function(t, e, i, n, a, s, r) {
            K.drawCall++;
            var o = t.uv
              , h = t.bitmap.width
              , l = t.bitmap.height;
            this.drawImage(t.source, o[0] * h, o[1] * l, (o[2] - o[0]) * h, (o[5] - o[3]) * l, e + s, i + r, n, a);
        }
        ,
        t.drawTextureWithTransform = function(t, e, i, n, a, s, r, o, h) {
            K.drawCall++;
            var l = t.uv
              , u = t.bitmap.width
              , c = t.bitmap.height;
            this.save(),
            1 != h && (this.globalAlpha *= h),
            s ? (this.transform(s.a, s.b, s.c, s.d, s.tx + r, s.ty + o),
            this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e, i, n, a)) : this.drawImage(t.source, l[0] * u, l[1] * c, (l[2] - l[0]) * u, (l[5] - l[3]) * c, e + r, i + o, n, a),
            this.restore();
        }
        ,
        t.drawTexture2 = function(t, e, i, n, a, s, r, o) {
            var h = o[0];
            if (h.loaded && h.bitmap && h.source) {
                K.drawCall++;
                var l = 1 !== s;
                if (l) {
                    var u = this.globalAlpha;
                    this.globalAlpha *= s;
                }
                var c = h.uv
                  , d = h.bitmap.width
                  , _ = h.bitmap.height;
                a ? (this.save(),
                this.transform(a.a, a.b, a.c, a.d, a.tx + t, a.ty + e),
                this.drawImage(h.source, c[0] * d, c[1] * _, (c[2] - c[0]) * d, (c[5] - c[3]) * _, o[1] - i, o[2] - n, o[3], o[4]),
                this.restore()) : this.drawImage(h.source, c[0] * d, c[1] * _, (c[2] - c[0]) * d, (c[5] - c[3]) * _, o[1] - i + t, o[2] - n + e, o[3], o[4]),
                l && (this.globalAlpha = u);
            }
        }
        ,
        t.fillTexture = function(t, e, i, n, a, s, r, o) {
            if (!o.pat) {
                if (t.uv != ut.DEF_UV) {
                    var h = new vt("2D");
                    h.getContext("2d"),
                    h.size(t.width, t.height),
                    h.context.drawTexture(t, 0, 0, t.width, t.height, 0, 0),
                    t = new ut(h);
                }
                o.pat = this.createPattern(t.bitmap.source, s);
            }
            var l = e
              , u = i
              , c = 0
              , d = 0;
            r && (l += r.x % t.width,
            u += r.y % t.height,
            c -= r.x % t.width,
            d -= r.y % t.height),
            this.translate(l, u),
            this.fillRect(c, d, n, a, o.pat),
            this.translate(-l, -u);
        }
        ,
        t.drawTriangle = function(t, e, i, n, a, s, r, o) {
            var h = t.bitmap
              , l = h.source
              , u = t.width
              , c = t.height
              , d = h.width
              , _ = h.height
              , p = i[n] * d
              , f = i[a] * d
              , g = i[s] * d
              , m = i[n + 1] * _
              , y = i[a + 1] * _
              , v = i[s + 1] * _
              , S = e[n]
              , x = e[a]
              , b = e[s]
              , w = e[n + 1]
              , M = e[a + 1]
              , I = e[s + 1];
            if (o) {
                var T = (S + x + b) / 3
                  , C = (w + M + I) / 3
                  , E = S - T
                  , P = w - C
                  , A = Math.sqrt(E * E + P * P);
                S = T + E / A * (A + 1),
                w = C + P / A * (A + 1),
                P = M - C,
                x = T + (E = x - T) / (A = Math.sqrt(E * E + P * P)) * (A + 1),
                M = C + P / A * (A + 1),
                P = I - C,
                b = T + (E = b - T) / (A = Math.sqrt(E * E + P * P)) * (A + 1),
                I = C + P / A * (A + 1);
            }
            this.save(),
            r && this.transform(r.a, r.b, r.c, r.d, r.tx, r.ty),
            this.beginPath(),
            this.moveTo(S, w),
            this.lineTo(x, M),
            this.lineTo(b, I),
            this.closePath(),
            this.clip();
            var L = 1 / (p * y + m * g + f * v - y * g - m * f - p * v)
              , D = S * y + m * b + x * v - y * b - m * x - S * v
              , R = p * x + S * g + f * b - x * g - S * f - p * b
              , k = p * y * b + m * x * g + S * f * v - S * y * g - m * f * b - p * x * v
              , N = w * y + m * I + M * v - y * I - m * M - w * v
              , O = p * M + w * g + f * I - M * g - w * f - p * I
              , B = p * y * I + m * M * g + w * f * v - w * y * g - m * f * I - p * M * v;
            this.transform(D * L, N * L, R * L, O * L, k * L, B * L),
            this.drawImage(l, t.uv[0] * d, t.uv[1] * _, u, c, t.uv[0] * d, t.uv[1] * _, u, c),
            this.restore();
        }
        ,
        t.flush = function() {
            return 0;
        }
        ,
        t.fillWords = function(t, e, i, n, a, s) {
            n && (this.font = n),
            a && (this.fillStyle = a);
            this.textBaseline = "top",
            this.textAlign = "left";
            for (var r = 0, o = t.length; r < o; r++) {
                var h = t[r];
                if (this.__fillText(h.char, h.x + e, h.y + i),
                1 === s) {
                    var l = h.height
                      , u = .5 * h.style.letterSpacing;
                    u || (u = 0),
                    this.beginPath(),
                    this.strokeStyle = a,
                    this.lineWidth = 1,
                    this.moveTo(e + h.x - u + .5, i + h.y + l + .5),
                    this.lineTo(e + h.x + h.width + u + .5, i + h.y + l + .5),
                    this.stroke();
                }
            }
        }
        ,
        t.fillBorderWords = function(t, e, i, n, a, s, r) {
            n && (this.font = n),
            a && (this.fillStyle = a),
            this.textBaseline = "top",
            this.lineWidth = r,
            this.textAlign = "left",
            this.strokeStyle = s;
            for (var o = 0, h = t.length; o < h; o++) {
                var l = t[o];
                this.__strokeText(l.char, l.x + e, l.y + i),
                this.__fillText(l.char, l.x + e, l.y + i);
            }
        }
        ,
        t.destroy = function() {
            this.canvas.width = this.canvas.height = 0;
        }
        ,
        t.clear = function() {
            this.clearRect(0, 0, this._canvas.width, this._canvas.height),
            this._repaint = !1;
        }
        ,
        t.drawCurves = function(t, e, i) {
            this.beginPath(),
            this.strokeStyle = i[3],
            this.lineWidth = i[4];
            var n = i[2];
            t += i[0],
            e += i[1],
            this.moveTo(t + n[0], e + n[1]);
            for (var a = 2, s = n.length; a < s; )
                this.quadraticCurveTo(t + n[a++], e + n[a++], t + n[a++], e + n[a++]);
            this.stroke();
        }
        ,
        o.__init__ = function(e) {
            var i = laya.resource.Context.prototype;
            if (!(e = e || CanvasRenderingContext2D.prototype).inited) {
                e.inited = !0,
                e.__fillText = e.fillText,
                e.__fillRect = e.fillRect,
                e.__strokeText = e.strokeText;
                ["drawTextures", "drawTriangle", "fillWords", "fillBorderWords", "setIsMainContext", "fillRect", "strokeText", "fillTexture", "fillText", "transformByMatrix", "setTransformByMatrix", "clipRect", "drawTexture", "drawTexture2", "drawTextureWithTransform", "flush", "clear", "destroy", "drawCanvas", "fillBorderText", "drawCurves"].forEach(function(t) {
                    e[t] = i[t];
                });
            }
        }
        ,
        o.replaceCanvasGetSet = function(t, e) {
            var i = Object.getOwnPropertyDescriptor(t, e);
            if (!i || !i.configurable)
                return !1;
            var n, a = {};
            for (n in i)
                "set" != n && (a[n] = i[n]);
            var s = i.set;
            return a.set = function(t) {
                s.call(this, t);
                var e = this.getContext("2d");
                e && "__reset"in e && e.__reset();
            }
            ,
            Object.defineProperty(t, e, a),
            !0;
        }
        ,
        o.replaceGetSet = function(t, e) {
            var i = Object.getOwnPropertyDescriptor(t, e);
            if (!i || !i.configurable)
                return !1;
            var n, a = {};
            for (n in i)
                "set" != n && (a[n] = i[n]);
            var s = i.set
              , r = "___" + e + "__";
            return o.newKeys.push(r),
            a.set = function(t) {
                t != this[r] && (this[r] = t,
                s.call(this, t));
            }
            ,
            Object.defineProperty(t, e, a),
            !0;
        }
        ,
        o._default = new o(),
        o.newKeys = [],
        h(o, ["replaceKeys", function() {
            return this.replaceKeys = ["font", "fillStyle", "textBaseline"];
        }
        ]),
        o;
    }()
      , B = function() {
        function s(t) {
            this._id = 0,
            this._name = null,
            this._resources = null,
            this._memorySize = 0,
            this._garbageCollectionRate = NaN,
            this._isOverflow = !1,
            this.autoRelease = !1,
            this.autoReleaseMaxSize = 0,
            this._id = ++s._uniqueIDCounter,
            this._name = t || "Content Manager",
            s._isResourceManagersSorted = !1,
            this._memorySize = 0,
            this._isOverflow = !1,
            this.autoRelease = !1,
            this.autoReleaseMaxSize = 536870912,
            this._garbageCollectionRate = .2,
            s._resourceManagers.push(this),
            this._resources = [];
        }
        f(s, "laya.resource.ResourceManager");
        var t = s.prototype;
        return w.imps(t, {
            "laya.resource.IDispose": !0
        }),
        t.getResourceByIndex = function(t) {
            return this._resources[t];
        }
        ,
        t.getResourcesLength = function() {
            return this._resources.length;
        }
        ,
        t.addResource = function(t) {
            return t.resourceManager && t.resourceManager.removeResource(t),
            -1 === this._resources.indexOf(t) && ((t._resourceManager = this)._resources.push(t),
            this.addSize(t.memorySize),
            !0);
        }
        ,
        t.removeResource = function(t) {
            var e = this._resources.indexOf(t);
            return -1 !== e && (this._resources.splice(e, 1),
            t._resourceManager = null,
            this._memorySize -= t.memorySize,
            !0);
        }
        ,
        t.unload = function() {
            for (var t = this._resources.slice(0, this._resources.length), e = 0; e < t.length; e++) {
                t[e].destroy();
            }
            t.length = 0;
        }
        ,
        t.dispose = function() {
            if (this === s._systemResourceManager)
                throw new Error("systemResourceManager不能被释放！");
            s._resourceManagers.splice(s._resourceManagers.indexOf(this), 1),
            s._isResourceManagersSorted = !1;
            for (var t = this._resources.slice(0, this._resources.length), e = 0; e < t.length; e++) {
                var i = t[e];
                i.resourceManager.removeResource(i),
                i.destroy();
            }
            t.length = 0;
        }
        ,
        t.addSize = function(t) {
            t && (this.autoRelease && 0 < t && this._memorySize + t > this.autoReleaseMaxSize && this.garbageCollection((1 - this._garbageCollectionRate) * this.autoReleaseMaxSize),
            this._memorySize += t);
        }
        ,
        t.garbageCollection = function(t) {
            var e = this._resources;
            (e = e.slice()).sort(function(t, e) {
                if (!t || !e)
                    throw new Error("a或b不能为空！");
                return t.released && e.released ? 0 : t.released ? 1 : e.released ? -1 : t._lastUseFrameCount - e._lastUseFrameCount;
            });
            for (var i = K.loopCount, n = 0, a = e.length; n < a; n++) {
                var s = e[n];
                if (!(1 < i - s._lastUseFrameCount))
                    return void (this._memorySize >= t && (this._isOverflow = !0));
                if (s.releaseResource(),
                this._memorySize < t)
                    return void (this._isOverflow = !1);
            }
        }
        ,
        u(0, t, "id", function() {
            return this._id;
        }),
        u(0, t, "name", function() {
            return this._name;
        }, function(t) {
            !t && "" === t || this._name === t || (this._name = t,
            s._isResourceManagersSorted = !1);
        }),
        u(0, t, "memorySize", function() {
            return this._memorySize;
        }),
        u(1, s, "systemResourceManager", function() {
            return s._systemResourceManager;
        }),
        s.__init__ = function() {
            s.currentResourceManager = s.systemResourceManager;
        }
        ,
        s.getLoadedResourceManagerByIndex = function(t) {
            return s._resourceManagers[t];
        }
        ,
        s.getLoadedResourceManagersCount = function() {
            return s._resourceManagers.length;
        }
        ,
        s.recreateContentManagers = function(t) {
            void 0 === t && (t = !1);
            for (var e = s.currentResourceManager, i = 0; i < s._resourceManagers.length; i++) {
                s.currentResourceManager = s._resourceManagers[i];
                for (var n = 0; n < s.currentResourceManager._resources.length; n++)
                    s.currentResourceManager._resources[n].releaseResource(t),
                    s.currentResourceManager._resources[n].activeResource(t);
            }
            s.currentResourceManager = e;
        }
        ,
        s.releaseContentManagers = function(t) {
            void 0 === t && (t = !1);
            for (var e = s.currentResourceManager, i = 0; i < s._resourceManagers.length; i++) {
                s.currentResourceManager = s._resourceManagers[i];
                for (var n = 0; n < s.currentResourceManager._resources.length; n++) {
                    var a = s.currentResourceManager._resources[n];
                    !a.released && a.releaseResource(t);
                }
            }
            s.currentResourceManager = e;
        }
        ,
        s._uniqueIDCounter = 0,
        s._isResourceManagersSorted = !1,
        s._resourceManagers = [],
        h(s, ["_systemResourceManager", function() {
            return this._systemResourceManager = new s("System Resource Manager");
        }
        , "currentResourceManager", function() {
            return this.currentResourceManager = s._systemResourceManager;
        }
        ]),
        s;
    }()
      , G = (function() {
        function t() {}
        f(t, "laya.system.System"),
        t.changeDefinition = function(t, e) {
            w[t] = e;
            var i = t + "=classObj";
            w._runScript(i);
        }
        ,
        t.__init__ = function() {
            R.isConchApp && (conch.disableConchResManager(),
            conch.disableConchAutoRestoreLostedDevice());
        }
        ;
    }(),
    function() {
        function i() {}
        return f(i, "laya.utils.Browser"),
        u(1, i, "pixelRatio", function() {
            return i.__init__(),
            -1 < i.userAgent.indexOf("Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)") ? 2 : P.getPixelRatio();
        }),
        u(1, i, "height", function() {
            return i.__init__(),
            (w.stage && w.stage.canvasRotation ? i.clientWidth : i.clientHeight) * i.pixelRatio;
        }),
        u(1, i, "clientWidth", function() {
            return i.__init__(),
            i.window.innerWidth || i.document.body.clientWidth;
        }),
        u(1, i, "window", function() {
            return i.__init__(),
            i._window;
        }),
        u(1, i, "clientHeight", function() {
            return i.__init__(),
            i.window.innerHeight || i.document.body.clientHeight || i.document.documentElement.clientHeight;
        }),
        u(1, i, "width", function() {
            return i.__init__(),
            (w.stage && w.stage.canvasRotation ? i.clientHeight : i.clientWidth) * i.pixelRatio;
        }),
        u(1, i, "container", function() {
            return i.__init__(),
            i._container || ((i._container = i.createElement("div")).id = "layaContainer",
            i.document.body.appendChild(i._container)),
            i._container;
        }, function(t) {
            i._container = t;
        }),
        u(1, i, "document", function() {
            return i.__init__(),
            i._document;
        }),
        i.__init__ = function() {
            if (!i._window) {
                i._window = P.getWindow(),
                i._document = i.window.document,
                i._window.addEventListener("message", function(t) {
                    laya.utils.Browser._onMessage(t);
                }, !1),
                i.document.__createElement = i.document.createElement,
                r.requestAnimationFrame = r.requestAnimationFrame || r.webkitRequestAnimationFrame || r.mozRequestAnimationFrame || r.oRequestAnimationFrame || r.msRequestAnimationFrame || function(t) {
                    return r.setTimeout(t, 1e3 / 60);
                }
                ;
                var t = r.document.body.style;
                t["-webkit-user-select"] = "none",
                t["-webkit-tap-highlight-color"] = "rgba(200,200,200,0)",
                i.userAgent = i.window.navigator.userAgent,
                i.onIOS = !!(i.u = i.userAgent).match(/\(i[^;]+;(U;)? CPU.+Mac OS X/),
                i.onMobile = -1 < i.u.indexOf("Mobile"),
                i.onIPhone = -1 < i.u.indexOf("iPhone"),
                i.onMac = -1 < i.u.indexOf("Mac OS X"),
                i.onIPad = -1 < i.u.indexOf("iPad"),
                i.onAndroid = -1 < i.u.indexOf("Android") || -1 < i.u.indexOf("Adr"),
                i.onWP = -1 < i.u.indexOf("Windows Phone"),
                i.onQQBrowser = -1 < i.u.indexOf("QQBrowser"),
                i.onMQQBrowser = -1 < i.u.indexOf("MQQBrowser") || -1 < i.u.indexOf("Mobile") && -1 < i.u.indexOf("QQ"),
                i.onIE = !!i.window.ActiveXObject || "ActiveXObject"in i.window,
                i.onWeiXin = -1 < i.u.indexOf("MicroMessenger"),
                i.onPC = !i.onMobile,
                i.onSafari = -1 < i.u.indexOf("Safari"),
                i.onFirefox = -1 < i.u.indexOf("Firefox"),
                i.onEdge = -1 < i.u.indexOf("Edge"),
                i.onMiniGame = -1 < i.u.indexOf("MiniGame"),
                i.onLimixiu = -1 < i.u.indexOf("limixiu"),
                i.httpProtocol = "http:" == i.window.location.protocol,
                i.onMiniGame && null == i.window.focus && console.error(""),
                i.webAudioEnabled = !!(i.window.AudioContext || i.window.webkitAudioContext || i.window.mozAudioContext),
                i.soundType = i.webAudioEnabled ? "WEBAUDIOSOUND" : "AUDIOSOUND",
                at = i.webAudioEnabled ? st : it,
                i.webAudioEnabled && st.initWebAudio(),
                it._initMusicAudio(),
                i.enableTouch = "ontouchstart"in r || r.DocumentTouch && e instanceof DocumentTouch,
                r.focus(),
                E._soundClass = at,
                E._musicClass = it,
                R._mainCanvas = R._mainCanvas || vt.create("2D"),
                i.canvas || (i.canvas = vt.create("2D"),
                i.context = i.canvas.getContext("2d"));
            }
        }
        ,
        i._onMessage = function(t) {
            if (t.data && "size" == t.data.name) {
                if (i.window.innerWidth = t.data.width,
                i.window.innerHeight = t.data.height,
                i.window.__innerHeight = t.data.clientHeight,
                !i.document.createEvent)
                    return void console.warn("no document.createEvent");
                var e = i.document.createEvent("HTMLEvents");
                return e.initEvent("resize", !1, !1),
                void i.window.dispatchEvent(e);
            }
        }
        ,
        i.createElement = function(t) {
            return i.__init__(),
            i.document.__createElement(t);
        }
        ,
        i.getElementById = function(t) {
            return i.__init__(),
            i.document.getElementById(t);
        }
        ,
        i.removeElement = function(t) {
            t && t.parentNode && t.parentNode.removeChild(t);
        }
        ,
        i.now = function() {
            return P.now();
        }
        ,
        i._window = null,
        i._document = null,
        i._container = null,
        i.userAgent = null,
        i.u = null,
        i.onIOS = !1,
        i.onMac = !1,
        i.onMobile = !1,
        i.onIPhone = !1,
        i.onIPad = !1,
        i.onAndroid = !1,
        i.onWP = !1,
        i.onQQBrowser = !1,
        i.onMQQBrowser = !1,
        i.onSafari = !1,
        i.onFirefox = !1,
        i.onEdge = !1,
        i.onIE = !1,
        i.onWeiXin = !1,
        i.onMiniGame = !1,
        i.onLimixiu = !1,
        i.onPC = !1,
        i.httpProtocol = !1,
        i.webAudioEnabled = !1,
        i.soundType = null,
        i.enableTouch = !1,
        i.canvas = null,
        i.context = null,
        i.__init$ = function() {}
        ,
        i;
    }())
      , F = function() {
        function e(t) {
            this._xd_ = !0,
            this._allocated_ = 8,
            this._pos_ = 0,
            this._length = 0,
            t ? (this._u8d_ = new Uint8Array(t),
            this._d_ = new DataView(this._u8d_.buffer),
            this._length = this._d_.byteLength) : this.___resizeBuffer(this._allocated_);
        }
        f(e, "laya.utils.Byte");
        var t = e.prototype;
        return t.___resizeBuffer = function(e) {
            try {
                var t = new Uint8Array(e);
                null != this._u8d_ && (this._u8d_.length <= e ? t.set(this._u8d_) : t.set(this._u8d_.subarray(0, e))),
                this._u8d_ = t,
                this._d_ = new DataView(t.buffer);
            } catch (t) {
                throw "___resizeBuffer err:" + e;
            }
        }
        ,
        t.getString = function() {
            return this.rUTF(this.getUint16());
        }
        ,
        t.getFloat32Array = function(t, e) {
            var i = t + e;
            i = i > this._length ? this._length : i;
            var n = new Float32Array(this._d_.buffer.slice(t, i));
            return this._pos_ = i,
            n;
        }
        ,
        t.getUint8Array = function(t, e) {
            var i = t + e;
            i = i > this._length ? this._length : i;
            var n = new Uint8Array(this._d_.buffer.slice(t, i));
            return this._pos_ = i,
            n;
        }
        ,
        t.getInt16Array = function(t, e) {
            var i = t + e;
            i = i > this._length ? this._length : i;
            var n = new Int16Array(this._d_.buffer.slice(t, i));
            return this._pos_ = i,
            n;
        }
        ,
        t.getFloat32 = function() {
            if (this._pos_ + 4 > this._length)
                throw "getFloat32 error - Out of bounds";
            var t = this._d_.getFloat32(this._pos_, this._xd_);
            return this._pos_ += 4,
            t;
        }
        ,
        t.getFloat64 = function() {
            if (this._pos_ + 8 > this._length)
                throw "getFloat64 error - Out of bounds";
            var t = this._d_.getFloat64(this._pos_, this._xd_);
            return this._pos_ += 8,
            t;
        }
        ,
        t.writeFloat32 = function(t) {
            this.ensureWrite(this._pos_ + 4),
            this._d_.setFloat32(this._pos_, t, this._xd_),
            this._pos_ += 4;
        }
        ,
        t.writeFloat64 = function(t) {
            this.ensureWrite(this._pos_ + 8),
            this._d_.setFloat64(this._pos_, t, this._xd_),
            this._pos_ += 8;
        }
        ,
        t.getInt32 = function() {
            if (this._pos_ + 4 > this._length)
                throw "getInt32 error - Out of bounds";
            var t = this._d_.getInt32(this._pos_, this._xd_);
            return this._pos_ += 4,
            t;
        }
        ,
        t.getUint32 = function() {
            if (this._pos_ + 4 > this._length)
                throw "getUint32 error - Out of bounds";
            var t = this._d_.getUint32(this._pos_, this._xd_);
            return this._pos_ += 4,
            t;
        }
        ,
        t.writeInt32 = function(t) {
            this.ensureWrite(this._pos_ + 4),
            this._d_.setInt32(this._pos_, t, this._xd_),
            this._pos_ += 4;
        }
        ,
        t.writeUint32 = function(t) {
            this.ensureWrite(this._pos_ + 4),
            this._d_.setUint32(this._pos_, t, this._xd_),
            this._pos_ += 4;
        }
        ,
        t.getInt16 = function() {
            if (this._pos_ + 2 > this._length)
                throw "getInt16 error - Out of bounds";
            var t = this._d_.getInt16(this._pos_, this._xd_);
            return this._pos_ += 2,
            t;
        }
        ,
        t.getUint16 = function() {
            if (this._pos_ + 2 > this._length)
                throw "getUint16 error - Out of bounds";
            var t = this._d_.getUint16(this._pos_, this._xd_);
            return this._pos_ += 2,
            t;
        }
        ,
        t.writeUint16 = function(t) {
            this.ensureWrite(this._pos_ + 2),
            this._d_.setUint16(this._pos_, t, this._xd_),
            this._pos_ += 2;
        }
        ,
        t.writeInt16 = function(t) {
            this.ensureWrite(this._pos_ + 2),
            this._d_.setInt16(this._pos_, t, this._xd_),
            this._pos_ += 2;
        }
        ,
        t.getUint8 = function() {
            if (this._pos_ + 1 > this._length)
                throw "getUint8 error - Out of bounds";
            return this._d_.getUint8(this._pos_++);
        }
        ,
        t.writeUint8 = function(t) {
            this.ensureWrite(this._pos_ + 1),
            this._d_.setUint8(this._pos_, t),
            this._pos_++;
        }
        ,
        t._getUInt8 = function(t) {
            return this._d_.getUint8(t);
        }
        ,
        t._getUint16 = function(t) {
            return this._d_.getUint16(t, this._xd_);
        }
        ,
        t._getMatrix = function() {
            return new A(this.getFloat32(),this.getFloat32(),this.getFloat32(),this.getFloat32(),this.getFloat32(),this.getFloat32());
        }
        ,
        t.rUTF = function(t) {
            for (var e = "", i = this._pos_ + t, n = 0, a = String.fromCharCode, s = this._u8d_; this._pos_ < i; )
                (n = s[this._pos_++]) < 128 ? 0 != n && (e += a(n)) : e += a(n < 224 ? (63 & n) << 6 | 127 & s[this._pos_++] : n < 240 ? (31 & n) << 12 | (127 & s[this._pos_++]) << 6 | 127 & s[this._pos_++] : (15 & n) << 18 | (127 & s[this._pos_++]) << 12 | s[this._pos_++] << 6 & 127 | 127 & s[this._pos_++]),
                0;
            return e;
        }
        ,
        t.getCustomString = function(t) {
            for (var e = "", i = 0, n = 0, a = String.fromCharCode, s = this._u8d_; 0 < t; )
                if ((n = s[this._pos_]) < 128)
                    e += a(n),
                    this._pos_++,
                    t--;
                else
                    for (i = n - 128,
                    this._pos_++,
                    t -= i; 0 < i; )
                        n = s[this._pos_++],
                        e += a(s[this._pos_++] << 8 | n),
                        i--;
            return e;
        }
        ,
        t.clear = function() {
            this._pos_ = 0,
            this.length = 0;
        }
        ,
        t.__getBuffer = function() {
            return this._d_.buffer;
        }
        ,
        t.writeUTFBytes = function(t) {
            for (var e = 0, i = (t += "").length; e < i; e++) {
                var n = t.charCodeAt(e);
                n <= 127 ? this.writeByte(n) : n <= 2047 ? (this.ensureWrite(this._pos_ + 2),
                this._u8d_.set([192 | n >> 6, 128 | 63 & n], this._pos_),
                this._pos_ += 2) : n <= 65535 ? (this.ensureWrite(this._pos_ + 3),
                this._u8d_.set([224 | n >> 12, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_),
                this._pos_ += 3) : (this.ensureWrite(this._pos_ + 4),
                this._u8d_.set([240 | n >> 18, 128 | n >> 12 & 63, 128 | n >> 6 & 63, 128 | 63 & n], this._pos_),
                this._pos_ += 4);
            }
        }
        ,
        t.writeUTFString = function(t) {
            var e = this.pos;
            this.writeUint16(1),
            this.writeUTFBytes(t);
            var i = this.pos - e - 2;
            if (65536 <= i)
                throw "writeUTFString byte len more than 65536";
            this._d_.setUint16(e, i, this._xd_);
        }
        ,
        t.readUTFString = function() {
            return this.readUTFBytes(this.getUint16());
        }
        ,
        t.getUTFString = function() {
            return this.readUTFString();
        }
        ,
        t.readUTFBytes = function(t) {
            if (void 0 === t && (t = -1),
            0 == t)
                return "";
            var e = this.bytesAvailable;
            if (e < t)
                throw "readUTFBytes error - Out of bounds";
            return t = 0 < t ? t : e,
            this.rUTF(t);
        }
        ,
        t.getUTFBytes = function(t) {
            return void 0 === t && (t = -1),
            this.readUTFBytes(t);
        }
        ,
        t.writeByte = function(t) {
            this.ensureWrite(this._pos_ + 1),
            this._d_.setInt8(this._pos_, t),
            this._pos_ += 1;
        }
        ,
        t.readByte = function() {
            if (this._pos_ + 1 > this._length)
                throw "readByte error - Out of bounds";
            return this._d_.getInt8(this._pos_++);
        }
        ,
        t.getByte = function() {
            return this.readByte();
        }
        ,
        t.ensureWrite = function(t) {
            this._length < t && (this._length = t),
            this._allocated_ < t && (this.length = t);
        }
        ,
        t.writeArrayBuffer = function(t, e, i) {
            if (void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            e < 0 || i < 0)
                throw "writeArrayBuffer error - Out of bounds";
            0 == i && (i = t.byteLength - e),
            this.ensureWrite(this._pos_ + i);
            var n = new Uint8Array(t);
            this._u8d_.set(n.subarray(e, e + i), this._pos_),
            this._pos_ += i;
        }
        ,
        t.readArrayBuffer = function(t) {
            var e;
            return e = this._u8d_.buffer.slice(this._pos_, this._pos_ + t),
            this._pos_ = this._pos_ + t,
            e;
        }
        ,
        u(0, t, "buffer", function() {
            var t = this._d_.buffer;
            return t.byteLength == this.length ? t : t.slice(0, this.length);
        }),
        u(0, t, "endian", function() {
            return this._xd_ ? "littleEndian" : "bigEndian";
        }, function(t) {
            this._xd_ = "littleEndian" == t;
        }),
        u(0, t, "length", function() {
            return this._length;
        }, function(t) {
            this._allocated_ < t ? this.___resizeBuffer(this._allocated_ = Math.floor(Math.max(t, 2 * this._allocated_))) : this._allocated_ > t && this.___resizeBuffer(this._allocated_ = t),
            this._length = t;
        }),
        u(0, t, "pos", function() {
            return this._pos_;
        }, function(t) {
            this._pos_ = t;
        }),
        u(0, t, "bytesAvailable", function() {
            return this._length - this._pos_;
        }),
        e.getSystemEndian = function() {
            if (!e._sysEndian) {
                var t = new ArrayBuffer(2);
                new DataView(t).setInt16(0, 256, !0),
                e._sysEndian = 256 === new Int16Array(t)[0] ? "littleEndian" : "bigEndian";
            }
            return e._sysEndian;
        }
        ,
        e.BIG_ENDIAN = "bigEndian",
        e.LITTLE_ENDIAN = "littleEndian",
        e._sysEndian = null,
        e;
    }()
      , U = function() {
        function a() {}
        return f(a, "laya.utils.CacheManager"),
        a.regCacheByFunction = function(t, e) {
            var i;
            a.unRegCacheByFunction(t, e),
            i = {
                tryDispose: t,
                getCacheList: e
            },
            a._cacheList.push(i);
        }
        ,
        a.unRegCacheByFunction = function(t, e) {
            var i, n = 0;
            for (i = a._cacheList.length,
            n = 0; n < i; n++)
                if (a._cacheList[n].tryDispose == t && a._cacheList[n].getCacheList == e)
                    return void a._cacheList.splice(n, 1);
        }
        ,
        a.forceDispose = function() {
            var t = 0
              , e = a._cacheList.length;
            for (t = 0; t < e; t++)
                a._cacheList[t].tryDispose(!0);
        }
        ,
        a.beginCheck = function(t) {
            void 0 === t && (t = 15e3),
            w.timer.loop(t, null, a._checkLoop);
        }
        ,
        a.stopCheck = function() {
            w.timer.clear(null, a._checkLoop);
        }
        ,
        a._checkLoop = function() {
            var t = a._cacheList;
            if (!(t.length < 1)) {
                var e, i = G.now(), n = 0;
                for (e = n = t.length; 0 < n && (t[a._index = ++a._index % e].tryDispose(!1),
                !(G.now() - i > a.loopTimeLimit)); )
                    n--;
            }
        }
        ,
        a.loopTimeLimit = 2,
        a._cacheList = [],
        a._index = 0,
        a;
    }()
      , H = function() {
        function _() {}
        return f(_, "laya.utils.ClassUtils"),
        _.regClass = function(t, e) {
            _._classMap[t] = e;
        }
        ,
        _.getRegClass = function(t) {
            return _._classMap[t];
        }
        ,
        _.getInstance = function(t) {
            var e = _.getClass(t);
            return e ? new e() : (console.warn("[error] Undefined class:", t),
            null);
        }
        ,
        _.createByJson = function(t, e, i, n, a) {
            "string" == typeof t && (t = JSON.parse(t));
            var s = t.props;
            if (!e && !(e = a ? a.runWith(t) : _.getInstance(s.runtime || t.type)))
                return null;
            var r = t.child;
            if (r)
                for (var o = 0, h = r.length; o < h; o++) {
                    var l = r[o];
                    if ("render" !== l.props.name && "render" !== l.props.renderType || !e._$set_itemRender)
                        if ("Graphic" == l.type)
                            _.addGraphicsToSprite(l, e);
                        else if (_.isDrawType(l.type))
                            _.addGraphicToSprite(l, e, !0);
                        else {
                            var u = _.createByJson(l, null, i, n, a);
                            "Script" == l.type ? u.hasOwnProperty("owner") ? u.owner = e : u.hasOwnProperty("target") && (u.target = e) : "mask" == l.props.renderType ? e.mask = u : e.addChild(u);
                        }
                    else
                        e.itemRender = l;
                }
            if (s)
                for (var c in s) {
                    var d = s[c];
                    "var" === c && i ? i[d] = e : d instanceof Array && "function" == typeof e[c] ? e[c].apply(e, d) : e[c] = d;
                }
            return n && t.customProps && n.runWith([e, t]),
            e.created && e.created(),
            e;
        }
        ,
        _.addGraphicsToSprite = function(t, e) {
            var i;
            if ((i = t.child) && !(i.length < 1)) {
                var n;
                n = _._getGraphicsFromSprite(t, e);
                var a = 0
                  , s = 0;
                t.props && (a = _._getObjVar(t.props, "x", 0),
                s = _._getObjVar(t.props, "y", 0)),
                0 != a && 0 != s && n.translate(a, s);
                var r, o = 0;
                for (r = i.length,
                o = 0; o < r; o++)
                    _._addGraphicToGraphics(i[o], n);
                0 != a && 0 != s && n.translate(-a, -s);
            }
        }
        ,
        _.addGraphicToSprite = function(t, e, i) {
            var n;
            void 0 === i && (i = !1),
            n = i ? _._getGraphicsFromSprite(t, e) : e.graphics,
            _._addGraphicToGraphics(t, n);
        }
        ,
        _._getGraphicsFromSprite = function(t, e) {
            var i, n;
            if (!t || !t.props)
                return e.graphics;
            switch (n = t.props.renderType) {
            case "hit":
            case "unHit":
                var a;
                e.hitArea || (e.hitArea = new W()),
                (a = e.hitArea)[n] || (a[n] = new d()),
                i = a[n];
            }
            return i || (i = e.graphics),
            i;
        }
        ,
        _._getTransformData = function(t) {
            var e;
            (t.hasOwnProperty("pivotX") || t.hasOwnProperty("pivotY")) && (e = e || new A()).translate(-_._getObjVar(t, "pivotX", 0), -_._getObjVar(t, "pivotY", 0));
            var i = _._getObjVar(t, "scaleX", 1)
              , n = _._getObjVar(t, "scaleY", 1)
              , a = _._getObjVar(t, "rotation", 0);
            _._getObjVar(t, "skewX", 0),
            _._getObjVar(t, "skewY", 0);
            return 1 == i && 1 == n && 0 == a || ((e = e || new A()).scale(i, n),
            e.rotate(.0174532922222222 * a)),
            e;
        }
        ,
        _._addGraphicToGraphics = function(t, e) {
            var i, n;
            if ((i = t.props) && (n = _.DrawTypeDic[t.type])) {
                var a, s;
                a = e;
                var r = _._getParams(i, n[1], n[2], n[3]);
                ((s = _._tM) || 1 != _._alpha) && (a.save(),
                s && a.transform(s),
                1 != _._alpha && a.alpha(_._alpha)),
                a[n[0]].apply(a, r),
                (s || 1 != _._alpha) && a.restore();
            }
        }
        ,
        _._adptLineData = function(t) {
            return t[2] = parseFloat(t[0]) + parseFloat(t[2]),
            t[3] = parseFloat(t[1]) + parseFloat(t[3]),
            t;
        }
        ,
        _._adptTextureData = function(t) {
            return t[0] = ot.getRes(t[0]),
            t;
        }
        ,
        _._adptLinesData = function(t) {
            return t[2] = _._getPointListByStr(t[2]),
            t;
        }
        ,
        _.isDrawType = function(t) {
            return "Image" != t && _.DrawTypeDic.hasOwnProperty(t);
        }
        ,
        _._getParams = function(t, e, i, n) {
            var a;
            void 0 === i && (i = 0),
            (a = _._temParam).length = e.length;
            var s, r, o = 0;
            for (s = e.length,
            o = 0; o < s; o++)
                a[o] = _._getObjVar(t, e[o][0], e[o][1]);
            return _._alpha = _._getObjVar(t, "alpha", 1),
            r = _._getTransformData(t),
            _._tM = r ? (i || (i = 0),
            r.translate(a[i], a[i + 1]),
            a[i] = a[i + 1] = 0,
            r) : null,
            n && _[n] && (a = _[n](a)),
            a;
        }
        ,
        _._getPointListByStr = function(t) {
            var e, i, n = 0;
            for (i = (e = t.split(",")).length,
            n = 0; n < i; n++)
                e[n] = parseFloat(e[n]);
            return e;
        }
        ,
        _._getObjVar = function(t, e, i) {
            return t.hasOwnProperty(e) ? t[e] : i;
        }
        ,
        _._temParam = [],
        _._classMap = {
            Sprite: "laya.display.Sprite",
            Text: "laya.display.Text",
            Animation: "laya.display.Animation",
            Skeleton: "laya.ani.bone.Skeleton",
            Particle2D: "laya.particle.Particle2D",
            div: "laya.html.dom.HTMLDivElement",
            p: "laya.html.dom.HTMLElement",
            img: "laya.html.dom.HTMLImageElement",
            span: "laya.html.dom.HTMLElement",
            br: "laya.html.dom.HTMLBrElement",
            style: "laya.html.dom.HTMLStyleElement",
            font: "laya.html.dom.HTMLElement",
            a: "laya.html.dom.HTMLElement",
            "#text": "laya.html.dom.HTMLElement"
        },
        _.getClass = function(t) {
            var e = _._classMap[t] || t;
            return "string" == typeof e ? w.__classmap[e] : e;
        }
        ,
        _._tM = null,
        _._alpha = NaN,
        h(_, ["DrawTypeDic", function() {
            return this.DrawTypeDic = {
                Rect: ["drawRect", [["x", 0], ["y", 0], ["width", 0], ["height", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]],
                Circle: ["drawCircle", [["x", 0], ["y", 0], ["radius", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]],
                Pie: ["drawPie", [["x", 0], ["y", 0], ["radius", 0], ["startAngle", 0], ["endAngle", 0], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]]],
                Image: ["drawTexture", [["x", 0], ["y", 0], ["width", 0], ["height", 0]]],
                Texture: ["drawTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0]], 1, "_adptTextureData"],
                FillTexture: ["fillTexture", [["skin", null], ["x", 0], ["y", 0], ["width", 0], ["height", 0], ["repeat", null]], 1, "_adptTextureData"],
                FillText: ["fillText", [["text", ""], ["x", 0], ["y", 0], ["font", null], ["color", null], ["textAlign", null]], 1],
                Line: ["drawLine", [["x", 0], ["y", 0], ["toX", 0], ["toY", 0], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLineData"],
                Lines: ["drawLines", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"],
                Curves: ["drawCurves", [["x", 0], ["y", 0], ["points", ""], ["lineColor", null], ["lineWidth", 0]], 0, "_adptLinesData"],
                Poly: ["drawPoly", [["x", 0], ["y", 0], ["points", ""], ["fillColor", null], ["lineColor", null], ["lineWidth", 1]], 0, "_adptLinesData"]
            };
        }
        ]),
        _;
    }()
      , V = function() {
        function s(t) {
            if (this._color = [],
            "string" == typeof t) {
                null === (this.strColor = t) && (t = "#000000"),
                "#" == t.charAt(0) && (t = t.substr(1));
                var e = t.length;
                if (3 == e || 4 == e) {
                    for (var i = "", n = 0; n < e; n++)
                        i += t[n] + t[n];
                    t = i;
                }
                var a = this.numColor = parseInt(t, 16);
                if (8 == t.length)
                    return void (this._color = [parseInt(t.substr(0, 2), 16) / 255, ((16711680 & a) >> 16) / 255, ((65280 & a) >> 8) / 255, (255 & a) / 255]);
            } else
                a = this.numColor = t,
                this.strColor = q.toHexColor(a);
            this._color = [((16711680 & a) >> 16) / 255, ((65280 & a) >> 8) / 255, (255 & a) / 255, 1],
            this._color.__id = ++s._COLODID;
        }
        return f(s, "laya.utils.Color"),
        s._initDefault = function() {
            for (var t in s._DEFAULT = {},
            s._COLOR_MAP)
                s._SAVE[t] = s._DEFAULT[t] = new s(s._COLOR_MAP[t]);
            return s._DEFAULT;
        }
        ,
        s._initSaveMap = function() {
            for (var t in s._SAVE_SIZE = 0,
            s._SAVE = {},
            s._DEFAULT)
                s._SAVE[t] = s._DEFAULT[t];
        }
        ,
        s.create = function(t) {
            var e = s._SAVE[t + ""];
            return null != e ? e : (s._SAVE_SIZE < 1e3 || s._initSaveMap(),
            s._SAVE[t + ""] = new s(t));
        }
        ,
        s._SAVE = {},
        s._SAVE_SIZE = 0,
        s._COLOR_MAP = {
            white: "#FFFFFF",
            red: "#FF0000",
            green: "#00FF00",
            blue: "#0000FF",
            black: "#000000",
            yellow: "#FFFF00",
            gray: "#AAAAAA"
        },
        s._DEFAULT = s._initDefault(),
        s._COLODID = 1,
        s;
    }()
      , Y = (function() {
        function t() {
            this._values = [],
            this._keys = [];
        }
        f(t, "laya.utils.Dictionary");
        var e = t.prototype;
        e.set = function(t, e) {
            var i = this.indexOf(t);
            0 <= i ? this._values[i] = e : (this._keys.push(t),
            this._values.push(e));
        }
        ,
        e.indexOf = function(t) {
            var e = this._keys.indexOf(t);
            return 0 <= e ? e : (t = "string" == typeof t ? Number(t) : "number" == typeof t ? t.toString() : t,
            this._keys.indexOf(t));
        }
        ,
        e.get = function(t) {
            var e = this.indexOf(t);
            return e < 0 ? null : this._values[e];
        }
        ,
        e.remove = function(t) {
            var e = this.indexOf(t);
            return 0 <= e && (this._keys.splice(e, 1),
            this._values.splice(e, 1),
            !0);
        }
        ,
        e.clear = function() {
            this._values.length = 0,
            this._keys.length = 0;
        }
        ,
        u(0, e, "values", function() {
            return this._values;
        }),
        u(0, e, "keys", function() {
            return this._keys;
        });
    }(),
    function() {
        function t() {
            this.ratio = .92,
            this.maxOffset = 60,
            this._dragging = !1,
            this._clickOnly = !0;
        }
        f(t, "laya.utils.Dragging");
        var e = t.prototype;
        return e.start = function(t, e, i, n, a, s, r, o) {
            void 0 === o && (o = .92),
            this.clearTimer(),
            this.target = t,
            this.area = e,
            this.hasInertia = i,
            this.elasticDistance = e ? n : 0,
            this.elasticBackTime = a,
            this.data = s,
            this._disableMouseEvent = r,
            this.ratio = o,
            this._parent = t.parent,
            this._clickOnly = !0,
            this._dragging = !0,
            this._elasticRateX = this._elasticRateY = 1,
            this._lastX = this._parent.mouseX,
            this._lastY = this._parent.mouseY,
            w.stage.on("mouseup", this, this.onStageMouseUp),
            w.stage.on("mouseout", this, this.onStageMouseUp),
            w.timer.frameLoop(1, this, this.loop);
        }
        ,
        e.clearTimer = function() {
            w.timer.clear(this, this.loop),
            w.timer.clear(this, this.tweenMove),
            this._tween && (this._tween.recover(),
            this._tween = null);
        }
        ,
        e.stop = function() {
            this._dragging && (p.instance.disableMouseEvent = !1,
            w.stage.off("mouseup", this, this.onStageMouseUp),
            w.stage.off("mouseout", this, this.onStageMouseUp),
            this._dragging = !1,
            this.target && this.area && this.backToArea(),
            this.clear());
        }
        ,
        e.loop = function() {
            var t = this._parent.getMousePoint()
              , e = t.x
              , i = t.y
              , n = e - this._lastX
              , a = i - this._lastY;
            if (this._clickOnly) {
                if (!(1 < Math.abs(n * w.stage._canvasTransform.getScaleX()) || 1 < Math.abs(a * w.stage._canvasTransform.getScaleY())))
                    return;
                this._clickOnly = !1,
                this._offsets || (this._offsets = []),
                this._offsets.length = 0,
                this.target.event("dragstart", this.data),
                p.instance.disableMouseEvent = this._disableMouseEvent,
                this.target._set$P("$_MOUSEDOWN", !1);
            } else
                this._offsets.push(n, a);
            0 === n && 0 === a || (this._lastX = e,
            this._lastY = i,
            this.target.x += n * this._elasticRateX,
            this.target.y += a * this._elasticRateY,
            this.area && this.checkArea(),
            this.target.event("dragmove", this.data));
        }
        ,
        e.checkArea = function() {
            if (this.elasticDistance <= 0)
                this.backToArea();
            else {
                if (this.target.x < this.area.x)
                    var t = this.area.x - this.target.x;
                else
                    t = this.target.x > this.area.x + this.area.width ? this.target.x - this.area.x - this.area.width : 0;
                if (this._elasticRateX = Math.max(0, 1 - t / this.elasticDistance),
                this.target.y < this.area.y)
                    var e = this.area.y - this.target.y;
                else
                    e = this.target.y > this.area.y + this.area.height ? this.target.y - this.area.y - this.area.height : 0;
                this._elasticRateY = Math.max(0, 1 - e / this.elasticDistance);
            }
        }
        ,
        e.backToArea = function() {
            this.target.x = Math.min(Math.max(this.target.x, this.area.x), this.area.x + this.area.width),
            this.target.y = Math.min(Math.max(this.target.y, this.area.y), this.area.y + this.area.height);
        }
        ,
        e.onStageMouseUp = function(t) {
            if (p.instance.disableMouseEvent = !1,
            w.stage.off("mouseup", this, this.onStageMouseUp),
            w.stage.off("mouseout", this, this.onStageMouseUp),
            w.timer.clear(this, this.loop),
            !this._clickOnly && this.target)
                if (this.hasInertia) {
                    this._offsets.length < 1 && this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY),
                    this._offsetX = this._offsetY = 0;
                    for (var e = this._offsets.length, i = Math.min(e, 6), n = this._offsets.length - i, a = e - 1; n < a; a--)
                        this._offsetY += this._offsets[a--],
                        this._offsetX += this._offsets[a];
                    this._offsetX = this._offsetX / i * 2,
                    this._offsetY = this._offsetY / i * 2,
                    Math.abs(this._offsetX) > this.maxOffset && (this._offsetX = 0 < this._offsetX ? this.maxOffset : -this.maxOffset),
                    Math.abs(this._offsetY) > this.maxOffset && (this._offsetY = 0 < this._offsetY ? this.maxOffset : -this.maxOffset),
                    w.timer.frameLoop(1, this, this.tweenMove);
                } else
                    0 < this.elasticDistance ? this.checkElastic() : this.clear();
        }
        ,
        e.checkElastic = function() {
            var t = NaN
              , e = NaN;
            if (this.target.x < this.area.x ? t = this.area.x : this.target.x > this.area.x + this.area.width && (t = this.area.x + this.area.width),
            this.target.y < this.area.y ? e = this.area.y : this.target.y > this.area.y + this.area.height && (e = this.area.y + this.area.height),
            isNaN(t) && isNaN(e))
                this.clear();
            else {
                var i = {};
                isNaN(t) || (i.x = t),
                isNaN(e) || (i.y = e),
                this._tween = $.to(this.target, i, this.elasticBackTime, X.sineOut, y.create(this, this.clear), 0, !1, !1);
            }
        }
        ,
        e.tweenMove = function() {
            this._offsetX *= this.ratio * this._elasticRateX,
            this._offsetY *= this.ratio * this._elasticRateY,
            this.target.x += this._offsetX,
            this.target.y += this._offsetY,
            this.area && this.checkArea(),
            this.target.event("dragmove", this.data),
            (Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1 || this._elasticRateX < .5 || this._elasticRateY < .5) && (w.timer.clear(this, this.tweenMove),
            0 < this.elasticDistance ? this.checkElastic() : this.clear());
        }
        ,
        e.clear = function() {
            if (this.target) {
                this.clearTimer();
                var t = this.target;
                this.target = null,
                this._parent = null,
                t.event("dragend", this.data);
            }
        }
        ,
        t;
    }())
      , X = function() {
        function o() {}
        return f(o, "laya.utils.Ease"),
        o.linearNone = function(t, e, i, n) {
            return i * t / n + e;
        }
        ,
        o.linearIn = function(t, e, i, n) {
            return i * t / n + e;
        }
        ,
        o.linearInOut = function(t, e, i, n) {
            return i * t / n + e;
        }
        ,
        o.linearOut = function(t, e, i, n) {
            return i * t / n + e;
        }
        ,
        o.bounceIn = function(t, e, i, n) {
            return i - o.bounceOut(n - t, 0, i, n) + e;
        }
        ,
        o.bounceInOut = function(t, e, i, n) {
            return t < .5 * n ? .5 * o.bounceIn(2 * t, 0, i, n) + e : .5 * o.bounceOut(2 * t - n, 0, i, n) + .5 * i + e;
        }
        ,
        o.bounceOut = function(t, e, i, n) {
            return (t /= n) < 1 / 2.75 ? i * (7.5625 * t * t) + e : t < 2 / 2.75 ? i * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + e : t < 2.5 / 2.75 ? i * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + e : i * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + e;
        }
        ,
        o.backIn = function(t, e, i, n, a) {
            return void 0 === a && (a = 1.70158),
            i * (t /= n) * t * ((a + 1) * t - a) + e;
        }
        ,
        o.backInOut = function(t, e, i, n, a) {
            return void 0 === a && (a = 1.70158),
            (t /= .5 * n) < 1 ? .5 * i * (t * t * ((1 + (a *= 1.525)) * t - a)) + e : i / 2 * ((t -= 2) * t * ((1 + (a *= 1.525)) * t + a) + 2) + e;
        }
        ,
        o.backOut = function(t, e, i, n, a) {
            return void 0 === a && (a = 1.70158),
            i * ((t = t / n - 1) * t * ((a + 1) * t + a) + 1) + e;
        }
        ,
        o.elasticIn = function(t, e, i, n, a, s) {
            var r;
            return void 0 === a && (a = 0),
            void 0 === s && (s = 0),
            0 == t ? e : 1 == (t /= n) ? e + i : (s || (s = .3 * n),
            r = !a || 0 < i && a < i || i < 0 && a < -i ? (a = i,
            s / 4) : s / o.PI2 * Math.asin(i / a),
            -a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * n - r) * o.PI2 / s) + e);
        }
        ,
        o.elasticInOut = function(t, e, i, n, a, s) {
            var r;
            return void 0 === a && (a = 0),
            void 0 === s && (s = 0),
            0 == t ? e : 2 == (t /= .5 * n) ? e + i : (s || (s = n * (.3 * 1.5)),
            r = !a || 0 < i && a < i || i < 0 && a < -i ? (a = i,
            s / 4) : s / o.PI2 * Math.asin(i / a),
            t < 1 ? a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * n - r) * o.PI2 / s) * -.5 + e : a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * n - r) * o.PI2 / s) * .5 + i + e);
        }
        ,
        o.elasticOut = function(t, e, i, n, a, s) {
            var r;
            return void 0 === a && (a = 0),
            void 0 === s && (s = 0),
            0 == t ? e : 1 == (t /= n) ? e + i : (s || (s = .3 * n),
            r = !a || 0 < i && a < i || i < 0 && a < -i ? (a = i,
            s / 4) : s / o.PI2 * Math.asin(i / a),
            a * Math.pow(2, -10 * t) * Math.sin((t * n - r) * o.PI2 / s) + i + e);
        }
        ,
        o.strongIn = function(t, e, i, n) {
            return i * (t /= n) * t * t * t * t + e;
        }
        ,
        o.strongInOut = function(t, e, i, n) {
            return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
        }
        ,
        o.strongOut = function(t, e, i, n) {
            return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
        }
        ,
        o.sineInOut = function(t, e, i, n) {
            return .5 * -i * (Math.cos(Math.PI * t / n) - 1) + e;
        }
        ,
        o.sineIn = function(t, e, i, n) {
            return -i * Math.cos(t / n * o.HALF_PI) + i + e;
        }
        ,
        o.sineOut = function(t, e, i, n) {
            return i * Math.sin(t / n * o.HALF_PI) + e;
        }
        ,
        o.quintIn = function(t, e, i, n) {
            return i * (t /= n) * t * t * t * t + e;
        }
        ,
        o.quintInOut = function(t, e, i, n) {
            return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t * t + e : .5 * i * ((t -= 2) * t * t * t * t + 2) + e;
        }
        ,
        o.quintOut = function(t, e, i, n) {
            return i * ((t = t / n - 1) * t * t * t * t + 1) + e;
        }
        ,
        o.quartIn = function(t, e, i, n) {
            return i * (t /= n) * t * t * t + e;
        }
        ,
        o.quartInOut = function(t, e, i, n) {
            return (t /= .5 * n) < 1 ? .5 * i * t * t * t * t + e : .5 * -i * ((t -= 2) * t * t * t - 2) + e;
        }
        ,
        o.quartOut = function(t, e, i, n) {
            return -i * ((t = t / n - 1) * t * t * t - 1) + e;
        }
        ,
        o.cubicIn = function(t, e, i, n) {
            return i * (t /= n) * t * t + e;
        }
        ,
        o.cubicInOut = function(t, e, i, n) {
            return (t /= .5 * n) < 1 ? .5 * i * t * t * t + e : .5 * i * ((t -= 2) * t * t + 2) + e;
        }
        ,
        o.cubicOut = function(t, e, i, n) {
            return i * ((t = t / n - 1) * t * t + 1) + e;
        }
        ,
        o.quadIn = function(t, e, i, n) {
            return i * (t /= n) * t + e;
        }
        ,
        o.quadInOut = function(t, e, i, n) {
            return (t /= .5 * n) < 1 ? .5 * i * t * t + e : .5 * -i * (--t * (t - 2) - 1) + e;
        }
        ,
        o.quadOut = function(t, e, i, n) {
            return -i * (t /= n) * (t - 2) + e;
        }
        ,
        o.expoIn = function(t, e, i, n) {
            return 0 == t ? e : i * Math.pow(2, 10 * (t / n - 1)) + e - .001 * i;
        }
        ,
        o.expoInOut = function(t, e, i, n) {
            return 0 == t ? e : t == n ? e + i : (t /= .5 * n) < 1 ? .5 * i * Math.pow(2, 10 * (t - 1)) + e : .5 * i * (2 - Math.pow(2, -10 * --t)) + e;
        }
        ,
        o.expoOut = function(t, e, i, n) {
            return t == n ? e + i : i * (1 - Math.pow(2, -10 * t / n)) + e;
        }
        ,
        o.circIn = function(t, e, i, n) {
            return -i * (Math.sqrt(1 - (t /= n) * t) - 1) + e;
        }
        ,
        o.circInOut = function(t, e, i, n) {
            return (t /= .5 * n) < 1 ? .5 * -i * (Math.sqrt(1 - t * t) - 1) + e : .5 * i * (Math.sqrt(1 - (t -= 2) * t) + 1) + e;
        }
        ,
        o.circOut = function(t, e, i, n) {
            return i * Math.sqrt(1 - (t = t / n - 1) * t) + e;
        }
        ,
        o.HALF_PI = .5 * Math.PI,
        o.PI2 = 2 * Math.PI,
        o;
    }()
      , W = function() {
        function c() {
            this._hit = null,
            this._unHit = null;
        }
        f(c, "laya.utils.HitArea");
        var t = c.prototype;
        return t.isHit = function(t, e) {
            return !!c.isHitGraphic(t, e, this.hit) && !c.isHitGraphic(t, e, this.unHit);
        }
        ,
        t.contains = function(t, e) {
            return this.isHit(t, e);
        }
        ,
        u(0, t, "hit", function() {
            return this._hit || (this._hit = new d()),
            this._hit;
        }, function(t) {
            this._hit = t;
        }),
        u(0, t, "unHit", function() {
            return this._unHit || (this._unHit = new d()),
            this._unHit;
        }, function(t) {
            this._unHit = t;
        }),
        c.isHitGraphic = function(t, e, i) {
            if (!i)
                return !1;
            var n;
            if (!(n = i.cmds) && i._one && ((n = c._cmds).length = 1,
            n[0] = i._one),
            !n)
                return !1;
            var a, s, r = 0;
            for (a = n.length,
            r = 0; r < a; r++)
                if (s = n[r]) {
                    var o = R._context;
                    switch (s.callee) {
                    case o._translate:
                    case 6:
                        t -= s[0],
                        e -= s[1];
                    }
                    if (c.isHitCmd(t, e, s))
                        return !0;
                }
            return !1;
        }
        ,
        c.isHitCmd = function(t, e, i) {
            if (!i)
                return !1;
            var n = R._context
              , a = !1;
            switch (i.callee) {
            case n._drawRect:
            case 13:
                c._rec.setTo(i[0], i[1], i[2], i[3]),
                a = c._rec.contains(t, e);
                break;

            case n._drawCircle:
            case n._fillCircle:
            case 14:
                a = (t -= i[0]) * t + (e -= i[1]) * e < i[2] * i[2];
                break;

            case n._drawPoly:
            case 18:
                t -= i[0],
                e -= i[1],
                a = c.ptInPolygon(t, e, i[2]);
            }
            return a;
        }
        ,
        c.ptInPolygon = function(t, e, i) {
            var n;
            (n = c._ptPoint).setTo(t, e);
            var a, s = 0, r = NaN, o = NaN, h = NaN, l = NaN;
            a = i.length;
            for (var u = 0; u < a; u += 2) {
                if (r = i[u],
                o = i[u + 1],
                h = i[(u + 2) % a],
                o != (l = i[(u + 3) % a]))
                    if (!(n.y < Math.min(o, l)))
                        if (!(n.y >= Math.max(o, l)))
                            (n.y - o) * (h - r) / (l - o) + r > n.x && s++;
            }
            return s % 2 == 1;
        }
        ,
        c._cmds = [],
        h(c, ["_rec", function() {
            return this._rec = new I();
        }
        , "_ptPoint", function() {
            return this._ptPoint = new M();
        }
        ]),
        c;
    }()
      , z = (function() {
        function a(t, e, i, n) {
            this.char = t,
            this.charNum = t.charCodeAt(0),
            this._x = this._y = 0,
            this.width = e,
            this.height = i,
            this.style = n,
            this.isWord = !a._isWordRegExp.test(t);
        }
        f(a, "laya.utils.HTMLChar");
        var t = a.prototype;
        w.imps(t, {
            "laya.display.ILayout": !0
        }),
        t.setSprite = function(t) {
            this._sprite = t;
        }
        ,
        t.getSprite = function() {
            return this._sprite;
        }
        ,
        t._isChar = function() {
            return !0;
        }
        ,
        t._getCSSStyle = function() {
            return this.style;
        }
        ,
        u(0, t, "width", function() {
            return this._w;
        }, function(t) {
            this._w = t;
        }),
        u(0, t, "x", function() {
            return this._x;
        }, function(t) {
            this._sprite && (this._sprite.x = t),
            this._x = t;
        }),
        u(0, t, "y", function() {
            return this._y;
        }, function(t) {
            this._sprite && (this._sprite.y = t),
            this._y = t;
        }),
        u(0, t, "height", function() {
            return this._h;
        }, function(t) {
            this._h = t;
        }),
        a._isWordRegExp = new RegExp("[\\w.]","");
    }(),
    function() {
        function e() {}
        f(e, "laya.utils.Log"),
        e.enable = function() {
            e._logdiv || (e._logdiv = G.window.document.createElement("div"),
            G.window.document.body.appendChild(e._logdiv),
            e._logdiv.style.cssText = "pointer-events:none;border:white;overflow:hidden;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;");
        }
        ,
        e.toggle = function() {
            var t = e._logdiv.style;
            "1px" == t.width ? t.width = t.height = "50%" : t.width = t.height = "1px";
        }
        ,
        e.print = function(t) {
            e._logdiv && (e.maxCount <= e._count && e.clear(),
            e._count++,
            e._logdiv.innerText += t + "\n",
            e._logdiv.scrollTop = e._logdiv.scrollHeight);
        }
        ,
        e.clear = function() {
            e._logdiv.innerText = "",
            e._count = 0;
        }
        ,
        e._logdiv = null,
        e._count = 0,
        e.maxCount = 20;
    }(),
    function() {
        function e() {}
        f(e, "laya.utils.Mouse"),
        u(1, e, "cursor", function() {
            return e._style.cursor;
        }, function(t) {
            e._style.cursor = t;
        }),
        e.hide = function() {
            "none" != e.cursor && (e._preCursor = e.cursor,
            e.cursor = "none");
        }
        ,
        e.show = function() {
            "none" == e.cursor && (e.cursor = e._preCursor ? e._preCursor : "auto");
        }
        ,
        e._preCursor = null,
        h(e, ["_style", function() {
            return this._style = G.document.body.style;
        }
        ]);
    }(),
    function() {
        function s() {}
        return f(s, "laya.utils.Pool"),
        s.getPoolBySign = function(t) {
            return s._poolDic[t] || (s._poolDic[t] = []);
        }
        ,
        s.clearBySign = function(t) {
            s._poolDic[t] && (s._poolDic[t].length = 0);
        }
        ,
        s.recover = function(t, e) {
            e.__InPool || (e.__InPool = !0,
            s.getPoolBySign(t).push(e));
        }
        ,
        s.getItemByClass = function(t, e) {
            var i = s.getPoolBySign(t)
              , n = i.length ? i.pop() : new e();
            return n.__InPool = !1,
            n;
        }
        ,
        s.getItemByCreateFun = function(t, e, i) {
            var n = s.getPoolBySign(t)
              , a = n.length ? n.pop() : e.call(i);
            return a.__InPool = !1,
            a;
        }
        ,
        s.getItem = function(t) {
            var e = s.getPoolBySign(t)
              , i = e.length ? e.pop() : null;
            return i && (i.__InPool = !1),
            i;
        }
        ,
        s._poolDic = {},
        s.InPoolSign = "__InPool",
        s;
    }())
      , K = (function() {
        function n() {
            this.sign = null,
            this.maxCount = 1e3;
        }
        f(n, "laya.utils.PoolCache");
        var t = n.prototype;
        t.getCacheList = function() {
            return z.getPoolBySign(this.sign);
        }
        ,
        t.tryDispose = function(t) {
            var e;
            (e = z.getPoolBySign(this.sign)).length > this.maxCount && e.splice(this.maxCount, e.length - this.maxCount);
        }
        ,
        n.addPoolCacheManager = function(t, e) {
            var i;
            void 0 === e && (e = 100),
            (i = new n()).sign = t,
            i.maxCount = e,
            U.regCacheByFunction(q.bind(i.tryDispose, i), q.bind(i.getCacheList, i));
        }
        ;
    }(),
    function() {
        function h() {}
        return f(h, "laya.utils.Stat"),
        u(1, h, "onclick", null, function(t) {
            h._sp && h._sp.on("click", h._sp, t),
            h._canvas && (h._canvas.source.onclick = t,
            h._canvas.source.style.pointerEvents = "");
        }),
        h.show = function(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            !R.isConchApp || R.isConchWebGL ? (R.isConchWebGL || G.onMiniGame || G.onLimixiu || (h._useCanvas = !0),
            h._show = !0,
            h._fpsData.length = 60,
            h._view[0] = {
                title: "FPS(Canvas)",
                value: "_fpsStr",
                color: "yellow",
                units: "int"
            },
            h._view[1] = {
                title: "Sprite",
                value: "_spriteStr",
                color: "white",
                units: "int"
            },
            h._view[2] = {
                title: "DrawCall",
                value: "drawCall",
                color: "white",
                units: "int"
            },
            h._view[3] = {
                title: "CurMem",
                value: "currentMemorySize",
                color: "yellow",
                units: "M"
            },
            R.isWebGL ? (h._view[4] = {
                title: "Shader",
                value: "shaderCall",
                color: "white",
                units: "int"
            },
            R.is3DMode ? (h._view[0].title = "FPS(3D)",
            h._view[5] = {
                title: "TriFaces",
                value: "trianglesFaces",
                color: "white",
                units: "int"
            },
            h._view[6] = {
                title: "treeNodeColl",
                value: "treeNodeCollision",
                color: "white",
                units: "int"
            },
            h._view[7] = {
                title: "treeSpriteColl",
                value: "treeSpriteCollision",
                color: "white",
                units: "int"
            }) : (h._view[0].title = "FPS(WebGL)",
            h._view[5] = {
                title: "Canvas",
                value: "_canvasStr",
                color: "white",
                units: "int"
            })) : h._view[4] = {
                title: "Canvas",
                value: "_canvasStr",
                color: "white",
                units: "int"
            },
            h._useCanvas ? h.createUIPre(t, e) : h.createUI(t, e),
            h.enable()) : G.window.conch.showFPS && G.window.conch.showFPS(t, e);
        }
        ,
        h.createUIPre = function(t, e) {
            var i = G.pixelRatio;
            h._width = 130 * i,
            h._vx = 75 * i,
            h._height = i * (12 * h._view.length + 3 * i) + 4,
            h._fontSize = 12 * i;
            for (var n = 0; n < h._view.length; n++)
                h._view[n].x = 4,
                h._view[n].y = n * h._fontSize + 2 * i;
            h._canvas || ((h._canvas = new vt("2D")).size(h._width, h._height),
            (h._ctx = h._canvas.getContext("2d")).textBaseline = "top",
            h._ctx.font = h._fontSize + "px Sans-serif",
            h._canvas.source.style.cssText = "pointer-events:none;background:rgba(150,150,150,0.8);z-index:100000;position: absolute;direction:ltr;left:" + t + "px;top:" + e + "px;width:" + h._width / i + "px;height:" + h._height / i + "px;"),
            h._first = !0,
            h.loop(),
            h._first = !1,
            G.container.appendChild(h._canvas.source);
        }
        ,
        h.createUI = function(t, e) {
            var i = h._sp
              , n = G.pixelRatio;
            i || (i = new ct(),
            (h._leftText = new gt()).pos(5, 5),
            h._leftText.color = "#ffffff",
            i.addChild(h._leftText),
            (h._txt = new gt()).pos(80 * n, 5),
            h._txt.color = "#ffffff",
            i.addChild(h._txt),
            h._sp = i),
            i.pos(t, e);
            for (var a = "", s = 0; s < h._view.length; s++) {
                a += h._view[s].title + "\n";
            }
            h._leftText.text = a;
            var r = 138 * n
              , o = n * (12 * h._view.length + 3 * n) + 4;
            h._txt.fontSize = h._fontSize * n,
            h._leftText.fontSize = h._fontSize * n,
            i.size(r, o),
            i.graphics.clear(),
            i.graphics.setAlpha(.5),
            i.graphics.drawRect(0, 0, r, o, "#999999"),
            i.graphics.setAlpha(1),
            h.loop();
        }
        ,
        h.enable = function() {
            w.timer.frameLoop(1, h, h.loop);
        }
        ,
        h.hide = function() {
            h._show = !1,
            w.timer.clear(h, h.loop),
            h._canvas && G.removeElement(h._canvas.source);
        }
        ,
        h.clear = function() {
            h.trianglesFaces = h.drawCall = h.shaderCall = h.spriteCount = h.spriteRenderUseCacheCount = h.treeNodeCollision = h.treeSpriteCollision = h.canvasNormal = h.canvasBitmap = h.canvasReCache = 0;
        }
        ,
        h.loop = function() {
            h._count++;
            var t = G.now();
            if (!(t - h._timer < 1e3)) {
                var e = h._count;
                if (h.FPS = Math.round(1e3 * e / (t - h._timer)),
                h._show) {
                    h.trianglesFaces = Math.round(h.trianglesFaces / e),
                    h.spriteCount = h._useCanvas ? (h.drawCall = Math.round(h.drawCall / e) - 2,
                    h.shaderCall = Math.round(h.shaderCall / e),
                    Math.round(h.spriteCount / e) - 1) : (h.drawCall = Math.round(h.drawCall / e) - 2,
                    h.shaderCall = Math.round(h.shaderCall / e) - 4,
                    Math.round(h.spriteCount / e) - 4),
                    h.spriteRenderUseCacheCount = Math.round(h.spriteRenderUseCacheCount / e),
                    h.canvasNormal = Math.round(h.canvasNormal / e),
                    h.canvasBitmap = Math.round(h.canvasBitmap / e),
                    h.canvasReCache = Math.ceil(h.canvasReCache / e),
                    h.treeNodeCollision = Math.round(h.treeNodeCollision / e),
                    h.treeSpriteCollision = Math.round(h.treeSpriteCollision / e);
                    var i = 0 < h.FPS ? Math.floor(1e3 / h.FPS).toString() : " ";
                    h._fpsStr = h.FPS + (h.renderSlow ? " slow" : "") + " " + i,
                    h._spriteStr = h.spriteCount + (h.spriteRenderUseCacheCount ? "/" + h.spriteRenderUseCacheCount : ""),
                    h._canvasStr = h.canvasReCache + "/" + h.canvasNormal + "/" + h.canvasBitmap,
                    h.currentMemorySize = B.systemResourceManager.memorySize,
                    h._useCanvas ? h.renderInfoPre() : h.renderInfo(),
                    h.clear();
                }
                h._count = 0,
                h._timer = t;
            }
        }
        ,
        h.renderInfoPre = function() {
            if (h._canvas) {
                var t = h._ctx;
                t.clearRect(h._first ? 0 : h._vx, 0, h._width, h._height);
                for (var e = 0; e < h._view.length; e++) {
                    var i = h._view[e];
                    h._first && (t.fillStyle = "white",
                    t.fillText(i.title, i.x, i.y, null, null, null)),
                    t.fillStyle = i.color;
                    var n = h[i.value];
                    "M" == i.units && (n = Math.floor(n / 1048576 * 100) / 100 + " M"),
                    t.fillText(n + "", i.x + h._vx, i.y, null, null, null);
                }
            }
        }
        ,
        h.renderInfo = function() {
            for (var t = "", e = 0; e < h._view.length; e++) {
                var i = h._view[e]
                  , n = h[i.value];
                "M" == i.units && (n = Math.floor(n / 1048576 * 100) / 100 + " M"),
                "K" == i.units && (n = Math.floor(n / 1024 * 100) / 100 + " K"),
                t += n + "\n";
            }
            h._txt.text = t;
        }
        ,
        h.FPS = 0,
        h.loopCount = 0,
        h.shaderCall = 0,
        h.drawCall = 0,
        h.trianglesFaces = 0,
        h.spriteCount = 0,
        h.spriteRenderUseCacheCount = 0,
        h.treeNodeCollision = 0,
        h.treeSpriteCollision = 0,
        h.canvasNormal = 0,
        h.canvasBitmap = 0,
        h.canvasReCache = 0,
        h.renderSlow = !1,
        h.currentMemorySize = 0,
        h._fpsStr = null,
        h._canvasStr = null,
        h._spriteStr = null,
        h._fpsData = [],
        h._timer = 0,
        h._count = 0,
        h._view = [],
        h._fontSize = 12,
        h._txt = null,
        h._leftText = null,
        h._sp = null,
        h._show = !1,
        h._useCanvas = !1,
        h._canvas = null,
        h._ctx = null,
        h._first = !1,
        h._vx = NaN,
        h._width = 0,
        h._height = 100,
        h;
    }())
      , j = (function() {
        function t() {
            this._strsToID = {},
            this._idToStrs = [],
            this._length = 0;
        }
        f(t, "laya.utils.StringKey");
        var e = t.prototype;
        e.add = function(t) {
            var e = this._strsToID[t];
            return null != e ? e : (this._idToStrs[this._length] = t,
            this._strsToID[t] = this._length++);
        }
        ,
        e.getID = function(t) {
            var e = this._strsToID[t];
            return null == e ? -1 : e;
        }
        ,
        e.getName = function(t) {
            var e = this._idToStrs[t];
            return null == e ? void 0 : e;
        }
        ;
    }(),
    function() {
        var h;
        function l() {
            this._delta = 0,
            this.scale = 1,
            this.currFrame = 0,
            this._mid = 1,
            this._map = [],
            this._laters = [],
            this._handlers = [],
            this._temp = [],
            this._count = 0,
            this.currTimer = this._now(),
            this._lastTimer = this._now(),
            this._init();
        }
        f(l, "laya.utils.Timer");
        var t = l.prototype;
        return t._init = function() {
            w.timer && w.timer.frameLoop(1, this, this._update);
        }
        ,
        t._now = function() {
            return Date.now();
        }
        ,
        t._update = function() {
            if (this.scale <= 0)
                this._lastTimer = this._now();
            else {
                var t = this.currFrame = this.currFrame + this.scale
                  , e = this._now();
                this._delta = (e - this._lastTimer) * this.scale;
                var i = this.currTimer = this.currTimer + this._delta;
                this._lastTimer = e;
                var n = this._handlers;
                for (r = this._count = 0,
                o = n.length; r < o; r++)
                    if (null !== (h = n[r]).method) {
                        var a = h.userFrame ? t : i;
                        if (a >= h.exeTime)
                            if (h.repeat)
                                if (h.jumpFrame)
                                    for (; a >= h.exeTime; )
                                        h.exeTime += h.delay,
                                        h.run(!1);
                                else
                                    h.exeTime += h.delay,
                                    h.run(!1),
                                    a > h.exeTime && (h.exeTime += Math.ceil((a - h.exeTime) / h.delay) * h.delay);
                            else
                                h.run(!0);
                    } else
                        this._count++;
                (30 < this._count || t % 200 == 0) && this._clearHandlers();
                for (var s = this._laters, r = 0, o = s.length - 1; r <= o; r++) {
                    var h = s[r];
                    null !== h.method && (this._map[h.key] = null,
                    h.run(!1)),
                    this._recoverHandler(h),
                    r === o && (o = s.length - 1);
                }
                s.length = 0;
            }
        }
        ,
        t._clearHandlers = function() {
            for (var t = this._handlers, e = 0, i = t.length; e < i; e++) {
                var n = t[e];
                null !== n.method ? this._temp.push(n) : this._recoverHandler(n);
            }
            this._handlers = this._temp,
            this._temp = t,
            this._temp.length = 0;
        }
        ,
        t._recoverHandler = function(t) {
            this._map[t.key] == t && (this._map[t.key] = null),
            t.clear(),
            l._pool.push(t);
        }
        ,
        t._create = function(t, e, i, n, a, s, r) {
            if (!i)
                return a.apply(n, s),
                null;
            if (r) {
                var o = this._getHandler(n, a);
                if (o)
                    return o.repeat = e,
                    o.userFrame = t,
                    o.delay = i,
                    o.caller = n,
                    o.method = a,
                    o.args = s,
                    o.exeTime = i + (t ? this.currFrame : this.currTimer + this._now() - this._lastTimer),
                    o;
            }
            return (o = 0 < l._pool.length ? l._pool.pop() : new h()).repeat = e,
            o.userFrame = t,
            o.delay = i,
            o.caller = n,
            o.method = a,
            o.args = s,
            o.exeTime = i + (t ? this.currFrame : this.currTimer + this._now() - this._lastTimer) + 1,
            this._indexHandler(o),
            this._handlers.push(o),
            o;
        }
        ,
        t._indexHandler = function(t) {
            var e = t.caller
              , i = t.method
              , n = e ? e.$_GID || (e.$_GID = q.getGID()) : 0
              , a = i.$_TID || (i.$_TID = 1e5 * this._mid++);
            t.key = n + a,
            this._map[t.key] = t;
        }
        ,
        t.once = function(t, e, i, n, a) {
            void 0 === a && (a = !0),
            this._create(!1, !1, t, e, i, n, a);
        }
        ,
        t.loop = function(t, e, i, n, a, s) {
            void 0 === a && (a = !0),
            void 0 === s && (s = !1);
            var r = this._create(!1, !0, t, e, i, n, a);
            r && (r.jumpFrame = s);
        }
        ,
        t.frameOnce = function(t, e, i, n, a) {
            void 0 === a && (a = !0),
            this._create(!0, !1, t, e, i, n, a);
        }
        ,
        t.frameLoop = function(t, e, i, n, a) {
            void 0 === a && (a = !0),
            this._create(!0, !0, t, e, i, n, a);
        }
        ,
        t.toString = function() {
            return "callLater:" + this._laters.length + " handlers:" + this._handlers.length + " pool:" + l._pool.length;
        }
        ,
        t.clear = function(t, e) {
            var i = this._getHandler(t, e);
            i && (this._map[i.key] = null,
            i.key = 0,
            i.clear());
        }
        ,
        t.clearAll = function(t) {
            if (t)
                for (var e = 0, i = this._handlers.length; e < i; e++) {
                    var n = this._handlers[e];
                    n.caller === t && (this._map[n.key] = null,
                    n.key = 0,
                    n.clear());
                }
        }
        ,
        t._getHandler = function(t, e) {
            var i = t ? t.$_GID || (t.$_GID = q.getGID()) : 0
              , n = e.$_TID || (e.$_TID = 1e5 * this._mid++);
            return this._map[i + n];
        }
        ,
        t.callLater = function(t, e, i) {
            if (null == this._getHandler(t, e)) {
                if (l._pool.length)
                    var n = l._pool.pop();
                else
                    n = new h();
                n.caller = t,
                n.method = e,
                n.args = i,
                this._indexHandler(n),
                this._laters.push(n);
            }
        }
        ,
        t.runCallLater = function(t, e) {
            var i = this._getHandler(t, e);
            i && null != i.method && (this._map[i.key] = null,
            i.run(!0));
        }
        ,
        t.runTimer = function(t, e) {
            this.runCallLater(t, e);
        }
        ,
        u(0, t, "delta", function() {
            return this._delta;
        }),
        l._pool = [],
        l.__init$ = function() {
            h = function() {
                function t() {
                    this.key = 0,
                    this.repeat = !1,
                    this.delay = 0,
                    this.userFrame = !1,
                    this.exeTime = 0,
                    this.caller = null,
                    this.method = null,
                    this.args = null,
                    this.jumpFrame = !1;
                }
                f(t, "");
                var e = t.prototype;
                return e.clear = function() {
                    this.caller = null,
                    this.method = null,
                    this.args = null;
                }
                ,
                e.run = function(t) {
                    var e = this.caller;
                    if (e && e.destroyed)
                        return this.clear();
                    var i = this.method
                      , n = this.args;
                    t && this.clear(),
                    null != i && (n ? i.apply(e, n) : i.call(e));
                }
                ,
                t;
            }();
        }
        ,
        l;
    }())
      , $ = function() {
        function c() {
            this.gid = 0;
        }
        f(c, "laya.utils.Tween");
        var t = c.prototype;
        return t.to = function(t, e, i, n, a, s, r) {
            return void 0 === s && (s = 0),
            void 0 === r && (r = !1),
            this._create(t, e, i, n, a, s, r, !0, !1, !0);
        }
        ,
        t.from = function(t, e, i, n, a, s, r) {
            return void 0 === s && (s = 0),
            void 0 === r && (r = !1),
            this._create(t, e, i, n, a, s, r, !1, !1, !0);
        }
        ,
        t._create = function(t, e, i, n, a, s, r, o, h, l) {
            if (!t)
                throw new Error("Tween:target is null");
            this._target = t,
            this._duration = i,
            this._ease = n || e.ease || c.easeNone,
            this._complete = a || e.complete,
            this._delay = s,
            this._props = [],
            this._usedTimer = 0,
            this._startTimer = G.now(),
            this._usedPool = h,
            this._delayParam = null,
            this.update = e.update;
            var u = t.$_GID || (t.$_GID = q.getGID());
            return c.tweenMap[u] ? (r && c.clearTween(t),
            c.tweenMap[u].push(this)) : c.tweenMap[u] = [this],
            l ? s <= 0 ? this.firstStart(t, e, o) : (this._delayParam = [t, e, o],
            w.scaleTimer.once(s, this, this.firstStart, this._delayParam)) : this._initProps(t, e, o),
            this;
        }
        ,
        t.firstStart = function(t, e, i) {
            this._delayParam = null,
            t.destroyed ? this.clear() : (this._initProps(t, e, i),
            this._beginLoop());
        }
        ,
        t._initProps = function(t, e, i) {
            for (var n in e)
                if ("number" == typeof t[n]) {
                    var a = i ? t[n] : e[n]
                      , s = i ? e[n] : t[n];
                    this._props.push([n, a, s - a]),
                    i || (t[n] = a);
                }
        }
        ,
        t._beginLoop = function() {
            w.scaleTimer.frameLoop(1, this, this._doEase);
        }
        ,
        t._doEase = function() {
            this._updateEase(G.now());
        }
        ,
        t._updateEase = function(t) {
            var e = this._target;
            if (e) {
                if (e.destroyed)
                    return c.clearTween(e);
                var i = this._usedTimer = t - this._startTimer - this._delay;
                if (!(i < 0)) {
                    if (i >= this._duration)
                        return this.complete();
                    for (var n = 0 < i ? this._ease(i, 0, 1, this._duration) : 0, a = this._props, s = 0, r = a.length; s < r; s++) {
                        var o = a[s];
                        e[o[0]] = o[1] + n * o[2];
                    }
                    this.update && this.update.run();
                }
            }
        }
        ,
        t.complete = function() {
            if (this._target) {
                w.scaleTimer.runTimer(this, this.firstStart);
                for (var t = this._target, e = this._props, i = this._complete, n = 0, a = e.length; n < a; n++) {
                    var s = e[n];
                    t[s[0]] = s[1] + s[2];
                }
                this.update && this.update.run(),
                this.clear(),
                i && i.run();
            }
        }
        ,
        t.pause = function() {
            w.scaleTimer.clear(this, this._beginLoop),
            w.scaleTimer.clear(this, this._doEase),
            w.scaleTimer.clear(this, this.firstStart);
            var t;
            (t = G.now() - this._startTimer - this._delay) < 0 && (this._usedTimer = t);
        }
        ,
        t.setStartTime = function(t) {
            this._startTimer = t;
        }
        ,
        t.clear = function() {
            this._target && (this._remove(),
            this._clear());
        }
        ,
        t._clear = function() {
            this.pause(),
            w.scaleTimer.clear(this, this.firstStart),
            this._complete = null,
            this._target = null,
            this._ease = null,
            this._props = null,
            this._delayParam = null,
            this._usedPool && (this.update = null,
            z.recover("tween", this));
        }
        ,
        t.recover = function() {
            this._usedPool = !0,
            this._clear();
        }
        ,
        t._remove = function() {
            var t = c.tweenMap[this._target.$_GID];
            if (t)
                for (var e = 0, i = t.length; e < i; e++)
                    if (t[e] === this) {
                        t.splice(e, 1);
                        break;
                    }
        }
        ,
        t.restart = function() {
            if (this.pause(),
            this._usedTimer = 0,
            this._startTimer = G.now(),
            this._delayParam)
                w.scaleTimer.once(this._delay, this, this.firstStart, this._delayParam);
            else {
                for (var t = this._props, e = 0, i = t.length; e < i; e++) {
                    var n = t[e];
                    this._target[n[0]] = n[1];
                }
                w.scaleTimer.once(this._delay, this, this._beginLoop);
            }
        }
        ,
        t.resume = function() {
            this._usedTimer >= this._duration || (this._startTimer = G.now() - this._usedTimer - this._delay,
            this._delayParam ? this._usedTimer < 0 ? w.scaleTimer.once(-this._usedTimer, this, this.firstStart, this._delayParam) : this.firstStart.apply(this, this._delayParam) : this._beginLoop());
        }
        ,
        u(0, t, "progress", null, function(t) {
            var e = t * this._duration;
            this._startTimer = G.now() - this._delay - e;
        }),
        c.to = function(t, e, i, n, a, s, r, o) {
            return void 0 === s && (s = 0),
            void 0 === r && (r = !1),
            void 0 === o && (o = !0),
            z.getItemByClass("tween", c)._create(t, e, i, n, a, s, r, !0, o, !0);
        }
        ,
        c.from = function(t, e, i, n, a, s, r, o) {
            return void 0 === s && (s = 0),
            void 0 === r && (r = !1),
            void 0 === o && (o = !0),
            z.getItemByClass("tween", c)._create(t, e, i, n, a, s, r, !1, o, !0);
        }
        ,
        c.clearAll = function(t) {
            if (t && t.$_GID) {
                var e = c.tweenMap[t.$_GID];
                if (e) {
                    for (var i = 0, n = e.length; i < n; i++)
                        e[i]._clear();
                    e.length = 0;
                }
            }
        }
        ,
        c.clear = function(t) {
            t.clear();
        }
        ,
        c.clearTween = function(t) {
            c.clearAll(t);
        }
        ,
        c.easeNone = function(t, e, i, n) {
            return i * t / n + e;
        }
        ,
        c.tweenMap = {},
        c;
    }()
      , q = function() {
        function o() {}
        return f(o, "laya.utils.Utils"),
        o.toRadian = function(t) {
            return t * o._pi2;
        }
        ,
        o.toAngle = function(t) {
            return t * o._pi;
        }
        ,
        o.toHexColor = function(t) {
            if (t < 0 || isNaN(t))
                return null;
            for (var e = t.toString(16); e.length < 6; )
                e = "0" + e;
            return "#" + e;
        }
        ,
        o.getGID = function() {
            return o._gid++;
        }
        ,
        o.concatArray = function(t, e) {
            if (!e)
                return t;
            if (!t)
                return e;
            var i = 0
              , n = e.length;
            for (i = 0; i < n; i++)
                t.push(e[i]);
            return t;
        }
        ,
        o.clearArray = function(t) {
            return t && (t.length = 0),
            t;
        }
        ,
        o.copyArray = function(t, e) {
            if (t || (t = []),
            !e)
                return t;
            t.length = e.length;
            var i = 0
              , n = e.length;
            for (i = 0; i < n; i++)
                t[i] = e[i];
            return t;
        }
        ,
        o.getGlobalRecByPoints = function(t, e, i, n, a) {
            var s, r;
            return s = new M(e,i),
            s = t.localToGlobal(s),
            r = new M(n,a),
            r = t.localToGlobal(r),
            I._getWrapRec([s.x, s.y, r.x, r.y]);
        }
        ,
        o.getGlobalPosAndScale = function(t) {
            return o.getGlobalRecByPoints(t, 0, 0, 1, 1);
        }
        ,
        o.bind = function(t, e) {
            return t.bind(e);
        }
        ,
        o.measureText = function(t, e) {
            return P.measureText(t, e);
        }
        ,
        o.updateOrder = function(t) {
            if (!t || t.length < 2)
                return !1;
            for (var e, i = 1, n = 0, a = t.length, s = NaN; i < a; ) {
                for (e = t[n = i],
                s = t[n]._zOrder; -1 < --n && t[n]._zOrder > s; )
                    t[n + 1] = t[n];
                t[n + 1] = e,
                i++;
            }
            var r = e.parent.conchModel;
            if (r)
                if (null != r.updateZOrder)
                    r.updateZOrder();
                else {
                    for (i = 0; i < a; i++)
                        r.removeChild(t[i].conchModel);
                    for (i = 0; i < a; i++)
                        r.addChildAt(t[i].conchModel, i);
                }
            return !0;
        }
        ,
        o.transPointList = function(t, e, i) {
            var n = 0
              , a = t.length;
            for (n = 0; n < a; n += 2)
                t[n] += e,
                t[n + 1] += i;
        }
        ,
        o.parseInt = function(t, e) {
            void 0 === e && (e = 0);
            var i = G.window.parseInt(t, e);
            return isNaN(i) ? 0 : i;
        }
        ,
        o.getFileExtension = function(t) {
            o._extReg.lastIndex = t.lastIndexOf(".");
            var e = o._extReg.exec(t);
            return e && 1 < e.length ? e[1].toLowerCase() : null;
        }
        ,
        o.getTransformRelativeToWindow = function(t, e, i) {
            var n = w.stage
              , a = laya.utils.Utils.getGlobalPosAndScale(t)
              , s = n._canvasTransform.clone()
              , r = s.tx
              , o = s.ty;
            s.rotate(-Math.PI / 180 * w.stage.canvasDegree),
            s.scale(w.stage.clientScaleX, w.stage.clientScaleY);
            var h = w.stage.canvasDegree % 180 != 0
              , l = NaN
              , u = NaN;
            h ? (l = i + a.y,
            u = e + a.x,
            l *= s.d,
            u *= s.a,
            90 == w.stage.canvasDegree ? (l = r - l,
            u += o) : (l += r,
            u = o - u)) : (l = e + a.x,
            u = i + a.y,
            l *= s.a,
            u *= s.d,
            l += r,
            u += o);
            var c = NaN
              , d = NaN;
            return d = h ? (c = s.d * a.height,
            s.a * a.width) : (c = s.a * a.width,
            s.d * a.height),
            {
                x: l,
                y: u,
                scaleX: c,
                scaleY: d
            };
        }
        ,
        o.fitDOMElementInArea = function(t, e, i, n, a, s) {
            t._fitLayaAirInitialized || (t._fitLayaAirInitialized = !0,
            t.style.transformOrigin = t.style.webKittransformOrigin = "left top",
            t.style.position = "absolute");
            var r = o.getTransformRelativeToWindow(e, i, n);
            t.style.transform = t.style.webkitTransform = "scale(" + r.scaleX + "," + r.scaleY + ") rotate(" + w.stage.canvasDegree + "deg)",
            t.style.width = a + "px",
            t.style.height = s + "px",
            t.style.left = r.x + "px",
            t.style.top = r.y + "px";
        }
        ,
        o.isOkTextureList = function(t) {
            if (!t)
                return !1;
            var e, i = 0, n = t.length;
            for (i = 0; i < n; i++)
                if (!(e = t[i]) || !e.source)
                    return !1;
            return !0;
        }
        ,
        o.isOKCmdList = function(t) {
            if (!t)
                return !1;
            var e, i, n = 0, a = t.length, s = R._context;
            for (n = 0; n < a; n++)
                switch ((e = t[n]).callee) {
                case s._drawTexture:
                case s._fillTexture:
                case s._drawTextureWithTransform:
                    if (!(i = e[0]) || !i.source)
                        return !1;
                }
            return !0;
        }
        ,
        o._gid = 1,
        o._pi = 180 / Math.PI,
        o._pi2 = Math.PI / 180,
        o._extReg = /\.(\w+)\??/g,
        o.parseXMLFromString = function(t) {
            var e;
            if (t = t.replace(/>\s+</g, "><"),
            -1 < (e = new DOMParser().parseFromString(t, "text/xml")).firstChild.textContent.indexOf("This page contains the following errors"))
                throw new Error(e.firstChild.firstChild.textContent);
            return e;
        }
        ,
        o;
    }()
      , Q = function() {
        function t() {
            this.useDic = {},
            this.shapeDic = {},
            this.shapeLineDic = {},
            this._id = 0,
            this._checkKey = !1,
            this._freeIdArray = [],
            R.isWebGL && U.regCacheByFunction(q.bind(this.startDispose, this), q.bind(this.getCacheList, this));
        }
        f(t, "laya.utils.VectorGraphManager");
        var e = t.prototype;
        return e.getId = function() {
            return this._id++;
        }
        ,
        e.addShape = function(t, e) {
            this.shapeDic[t] = e,
            this.useDic[t] || (this.useDic[t] = !0);
        }
        ,
        e.addLine = function(t, e) {
            this.shapeLineDic[t] = e,
            this.shapeLineDic[t] || (this.shapeLineDic[t] = !0);
        }
        ,
        e.getShape = function(t) {
            this._checkKey && null != this.useDic[t] && (this.useDic[t] = !0);
        }
        ,
        e.deleteShape = function(t) {
            this.shapeDic[t] && (this.shapeDic[t] = null,
            delete this.shapeDic[t]),
            this.shapeLineDic[t] && (this.shapeLineDic[t] = null,
            delete this.shapeLineDic[t]),
            null != this.useDic[t] && delete this.useDic[t];
        }
        ,
        e.getCacheList = function() {
            var t, e = [];
            for (t in this.shapeDic)
                e.push(this.shapeDic[t]);
            for (t in this.shapeLineDic)
                e.push(this.shapeLineDic[t]);
            return e;
        }
        ,
        e.startDispose = function(t) {
            var e;
            for (e in this.useDic)
                this.useDic[e] = !1;
            this._checkKey = !0;
        }
        ,
        e.endDispose = function() {
            if (this._checkKey) {
                var t;
                for (t in this.useDic)
                    this.useDic[t] || this.deleteShape(t);
                this._checkKey = !1;
            }
        }
        ,
        t.getInstance = function() {
            return t.instance = t.instance || new t();
        }
        ,
        t.instance = null,
        t;
    }()
      , J = function() {
        function n() {
            this._obj = null,
            this._obj = n.supportWeakMap ? new G.window.WeakMap() : {},
            n.supportWeakMap || n._maps.push(this);
        }
        f(n, "laya.utils.WeakObject");
        var t = n.prototype;
        return t.set = function(t, e) {
            if (null != t)
                if (n.supportWeakMap) {
                    var i = t;
                    "string" != typeof t && "number" != typeof t || (i = n._keys[t]) || (i = n._keys[t] = {
                        k: t
                    }),
                    this._obj.set(i, e);
                } else
                    "string" == typeof t || "number" == typeof t ? this._obj[t] = e : (t.$_GID || (t.$_GID = q.getGID()),
                    this._obj[t.$_GID] = e);
        }
        ,
        t.get = function(t) {
            if (null == t)
                return null;
            if (n.supportWeakMap) {
                var e = "string" == typeof t || "number" == typeof t ? n._keys[t] : t;
                return e ? this._obj.get(e) : null;
            }
            return "string" == typeof t || "number" == typeof t ? this._obj[t] : this._obj[t.$_GID];
        }
        ,
        t.del = function(t) {
            if (null != t)
                if (n.supportWeakMap) {
                    var e = "string" == typeof t || "number" == typeof t ? n._keys[t] : t;
                    if (!e)
                        return;
                    this._obj.delete(e);
                } else
                    "string" == typeof t || "number" == typeof t ? delete this._obj[t] : delete this._obj[this._obj.$_GID];
        }
        ,
        t.has = function(t) {
            if (null == t)
                return !1;
            if (n.supportWeakMap) {
                var e = "string" == typeof t || "number" == typeof t ? n._keys[t] : t;
                return this._obj.has(e);
            }
            return "string" == typeof t || "number" == typeof t ? null != this._obj[t] : null != this._obj[this._obj.$_GID];
        }
        ,
        n.__init__ = function() {
            (n.supportWeakMap = null != G.window.WeakMap) || w.timer.loop(n.delInterval, null, n.clearCache);
        }
        ,
        n.clearCache = function() {
            for (var t = 0, e = n._maps.length; t < e; t++) {
                n._maps[t]._obj = {};
            }
        }
        ,
        n.supportWeakMap = !1,
        n.delInterval = 3e5,
        n._keys = {},
        n._maps = [],
        h(n, ["I", function() {
            return this.I = new n();
        }
        ]),
        n;
    }()
      , Z = function() {
        function t() {
            this.id = NaN,
            this.save = [],
            this.toUpperCase = null,
            this.changed = !1,
            this._text = null;
        }
        f(t, "laya.utils.WordText");
        var e = t.prototype;
        return e.setText = function(t) {
            this.changed = !0,
            this._text = t;
        }
        ,
        e.toString = function() {
            return this._text;
        }
        ,
        e.charCodeAt = function(t) {
            return this._text ? this._text.charCodeAt(t) : NaN;
        }
        ,
        e.charAt = function(t) {
            return this._text ? this._text.charAt(t) : null;
        }
        ,
        u(0, e, "length", function() {
            return this._text ? this._text.length : 0;
        }),
        t;
    }()
      , tt = function(t) {
        function r() {
            this._bits = 0,
            this._displayedInStage = !1,
            this._parent = null,
            this.conchModel = null,
            this.name = "",
            this._destroyed = !1,
            r.__super.call(this),
            this._childs = r.ARRAY_EMPTY,
            this._$P = r.PROP_EMPTY,
            this.timer = w.scaleTimer,
            this.conchModel = R.isConchNode ? this.createConchModel() : null;
        }
        f(r, "laya.display.Node", l);
        var e = r.prototype;
        return e._setBit = function(t, e) {
            1 == t && (this._getBit(t) != e && this._updateDisplayedInstage());
            e ? this._bits |= t : this._bits &= ~t;
        }
        ,
        e._getBit = function(t) {
            return 0 != (this._bits & t);
        }
        ,
        e._setUpNoticeChain = function() {
            this._getBit(1) && this._setUpNoticeType(1);
        }
        ,
        e._setUpNoticeType = function(t) {
            var e = this;
            for (e._setBit(t, !0),
            e = e.parent; e; ) {
                if (e._getBit(t))
                    return;
                e._setBit(t, !0),
                e = e.parent;
            }
        }
        ,
        e.on = function(t, e, i, n) {
            return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1),
            this._createListener(t, e, i, n, !1);
        }
        ,
        e.once = function(t, e, i, n) {
            return "display" !== t && "undisplay" !== t || this._getBit(1) || this._setUpNoticeType(1),
            this._createListener(t, e, i, n, !0);
        }
        ,
        e.createConchModel = function() {
            return null;
        }
        ,
        e.destroy = function(t) {
            void 0 === t && (t = !0),
            this._destroyed = !0,
            this._parent && this._parent.removeChild(this),
            this._childs && (t ? this.destroyChildren() : this.removeChildren()),
            this._childs = null,
            this._$P = null,
            this.offAll(),
            this.timer.clearAll(this);
        }
        ,
        e.destroyChildren = function() {
            if (this._childs)
                for (var t = this._childs.length - 1; -1 < t; t--)
                    this._childs[t].destroy(!0);
        }
        ,
        e.addChild = function(t) {
            if (!t || this.destroyed || t === this)
                return t;
            if (t.zOrder && this._set$P("hasZorder", !0),
            t._parent === this) {
                var e = this.getChildIndex(t);
                e !== this._childs.length - 1 && (this._childs.splice(e, 1),
                this._childs.push(t),
                this.conchModel && (this.conchModel.removeChild(t.conchModel),
                this.conchModel.addChildAt(t.conchModel, this._childs.length - 1)),
                this._childChanged());
            } else
                t.parent && t.parent.removeChild(t),
                this._childs === r.ARRAY_EMPTY && (this._childs = []),
                this._childs.push(t),
                this.conchModel && this.conchModel.addChildAt(t.conchModel, this._childs.length - 1),
                (t.parent = this)._childChanged();
            return t;
        }
        ,
        e.addChildren = function(t) {
            for (var e = arguments, i = 0, n = e.length; i < n; )
                this.addChild(e[i++]);
        }
        ,
        e.addChildAt = function(t, e) {
            if (!t || this.destroyed || t === this)
                return t;
            if (t.zOrder && this._set$P("hasZorder", !0),
            0 <= e && e <= this._childs.length) {
                if (t._parent === this) {
                    var i = this.getChildIndex(t);
                    this._childs.splice(i, 1),
                    this._childs.splice(e, 0, t),
                    this.conchModel && (this.conchModel.removeChild(t.conchModel),
                    this.conchModel.addChildAt(t.conchModel, e)),
                    this._childChanged();
                } else
                    t.parent && t.parent.removeChild(t),
                    this._childs === r.ARRAY_EMPTY && (this._childs = []),
                    this._childs.splice(e, 0, t),
                    this.conchModel && this.conchModel.addChildAt(t.conchModel, e),
                    t.parent = this;
                return t;
            }
            throw new Error("appendChildAt:The index is out of bounds");
        }
        ,
        e.getChildIndex = function(t) {
            return this._childs.indexOf(t);
        }
        ,
        e.getChildByName = function(t) {
            var e = this._childs;
            if (e)
                for (var i = 0, n = e.length; i < n; i++) {
                    var a = e[i];
                    if (a.name === t)
                        return a;
                }
            return null;
        }
        ,
        e._get$P = function(t) {
            return this._$P[t];
        }
        ,
        e._set$P = function(t, e) {
            return this.destroyed || (this._$P === r.PROP_EMPTY && (this._$P = {}),
            this._$P[t] = e),
            e;
        }
        ,
        e.getChildAt = function(t) {
            return this._childs[t];
        }
        ,
        e.setChildIndex = function(t, e) {
            var i = this._childs;
            if (e < 0 || e >= i.length)
                throw new Error("setChildIndex:The index is out of bounds.");
            var n = this.getChildIndex(t);
            if (n < 0)
                throw new Error("setChildIndex:node is must child of this object.");
            return i.splice(n, 1),
            i.splice(e, 0, t),
            this.conchModel && (this.conchModel.removeChild(t.conchModel),
            this.conchModel.addChildAt(t.conchModel, e)),
            this._childChanged(),
            t;
        }
        ,
        e._childChanged = function(t) {}
        ,
        e.removeChild = function(t) {
            if (!this._childs)
                return t;
            var e = this._childs.indexOf(t);
            return this.removeChildAt(e);
        }
        ,
        e.removeSelf = function() {
            return this._parent && this._parent.removeChild(this),
            this;
        }
        ,
        e.removeChildByName = function(t) {
            var e = this.getChildByName(t);
            return e && this.removeChild(e),
            e;
        }
        ,
        e.removeChildAt = function(t) {
            var e = this.getChildAt(t);
            return e && (this._childs.splice(t, 1),
            this.conchModel && this.conchModel.removeChild(e.conchModel),
            e.parent = null),
            e;
        }
        ,
        e.removeChildren = function(t, e) {
            if (void 0 === t && (t = 0),
            void 0 === e && (e = 2147483647),
            this._childs && 0 < this._childs.length) {
                var i = this._childs;
                if (0 === t && s <= e) {
                    var n = i;
                    this._childs = r.ARRAY_EMPTY;
                } else
                    n = i.splice(t, e - t);
                for (var a = 0, s = n.length; a < s; a++)
                    n[a].parent = null,
                    this.conchModel && this.conchModel.removeChild(n[a].conchModel);
            }
            return this;
        }
        ,
        e.replaceChild = function(t, e) {
            var i = this._childs.indexOf(e);
            return -1 < i ? (this._childs.splice(i, 1, t),
            this.conchModel && (this.conchModel.removeChild(e.conchModel),
            this.conchModel.addChildAt(t.conchModel, i)),
            e.parent = null,
            t.parent = this,
            t) : null;
        }
        ,
        e._updateDisplayedInstage = function() {
            var t;
            t = this;
            var e = w.stage;
            for (this._displayedInStage = !1; t; ) {
                if (t._getBit(1)) {
                    this._displayedInStage = t._displayedInStage;
                    break;
                }
                if (t == e || t._displayedInStage) {
                    this._displayedInStage = !0;
                    break;
                }
                t = t.parent;
            }
        }
        ,
        e._setDisplay = function(t) {
            this._displayedInStage !== t && ((this._displayedInStage = t) ? this.event("display") : this.event("undisplay"));
        }
        ,
        e._displayChild = function(t, e) {
            var i = t._childs;
            if (i)
                for (var n = 0, a = i.length; n < a; n++) {
                    var s = i[n];
                    s._getBit(1) && (0 < s._childs.length ? this._displayChild(s, e) : s._setDisplay(e));
                }
            t._setDisplay(e);
        }
        ,
        e.contains = function(t) {
            if (t === this)
                return !0;
            for (; t; ) {
                if (t.parent === this)
                    return !0;
                t = t.parent;
            }
            return !1;
        }
        ,
        e.timerLoop = function(t, e, i, n, a, s) {
            void 0 === a && (a = !0),
            void 0 === s && (s = !1),
            this.timer.loop(t, e, i, n, a, s);
        }
        ,
        e.timerOnce = function(t, e, i, n, a) {
            void 0 === a && (a = !0),
            this.timer._create(!1, !1, t, e, i, n, a);
        }
        ,
        e.frameLoop = function(t, e, i, n, a) {
            void 0 === a && (a = !0),
            this.timer._create(!0, !0, t, e, i, n, a);
        }
        ,
        e.frameOnce = function(t, e, i, n, a) {
            void 0 === a && (a = !0),
            this.timer._create(!0, !1, t, e, i, n, a);
        }
        ,
        e.clearTimer = function(t, e) {
            this.timer.clear(t, e);
        }
        ,
        u(0, e, "numChildren", function() {
            return this._childs.length;
        }),
        u(0, e, "destroyed", function() {
            return this._destroyed;
        }),
        u(0, e, "parent", function() {
            return this._parent;
        }, function(t) {
            this._parent !== t && (t ? (this._parent = t,
            this.event("added"),
            this._getBit(1) && (this._setUpNoticeChain(),
            t.displayedInStage && this._displayChild(this, !0)),
            t._childChanged(this)) : (this.event("removed"),
            this._parent._childChanged(),
            this._getBit(1) && this._displayChild(this, !1),
            this._parent = t));
        }),
        u(0, e, "displayedInStage", function() {
            return this._getBit(1) || this._setUpNoticeType(1),
            this._displayedInStage;
        }),
        r.ARRAY_EMPTY = [],
        r.PROP_EMPTY = {},
        r.NOTICE_DISPLAY = 1,
        r.MOUSEENABLE = 2,
        r;
    }()
      , et = function(t) {
        function d(t) {
            this._bgground = null,
            this._border = null,
            this._rect = null,
            this.underLine = 0,
            this.lineHeight = 0,
            d.__super.call(this),
            this._padding = d._PADDING,
            this._spacing = d._SPACING,
            this._aligns = d._ALIGNS,
            this._font = _.EMPTY,
            this._ower = t;
        }
        f(d, "laya.display.css.CSSStyle", t);
        var e = d.prototype;
        return e.destroy = function() {
            this._ower = null,
            this._font = null,
            this._rect = null;
        }
        ,
        e.inherit = function(t) {
            this._font = t._font,
            this._spacing = t._spacing === d._SPACING ? d._SPACING : t._spacing.slice(),
            this.lineHeight = t.lineHeight;
        }
        ,
        e._widthAuto = function() {
            return 0 != (262144 & this._type);
        }
        ,
        e.widthed = function(t) {
            return 0 != (8 & this._type);
        }
        ,
        e._calculation = function(t, e) {
            if (e.indexOf("%") < 0)
                return !1;
            var n = this._ower
              , a = n.parent
              , s = this._rect;
            function r(t, e, i) {
                return t * i[0] + e * i[1] + i[2];
            }
            function i(t) {
                var e = a.width
                  , i = n.width;
                s.width && (n.width = r(e, i, s.width)),
                s.height && (n.height = r(e, i, s.height)),
                s.left && (n.x = r(e, i, s.left)),
                s.top && (n.y = r(e, i, s.top));
            }
            null === s && (a._getCSSStyle()._type |= 524288,
            a.on("resize", this, i),
            this._rect = s = {
                input: {}
            });
            var o = e.split(" ");
            return o[0] = parseFloat(o[0]) / 100,
            1 == o.length ? o[1] = o[2] = 0 : (o[1] = parseFloat(o[1]) / 100,
            o[2] = parseFloat(o[2])),
            s[t] = o,
            s.input[t] = e,
            i(),
            !0;
        }
        ,
        e.heighted = function(t) {
            return 0 != (8192 & this._type);
        }
        ,
        e.size = function(t, e) {
            var i = this._ower
              , n = !1;
            -1 !== t && t != this._ower.width && (this._type |= 8,
            this._ower.width = t,
            n = !0),
            -1 !== e && e != this._ower.height && (this._type |= 8192,
            this._ower.height = e,
            n = !0),
            n && (i._layoutLater(),
            524288 & this._type && i.event("resize", this));
        }
        ,
        e._getAlign = function() {
            return this._aligns[0];
        }
        ,
        e._getValign = function() {
            return this._aligns[1];
        }
        ,
        e._getCssFloat = function() {
            return 0 != (32768 & this._type) ? 32768 : 0;
        }
        ,
        e._createFont = function() {
            return 4096 & this._type ? this._font : (this._type |= 4096,
            this._font = new _(this._font));
        }
        ,
        e.render = function(t, e, i, n) {
            var a = t.width
              , s = t.height;
            i -= t.pivotX,
            n -= t.pivotY,
            this._bgground && null != this._bgground.color && e.ctx.fillRect(i, n, a, s, this._bgground.color),
            this._border && this._border.color && e.drawRect(i, n, a, s, this._border.color.strColor, this._border.size);
        }
        ,
        e.getCSSStyle = function() {
            return this;
        }
        ,
        e.cssText = function(t) {
            this.attrs(d.parseOneCSS(t, ";"));
        }
        ,
        e.attrs = function(t) {
            if (t)
                for (var e = 0, i = t.length; e < i; e++) {
                    var n = t[e];
                    this[n[0]] = n[1];
                }
        }
        ,
        e.setTransform = function(t) {
            "none" === t ? this._tf = o._TF_EMPTY : this.attrs(d.parseOneCSS(t, ","));
        }
        ,
        e.translate = function(t, e) {
            this._tf === o._TF_EMPTY && (this._tf = new a()),
            this._tf.translateX = t,
            this._tf.translateY = e;
        }
        ,
        e.scale = function(t, e) {
            this._tf === o._TF_EMPTY && (this._tf = new a()),
            this._tf.scaleX = t,
            this._tf.scaleY = e;
        }
        ,
        e._enableLayout = function() {
            return 0 == (2 & this._type) && 0 == (4 & this._type);
        }
        ,
        u(0, e, "block", t.prototype._$get_block, function(t) {
            t ? this._type |= 1 : this._type &= -2;
        }),
        u(0, e, "valign", function() {
            return d._valigndef[this._aligns[1]];
        }, function(t) {
            this._aligns === d._ALIGNS && (this._aligns = [0, 0, 0]),
            this._aligns[1] = d._valigndef[t];
        }),
        u(0, e, "height", null, function(t) {
            if (this._type |= 8192,
            "string" == typeof t) {
                if (this._calculation("height", t))
                    return;
                t = parseInt(t);
            }
            this.size(-1, t);
        }),
        u(0, e, "width", null, function(t) {
            if (this._type |= 8,
            "string" == typeof t) {
                var e = t.indexOf("auto");
                if (0 <= e && (this._type |= 262144,
                t = t.substr(0, e)),
                this._calculation("width", t))
                    return;
                t = parseInt(t);
            }
            this.size(t, -1);
        }),
        u(0, e, "fontWeight", function() {
            return this._font.weight;
        }, function(t) {
            this._createFont().weight = t;
        }),
        u(0, e, "left", null, function(t) {
            var e = this._ower;
            if ("string" == typeof t) {
                if ("center" === t ? t = "50% -50% 0" : "right" === t && (t = "100% -100% 0"),
                this._calculation("left", t))
                    return;
                t = parseInt(t);
            }
            e.x = t;
        }),
        u(0, e, "_translate", null, function(t) {
            this.translate(t[0], t[1]);
        }),
        u(0, e, "absolute", function() {
            return 0 != (4 & this._type);
        }),
        u(0, e, "top", null, function(t) {
            var e = this._ower;
            if ("string" == typeof t) {
                if ("middle" === t ? t = "50% -50% 0" : "bottom" === t && (t = "100% -100% 0"),
                this._calculation("top", t))
                    return;
                t = parseInt(t);
            }
            e.y = t;
        }),
        u(0, e, "align", function() {
            return d._aligndef[this._aligns[0]];
        }, function(t) {
            this._aligns === d._ALIGNS && (this._aligns = [0, 0, 0]),
            this._aligns[0] = d._aligndef[t];
        }),
        u(0, e, "bold", function() {
            return this._font.bold;
        }, function(t) {
            this._createFont().bold = t;
        }),
        u(0, e, "padding", function() {
            return this._padding;
        }, function(t) {
            this._padding = t;
        }),
        u(0, e, "leading", function() {
            return this._spacing[1];
        }, function(t) {
            "string" == typeof t && (t = parseInt(t + "")),
            this._spacing === d._SPACING && (this._spacing = [0, 0]),
            this._spacing[1] = t;
        }),
        u(0, e, "lineElement", function() {
            return 0 != (65536 & this._type);
        }, function(t) {
            t ? this._type |= 65536 : this._type &= -65537;
        }),
        u(0, e, "cssFloat", function() {
            return 0 != (32768 & this._type) ? "right" : "left";
        }, function(t) {
            this.lineElement = !1,
            "right" === t ? this._type |= 32768 : this._type &= -32769;
        }),
        u(0, e, "textDecoration", function() {
            return this._font.decoration;
        }, function(t) {
            this._createFont().decoration = t;
        }),
        u(0, e, "whiteSpace", function() {
            return 131072 & this._type ? "nowrap" : "";
        }, function(t) {
            "nowrap" === t && (this._type |= 131072),
            "none" === t && (this._type &= -131073);
        }),
        u(0, e, "background", null, function(t) {
            t ? (this._bgground || (this._bgground = {}),
            this._bgground.color = t,
            this._ower.conchModel && this._ower.conchModel.bgColor(t),
            this._type |= 16384,
            this._ower._renderType |= 256) : this._bgground = null;
        }),
        u(0, e, "wordWrap", function() {
            return 0 == (131072 & this._type);
        }, function(t) {
            t ? this._type &= -131073 : this._type |= 131072;
        }),
        u(0, e, "color", function() {
            return this._font.color;
        }, function(t) {
            this._createFont().color = t;
        }),
        u(0, e, "password", function() {
            return this._font.password;
        }, function(t) {
            this._createFont().password = t;
        }),
        u(0, e, "backgroundColor", function() {
            return this._bgground ? this._bgground.color : null;
        }, function(t) {
            "none" === t ? this._bgground = null : (this._bgground || (this._bgground = {}),
            this._bgground.color = t),
            this._ower.conchModel && this._ower.conchModel.bgColor(t),
            this._ower._renderType |= 256;
        }),
        u(0, e, "font", function() {
            return this._font.toString();
        }, function(t) {
            this._createFont().set(t);
        }),
        u(0, e, "weight", null, function(t) {
            this._createFont().weight = t;
        }),
        u(0, e, "letterSpacing", function() {
            return this._spacing[0];
        }, function(t) {
            "string" == typeof t && (t = parseInt(t + "")),
            this._spacing === d._SPACING && (this._spacing = [0, 0]),
            this._spacing[0] = t;
        }),
        u(0, e, "fontSize", function() {
            return this._font.size;
        }, function(t) {
            this._createFont().size = t;
        }),
        u(0, e, "italic", function() {
            return this._font.italic;
        }, function(t) {
            this._createFont().italic = t;
        }),
        u(0, e, "fontFamily", function() {
            return this._font.family;
        }, function(t) {
            this._createFont().family = t;
        }),
        u(0, e, "stroke", function() {
            return this._font.stroke[0];
        }, function(t) {
            this._createFont().stroke === _._STROKE && (this._font.stroke = [0, "#000000"]),
            this._font.stroke[0] = t;
        }),
        u(0, e, "strokeColor", function() {
            return this._font.stroke[1];
        }, function(t) {
            this._createFont().stroke === _._STROKE && (this._font.stroke = [0, "#000000"]),
            this._font.stroke[1] = t;
        }),
        u(0, e, "border", function() {
            return this._border ? this._border.value : "";
        }, function(t) {
            if ("none" != t) {
                this._border || (this._border = {});
                var e = (this._border.value = t).split(" ");
                if (this._border.color = V.create(e[e.length - 1]),
                1 == e.length)
                    return this._border.size = 1,
                    void (this._border.type = "solid");
                var i = 0;
                0 < e[0].indexOf("px") ? (this._border.size = parseInt(e[0]),
                i++) : this._border.size = 1,
                this._border.type = e[i],
                this._ower._renderType |= 256;
            } else
                this._border = null;
        }),
        u(0, e, "borderColor", function() {
            return this._border && this._border.color ? this._border.color.strColor : null;
        }, function(t) {
            t ? (this._border || (this._border = {
                size: 1,
                type: "solid"
            }),
            this._border.color = null == t ? null : V.create(t),
            this._ower.conchModel && this._ower.conchModel.border(this._border.color.strColor),
            this._ower._renderType |= 256) : this._border = null;
        }),
        u(0, e, "position", function() {
            return 4 & this._type ? "absolute" : "";
        }, function(t) {
            "absolute" == t ? this._type |= 4 : this._type &= -5;
        }),
        u(0, e, "display", null, function(t) {
            switch (t) {
            case "":
                this._type &= -3,
                this.visible = !0;
                break;

            case "none":
                this._type |= 2,
                this.visible = !1,
                this._ower._layoutLater();
            }
        }),
        u(0, e, "paddingLeft", function() {
            return this.padding[3];
        }),
        u(0, e, "paddingTop", function() {
            return this.padding[0];
        }),
        u(0, e, "_scale", null, function(t) {
            this._ower.scale(t[0], t[1]);
        }),
        u(0, e, "_rotate", null, function(t) {
            this._ower.rotation = t;
        }),
        d.parseOneCSS = function(t, e) {
            for (var i, n = [], a = t.split(e), s = 0, r = a.length; s < r; s++) {
                var o = a[s]
                  , h = o.indexOf(":")
                  , l = o.substr(0, h).replace(/^\s+|\s+$/g, "");
                if (0 != l.length) {
                    var u = o.substr(h + 1).replace(/^\s+|\s+$/g, "")
                      , c = [l, u];
                    switch (l) {
                    case "italic":
                    case "bold":
                        c[1] = "true" == u;
                        break;

                    case "line-height":
                        c[0] = "lineHeight",
                        c[1] = parseInt(u);
                        break;

                    case "font-size":
                        c[0] = "fontSize",
                        c[1] = parseInt(u);
                        break;

                    case "padding":
                        1 < (i = u.split(" ")).length || (i[1] = i[2] = i[3] = i[0]),
                        c[1] = [parseInt(i[0]), parseInt(i[1]), parseInt(i[2]), parseInt(i[3])];
                        break;

                    case "rotate":
                        c[0] = "_rotate",
                        c[1] = parseFloat(u);
                        break;

                    case "scale":
                        i = u.split(" "),
                        c[0] = "_scale",
                        c[1] = [parseFloat(i[0]), parseFloat(i[1])];
                        break;

                    case "translate":
                        i = u.split(" "),
                        c[0] = "_translate",
                        c[1] = [parseInt(i[0]), parseInt(i[1])];
                        break;

                    default:
                        (c[0] = d._CSSTOVALUE[l]) || (c[0] = l);
                    }
                    n.push(c);
                }
            }
            return n;
        }
        ,
        d.parseCSS = function(t, e) {
            for (var i; null != (i = d._parseCSSRegExp.exec(t)); )
                d.styleSheets[i[1]] = d.parseOneCSS(i[2], ";");
        }
        ,
        d.EMPTY = new d(null),
        d._CSSTOVALUE = {
            "letter-spacing": "letterSpacing",
            "line-spacing": "lineSpacing",
            "white-space": "whiteSpace",
            "line-height": "lineHeight",
            "scale-x": "scaleX",
            "scale-y": "scaleY",
            "translate-x": "translateX",
            "translate-y": "translateY",
            "font-family": "fontFamily",
            "font-weight": "fontWeight",
            "vertical-align": "valign",
            "text-decoration": "textDecoration",
            "background-color": "backgroundColor",
            "border-color": "borderColor",
            float: "cssFloat"
        },
        d._parseCSSRegExp = new RegExp("([.#]\\w+)\\s*{([\\s\\S]*?)}","g"),
        d._aligndef = {
            left: 0,
            center: 1,
            right: 2,
            0: "left",
            1: "center",
            2: "right"
        },
        d._valigndef = {
            top: 0,
            middle: 1,
            bottom: 2,
            0: "top",
            1: "middle",
            2: "bottom"
        },
        d.styleSheets = {},
        d.ALIGN_CENTER = 1,
        d.ALIGN_RIGHT = 2,
        d.VALIGN_MIDDLE = 1,
        d.VALIGN_BOTTOM = 2,
        d._CSS_BLOCK = 1,
        d._DISPLAY_NONE = 2,
        d._ABSOLUTE = 4,
        d._WIDTH_SET = 8,
        d._PADDING = [0, 0, 0, 0],
        d._RECT = [-1, -1, -1, -1],
        d._SPACING = [0, 0],
        d._ALIGNS = [0, 0, 0],
        d.ADDLAYOUTED = 512,
        d._NEWFONT = 4096,
        d._HEIGHT_SET = 8192,
        d._BACKGROUND_SET = 16384,
        d._FLOAT_RIGHT = 32768,
        d._LINE_ELEMENT = 65536,
        d._NOWARP = 131072,
        d._WIDTHAUTO = 262144,
        d._LISTERRESZIE = 524288,
        d;
    }(o)
      , it = function(t) {
        function r() {
            this.url = null,
            this.audio = null,
            this.loaded = !1,
            r.__super.call(this);
        }
        f(r, "laya.media.h5audio.AudioSound", l);
        var e = r.prototype;
        return e.dispose = function() {
            var t = r._audioCache[this.url];
            t && (t.src = "",
            delete r._audioCache[this.url]);
        }
        ,
        e.load = function(t) {
            var e;
            if (t = D.formatURL(t),
            (this.url = t) == E._tMusic ? (r._initMusicAudio(),
            (e = r._musicAudio).src != t && (r._audioCache[e.src] = null,
            e = null)) : e = r._audioCache[t],
            e && 2 <= e.readyState)
                this.event("complete");
            else {
                e || (e = t == E._tMusic ? (r._initMusicAudio(),
                r._musicAudio) : G.createElement("audio"),
                (r._audioCache[t] = e).src = t),
                e.addEventListener("canplaythrough", n),
                e.addEventListener("error", a);
                var i = this;
                (this.audio = e).load ? e.load() : a();
            }
            function n() {
                s(),
                i.loaded = !0,
                i.event("complete");
            }
            function a() {
                e.load = null,
                s(),
                i.event("error");
            }
            function s() {
                e.removeEventListener("canplaythrough", n),
                e.removeEventListener("error", a);
            }
        }
        ,
        e.play = function(t, e) {
            if (void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            !this.url)
                return null;
            var i, n;
            if (!(i = this.url == E._tMusic ? r._musicAudio : r._audioCache[this.url]))
                return null;
            n = z.getItem("audio:" + this.url),
            R.isConchApp ? n || ((n = G.createElement("audio")).src = this.url) : this.url == E._tMusic ? (r._initMusicAudio(),
            (n = r._musicAudio).src = this.url) : n = n || i.cloneNode(!0);
            var a = new dt(n);
            return a.url = this.url,
            a.loops = e,
            a.startTime = t,
            a.play(),
            E.addChannel(a),
            a;
        }
        ,
        u(0, e, "duration", function() {
            var t;
            return (t = r._audioCache[this.url]) ? t.duration : 0;
        }),
        r._initMusicAudio = function() {
            r._musicAudio || (r._musicAudio || (r._musicAudio = G.createElement("audio")),
            R.isConchApp || G.document.addEventListener("mousedown", r._makeMusicOK));
        }
        ,
        r._makeMusicOK = function() {
            G.document.removeEventListener("mousedown", r._makeMusicOK),
            r._musicAudio.src ? r._musicAudio.play() : (r._musicAudio.src = "",
            r._musicAudio.load());
        }
        ,
        r._audioCache = {},
        r._musicAudio = null,
        r;
    }()
      , nt = function(t) {
        function e() {
            this.url = null,
            this.loops = 0,
            this.startTime = NaN,
            this.isStopped = !1,
            this.completeHandler = null,
            e.__super.call(this);
        }
        f(e, "laya.media.SoundChannel", l);
        var i = e.prototype;
        return i.play = function() {}
        ,
        i.stop = function() {}
        ,
        i.pause = function() {}
        ,
        i.resume = function() {}
        ,
        i.__runComplete = function(t) {
            t && t.run();
        }
        ,
        u(0, i, "volume", function() {
            return 1;
        }, function(t) {}),
        u(0, i, "position", function() {
            return 0;
        }),
        u(0, i, "duration", function() {
            return 0;
        }),
        e;
    }()
      , at = function(t) {
        function e() {
            e.__super.call(this);
        }
        f(e, "laya.media.Sound", l);
        var i = e.prototype;
        return i.load = function(t) {}
        ,
        i.play = function(t, e) {
            return void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            null;
        }
        ,
        i.dispose = function() {}
        ,
        u(0, i, "duration", function() {
            return 0;
        }),
        e;
    }()
      , st = function(t) {
        function a() {
            this.url = null,
            this.loaded = !1,
            this.data = null,
            this.audioBuffer = null,
            this.__toPlays = null,
            this._disposed = !1,
            a.__super.call(this);
        }
        f(a, "laya.media.webaudio.WebAudioSound", l);
        var e = a.prototype;
        return e.load = function(t) {
            var e = this;
            if (t = D.formatURL(t),
            this.url = t,
            this.audioBuffer = a._dataCache[t],
            this.audioBuffer)
                this._loaded(this.audioBuffer);
            else if (a.e.on("loaded:" + t, this, this._loaded),
            a.e.on("err:" + t, this, this._err),
            !a.__loadingSound[t]) {
                a.__loadingSound[t] = !0;
                var i = new G.window.XMLHttpRequest();
                i.open("GET", t, !0),
                i.responseType = "arraybuffer",
                i.onload = function() {
                    e._disposed ? e._removeLoadEvents() : (e.data = i.response,
                    a.buffs.push({
                        buffer: e.data,
                        url: e.url
                    }),
                    a.decode());
                }
                ,
                i.onerror = function(t) {
                    e._err();
                }
                ,
                i.send();
            }
        }
        ,
        e._err = function() {
            if (this._removeLoadEvents(),
            a.__loadingSound[this.url] = !1,
            this.event("error"),
            this.__toPlays) {
                var t, e, i, n = 0;
                for (t = (e = this.__toPlays).length,
                n = 0; n < t; n++)
                    (i = e[n])[2] && !i[2].isStopped && i[2].event("error");
                this.__toPlays.length = 0;
            }
        }
        ,
        e._loaded = function(t) {
            this._removeLoadEvents(),
            this._disposed || (this.audioBuffer = t,
            a._dataCache[this.url] = this.audioBuffer,
            this.loaded = !0,
            this.event("complete"));
        }
        ,
        e._removeLoadEvents = function() {
            a.e.off("loaded:" + this.url, this, this._loaded),
            a.e.off("err:" + this.url, this, this._err);
        }
        ,
        e.__playAfterLoaded = function() {
            if (this.__toPlays) {
                var t, e, i, n = 0;
                for (t = (e = this.__toPlays).length,
                n = 0; n < t; n++)
                    (i = e[n])[2] && !i[2].isStopped && this.play(i[0], i[1], i[2]);
                this.__toPlays.length = 0;
            }
        }
        ,
        e.play = function(t, e, i) {
            return void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            i = i || new _t(),
            this.audioBuffer || this.url && (this.__toPlays || (this.__toPlays = []),
            this.__toPlays.push([t, e, i]),
            this.once("complete", this, this.__playAfterLoaded),
            this.load(this.url)),
            i.url = this.url,
            i.loops = e,
            i.audioBuffer = this.audioBuffer,
            i.startTime = t,
            i.play(),
            E.addChannel(i),
            i;
        }
        ,
        e.dispose = function() {
            this._disposed = !0,
            delete a._dataCache[this.url],
            delete a.__loadingSound[this.url],
            this.audioBuffer = null,
            this.data = null,
            this.__toPlays = [];
        }
        ,
        u(0, e, "duration", function() {
            return this.audioBuffer ? this.audioBuffer.duration : 0;
        }),
        a.decode = function() {
            a.buffs.length <= 0 || a.isDecoding || (a.isDecoding = !0,
            a.tInfo = a.buffs.shift(),
            a.ctx.decodeAudioData(a.tInfo.buffer, a._done, a._fail));
        }
        ,
        a._done = function(t) {
            a.e.event("loaded:" + a.tInfo.url, t),
            a.isDecoding = !1,
            a.decode();
        }
        ,
        a._fail = function() {
            a.e.event("err:" + a.tInfo.url, null),
            a.isDecoding = !1,
            a.decode();
        }
        ,
        a._playEmptySound = function() {
            if (null != a.ctx) {
                var t = a.ctx.createBufferSource();
                t.buffer = a._miniBuffer,
                t.connect(a.ctx.destination),
                t.start(0, 0, 0);
            }
        }
        ,
        a._unlock = function() {
            a._unlocked || (a._playEmptySound(),
            "running" == a.ctx.state && (G.document.removeEventListener("mousedown", a._unlock, !0),
            G.document.removeEventListener("touchend", a._unlock, !0),
            G.document.removeEventListener("touchstart", a._unlock, !0),
            a._unlocked = !0));
        }
        ,
        a.initWebAudio = function() {
            "running" != a.ctx.state && (a._unlock(),
            G.document.addEventListener("mousedown", a._unlock, !0),
            G.document.addEventListener("touchend", a._unlock, !0),
            G.document.addEventListener("touchstart", a._unlock, !0));
        }
        ,
        a._dataCache = {},
        a.buffs = [],
        a.isDecoding = !1,
        a._unlocked = !1,
        a.tInfo = null,
        a.__loadingSound = {},
        h(a, ["window", function() {
            return this.window = G.window;
        }
        , "webAudioEnabled", function() {
            return this.webAudioEnabled = a.window.AudioContext || a.window.webkitAudioContext || a.window.mozAudioContext;
        }
        , "ctx", function() {
            return this.ctx = a.webAudioEnabled ? new (a.window.AudioContext || a.window.webkitAudioContext || a.window.mozAudioContext)() : void 0;
        }
        , "_miniBuffer", function() {
            return this._miniBuffer = a.ctx.createBuffer(1, 1, 22050);
        }
        , "e", function() {
            return this.e = new l();
        }
        ]),
        a;
    }()
      , rt = function(t) {
        function e() {
            this._responseType = null,
            this._data = null,
            e.__super.call(this),
            this._http = new G.window.XMLHttpRequest();
        }
        f(e, "laya.net.HttpRequest", l);
        var i = e.prototype;
        return i.send = function(t, e, i, n, a) {
            void 0 === i && (i = "get"),
            void 0 === n && (n = "text"),
            this._responseType = n,
            this._data = null;
            var s = this
              , r = this._http;

            if (t == "https://h5game.99aly.com/5agamewx/alywx/lj/wx/gun/gun2.3.2.json?t=112") {
                return;
                var jsons = '{"fristSwitch":1,"bannerId":"adunit-72683bde6b284601","version":"2.2.2","isShare":1,"firstShareCheck":1,"localCheck":0,"moreGameCheck":0,"shareFailedSecond":0,"shareFailedTimes":1,"shareCheckSeconds":2500,"userSharePoint":2,"moreGameList":[{"appId":"wx7d6716d538596fa8","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/jyqw.png","gameName":"精英枪王","path":"?&ald_media_id=33006&ald_link_key=52264285023dd12a","isGif":0,"pngCount":0,"picName":"0"},{"appId":"wxd608b1b150ed4a78","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx//icon/20191119/wghcr1.png","gameName":"玩个火柴人","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wxd9739b2cf31ec66b","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/ckcq.jpg","gameName":"刺客传奇","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wxdc9df67ccf148dfd","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/jjhcr.png","gameName":"救救火柴人","path":"?scene=118&ald_media_id=27670&ald_link_key=1ed2b086de0a527e&ald_position_id=0","isGif":0,"pngCount":0,"picName":""},{"appId":"wx137fef3fac58c75e","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/jjxjj.png","gameName":"救救小姐姐","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wx298657621c2f1435","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/ypct_1.png","gameName":"一抛冲天","path":"?ald_media_id=31867&ald_link_key=809628e78952930e&ald_position_id=0","isGif":1,"pngCount":11,"picName":"20191119/ypct"},{"appId":"wxc9fe0062ebbc164b","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/jjcdd.png","gameName":"救救臭弟弟","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wxa15dbd8df5c6128f","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/bzklxd.jpg","gameName":"暴走恐龙行动","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wx47b0aba122188127","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/qhgc.png","gameName":"枪火工厂","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wx7d6716d538596fa8","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/jyqw1.png","gameName":"精英枪王","path":"?&ald_media_id=33006&ald_link_key=52264285023dd12a","isGif":0,"pngCount":0,"picName":"0"},{"appId":"wxd608b1b150ed4a78","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx//icon/20191119/wghcr.png","gameName":"玩个火柴人","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wxd9739b2cf31ec66b","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/ckcq.jpg","gameName":"刺客传奇","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wxdc9df67ccf148dfd","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/jjhcr1.png","gameName":"救救火柴人","path":"?scene=118&ald_media_id=27670&ald_link_key=1ed2b086de0a527e&ald_position_id=0","isGif":0,"pngCount":0,"picName":""},{"appId":"wxc9fe0062ebbc164b","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/jjcdd1.png","gameName":"救救臭弟弟","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wx298657621c2f1435","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/ypct_1.png","gameName":"一抛冲天","path":"?ald_media_id=31867&ald_link_key=809628e78952930e&ald_position_id=0","isGif":1,"pngCount":11,"picName":"20191119/ypct"},{"appId":"wx137fef3fac58c75e","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/jjxjj1.png","gameName":"救救小姐姐","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wxa15dbd8df5c6128f","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/bzklxd.jpg","gameName":"暴走恐龙行动","path":"","isGif":0,"pngCount":0,"picName":""},{"appId":"wx47b0aba122188127","iconUrl":"https://h5game.99aly.com/5agamewx/alywx/lj/wx/icon/20191119/qhgc.png","gameName":"枪火工厂","path":"","isGif":0,"pngCount":0,"picName":""}],"sharePoints":[{"shareIndex":1,"shareOrAdTimes":1,"shareSeconds":1,"isShareStart":0,"isSharePoint":1},{"shareIndex":2,"shareOrAdTimes":0,"shareSeconds":0,"isShareStart":0,"isSharePoint":0},{"shareIndex":3,"shareOrAdTimes":0,"shareSeconds":1,"isShareStart":0,"isSharePoint":0},{"shareIndex":4,"shareOrAdTimes":2,"shareSeconds":0.5,"isShareStart":1,"isSharePoint":1},{"shareIndex":5,"shareOrAdTimes":2,"shareSeconds":0.5,"isShareStart":1,"isSharePoint":1},{"shareIndex":6,"shareOrAdTimes":1,"shareSeconds":0,"isShareStart":1,"isSharePoint":1},{"shareIndex":7,"shareOrAdTimes":2,"shareSeconds":0,"isShareStart":1,"isSharePoint":1},{"shareIndex":8,"shareOrAdTimes":0,"shareSeconds":0,"isShareStart":0,"isSharePoint":0},{"shareIndex":9,"shareOrAdTimes":1,"shareSeconds":0.5,"isShareStart":0,"isSharePoint":1},{"shareIndex":10,"shareOrAdTimes":2,"shareSeconds":0.5,"isShareStart":0,"isSharePoint":1},{"shareIndex":11,"shareOrAdTimes":1,"shareSeconds":0.5,"isShareStart":0,"isSharePoint":0},{"shareIndex":12,"shareOrAdTimes":0,"shareSeconds":0,"isShareStart":0,"isSharePoint":0},{"shareIndex":13,"shareOrAdTimes":0,"shareSeconds":0,"isShareStart":0,"isSharePoint":1},{"shareIndex":14,"shareOrAdTimes":0,"shareSeconds":0,"isShareStart":0,"isSharePoint":1},{"shareIndex":15,"shareOrAdTimes":0,"shareSeconds":0.5,"isShareStart":1,"isSharePoint":0},{"shareIndex":16,"shareOrAdTimes":1,"shareSeconds":0.5,"isShareStart":0,"isSharePoint":1},{"shareIndex":17,"shareOrAdTimes":0,"shareSeconds":1,"isShareStart":0,"isSharePoint":0},{"shareIndex":18,"shareOrAdTimes":0,"shareSeconds":1,"isShareStart":1,"isSharePoint":1},{"shareIndex":19,"shareOrAdTimes":0,"shareSeconds":0,"isShareStart":0,"isSharePoint":0},{"shareIndex":20,"shareOrAdTimes":0,"shareSeconds":1,"isShareStart":0,"isSharePoint":0}]}';
                this._data = JSON.parse(jsons)
                this.event("complete", this._data instanceof Array ? [this._data] : this._data);
                return;
            }

            if (r.open(i, t, !0),
            a)
                for (var o = 0; o < a.length; o++)
                    r.setRequestHeader(a[o++], a[o]);
            else
                R.isConchApp || (e && "string" != typeof e ? r.setRequestHeader("Content-Type", "application/json") : r.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"));
            r.responseType = "arraybuffer" !== n ? "text" : "arraybuffer",
            r.onerror = function(t) {
                s._onError(t);
            }
            ,
            r.onabort = function(t) {
                s._onAbort(t);
            }
            ,
            r.onprogress = function(t) {
                s._onProgress(t);
            }
            ,
            r.onload = function(t) {
                s._onLoad(t);
            }
            ,
            r.send(e);
        }
        ,
        i._onProgress = function(t) {
            t && t.lengthComputable && this.event("progress", t.loaded / t.total);
        }
        ,
        i._onAbort = function(t) {
            this.error("Request was aborted by user");
        }
        ,
        i._onError = function(t) {
            this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText);
        }
        ,
        i._onLoad = function(t) {
            var e = this._http
              , i = void 0 !== e.status ? e.status : 200;
            200 === i || 204 === i || 0 === i ? this.complete() : this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL);
        }
        ,
        i.error = function(t) {
            this.clear(),
            this.event("error", t);
        }
        ,
        i.complete = function() {
            this.clear();
            var e = !0;
            try {
                "json" === this._responseType ? this._data = JSON.parse(this._http.responseText) : "xml" === this._responseType ? this._data = q.parseXMLFromString(this._http.responseText) : this._data = this._http.response || this._http.responseText;
            } catch (t) {
                e = !1,
                this.error(t.message);
            }
            e && this.event("complete", this._data instanceof Array ? [this._data] : this._data);
        }
        ,
        i.clear = function() {
            var t = this._http;
            t.onerror = t.onabort = t.onprogress = t.onload = null;
        }
        ,
        u(0, i, "url", function() {
            return this._http.responseURL;
        }),
        u(0, i, "http", function() {
            return this._http;
        }),
        u(0, i, "data", function() {
            return this._data;
        }),
        e;
    }()
      , ot = function(t) {
        function T() {
            this._data = null,
            this._class = null,
            this._url = null,
            this._type = null,
            this._cache = !1,
            this._http = null,
            this._customParse = !1,
            T.__super.call(this);
        }
        f(T, "laya.net.Loader", l);
        var e = T.prototype;
        return e.load = function(t, e, i, n, a) {
            if (void 0 === i && (i = !0),
            void 0 === a && (a = !1),
            0 === (this._url = t).indexOf("data:image") ? this._type = e = "image" : (this._type = e || (e = this.getTypeFromUrl(t)),
            t = D.formatURL(t)),
            this._cache = i,
            this._data = null,
            !a && T.loadedMap[t])
                return this._data = T.loadedMap[t],
                this.event("progress", 1),
                void this.event("complete", this._data);
            if (n && T.setGroup(t, n),
            null != T.parserMap[e])
                return this._customParse = !0,
                void (T.parserMap[e]instanceof laya.utils.Handler ? T.parserMap[e].runWith(this) : T.parserMap[e].call(null, this));
            if ("image" === e || "htmlimage" === e || "nativeimage" === e)
                return this._loadImage(t);
            if ("sound" === e)
                return this._loadSound(t);
            if ("ttf" === e)
                return this._loadTTF(t);
            var s;
            switch (e) {
            case "atlas":
            case "plf":
                s = "json";
                break;

            case "font":
                s = "xml";
                break;

            case "pkm":
                s = "arraybuffer";
                break;

            default:
                s = e;
            }
            T.preLoadedMap[t] ? this.onLoaded(T.preLoadedMap[t]) : (this._http || (this._http = new rt(),
            this._http.on("progress", this, this.onProgress),
            this._http.on("error", this, this.onError),
            this._http.on("complete", this, this.onLoaded)),
            this._http.send(t, null, "get", s));
        }
        ,
        e.getTypeFromUrl = function(t) {
            var e = q.getFileExtension(t);
            return e ? T.typeMap[e] : (console.warn("Not recognize the resources suffix", t),
            "text");
        }
        ,
        e._loadTTF = function(t) {
            t = D.formatURL(t);
            var e = new L();
            e.complete = y.create(this, this.onLoaded),
            e.load(t);
        }
        ,
        e._loadImage = function(e) {
            e = D.formatURL(e);
            var i, t = this;
            function n() {
                i.onload = null,
                i.onerror = null,
                delete T.imgCache[e];
            }
            var a = function() {
                n(),
                t.onLoaded(i);
            }
              , s = function() {
                n(),
                t.event("error", "Load image failed");
            };
            "nativeimage" === this._type ? ((i = new G.window.Image()).crossOrigin = "",
            i.onload = a,
            i.onerror = s,
            i.src = e,
            T.imgCache[e] = i) : new bt.create(e,{
                onload: a,
                onerror: s,
                onCreate: function(t) {
                    i = t,
                    T.imgCache[e] = t;
                }
            });
        }
        ,
        e._loadSound = function(t) {
            var e = new E._soundClass()
              , i = this;
            function n() {
                e.offAll();
            }
            e.on("complete", this, function() {
                n(),
                i.onLoaded(e);
            }),
            e.on("error", this, function() {
                n(),
                e.dispose(),
                i.event("error", "Load sound failed");
            }),
            e.load(t);
        }
        ,
        e.onProgress = function(t) {
            "atlas" === this._type ? this.event("progress", .3 * t) : this.event("progress", t);
        }
        ,
        e.onError = function(t) {
            this.event("error", t);
        }
        ,
        e.onLoaded = function(t) {
            var e = this._type;
            if ("plf" == e)
                this.parsePLFData(t),
                this.complete(t);
            else if ("image" === e) {
                var i = new ut(t);
                i.url = this._url,
                this.complete(i);
            } else if ("sound" === e || "htmlimage" === e || "nativeimage" === e)
                this.complete(t);
            else if ("atlas" === e) {
                if (!t.src && !t._setContext) {
                    if (!this._data) {
                        if ((this._data = t).meta && t.meta.image)
                            for (var n = t.meta.image.split(","), a = 0 <= this._url.indexOf("/") ? "/" : "\\", s = this._url.lastIndexOf(a), r = 0 <= s ? this._url.substr(0, s + 1) : "", o = 0, h = n.length; o < h; o++)
                                n[o] = r + n[o];
                        else
                            n = [this._url.replace(".json", ".png")];
                        n.reverse(),
                        t.toLoads = n,
                        t.pics = [];
                    }
                    return this.event("progress", .3 + 1 / n.length * .6),
                    this._loadImage(n.pop());
                }
                if (this._data.pics.push(t),
                0 < this._data.toLoads.length)
                    return this.event("progress", .3 + 1 / this._data.toLoads.length * .6),
                    this._loadImage(this._data.toLoads.pop());
                var l = this._data.frames
                  , u = this._url.split("?")[0]
                  , c = this._data.meta && this._data.meta.prefix ? this._data.meta.prefix : u.substring(0, u.lastIndexOf(".")) + "/"
                  , d = this._data.pics
                  , _ = D.formatURL(this._url)
                  , p = T.atlasMap[_] || (T.atlasMap[_] = []);
                p.dir = c;
                var f = 1;
                if (this._data.meta && this._data.meta.scale && 1 != this._data.meta.scale)
                    for (var g in f = parseFloat(this._data.meta.scale),
                    l) {
                        var m, y = l[g], v = d[y.frame.idx ? y.frame.idx : 0], S = D.formatURL(c + g);
                        v.scaleRate = f,
                        m = ut.create(v, y.frame.x, y.frame.y, y.frame.w, y.frame.h, y.spriteSourceSize.x, y.spriteSourceSize.y, y.sourceSize.w, y.sourceSize.h),
                        T.cacheRes(S, m),
                        m.url = S,
                        p.push(S);
                    }
                else
                    for (g in l)
                        v = d[(y = l[g]).frame.idx ? y.frame.idx : 0],
                        S = D.formatURL(c + g),
                        T.cacheRes(S, ut.create(v, y.frame.x, y.frame.y, y.frame.w, y.frame.h, y.spriteSourceSize.x, y.spriteSourceSize.y, y.sourceSize.w, y.sourceSize.h)),
                        T.loadedMap[S].url = S,
                        p.push(S);
                delete this._data.pics,
                this.complete(this._data);
            } else if ("font" == e) {
                if (!t.src)
                    return this._data = t,
                    this.event("progress", .5),
                    this._loadImage(this._url.replace(".fnt", ".png"));
                var x = new C();
                x.parseFont(this._data, t);
                var b = this._url.split(".fnt")[0].split("/")
                  , w = b[b.length - 1];
                gt.registerBitmapFont(w, x),
                this._data = x,
                this.complete(this._data);
            } else if ("pkm" == e) {
                var M = bt.create(t, this._url)
                  , I = new ut(M);
                I.url = this._url,
                this.complete(I);
            } else
                this.complete(t);
        }
        ,
        e.parsePLFData = function(t) {
            var e, i, n;
            for (e in t)
                switch (n = t[e],
                e) {
                case "json":
                case "text":
                    for (i in n)
                        T.preLoadedMap[D.formatURL(i)] = n[i];
                    break;

                default:
                    for (i in n)
                        T.preLoadedMap[D.formatURL(i)] = n[i];
                }
        }
        ,
        e.complete = function(t) {
            this._data = t,
            this._customParse ? this.event("loaded", t instanceof Array ? [t] : t) : (T._loaders.push(this),
            T._isWorking || T.checkNext());
        }
        ,
        e.endLoad = function(t) {
            t && (this._data = t),
            this._cache && T.cacheRes(this._url, this._data),
            this.event("progress", 1),
            this.event("complete", this.data instanceof Array ? [this.data] : this.data);
        }
        ,
        u(0, e, "url", function() {
            return this._url;
        }),
        u(0, e, "data", function() {
            return this._data;
        }),
        u(0, e, "cache", function() {
            return this._cache;
        }),
        u(0, e, "type", function() {
            return this._type;
        }),
        T.checkNext = function() {
            T._isWorking = !0;
            for (var t = G.now(); T._startIndex < T._loaders.length; )
                if (G.now(),
                T._loaders[T._startIndex].endLoad(),
                T._startIndex++,
                G.now() - t > T.maxTimeOut)
                    return console.warn("loader callback cost a long time:" + (G.now() - t) + " url=" + T._loaders[T._startIndex - 1].url),
                    void w.timer.frameOnce(1, null, T.checkNext);
            T._loaders.length = 0,
            T._startIndex = 0,
            T._isWorking = !1;
        }
        ,
        T.clearRes = function(t, e) {
            void 0 === e && (e = !1),
            t = D.formatURL(t);
            var i = T.getAtlas(t);
            if (i) {
                for (var n = 0, a = i.length; n < a; n++) {
                    var s = i[n]
                      , r = T.getRes(s);
                    delete T.loadedMap[s],
                    r && r.destroy(e);
                }
                i.length = 0,
                delete T.atlasMap[t],
                delete T.loadedMap[t];
            } else {
                var o = T.loadedMap[t];
                o && (delete T.loadedMap[t],
                o instanceof laya.resource.Texture && o.bitmap && o.destroy(e));
            }
        }
        ,
        T.clearTextureRes = function(t) {
            t = D.formatURL(t);
            var e = laya.net.Loader.getAtlas(t)
              , i = e && 0 < e.length ? laya.net.Loader.getRes(e[0]) : laya.net.Loader.getRes(t);
            i && i.bitmap && (R.isConchApp && !R.isConchWebGL ? i.bitmap.source.releaseTexture && i.bitmap.source.releaseTexture() : null == i.bitmap._atlaser && i.bitmap.releaseResource(!0));
        }
        ,
        T.getRes = function(t) {
            return T.loadedMap[D.formatURL(t)];
        }
        ,
        T.getAtlas = function(t) {
            return T.atlasMap[D.formatURL(t)];
        }
        ,
        T.cacheRes = function(t, e) {
            t = D.formatURL(t),
            null != T.loadedMap[t] ? console.warn("Resources already exist,is repeated loading:", t) : T.loadedMap[t] = e;
        }
        ,
        T.setGroup = function(t, e) {
            T.groupMap[e] || (T.groupMap[e] = []),
            T.groupMap[e].push(t);
        }
        ,
        T.clearResByGroup = function(t) {
            if (T.groupMap[t]) {
                var e = T.groupMap[t]
                  , i = 0
                  , n = e.length;
                for (i = 0; i < n; i++)
                    T.clearRes(e[i]);
                e.length = 0;
            }
        }
        ,
        T.TEXT = "text",
        T.JSON = "json",
        T.XML = "xml",
        T.BUFFER = "arraybuffer",
        T.IMAGE = "image",
        T.SOUND = "sound",
        T.ATLAS = "atlas",
        T.FONT = "font",
        T.TTF = "ttf",
        T.PLF = "plf",
        T.PKM = "pkm",
        T.typeMap = {
            png: "image",
            jpg: "image",
            jpeg: "image",
            txt: "text",
            json: "json",
            xml: "xml",
            als: "atlas",
            atlas: "atlas",
            mp3: "sound",
            ogg: "sound",
            wav: "sound",
            part: "json",
            fnt: "font",
            pkm: "pkm",
            ttf: "ttf",
            plf: "plf",
            ani: "json",
            sk: "arraybuffer"
        },
        T.parserMap = {},
        T.groupMap = {},
        T.maxTimeOut = 100,
        T.loadedMap = {},
        T.preLoadedMap = {},
        T.atlasMap = {},
        T._loaders = [],
        T._isWorking = !1,
        T._startIndex = 0,
        T.imgCache = {},
        T;
    }()
      , ht = function(t) {
        var d;
        function _() {
            this.retryNum = 1,
            this.retryDelay = 0,
            this.maxLoader = 5,
            this._loaders = [],
            this._loaderCount = 0,
            this._resInfos = [],
            this._infoPool = [],
            this._maxPriority = 5,
            this._failRes = {},
            _.__super.call(this);
            for (var t = 0; t < this._maxPriority; t++)
                this._resInfos[t] = [];
        }
        f(_, "laya.net.LoaderManager", l);
        var e = _.prototype;
        return e.create = function(t, i, e, n, a, s, r, o) {
            if (void 0 === s && (s = 1),
            void 0 === r && (r = !0),
            t instanceof Array) {
                var h = t
                  , l = h.length
                  , u = 0;
                if (e)
                    var c = y.create(e.caller, e.method, e.args, !1);
                for (var d = 0; d < l; d++) {
                    var _ = h[d];
                    "string" == typeof _ && (_ = h[d] = {
                        url: _
                    }),
                    _.progress = 0;
                }
                for (d = 0; d < l; d++) {
                    _ = h[d];
                    var p = e ? y.create(null, m, [_], !1) : null
                      , f = e || i ? y.create(null, g, [_]) : null;
                    this._create(_.url, f, p, _.clas || n, _.params || a, _.priority || s, r, _.group || o);
                }
                function g(t, e) {
                    u++,
                    t.progress = 1,
                    u === l && i && i.run();
                }
                function m(t, e) {
                    t.progress = e;
                    for (var i = 0, n = 0; n < l; n++) {
                        i += h[n].progress;
                    }
                    var a = i / l;
                    c.runWith(a);
                }
                return !0;
            }
            return this._create(t, i, e, n, a, s, r, o);
        }
        ,
        e._create = function(e, i, t, n, a, s, r, o) {
            void 0 === s && (s = 1),
            void 0 === r && (r = !0);
            var h = D.formatURL(e)
              , l = this.getRes(h);
            if (l)
                !l.hasOwnProperty("loaded") || l.loaded ? (t && t.runWith(1),
                i && i.run()) : i && w.loader._createListener(e, i.caller, i.method, i.args, !0, !1);
            else {
                var u = q.getFileExtension(e)
                  , c = _.createMap[u];
                if (!c)
                    throw new Error("LoaderManager:unknown file(" + e + ") extension with: " + u + ".");
                n || (n = c[0]);
                var d = c[1];
                if ("atlas" == u)
                    this.load(e, i, t, d, s, r);
                else {
                    n === ut && (d = "htmlimage"),
                    (l = n ? new n() : null).hasOwnProperty("_loaded") && (l._loaded = !1),
                    l._setUrl(e),
                    o && l._setGroup(o),
                    this._createLoad(l, e, y.create(null, function(t) {
                        l && !l.destroyed && t && l.onAsynLoaded.call(l, e, t, a),
                        i && i.run();
                        w.loader.event(e);
                    }), t, d, s, !1, o, !0),
                    r && this.cacheRes(h, l);
                }
            }
            return l;
        }
        ,
        e.load = function(t, e, i, n, a, s, r, o) {
            var h = this;
            if (void 0 === a && (a = 1),
            void 0 === s && (s = !0),
            void 0 === o && (o = !1),
            t instanceof Array)
                return this._loadAssets(t, e, i, n, a, s, r);
            var l = ot.getRes(t);
            if (null != l)
                w.timer.frameOnce(1, null, function() {
                    i && i.runWith(1),
                    e && e.runWith(l),
                    h._loaderCount || h.event("complete");
                });
            else {
                var u = _._resMap[t];
                u ? (e && u._createListener("complete", e.caller, e.method, e.args, !1, !1),
                i && u._createListener("progress", i.caller, i.method, i.args, !1, !1)) : ((u = this._infoPool.length ? this._infoPool.pop() : new d()).url = t,
                u.type = n,
                u.cache = s,
                u.group = r,
                u.ignoreCache = o,
                e && u.on("complete", e.caller, e.method, e.args),
                i && u.on("progress", i.caller, i.method, i.args),
                _._resMap[t] = u,
                a = a < this._maxPriority ? a : this._maxPriority - 1,
                this._resInfos[a].push(u),
                this._next());
            }
            return this;
        }
        ,
        e._createLoad = function(t, e, i, n, a, s, r, o, h) {
            var l = this;
            if (void 0 === s && (s = 1),
            void 0 === r && (r = !0),
            void 0 === h && (h = !1),
            e instanceof Array)
                return this._loadAssets(e, i, n, a, s, r, o);
            var u = ot.getRes(e);
            if (null != u)
                w.timer.frameOnce(1, null, function() {
                    n && n.runWith(1),
                    i && i.runWith(u),
                    l._loaderCount || l.event("complete");
                });
            else {
                var c = _._resMap[e];
                c ? (i && c._createListener("complete", i.caller, i.method, i.args, !1, !1),
                n && c._createListener("progress", n.caller, n.method, n.args, !1, !1)) : ((c = this._infoPool.length ? this._infoPool.pop() : new d()).url = e,
                c.clas = t,
                c.type = a,
                c.cache = r,
                c.group = o,
                c.ignoreCache = h,
                i && c.on("complete", i.caller, i.method, i.args),
                n && c.on("progress", n.caller, n.method, n.args),
                _._resMap[e] = c,
                s = s < this._maxPriority ? s : this._maxPriority - 1,
                this._resInfos[s].push(c),
                this._next());
            }
            return this;
        }
        ,
        e._next = function() {
            if (!(this._loaderCount >= this.maxLoader)) {
                for (var t = 0; t < this._maxPriority; t++)
                    for (var e = this._resInfos[t]; 0 < e.length; ) {
                        var i = e.shift();
                        if (i)
                            return this._doLoad(i);
                    }
                this._loaderCount || this.event("complete");
            }
        }
        ,
        e._doLoad = function(e) {
            this._loaderCount++;
            var i = this._loaders.length ? this._loaders.pop() : new ot();
            i.on("complete", null, a),
            i.on("progress", null, function(t) {
                e.event("progress", t);
            }),
            i.on("error", null, function(t) {
                a(null);
            });
            var n = this;
            function a(t) {
                i.offAll(),
                i._data = null,
                i._customParse = !1,
                n._loaders.push(i),
                n._endLoad(e, t instanceof Array ? [t] : t),
                n._loaderCount--,
                n._next();
            }
            i._class = e.clas,
            i.load(e.url, e.type, e.cache, e.group, e.ignoreCache);
        }
        ,
        e._endLoad = function(t, e) {
            var i = t.url;
            if (null == e) {
                var n = this._failRes[i] || 0;
                if (n < this.retryNum)
                    return console.warn("[warn]Retry to load:", i),
                    this._failRes[i] = n + 1,
                    void w.timer.once(this.retryDelay, this, this._addReTry, [t], !1);
                console.warn("[error]Failed to load:", i),
                this.event("error", i);
            }
            this._failRes[i] && (this._failRes[i] = 0),
            delete _._resMap[i],
            t.event("complete", e),
            t.offAll(),
            this._infoPool.push(t);
        }
        ,
        e._addReTry = function(t) {
            this._resInfos[this._maxPriority - 1].push(t),
            this._next();
        }
        ,
        e.clearRes = function(t, e) {
            void 0 === e && (e = !1),
            ot.clearRes(t, e);
        }
        ,
        e.getRes = function(t) {
            return ot.getRes(t);
        }
        ,
        e.cacheRes = function(t, e) {
            ot.cacheRes(t, e);
        }
        ,
        e.clearTextureRes = function(t) {
            ot.clearTextureRes(t);
        }
        ,
        e.setGroup = function(t, e) {
            ot.setGroup(t, e);
        }
        ,
        e.clearResByGroup = function(t) {
            ot.clearResByGroup(t);
        }
        ,
        e.clearUnLoaded = function() {
            for (var t = 0; t < this._maxPriority; t++) {
                for (var e = this._resInfos[t], i = e.length - 1; -1 < i; i--) {
                    var n = e[i];
                    n && (n.offAll(),
                    this._infoPool.push(n));
                }
                e.length = 0;
            }
            this._loaderCount = 0,
            _._resMap = {};
        }
        ,
        e.cancelLoadByUrls = function(t) {
            if (t)
                for (var e = 0, i = t.length; e < i; e++)
                    this.cancelLoadByUrl(t[e]);
        }
        ,
        e.cancelLoadByUrl = function(t) {
            for (var e = 0; e < this._maxPriority; e++)
                for (var i = this._resInfos[e], n = i.length - 1; -1 < n; n--) {
                    var a = i[n];
                    a && a.url === t && (i[n] = null,
                    a.offAll(),
                    this._infoPool.push(a));
                }
            _._resMap[t] && delete _._resMap[t];
        }
        ,
        e._loadAssets = function(t, i, r, e, n, a, s) {
            void 0 === n && (n = 1),
            void 0 === a && (a = !0);
            for (var o = t.length, h = 0, l = 0, u = [], c = !0, d = 0; d < o; d++) {
                var _ = t[d];
                "string" == typeof _ && (_ = {
                    url: _,
                    type: e,
                    size: 1,
                    priority: n
                }),
                _.size || (_.size = 1),
                _.progress = 0,
                l += _.size,
                u.push(_);
                var p = r ? y.create(null, m, [_], !1) : null
                  , f = i || r ? y.create(null, g, [_]) : null;
                this.load(_.url, f, p, _.type, _.priority || 1, a, _.group || s);
            }
            function g(t, e) {
                h++,
                t.progress = 1,
                e || (c = !1),
                h === o && i && i.runWith(c);
            }
            function m(t, e) {
                if (null != r) {
                    t.progress = e;
                    for (var i = 0, n = 0; n < u.length; n++) {
                        var a = u[n];
                        i += a.size * a.progress;
                    }
                    var s = i / l;
                    r.runWith(s);
                }
            }
            return this;
        }
        ,
        _.cacheRes = function(t, e) {
            ot.cacheRes(t, e);
        }
        ,
        _._resMap = {},
        h(_, ["createMap", function() {
            return this.createMap = {
                atlas: [null, "atlas"]
            };
        }
        ]),
        _.__init$ = function() {
            d = function(t) {
                function e() {
                    this.url = null,
                    this.type = null,
                    this.cache = !1,
                    this.group = null,
                    this.ignoreCache = !1,
                    this.clas = null,
                    e.__super.call(this);
                }
                return f(e, "", l),
                e;
            }();
        }
        ,
        _;
    }()
      , lt = (function(t) {
        function a(t) {
            a.__super.call(this),
            t || (t = [.3, .59, .11, 0, 0, .3, .59, .11, 0, 0, .3, .59, .11, 0, 0, 0, 0, 0, 1, 0]),
            this._mat = new Float32Array(16),
            this._alpha = new Float32Array(4);
            for (var e = 0, i = 0, n = 0; n < 20; n++)
                n % 5 != 4 ? this._mat[e++] = t[n] : this._alpha[i++] = t[n];
            this._action = P.createFilterAction(32),
            this._action.data = this;
        }
        f(a, "laya.filters.ColorFilter", m);
        var e = a.prototype;
        w.imps(e, {
            "laya.filters.IFilter": !0
        }),
        e.callNative = function(t) {
            t._$P.cf = this;
            t.conchModel && t.conchModel.setFilterMatrix && t.conchModel.setFilterMatrix(this._mat, this._alpha);
        }
        ,
        u(0, e, "type", function() {
            return 32;
        }),
        u(0, e, "action", function() {
            return this._action;
        });
    }(),
    function(t) {
        function n(t, e, i) {
            this._endian = null,
            this._stamp = NaN,
            this._socket = null,
            this._connected = !1,
            this._addInputPosition = 0,
            this._input = null,
            this._output = null,
            this.timeout = 0,
            this.objectEncoding = 0,
            this.disableInput = !1,
            this._byteClass = null,
            this.protocols = [],
            void 0 === e && (e = 0),
            n.__super.call(this),
            this._byteClass = i || F,
            this.endian = "bigEndian",
            this.timeout = 2e4,
            this._addInputPosition = 0,
            t && 0 < e && e < 65535 && this.connect(t, e);
        }
        f(n, "laya.net.Socket", l);
        var e = n.prototype;
        e.connect = function(t, e) {
            var i = "ws://" + t + ":" + e;
            i = "https:" == G.window.location.protocol ? "wss://" + t + ":" + e : "ws://" + t + ":" + e,
            this.connectByUrl(i);
        }
        ,
        e.connectByUrl = function(t) {
            var e = this;
            null != this._socket && this.close(),
            this._socket && this.cleanSocket(),
            this.protocols && 0 != this.protocols.length ? this._socket = new G.window.WebSocket(t,this.protocols) : this._socket = new G.window.WebSocket(t),
            this._socket.binaryType = "arraybuffer",
            this._output = new this._byteClass(),
            this._output.endian = this.endian,
            this._input = new this._byteClass(),
            this._input.endian = this.endian,
            this._addInputPosition = 0,
            this._socket.onopen = function(t) {
                e._onOpen(t);
            }
            ,
            this._socket.onmessage = function(t) {
                e._onMessage(t);
            }
            ,
            this._socket.onclose = function(t) {
                e._onClose(t);
            }
            ,
            this._socket.onerror = function(t) {
                e._onError(t);
            }
            ;
        }
        ,
        e.cleanSocket = function() {
            try {
                this._socket.close();
            } catch (t) {}
            this._connected = !1,
            this._socket.onopen = null,
            this._socket.onmessage = null,
            this._socket.onclose = null,
            this._socket.onerror = null,
            this._socket = null;
        }
        ,
        e.close = function() {
            if (null != this._socket)
                try {
                    this._socket.close();
                } catch (t) {}
        }
        ,
        e._onOpen = function(t) {
            this._connected = !0,
            this.event("open", t);
        }
        ,
        e._onMessage = function(t) {
            if (t && t.data) {
                var e = t.data;
                if (this.disableInput && e)
                    this.event("message", e);
                else {
                    0 < this._input.length && this._input.bytesAvailable < 1 && (this._input.clear(),
                    this._addInputPosition = 0);
                    var i = this._input.pos;
                    !this._addInputPosition && (this._addInputPosition = 0),
                    this._input.pos = this._addInputPosition,
                    e && ("string" == typeof e ? this._input.writeUTFBytes(e) : this._input.writeArrayBuffer(e),
                    this._addInputPosition = this._input.pos,
                    this._input.pos = i),
                    this.event("message", e);
                }
            }
        }
        ,
        e._onClose = function(t) {
            this._connected = !1,
            this.event("close", t);
        }
        ,
        e._onError = function(t) {
            this.event("error", t);
        }
        ,
        e.send = function(t) {
            this._socket.send(t);
        }
        ,
        e.flush = function() {
            if (this._output && 0 < this._output.length) {
                var e;
                try {
                    this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));
                } catch (t) {
                    e = t;
                }
                this._output.endian = this.endian,
                this._output.clear(),
                e && this.event("error", e);
            }
        }
        ,
        u(0, e, "input", function() {
            return this._input;
        }),
        u(0, e, "output", function() {
            return this._output;
        }),
        u(0, e, "connected", function() {
            return this._connected;
        }),
        u(0, e, "endian", function() {
            return this._endian;
        }, function(t) {
            this._endian = t,
            null != this._input && (this._input.endian = t),
            null != this._output && (this._output.endian = t);
        }),
        n.LITTLE_ENDIAN = "littleEndian",
        n.BIG_ENDIAN = "bigEndian";
    }(),
    function(t) {
        function a() {
            this.worker = null,
            a.__super.call(this);
            var e = this;
            this.worker = new G.window.Worker(a.workerPath),
            this.worker.onmessage = function(t) {
                e.workerMessage(t.data);
            }
            ;
        }
        f(a, "laya.net.WorkerLoader", l);
        var e = a.prototype;
        e.workerMessage = function(t) {
            if (t)
                switch (t.type) {
                case "Image":
                    this.imageLoaded(t);
                    break;

                case "Msg":
                    this.event("image_msg", t.msg);
                }
        }
        ,
        e.imageLoaded = function(t) {
            if (t && t.buffer && t.buffer.length < 10)
                return a._enable = !1,
                this._myTrace("buffer lost when postmessage ,disable workerloader"),
                this.event(t.url, null),
                void this.event("image_err", t.url + "\n" + t.msg);
            if (!t.dataType)
                return this.event(t.url, null),
                void this.event("image_err", t.url + "\n" + t.msg);
            var e, i, n;
            switch (t.dataType) {
            case "buffer":
                (n = (i = (e = new vt("2D")).source.getContext("2d")).createImageData(t.width, t.height)).data.set(t.buffer),
                e.size(n.width, n.height),
                i.putImageData(n, 0, 0),
                e.memorySize = 0;
                break;

            case "imagedata":
                i = (e = new vt("2D")).source.getContext("2d"),
                n = t.imagedata,
                e.size(n.width, n.height),
                i.putImageData(n, 0, 0),
                n = t.imagedata,
                e.memorySize = 0;
                break;

            case "imageBitmap":
                n = t.imageBitmap,
                R.isWebGL ? e = n : (i = (e = new vt("2D")).source.getContext("2d"),
                e.size(n.width, n.height),
                i.drawImage(n, 0, 0),
                e.src = t.url);
            }
            R.isWebGL && (e = new laya.webgl.resource.WebGLImage(e,t.url)),
            this.event(t.url, e);
        }
        ,
        e._myTrace = function(t) {
            var e = arguments
              , i = []
              , n = 0
              , a = e.length;
            for (n = 0; n < a; n++)
                i.push(e[n]);
            this.event("image_msg", i.join(" "));
        }
        ,
        e.loadImage = function(t) {
            var e;
            (e = {
                type: "load"
            }).url = t,
            this.worker.postMessage(e);
        }
        ,
        e._loadImage = function(e) {
            var i = this;
            if (!a._enable || e.toLowerCase().indexOf(".png") < 0)
                a._preLoadFun.call(i, e);
            else {
                e = D.formatURL(e);
                var n = function(t) {
                    laya.net.WorkerLoader.I.off(e, i, n),
                    t ? i.onLoaded(t) : a._preLoadFun.call(i, e);
                };
                laya.net.WorkerLoader.I.on(e, i, n),
                laya.net.WorkerLoader.I.loadImage(e);
            }
        }
        ,
        u(1, a, "enable", function() {
            return a._enable;
        }, function(t) {
            a.disableJSDecode && !G.window.createImageBitmap || (a._enable = t) && null == a._preLoadFun && (a._enable = a.__init__());
        }),
        a.__init__ = function() {
            return null == a._preLoadFun && (!!G.window.Worker && (a._preLoadFun = ot.prototype._loadImage,
            ot.prototype._loadImage = a.prototype._loadImage,
            a.I || (a.I = new a()),
            !0));
        }
        ,
        a.workerSupported = function() {
            return !!G.window.Worker;
        }
        ,
        a.IMAGE_LOADED = "image_loaded",
        a.IMAGE_ERR = "image_err",
        a.IMAGE_MSG = "image_msg",
        a.I = null,
        a._preLoadFun = null,
        a._enable = !1,
        a.workerPath = "libs/worker.js",
        a.disableJSDecode = !0;
    }(),
    function(t) {
        function o() {
            o.__super.call(this),
            this._$1__id = ++o._uniqueIDCounter,
            this.__loaded = !0,
            this._destroyed = !1,
            this._referenceCount = 0,
            (o._idResourcesMap[this.id] = this)._released = !0,
            this.lock = !1,
            this._memorySize = 0,
            this._lastUseFrameCount = -1,
            B.currentResourceManager && B.currentResourceManager.addResource(this);
        }
        f(o, "laya.resource.Resource", l);
        var e = o.prototype;
        return w.imps(e, {
            "laya.resource.ICreateResource": !0,
            "laya.resource.IDispose": !0
        }),
        e._setUrl = function(t) {
            var e;
            this._url !== t && (this._url && ((e = o._urlResourcesMap[this._url]).splice(e.indexOf(this), 1),
            0 === e.length && delete o._urlResourcesMap[this._url]),
            t && ((e = o._urlResourcesMap[t]) || (o._urlResourcesMap[t] = e = []),
            e.push(this)),
            this._url = t);
        }
        ,
        e._getGroup = function() {
            return this._group;
        }
        ,
        e._setGroup = function(t) {
            var e;
            this._group !== t && (this._group && ((e = o._groupResourcesMap[this._group]).splice(e.indexOf(this), 1),
            0 === e.length && delete o._groupResourcesMap[this._group]),
            t && ((e = o._groupResourcesMap[t]) || (o._groupResourcesMap[t] = e = []),
            e.push(this)),
            this._group = t);
        }
        ,
        e._addReference = function() {
            this._referenceCount++;
        }
        ,
        e._removeReference = function() {
            this._referenceCount--;
        }
        ,
        e._clearReference = function() {
            this._referenceCount = 0;
        }
        ,
        e._endLoaded = function() {
            this.__loaded = !0,
            this.event("loaded", this);
        }
        ,
        e.recreateResource = function() {
            this.completeCreate();
        }
        ,
        e.disposeResource = function() {}
        ,
        e.activeResource = function(t) {
            void 0 === t && (t = !1),
            this._lastUseFrameCount = K.loopCount,
            !this._destroyed && this.__loaded && (this._released || t) && this.recreateResource();
        }
        ,
        e.releaseResource = function(t) {
            return void 0 === t && (t = !1),
            !(!t && this.lock) && (!(this._released && !t) && (this.disposeResource(),
            this._released = !0,
            this._lastUseFrameCount = -1,
            this.event("released", this),
            !0));
        }
        ,
        e.onAsynLoaded = function(t, e, i) {
            throw new Error("Resource: must override this function!");
        }
        ,
        e.destroy = function() {
            var t;
            this._destroyed || (null !== this._resourceManager && this._resourceManager.removeResource(this),
            this._destroyed = !0,
            this.lock = !1,
            this.releaseResource(),
            delete o._idResourcesMap[this.id],
            this._url && ((t = o._urlResourcesMap[this._url]) && (t.splice(t.indexOf(this), 1),
            0 === t.length && delete o._urlResourcesMap[this.url]),
            ot.clearRes(this._url),
            this.__loaded || P.cancelLoadByUrl(this._url)),
            this._group && ((t = o._groupResourcesMap[this._group]).splice(t.indexOf(this), 1),
            0 === t.length && delete o._groupResourcesMap[this.url]));
        }
        ,
        e.completeCreate = function() {
            this._released = !1,
            this.event("recovered", this);
        }
        ,
        e.dispose = function() {
            this.destroy();
        }
        ,
        u(0, e, "memorySize", function() {
            return this._memorySize;
        }, function(t) {
            var e = t - this._memorySize;
            this._memorySize = t,
            this.resourceManager && this.resourceManager.addSize(e);
        }),
        u(0, e, "_loaded", null, function(t) {
            this.__loaded = t;
        }),
        u(0, e, "loaded", function() {
            return this.__loaded;
        }),
        u(0, e, "id", function() {
            return this._$1__id;
        }),
        u(0, e, "destroyed", function() {
            return this._destroyed;
        }),
        u(0, e, "group", function() {
            return this._getGroup();
        }, function(t) {
            this._setGroup(t);
        }),
        u(0, e, "resourceManager", function() {
            return this._resourceManager;
        }),
        u(0, e, "url", function() {
            return this._url;
        }),
        u(0, e, "released", function() {
            return this._released;
        }),
        u(0, e, "referenceCount", function() {
            return this._referenceCount;
        }),
        o.getResourceByID = function(t) {
            return o._idResourcesMap[t];
        }
        ,
        o.getResourceByURL = function(t, e) {
            return void 0 === e && (e = 0),
            o._urlResourcesMap[t][e];
        }
        ,
        o.getResourceCountByURL = function(t) {
            return o._urlResourcesMap[t].length;
        }
        ,
        o.destroyUnusedResources = function(t) {
            var e;
            if (t) {
                var i = o._groupResourcesMap[t];
                if (i)
                    for (var n = i.slice(), a = 0, s = n.length; a < s; a++)
                        (e = n[a]).lock || 0 !== e._referenceCount || e.destroy();
            } else
                for (var r in o._idResourcesMap)
                    (e = o._idResourcesMap[r]).lock || 0 !== e._referenceCount || e.destroy();
        }
        ,
        o._uniqueIDCounter = 0,
        o._idResourcesMap = {},
        o._urlResourcesMap = {},
        o._groupResourcesMap = {},
        o;
    }())
      , ut = function(t) {
        function T(t, e) {
            this.offsetX = 0,
            this.offsetY = 0,
            this.sourceWidth = 0,
            this.sourceHeight = 0,
            this._w = 0,
            this._h = 0,
            this._uvID = 0,
            this._atlasID = -1,
            this.scaleRate = 1,
            T.__super.call(this),
            t && null != t._addReference && t._addReference(),
            this.setTo(t, e);
        }
        f(T, "laya.resource.Texture", l);
        var e = T.prototype;
        return e._setUrl = function(t) {
            this.url = t;
        }
        ,
        e.setTo = function(t, e) {
            if (t instanceof r.HTMLElement) {
                var i = vt.create("2D", t);
                this.bitmap = i;
            } else
                this.bitmap = t;
            if (this.uv = e || T.DEF_UV,
            t) {
                this._w = t.width,
                this._h = t.height,
                this.sourceWidth = this.sourceWidth || this._w,
                this.sourceHeight = this.sourceHeight || this._h,
                this._loaded = 0 < this._w;
                var n = this;
                if (this._loaded)
                    P.addToAtlas && P.addToAtlas(n);
                else {
                    var a = t;
                    a instanceof laya.resource.HTMLImage && a.image && a.image.addEventListener("load", function(t) {
                        P.addToAtlas && P.addToAtlas(n);
                    }, !1);
                }
            }
        }
        ,
        e.active = function() {
            this.bitmap && this.bitmap.activeResource();
        }
        ,
        e.destroy = function(t) {
            if (void 0 === t && (t = !1),
            this.bitmap && 0 < this.bitmap.referenceCount) {
                var e = this.bitmap;
                t ? (R.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(),
                this.bitmap = null,
                e.dispose(),
                e._clearReference()) : (e._removeReference(),
                0 == e.referenceCount && (R.isConchApp && e.source && e.source.conchDestroy && this.bitmap.source.conchDestroy(),
                this.bitmap = null,
                e.dispose())),
                this.url && this === w.loader.getRes(this.url) && w.loader.clearRes(this.url, t),
                this._loaded = !1;
            }
        }
        ,
        e.load = function(t) {
            var e = this;
            this._loaded = !1,
            t = D.customFormat(t);
            var i = this.bitmap || (this.bitmap = bt.create(t));
            i && i._addReference();
            var n = this;
            i.onload = function() {
                i.onload = null,
                n._loaded = !0,
                e.sourceWidth = e._w = i.width,
                e.sourceHeight = e._h = i.height,
                n.event("loaded", this),
                P.addToAtlas && P.addToAtlas(n);
            }
            ;
        }
        ,
        e.addTextureToAtlas = function(t) {
            P.addTextureToAtlas(this);
        }
        ,
        e.getPixels = function(t, e, i, n) {
            if (R.isConchApp) {
                var a = this.bitmap;
                if (a.source && a.source.getImageData) {
                    var s = a.source.getImageData(t, e, i, n)
                      , r = new Uint8Array(s);
                    return Array.from(r);
                }
                return null;
            }
            return R.isWebGL ? P.getTexturePixels(this, t, e, i, n) : (G.canvas.size(i, n),
            G.canvas.clear(),
            G.context.drawTexture(this, -t, -e, this.width, this.height, 0, 0),
            G.context.getImageData(0, 0, i, n).data);
        }
        ,
        e.onAsynLoaded = function(t, e) {
            e && e._addReference(),
            this.setTo(e, this.uv);
        }
        ,
        u(0, e, "source", function() {
            return this.bitmap ? (this.bitmap.activeResource(),
            this.bitmap.source) : null;
        }),
        u(0, e, "loaded", function() {
            return this._loaded;
        }),
        u(0, e, "released", function() {
            return !this.bitmap || this.bitmap.released;
        }),
        u(0, e, "width", function() {
            return this._w ? this._w : this.uv && this.uv !== T.DEF_UV ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;
        }, function(t) {
            this._w = t,
            this.sourceWidth || (this.sourceWidth = t);
        }),
        u(0, e, "repeat", function() {
            return !R.isWebGL || !this.bitmap || this.bitmap.repeat;
        }, function(t) {
            t && R.isWebGL && this.bitmap && (this.bitmap.repeat = t) && (this.bitmap.enableMerageInAtlas = !1);
        }),
        u(0, e, "height", function() {
            return this._h ? this._h : this.uv && this.uv !== T.DEF_UV ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;
        }, function(t) {
            this._h = t,
            this.sourceHeight || (this.sourceHeight = t);
        }),
        u(0, e, "isLinearSampling", function() {
            return !R.isWebGL || 9728 != this.bitmap.minFifter;
        }, function(t) {
            !t && R.isWebGL && (t || -1 != this.bitmap.minFifter || -1 != this.bitmap.magFifter || (this.bitmap.minFifter = 9728,
            this.bitmap.magFifter = 9728,
            this.bitmap.enableMerageInAtlas = !1));
        }),
        T.moveUV = function(t, e, i) {
            for (var n = 0; n < 8; n += 2)
                i[n] += t,
                i[n + 1] += e;
            return i;
        }
        ,
        T.create = function(t, e, i, n, a, s, r, o, h) {
            void 0 === s && (s = 0),
            void 0 === r && (r = 0),
            void 0 === o && (o = 0),
            void 0 === h && (h = 0);
            var l = t instanceof laya.resource.Texture
              , u = l ? t.uv : T.DEF_UV
              , c = l ? t.bitmap : t
              , d = P.isAtlas(c);
            if (d) {
                var _ = c._atlaser
                  , p = t._atlasID;
                if (-1 == p)
                    throw new Error("create texture error");
                c = _._inAtlasTextureBitmapValue[p],
                u = _._inAtlasTextureOriUVValue[p];
            }
            var f = new T(c,null);
            c.width && e + n > c.width && (n = c.width - e),
            c.height && i + a > c.height && (a = c.height - i),
            f.width = n,
            f.height = a,
            f.offsetX = s,
            f.offsetY = r,
            f.sourceWidth = o || n,
            f.sourceHeight = h || a;
            var g = 1 / c.width
              , m = 1 / c.height;
            e *= g,
            i *= m,
            n *= g,
            a *= m;
            var y = f.uv[0]
              , v = f.uv[1]
              , S = f.uv[4]
              , x = f.uv[5]
              , b = S - y
              , w = x - v
              , M = T.moveUV(u[0], u[1], [e, i, e + n, i, e + n, i + a, e, i + a]);
            f.uv = [y + M[0] * b, v + M[1] * w, S - (1 - M[2]) * b, v + M[3] * w, S - (1 - M[4]) * b, x - (1 - M[5]) * w, y + M[6] * b, x - (1 - M[7]) * w],
            d && f.addTextureToAtlas();
            var I = c.scaleRate;
            return I && 1 != I ? (f.sourceWidth /= I,
            f.sourceHeight /= I,
            f.width /= I,
            f.height /= I,
            f.scaleRate = I,
            f.offsetX /= I,
            f.offsetY /= I) : f.scaleRate = 1,
            f;
        }
        ,
        T.createFromTexture = function(t, e, i, n, a) {
            var s = t.scaleRate;
            1 != s && (e *= s,
            i *= s,
            n *= s,
            a *= s);
            var r = I.TEMP.setTo(e - t.offsetX, i - t.offsetY, n, a)
              , o = r.intersection(T._rect1.setTo(0, 0, t.width, t.height), T._rect2);
            if (!o)
                return null;
            var h = T.create(t, o.x, o.y, o.width, o.height, o.x - r.x, o.y - r.y, n, a);
            return h.bitmap._removeReference(),
            h;
        }
        ,
        T.DEF_UV = [0, 0, 1, 0, 1, 1, 0, 1],
        T.INV_UV = [0, 1, 1, 1, 1, 0, 0, 0],
        T._rect1 = new I(),
        T._rect2 = new I(),
        T;
    }()
      , t = function(t) {
        var o;
        function s() {
            this._labelDic = null,
            this._tweenDic = {},
            this._tweenDataList = [],
            this._endTweenDataList = null,
            this._currTime = 0,
            this._lastTime = 0,
            this._startTime = 0,
            this._index = 0,
            this._gidIndex = 0,
            this._firstTweenDic = {},
            this._startTimeSort = !1,
            this._endTimeSort = !1,
            this._loopKey = !1,
            this.scale = 1,
            this._frameRate = 60,
            this._frameIndex = 0,
            this._total = 0,
            s.__super.call(this);
        }
        f(s, "laya.utils.TimeLine", l);
        var e = s.prototype;
        return e.to = function(t, e, i, n, a) {
            return void 0 === a && (a = 0),
            this._create(t, e, i, n, a, !0);
        }
        ,
        e.from = function(t, e, i, n, a) {
            return void 0 === a && (a = 0),
            this._create(t, e, i, n, a, !1);
        }
        ,
        e._create = function(t, e, i, n, a, s) {
            var r = z.getItemByClass("tweenData", o);
            return r.isTo = s,
            r.type = 0,
            r.target = t,
            r.duration = i,
            r.data = e,
            r.startTime = this._startTime + a,
            r.endTime = r.startTime + r.duration,
            r.ease = n,
            this._startTime = Math.max(r.endTime, this._startTime),
            this._tweenDataList.push(r),
            this._startTimeSort = !0,
            this._endTimeSort = !0,
            this;
        }
        ,
        e.addLabel = function(t, e) {
            var i = z.getItemByClass("tweenData", o);
            return i.type = 1,
            i.data = t,
            i.endTime = i.startTime = this._startTime + e,
            this._labelDic || (this._labelDic = {}),
            this._labelDic[t] = i,
            this._tweenDataList.push(i),
            this;
        }
        ,
        e.removeLabel = function(t) {
            if (this._labelDic && this._labelDic[t]) {
                var e = this._labelDic[t];
                if (e) {
                    var i = this._tweenDataList.indexOf(e);
                    -1 < i && this._tweenDataList.splice(i, 1);
                }
                delete this._labelDic[t];
            }
        }
        ,
        e.gotoTime = function(t) {
            if (null != this._tweenDataList && 0 != this._tweenDataList.length) {
                var e, i, n, a;
                for (var s in this._firstTweenDic)
                    if (i = this._firstTweenDic[s])
                        for (var r in i)
                            i.diyTarget.hasOwnProperty(r) && (i.diyTarget[r] = i[r]);
                for (s in this._tweenDic)
                    (e = this._tweenDic[s]).clear(),
                    delete this._tweenDic[s];
                if (this._index = 0,
                this._gidIndex = 0,
                this._currTime = t,
                this._lastTime = G.now(),
                null == this._endTweenDataList || this._endTimeSort) {
                    this._endTimeSort = !1,
                    this._endTweenDataList = n = this._tweenDataList.concat(),
                    n.sort(function(t, e) {
                        return t.endTime > e.endTime ? 1 : t.endTime < e.endTime ? -1 : 0;
                    });
                } else
                    n = this._endTweenDataList;
                for (var o = 0, h = n.length; o < h; o++)
                    if (0 == (a = n[o]).type) {
                        if (!(t >= a.endTime))
                            break;
                        this._index = Math.max(this._index, o + 1);
                        var l = a.data;
                        if (a.isTo)
                            for (var u in l)
                                a.target[u] = l[u];
                    }
                for (o = 0,
                h = this._tweenDataList.length; o < h; o++)
                    0 == (a = this._tweenDataList[o]).type && t >= a.startTime && t < a.endTime && (this._index = Math.max(this._index, o + 1),
                    this._gidIndex++,
                    (e = z.getItemByClass("tween", $))._create(a.target, a.data, a.duration, a.ease, y.create(this, this._animComplete, [this._gidIndex]), 0, !1, a.isTo, !0, !1),
                    e.setStartTime(this._currTime - (t - a.startTime)),
                    e._updateEase(this._currTime),
                    e.gid = this._gidIndex,
                    this._tweenDic[this._gidIndex] = e);
            }
        }
        ,
        e.gotoLabel = function(t) {
            if (null != this._labelDic) {
                var e = this._labelDic[t];
                e && this.gotoTime(e.startTime);
            }
        }
        ,
        e.pause = function() {
            w.timer.clear(this, this._update);
        }
        ,
        e.resume = function() {
            this.play(this._currTime, this._loopKey);
        }
        ,
        e.play = function(t, e) {
            if (void 0 === t && (t = 0),
            void 0 === e && (e = !1),
            this._tweenDataList) {
                if (this._startTimeSort) {
                    this._startTimeSort = !1,
                    this._tweenDataList.sort(function(t, e) {
                        return t.startTime > e.startTime ? 1 : t.startTime < e.startTime ? -1 : 0;
                    });
                    for (var i = 0, n = this._tweenDataList.length; i < n; i++) {
                        var a = this._tweenDataList[i];
                        if (null != a && 0 == a.type) {
                            var s = a.target
                              , r = s.$_GID || (s.$_GID = q.getGID())
                              , o = null;
                            for (var h in null == this._firstTweenDic[r] ? ((o = {}).diyTarget = s,
                            this._firstTweenDic[r] = o) : o = this._firstTweenDic[r],
                            a.data)
                                null == o[h] && (o[h] = s[h]);
                        }
                    }
                }
                "string" == typeof t ? this.gotoLabel(t) : this.gotoTime(t),
                this._loopKey = e,
                this._lastTime = G.now(),
                w.timer.frameLoop(1, this, this._update);
            }
        }
        ,
        e._update = function() {
            if (this._currTime >= this._startTime) {
                if (!this._loopKey) {
                    for (var t in this._tweenDic)
                        (e = this._tweenDic[t]).complete();
                    return this._complete(),
                    void this.pause();
                }
                if (this._complete(),
                !this._tweenDataList)
                    return;
                this.gotoTime(0);
            }
            var e, i = G.now(), n = i - this._lastTime, a = this._currTime += n * this.scale;
            for (t in this._lastTime = i,
            this._tweenDic)
                (e = this._tweenDic[t])._updateEase(a);
            if (0 != this._tweenDataList.length && this._index < this._tweenDataList.length) {
                var s = this._tweenDataList[this._index];
                a >= s.startTime && (this._index++,
                0 == s.type ? (this._gidIndex++,
                (e = z.getItemByClass("tween", $))._create(s.target, s.data, s.duration, s.ease, y.create(this, this._animComplete, [this._gidIndex]), 0, !1, s.isTo, !0, !1),
                e.setStartTime(a),
                e.gid = this._gidIndex,
                (this._tweenDic[this._gidIndex] = e)._updateEase(a)) : this.event("label", s.data));
            }
        }
        ,
        e._animComplete = function(t) {
            this._tweenDic[t] && delete this._tweenDic[t];
        }
        ,
        e._complete = function() {
            this.event("complete");
        }
        ,
        e.reset = function() {
            var t;
            if (this._labelDic)
                for (t in this._labelDic)
                    delete this._labelDic[t];
            for (t in this._tweenDic)
                this._tweenDic[t].clear(),
                delete this._tweenDic[t];
            for (t in this._firstTweenDic)
                delete this._firstTweenDic[t];
            if (this._endTweenDataList = null,
            this._tweenDataList && this._tweenDataList.length) {
                var e, i = 0;
                for (e = this._tweenDataList.length,
                i = 0; i < e; i++)
                    this._tweenDataList[i] && this._tweenDataList[i].destroy();
            }
            this._tweenDataList.length = 0,
            this._currTime = 0,
            this._lastTime = 0,
            this._startTime = 0,
            this._index = 0,
            this._gidIndex = 0,
            this.scale = 1,
            w.timer.clear(this, this._update);
        }
        ,
        e.destroy = function() {
            this.reset(),
            this._labelDic = null,
            this._tweenDic = null,
            this._tweenDataList = null,
            this._firstTweenDic = null;
        }
        ,
        u(0, e, "index", function() {
            return this._frameIndex;
        }, function(t) {
            this._frameIndex = t,
            this.gotoTime(this._frameIndex / this._frameRate * 1e3);
        }),
        u(0, e, "total", function() {
            return this._total = Math.floor(this._startTime / 1e3 * this._frameRate),
            this._total;
        }),
        s.to = function(t, e, i, n, a) {
            return void 0 === a && (a = 0),
            new s().to(t, e, i, n, a);
        }
        ,
        s.from = function(t, e, i, n, a) {
            return void 0 === a && (a = 0),
            new s().from(t, e, i, n, a);
        }
        ,
        s.__init$ = function() {
            o = function() {
                function t() {
                    this.type = 0,
                    this.isTo = !0,
                    this.startTime = NaN,
                    this.endTime = NaN,
                    this.target = null,
                    this.duration = NaN,
                    this.ease = null,
                    this.data = null;
                }
                return f(t, ""),
                t.prototype.destroy = function() {
                    this.target = null,
                    this.ease = null,
                    this.data = null,
                    this.isTo = !0,
                    this.type = 0,
                    z.recover("tweenData", this);
                }
                ,
                t;
            }();
        }
        ,
        s;
    }()
      , ct = function(a) {
        function i() {
            this._transform = null,
            this._tfChanged = !1,
            this._x = 0,
            this._y = 0,
            this._width = 0,
            this._height = 0,
            this._repaint = 1,
            this._mouseEnableState = 0,
            this._zOrder = 0,
            this._graphics = null,
            this._renderType = 0,
            this._optimizeScrollRect = !1,
            this._texture = null,
            this.mouseThrough = !1,
            this.autoSize = !1,
            this.hitTestPrior = !1,
            this.viewport = null,
            i.__super.call(this),
            this._style = o.EMPTY;
        }
        f(i, "laya.display.Sprite", a);
        var t = i.prototype;
        return w.imps(t, {
            "laya.display.ILayout": !0
        }),
        t.createConchModel = function() {
            return new ConchNode();
        }
        ,
        t.destroy = function(t) {
            void 0 === t && (t = !0),
            this._releaseMem(),
            a.prototype.destroy.call(this, t),
            this._style && this._style.destroy(),
            this._transform && this._transform.destroy(),
            this._transform = null,
            this._style = null,
            this._graphics = null;
        }
        ,
        t.updateZOrder = function() {
            q.updateOrder(this._childs) && this.repaint();
        }
        ,
        t.reCache = function() {
            this._$P.cacheCanvas && (this._$P.cacheCanvas.reCache = !0),
            this._repaint = 1;
        }
        ,
        t.setBounds = function(t) {
            this._set$P("uBounds", t);
        }
        ,
        t.getBounds = function() {
            return this._$P.mBounds || this._set$P("mBounds", new I()),
            I._getWrapRec(this._boundPointsToParent(), this._$P.mBounds);
        }
        ,
        t.getSelfBounds = function() {
            return this._$P.uBounds ? this._$P.uBounds : (this._$P.mBounds || this._set$P("mBounds", new I()),
            I._getWrapRec(this._getBoundPointsM(!1), this._$P.mBounds));
        }
        ,
        t._boundPointsToParent = function(t) {
            void 0 === t && (t = !1);
            var e = 0
              , i = 0;
            this._style && (e = this._style._tf.translateX,
            i = this._style._tf.translateY,
            t = t || 0 !== this._style._tf.rotate,
            this._style.scrollRect && (e += this._style.scrollRect.x,
            i += this._style.scrollRect.y));
            var n = this._getBoundPointsM(t);
            if (!n || n.length < 1)
                return n;
            if (8 != n.length && (n = t ? x.scanPList(n) : I._getWrapRec(n, I.TEMP)._getBoundPoints()),
            !this.transform)
                return q.transPointList(n, this._x - e, this._y - i),
                n;
            var a = M.TEMP
              , s = 0
              , r = n.length;
            for (s = 0; s < r; s += 2)
                a.x = n[s],
                a.y = n[s + 1],
                this.toParentPoint(a),
                n[s] = a.x,
                n[s + 1] = a.y;
            return n;
        }
        ,
        t.getGraphicBounds = function(t) {
            return void 0 === t && (t = !1),
            this._graphics ? this._graphics.getBounds(t) : I.TEMP.setTo(0, 0, 0, 0);
        }
        ,
        t._getBoundPointsM = function(t) {
            if (void 0 === t && (t = !1),
            this._$P.uBounds)
                return this._$P.uBounds._getBoundPoints();
            if (this._$P.temBM || this._set$P("temBM", []),
            this.scrollRect) {
                var e = q.clearArray(this._$P.temBM)
                  , i = I.TEMP;
                return i.copyFrom(this.scrollRect),
                q.concatArray(e, i._getBoundPoints()),
                e;
            }
            for (var n, a, s, r = this._graphics ? this._graphics.getBoundPoints() : q.clearArray(this._$P.temBM), o = 0, h = (s = this._childs).length; o < h; o++)
                (n = s[o])instanceof laya.display.Sprite && 1 == n.visible && (a = n._boundPointsToParent(t)) && (r = r ? q.concatArray(r, a) : a);
            return r;
        }
        ,
        t.getStyle = function() {
            return this._style === o.EMPTY && (this._style = new o()),
            this._style;
        }
        ,
        t.setStyle = function(t) {
            this._style = t;
        }
        ,
        t._adjustTransform = function() {
            this._tfChanged = !1;
            var t, e = this._style._tf, i = e.scaleX, n = e.scaleY;
            if (e.rotate || 1 !== i || 1 !== n || e.skewX || e.skewY) {
                (t = this._transform || (this._transform = A.create())).bTransform = !0;
                var a = .0174532922222222 * (e.rotate - e.skewX)
                  , s = .0174532922222222 * (e.rotate + e.skewY)
                  , r = Math.cos(s)
                  , o = Math.sin(s)
                  , h = Math.sin(a)
                  , l = Math.cos(a);
                return t.a = i * r,
                t.b = i * o,
                t.c = -n * h,
                t.d = n * l,
                t.tx = t.ty = 0,
                t;
            }
            return this._transform && this._transform.destroy(),
            this._transform = null,
            this._renderType &= -5,
            t;
        }
        ,
        t.pos = function(t, e, i) {
            if (void 0 === i && (i = !1),
            this._x !== t || this._y !== e) {
                if (this.destroyed)
                    return this;
                if (i) {
                    this._x = t,
                    this._y = e,
                    this.conchModel && this.conchModel.pos(this._x, this._y);
                    var n = this._parent;
                    n && 0 === n._repaint && (n._repaint = 1,
                    n.parentRepaint()),
                    this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1,
                    this._$P.maskParent.parentRepaint());
                } else
                    this.x = t,
                    this.y = e;
            }
            return this;
        }
        ,
        t.pivot = function(t, e) {
            return this.pivotX = t,
            this.pivotY = e,
            this;
        }
        ,
        t.size = function(t, e) {
            return this.width = t,
            this.height = e,
            this;
        }
        ,
        t.scale = function(t, e, i) {
            void 0 === i && (i = !1);
            var n = this.getStyle()
              , a = n._tf;
            if (a.scaleX != t || a.scaleY != e) {
                if (this.destroyed)
                    return this;
                if (i) {
                    n.setScale(t, e),
                    this._tfChanged = !0,
                    this.conchModel && this.conchModel.scale(t, e),
                    this._renderType |= 4;
                    var s = this._parent;
                    s && 0 === s._repaint && (s._repaint = 1,
                    s.parentRepaint());
                } else
                    this.scaleX = t,
                    this.scaleY = e;
            }
            return this;
        }
        ,
        t.skew = function(t, e) {
            return this.skewX = t,
            this.skewY = e,
            this;
        }
        ,
        t.render = function(t, e, i) {
            K.spriteCount++,
            N.renders[this._renderType]._fun(this, t, e + this._x, i + this._y),
            this._repaint = 0;
        }
        ,
        t.drawToCanvas = function(t, e, i, n) {
            if (R.isConchNode) {
                var a = vt.create("2D");
                return new k(t,e,a).ctx.setCanvasType(1),
                this.conchModel.drawToCanvas(a.source, i, n),
                a;
            }
            return P.drawToCanvas(this, this._renderType, t, e, i, n);
        }
        ,
        t.customRender = function(t, e, i) {
            this._renderType |= 1024;
        }
        ,
        t._applyFilters = function() {
            var t;
            if (!R.isWebGL && ((t = this._$P.filters) && !(t.length < 1)))
                for (var e = 0, i = t.length; e < i; e++)
                    t[e].action.apply(this._$P.cacheCanvas);
        }
        ,
        t._isHaveGlowFilter = function() {
            var t, e = 0;
            if (this.filters)
                for (e = 0; e < this.filters.length; e++)
                    if (8 == this.filters[e].type)
                        return !0;
            for (e = 0,
            t = this._childs.length; e < t; e++)
                if (this._childs[e]._isHaveGlowFilter())
                    return !0;
            return !1;
        }
        ,
        t.localToGlobal = function(t, e) {
            void 0 === e && (e = !1),
            !0 === e && (t = new M(t.x,t.y));
            for (var i = this; i && i != w.stage; )
                t = i.toParentPoint(t),
                i = i.parent;
            return t;
        }
        ,
        t.globalToLocal = function(t, e) {
            void 0 === e && (e = !1),
            e && (t = new M(t.x,t.y));
            for (var i = this, n = []; i && i != w.stage; )
                n.push(i),
                i = i.parent;
            for (var a = n.length - 1; 0 <= a; )
                t = (i = n[a]).fromParentPoint(t),
                a--;
            return t;
        }
        ,
        t.toParentPoint = function(t) {
            if (!t)
                return t;
            t.x -= this.pivotX,
            t.y -= this.pivotY,
            this.transform && this._transform.transformPoint(t),
            t.x += this._x,
            t.y += this._y;
            var e = this._style.scrollRect;
            return e && (t.x -= e.x,
            t.y -= e.y),
            t;
        }
        ,
        t.fromParentPoint = function(t) {
            if (!t)
                return t;
            t.x -= this._x,
            t.y -= this._y;
            var e = this._style.scrollRect;
            return e && (t.x += e.x,
            t.y += e.y),
            this.transform && this._transform.invertTransformPoint(t),
            t.x += this.pivotX,
            t.y += this.pivotY,
            t;
        }
        ,
        t.on = function(t, e, i, n) {
            return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0,
            this._setBit(2, !0),
            this._parent && this._$2__onDisplay(),
            this._createListener(t, e, i, n, !1)) : a.prototype.on.call(this, t, e, i, n);
        }
        ,
        t.once = function(t, e, i, n) {
            return 1 !== this._mouseEnableState && this.isMouseEvent(t) ? (this.mouseEnabled = !0,
            this._setBit(2, !0),
            this._parent && this._$2__onDisplay(),
            this._createListener(t, e, i, n, !0)) : a.prototype.once.call(this, t, e, i, n);
        }
        ,
        t._$2__onDisplay = function() {
            if (1 !== this._mouseEnableState) {
                var t = this;
                for (t = t.parent; t && 1 !== t._mouseEnableState && !t._getBit(2); )
                    t.mouseEnabled = !0,
                    t._setBit(2, !0),
                    t = t.parent;
            }
        }
        ,
        t.loadImage = function(t, e, i, n, a, s) {
            var r = this;
            return void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            this.graphics.loadImage(t, e, i, n, a, function(t) {
                r.destroyed || (r.size(e + (n || t.width), i + (a || t.height)),
                r.repaint(),
                s && s.runWith(t));
            }),
            this;
        }
        ,
        t.repaint = function() {
            this.conchModel && this.conchModel.repaint && this.conchModel.repaint(),
            0 === this._repaint && (this._repaint = 1,
            this.parentRepaint()),
            this._$P && this._$P.maskParent && this._$P.maskParent.repaint();
        }
        ,
        t._needRepaint = function() {
            return 0 !== this._repaint && this._$P.cacheCanvas && this._$P.cacheCanvas.reCache;
        }
        ,
        t._childChanged = function(t) {
            this._childs.length ? this._renderType |= 2048 : this._renderType &= -2049,
            t && this._get$P("hasZorder") && w.timer.callLater(this, this.updateZOrder),
            this.repaint();
        }
        ,
        t.parentRepaint = function() {
            var t = this._parent;
            t && 0 === t._repaint && (t._repaint = 1,
            t.parentRepaint());
        }
        ,
        t.startDrag = function(t, e, i, n, a, s, r) {
            void 0 === e && (e = !1),
            void 0 === i && (i = 0),
            void 0 === n && (n = 300),
            void 0 === s && (s = !1),
            void 0 === r && (r = .92),
            this._$P.dragging || this._set$P("dragging", new Y()),
            this._$P.dragging.start(this, t, e, i, n, a, s, r);
        }
        ,
        t.stopDrag = function() {
            this._$P.dragging && this._$P.dragging.stop();
        }
        ,
        t._releaseMem = function() {
            if (this._$P) {
                var t = this._$P.cacheCanvas;
                t && t.ctx && (z.recover("RenderContext", t.ctx),
                t.ctx.canvas.size(0, 0),
                t.ctx = null);
                var e = this._$P._filterCache;
                e && (e.destroy(),
                e.recycle(),
                this._set$P("_filterCache", null)),
                this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", !1),
                this._$P._isHaveGlowFilter = null;
            }
        }
        ,
        t._setDisplay = function(t) {
            t || this._releaseMem(),
            a.prototype._setDisplay.call(this, t);
        }
        ,
        t.hitTestPoint = function(t, e) {
            var i = this.globalToLocal(M.TEMP.setTo(t, e));
            return t = i.x,
            e = i.y,
            (this._$P.hitArea ? this._$P.hitArea : 0 < this._width && 0 < this._height ? I.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds()).contains(t, e);
        }
        ,
        t.getMousePoint = function() {
            return this.globalToLocal(M.TEMP.setTo(w.stage.mouseX, w.stage.mouseY));
        }
        ,
        t._getWords = function() {
            return null;
        }
        ,
        t._addChildsToLayout = function(n) {
            var t = this._getWords();
            if (null == t && 0 == this._childs.length)
                return !1;
            if (t)
                for (var e = 0, i = t.length; e < i; e++)
                    n.push(t[e]);
            return this._childs.forEach(function(t, e, i) {
                t._style._enableLayout() && t._addToLayout(n);
            }),
            !0;
        }
        ,
        t._addToLayout = function(t) {
            this._style.absolute || (this._style.block ? t.push(this) : this._addChildsToLayout(t) && (this.x = this.y = 0));
        }
        ,
        t._isChar = function() {
            return !1;
        }
        ,
        t._getCSSStyle = function() {
            return this._style.getCSSStyle();
        }
        ,
        t._setAttributes = function(t, e) {
            switch (t) {
            case "x":
                this.x = parseFloat(e);
                break;

            case "y":
                this.y = parseFloat(e);
                break;

            case "width":
                this.width = parseFloat(e);
                break;

            case "height":
                this.height = parseFloat(e);
                break;

            default:
                this[t] = e;
            }
        }
        ,
        t._layoutLater = function() {
            this.parent && this.parent._layoutLater();
        }
        ,
        u(0, t, "optimizeScrollRect", function() {
            return this._optimizeScrollRect;
        }, function(t) {
            this._optimizeScrollRect != t && (this._optimizeScrollRect = t,
            this.conchModel && this.conchModel.optimizeScrollRect(t));
        }),
        u(0, t, "customRenderEnable", null, function(t) {
            if (t && (this._renderType |= 1024,
            R.isConchNode)) {
                i.CustomList.push(this);
                var e = new vt("2d");
                e._setContext(new CanvasRenderingContext2D()),
                this.customContext = new k(0,0,e),
                e.context.setCanvasType && e.context.setCanvasType(2),
                this.conchModel.custom(e.context);
            }
        }),
        u(0, t, "cacheAsBitmap", function() {
            return "none" !== this.cacheAs;
        }, function(t) {
            this.cacheAs = t ? this._$P.hasFilter ? "none" : "normal" : "none";
        }),
        u(0, t, "cacheAs", function() {
            return null == this._$P.cacheCanvas ? "none" : this._$P.cacheCanvas.type;
        }, function(t) {
            var e = this._$P.cacheCanvas;
            if (t !== (e ? e.type : "none")) {
                if ("none" !== t)
                    this._getBit(1) || this._setUpNoticeType(1),
                    e || (e = this._set$P("cacheCanvas", z.getItemByClass("cacheCanvas", Object))),
                    e.type = t,
                    e.reCache = !0,
                    this._renderType |= 16,
                    "bitmap" == t && this.conchModel && this.conchModel.cacheAs(1),
                    this._set$P("cacheForFilters", !1);
                else if (this._$P._mask)
                    ;
                else if (this._$P.hasFilter)
                    this._set$P("cacheForFilters", !0);
                else {
                    if (e) {
                        var i = e;
                        i && i.ctx && (z.recover("RenderContext", i.ctx),
                        i.ctx.canvas.size(0, 0),
                        i.ctx = null),
                        z.recover("cacheCanvas", e);
                    }
                    this._$P.cacheCanvas = null,
                    this._renderType &= -17,
                    this.conchModel && this.conchModel.cacheAs(0);
                }
                this.repaint();
            }
        }),
        u(0, t, "zOrder", function() {
            return this._zOrder;
        }, function(t) {
            this._zOrder != t && (this._zOrder = t,
            this.conchModel && this.conchModel.setZOrder && this.conchModel.setZOrder(t),
            this._parent && (t && this._parent._set$P("hasZorder", !0),
            w.timer.callLater(this._parent, this.updateZOrder)));
        }),
        u(0, t, "rotation", function() {
            return this._style._tf.rotate;
        }, function(t) {
            var e = this.getStyle();
            if (e._tf.rotate !== t) {
                e.setRotate(t),
                this._tfChanged = !0,
                this.conchModel && this.conchModel.rotate(t),
                this._renderType |= 4;
                var i = this._parent;
                i && 0 === i._repaint && (i._repaint = 1,
                i.parentRepaint());
            }
        }),
        u(0, t, "width", function() {
            return this.autoSize ? this.getSelfBounds().width : this._width;
        }, function(t) {
            this._width !== t && (this._width = t,
            this.conchModel && this.conchModel.size(t, this._height),
            this.repaint());
        }),
        u(0, t, "x", function() {
            return this._x;
        }, function(t) {
            if (this._x !== t) {
                if (this.destroyed)
                    return;
                this._x = t,
                this.conchModel && this.conchModel.pos(t, this._y);
                var e = this._parent;
                e && 0 === e._repaint && (e._repaint = 1,
                e.parentRepaint()),
                this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1,
                this._$P.maskParent.parentRepaint());
            }
        }),
        u(0, t, "globalScaleY", function() {
            for (var t = 1, e = this; e && e !== w.stage; )
                t *= e.scaleY,
                e = e.parent;
            return t;
        }),
        u(0, t, "hitArea", function() {
            return this._$P.hitArea;
        }, function(t) {
            this._set$P("hitArea", t);
        }),
        u(0, t, "staticCache", function() {
            return this._$P.staticCache;
        }, function(t) {
            this._set$P("staticCache", t),
            t || this.reCache();
        }),
        u(0, t, "texture", function() {
            return this._texture;
        }, function(t) {
            this._texture != t && (this._texture = t,
            this.graphics.cleanByTexture(t, 0, 0));
        }),
        u(0, t, "y", function() {
            return this._y;
        }, function(t) {
            if (this._y !== t) {
                if (this.destroyed)
                    return;
                this._y = t,
                this.conchModel && this.conchModel.pos(this._x, t);
                var e = this._parent;
                e && 0 === e._repaint && (e._repaint = 1,
                e.parentRepaint()),
                this._$P.maskParent && 0 === this._$P.maskParent._repaint && (this._$P.maskParent._repaint = 1,
                this._$P.maskParent.parentRepaint());
            }
        }),
        u(0, t, "height", function() {
            return this.autoSize ? this.getSelfBounds().height : this._height;
        }, function(t) {
            this._height !== t && (this._height = t,
            this.conchModel && this.conchModel.size(this._width, t),
            this.repaint());
        }),
        u(0, t, "blendMode", function() {
            return this._style.blendMode;
        }, function(t) {
            this.getStyle().blendMode = t,
            this.conchModel && this.conchModel.blendMode(t),
            t && "source-over" != t ? this._renderType |= 8 : this._renderType &= -9,
            this.parentRepaint();
        }),
        u(0, t, "scaleX", function() {
            return this._style._tf.scaleX;
        }, function(t) {
            var e = this.getStyle();
            if (e._tf.scaleX !== t) {
                e.setScaleX(t),
                this._tfChanged = !0,
                this.conchModel && this.conchModel.scale(t, e._tf.scaleY),
                this._renderType |= 4;
                var i = this._parent;
                i && 0 === i._repaint && (i._repaint = 1,
                i.parentRepaint());
            }
        }),
        u(0, t, "scaleY", function() {
            return this._style._tf.scaleY;
        }, function(t) {
            var e = this.getStyle();
            if (e._tf.scaleY !== t) {
                e.setScaleY(t),
                this._tfChanged = !0,
                this.conchModel && this.conchModel.scale(e._tf.scaleX, t),
                this._renderType |= 4;
                var i = this._parent;
                i && 0 === i._repaint && (i._repaint = 1,
                i.parentRepaint());
            }
        }),
        u(0, t, "stage", function() {
            return w.stage;
        }),
        u(0, t, "skewX", function() {
            return this._style._tf.skewX;
        }, function(t) {
            var e = this.getStyle();
            if (e._tf.skewX !== t) {
                e.setSkewX(t),
                this._tfChanged = !0,
                this.conchModel && this.conchModel.skew(t, e._tf.skewY),
                this._renderType |= 4;
                var i = this._parent;
                i && 0 === i._repaint && (i._repaint = 1,
                i.parentRepaint());
            }
        }),
        u(0, t, "scrollRect", function() {
            return this._style.scrollRect;
        }, function(t) {
            this.getStyle().scrollRect = t,
            this.repaint(),
            t ? (this._renderType |= 128,
            this.conchModel && this.conchModel.scrollRect(t.x, t.y, t.width, t.height)) : (this._renderType &= -129,
            this.conchModel && (i.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(64) : this.conchModel.removeType(128)));
        }),
        u(0, t, "skewY", function() {
            return this._style._tf.skewY;
        }, function(t) {
            var e = this.getStyle();
            if (e._tf.skewY !== t) {
                e.setSkewY(t),
                this._tfChanged = !0,
                this.conchModel && this.conchModel.skew(e._tf.skewX, t),
                this._renderType |= 4;
                var i = this._parent;
                i && 0 === i._repaint && (i._repaint = 1,
                i.parentRepaint());
            }
        }),
        u(0, t, "transform", function() {
            return this._tfChanged ? this._adjustTransform() : this._transform;
        }, function(t) {
            this._tfChanged = !1,
            (this._transform = t) && (this._x = t.tx,
            this._y = t.ty,
            t.tx = t.ty = 0,
            this.conchModel && this.conchModel.transform(t.a, t.b, t.c, t.d, this._x, this._y)),
            t ? this._renderType |= 4 : (this._renderType &= -5,
            this.conchModel && this.conchModel.removeType(4)),
            this.parentRepaint();
        }),
        u(0, t, "pivotX", function() {
            return this._style._tf.translateX;
        }, function(t) {
            this.getStyle().setTranslateX(t),
            this.conchModel && this.conchModel.pivot(t, this._style._tf.translateY),
            this.repaint();
        }),
        u(0, t, "pivotY", function() {
            return this._style._tf.translateY;
        }, function(t) {
            this.getStyle().setTranslateY(t),
            this.conchModel && this.conchModel.pivot(this._style._tf.translateX, t),
            this.repaint();
        }),
        u(0, t, "alpha", function() {
            return this._style.alpha;
        }, function(t) {
            this._style && this._style.alpha !== t && (t = t < 0 ? 0 : 1 < t ? 1 : t,
            this.getStyle().alpha = t,
            this.conchModel && this.conchModel.alpha(t),
            1 !== t ? this._renderType |= 2 : this._renderType &= -3,
            this.parentRepaint());
        }),
        u(0, t, "visible", function() {
            return this._style.visible;
        }, function(t) {
            this._style && this._style.visible !== t && (this.getStyle().visible = t,
            this.conchModel && this.conchModel.visible(t),
            this.parentRepaint());
        }),
        u(0, t, "graphics", function() {
            return this._graphics || (this.graphics = P.createGraphics());
        }, function(t) {
            this._graphics && (this._graphics._sp = null),
            (this._graphics = t) ? (this._renderType &= -2,
            this._renderType |= 512,
            (t._sp = this).conchModel && this.conchModel.graphics(this._graphics)) : (this._renderType &= -513,
            this._renderType &= -2,
            this.conchModel && (i.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(256) : this.conchModel.removeType(512))),
            this.repaint();
        }),
        u(0, t, "filters", function() {
            return this._$P.filters;
        }, function(t) {
            t && 0 === t.length && (t = null),
            this._$P.filters != t && (this._set$P("filters", t ? t.slice() : null),
            R.isConchApp && (this.conchModel && (i.RUNTIMEVERION < "0.9.1" ? this.conchModel.removeType(16) : this.conchModel.removeType(32)),
            this._$P.filters && 1 == this._$P.filters.length && this._$P.filters[0].callNative(this)),
            R.isWebGL && (t && t.length ? this._renderType |= 32 : this._renderType &= -33),
            t && 0 < t.length ? (this._getBit(1) || this._setUpNoticeType(1),
            R.isWebGL && 1 == t.length && t[0]instanceof laya.filters.ColorFilter || ("bitmap" != this.cacheAs && (R.isConchNode || (this.cacheAs = "bitmap"),
            this._set$P("cacheForFilters", !0)),
            this._set$P("hasFilter", !0))) : (this._set$P("hasFilter", !1),
            this._$P.cacheForFilters && "bitmap" == this.cacheAs && (this.cacheAs = "none")),
            this.repaint());
        }),
        u(0, t, "parent", a.prototype._$get_parent, function(t) {
            w.superSet(tt, this, "parent", t),
            t && this._getBit(2) && this._$2__onDisplay();
        }),
        u(0, t, "mask", function() {
            return this._$P._mask;
        }, function(t) {
            t && this.mask && this.mask._$P.maskParent || (t ? (this.cacheAs = "bitmap",
            this._set$P("_mask", t),
            t._set$P("maskParent", this)) : (this.mask && this.mask._set$P("maskParent", null),
            this._set$P("_mask", t),
            this.cacheAs = "none"),
            this.conchModel && this.conchModel.mask(t ? t.conchModel : null),
            this._renderType |= 64,
            this.parentRepaint());
        }),
        u(0, t, "mouseEnabled", function() {
            return 1 < this._mouseEnableState;
        }, function(t) {
            this._mouseEnableState = t ? 2 : 1;
        }),
        u(0, t, "globalScaleX", function() {
            for (var t = 1, e = this; e && e !== w.stage; )
                t *= e.scaleX,
                e = e.parent;
            return t;
        }),
        u(0, t, "mouseX", function() {
            return this.getMousePoint().x;
        }),
        u(0, t, "mouseY", function() {
            return this.getMousePoint().y;
        }),
        i.fromImage = function(t) {
            return new i().loadImage(t);
        }
        ,
        i.CustomList = [],
        h(i, ["RUNTIMEVERION", function() {
            return this.RUNTIMEVERION = r.conch ? conchConfig.getRuntimeVersion().substr(conchConfig.getRuntimeVersion().lastIndexOf("-") + 1) : "";
        }
        ]),
        i;
    }(tt)
      , dt = function(t) {
        function e(t) {
            this._audio = null,
            this._onEnd = null,
            this._resumePlay = null,
            e.__super.call(this),
            this._onEnd = q.bind(this.__onEnd, this),
            this._resumePlay = q.bind(this.__resumePlay, this),
            t.addEventListener("ended", this._onEnd),
            this._audio = t;
        }
        f(e, "laya.media.h5audio.AudioSoundChannel", nt);
        var i = e.prototype;
        return i.__onEnd = function() {
            if (1 == this.loops)
                return this.completeHandler && (w.timer.once(10, this, this.__runComplete, [this.completeHandler], !1),
                this.completeHandler = null),
                this.stop(),
                void this.event("complete");
            0 < this.loops && this.loops--,
            this.startTime = 0,
            this.play();
        }
        ,
        i.__resumePlay = function() {
            if (this._audio && this._audio.removeEventListener("canplay", this._resumePlay),
            !this.isStopped)
                try {
                    this._audio.currentTime = this.startTime,
                    G.container.appendChild(this._audio),
                    this._audio.play();
                } catch (t) {
                    this.event("error");
                }
        }
        ,
        i.play = function() {
            if (this.isStopped = !1,
            this._audio) {
                try {
                    this._audio.playbackRate = E.playbackRate,
                    this._audio.currentTime = this.startTime;
                } catch (t) {
                    return void this._audio.addEventListener("canplay", this._resumePlay);
                }
                E.addChannel(this),
                G.container.appendChild(this._audio),
                "play"in this._audio && this._audio.play();
            }
        }
        ,
        i.stop = function() {
            this.isStopped = !0,
            E.removeChannel(this),
            this.completeHandler = null,
            this._audio && ("pause"in this._audio && R.isConchApp && this._audio.stop(),
            this._audio.pause(),
            this._audio.removeEventListener("ended", this._onEnd),
            this._audio.removeEventListener("canplay", this._resumePlay),
            G.onIE || this._audio != it._musicAudio && z.recover("audio:" + this.url, this._audio),
            G.removeElement(this._audio),
            this._audio = null);
        }
        ,
        i.pause = function() {
            this.isStopped = !0,
            E.removeChannel(this),
            "pause"in this._audio && this._audio.pause();
        }
        ,
        i.resume = function() {
            this._audio && (this.isStopped = !1,
            E.addChannel(this),
            "play"in this._audio && this._audio.play());
        }
        ,
        u(0, i, "position", function() {
            return this._audio ? this._audio.currentTime : 0;
        }),
        u(0, i, "duration", function() {
            return this._audio ? this._audio.duration : 0;
        }),
        u(0, i, "volume", function() {
            return this._audio ? this._audio.volume : 1;
        }, function(t) {
            this._audio && (this._audio.volume = t);
        }),
        e;
    }()
      , _t = function(t) {
        function e() {
            this.audioBuffer = null,
            this.gain = null,
            this.bufferSource = null,
            this._currentTime = 0,
            this._volume = 1,
            this._startTime = 0,
            this._pauseTime = 0,
            this._onPlayEnd = null,
            this.context = st.ctx,
            e.__super.call(this),
            this._onPlayEnd = q.bind(this.__onPlayEnd, this),
            this.context.createGain ? this.gain = this.context.createGain() : this.gain = this.context.createGainNode();
        }
        f(e, "laya.media.webaudio.WebAudioSoundChannel", nt);
        var i = e.prototype;
        return i.play = function() {
            if (E.addChannel(this),
            this.isStopped = !1,
            this._clearBufferSource(),
            this.audioBuffer) {
                var t = this.context
                  , e = this.gain
                  , i = t.createBufferSource();
                (this.bufferSource = i).buffer = this.audioBuffer,
                i.connect(e),
                e && e.disconnect(),
                e.connect(t.destination),
                i.onended = this._onPlayEnd,
                this.startTime >= this.duration && (this.startTime = 0),
                this._startTime = G.now(),
                this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, .001) : this.gain.gain.value = this._volume,
                0 == this.loops && (i.loop = !0),
                i.playbackRate.setTargetAtTime ? i.playbackRate.setTargetAtTime(E.playbackRate, this.context.currentTime, .001) : i.playbackRate.value = E.playbackRate,
                i.start(0, this.startTime),
                this._currentTime = 0;
            }
        }
        ,
        i.__onPlayEnd = function() {
            if (1 == this.loops)
                return this.completeHandler && (w.timer.once(10, this, this.__runComplete, [this.completeHandler], !1),
                this.completeHandler = null),
                this.stop(),
                void this.event("complete");
            0 < this.loops && this.loops--,
            this.startTime = 0,
            this.play();
        }
        ,
        i._clearBufferSource = function() {
            if (this.bufferSource) {
                var t = this.bufferSource;
                t.stop ? t.stop(0) : t.noteOff(0),
                t.disconnect(0),
                t.onended = null,
                e._tryCleanFailed || this._tryClearBuffer(t),
                this.bufferSource = null;
            }
        }
        ,
        i._tryClearBuffer = function(t) {
            if (G.onMac)
                try {
                    t.buffer = st._miniBuffer;
                } catch (t) {
                    e._tryCleanFailed = !0;
                }
            else
                try {
                    t.buffer = null;
                } catch (t) {
                    e._tryCleanFailed = !0;
                }
        }
        ,
        i.stop = function() {
            this._clearBufferSource(),
            this.audioBuffer = null,
            this.gain && this.gain.disconnect(),
            this.isStopped = !0,
            E.removeChannel(this),
            this.completeHandler = null,
            E.autoReleaseSound && w.timer.once(5e3, null, E.disposeSoundIfNotUsed, [this.url], !1);
        }
        ,
        i.pause = function() {
            this.isStopped || (this._pauseTime = this.position),
            this._clearBufferSource(),
            this.gain && this.gain.disconnect(),
            this.isStopped = !0,
            E.removeChannel(this),
            E.autoReleaseSound && w.timer.once(5e3, null, E.disposeSoundIfNotUsed, [this.url], !1);
        }
        ,
        i.resume = function() {
            this.startTime = this._pauseTime,
            this.play();
        }
        ,
        u(0, i, "position", function() {
            return this.bufferSource ? (G.now() - this._startTime) / 1e3 + this.startTime : 0;
        }),
        u(0, i, "duration", function() {
            return this.audioBuffer ? this.audioBuffer.duration : 0;
        }),
        u(0, i, "volume", function() {
            return this._volume;
        }, function(t) {
            this.isStopped || (this._volume = t,
            this.gain.gain.setTargetAtTime ? this.gain.gain.setTargetAtTime(t, this.context.currentTime, .001) : this.gain.gain.value = t);
        }),
        e._tryCleanFailed = !1,
        e.SetTargetDelay = .001,
        e;
    }()
      , pt = function(t) {
        function e() {
            e.__super.call(this),
            this._w = 0,
            this._h = 0;
        }
        f(e, "laya.resource.Bitmap", lt);
        var i = e.prototype;
        return u(0, i, "width", function() {
            return this._w;
        }),
        u(0, i, "height", function() {
            return this._h;
        }),
        u(0, i, "source", function() {
            return this._source;
        }),
        e;
    }()
      , ft = function(e) {
        function t() {
            this.loop = !1,
            this.wrapMode = 0,
            this._index = 0,
            this._count = 0,
            this._isPlaying = !1,
            this._labels = null,
            this._isReverse = !1,
            this._frameRateChanged = !1,
            this._controlNode = null,
            this._actionName = null,
            t.__super.call(this),
            this._interval = n.animationInterval,
            this._setUpNoticeType(1);
        }
        f(t, "laya.display.AnimationPlayerBase", e);
        var i = t.prototype;
        return i.play = function(t, e, i, n) {
            void 0 === t && (t = 0),
            void 0 === e && (e = !0),
            void 0 === i && (i = ""),
            void 0 === n && (n = !0),
            this._isPlaying = !0,
            this.index = "string" == typeof t ? this._getFrameByLabel(t) : t,
            this.loop = e,
            this._actionName = i,
            this._isReverse = 1 == this.wrapMode,
            0 < this.interval && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
        }
        ,
        i._getFrameByLabel = function(t) {
            var e = 0;
            for (e = 0; e < this._count; e++)
                if (this._labels[e] && 0 <= this._labels[e].indexOf(t))
                    return e;
            return 0;
        }
        ,
        i._frameLoop = function() {
            if (this._isReverse) {
                if (this._index--,
                this._index < 0) {
                    if (!this.loop)
                        return this._index = 0,
                        this.stop(),
                        void this.event("complete");
                    2 == this.wrapMode ? (this._index = 0 < this._count ? 1 : 0,
                    this._isReverse = !1) : this._index = this._count - 1,
                    this.event("complete");
                }
            } else if (this._index++,
            this._index >= this._count) {
                if (!this.loop)
                    return this._index--,
                    this.stop(),
                    void this.event("complete");
                2 == this.wrapMode ? (this._index = 0 <= this._count - 2 ? this._count - 2 : 0,
                this._isReverse = !0) : this._index = 0,
                this.event("complete");
            }
            this.index = this._index;
        }
        ,
        i._setControlNode = function(t) {
            this._controlNode && (this._controlNode.off("display", this, this._checkResumePlaying),
            this._controlNode.off("undisplay", this, this._checkResumePlaying)),
            (this._controlNode = t) && t != this && (t.on("display", this, this._checkResumePlaying),
            t.on("undisplay", this, this._checkResumePlaying));
        }
        ,
        i._setDisplay = function(t) {
            e.prototype._setDisplay.call(this, t),
            this._checkResumePlaying();
        }
        ,
        i._checkResumePlaying = function() {
            this._isPlaying && (this._controlNode.displayedInStage ? this.play(this._index, this.loop, this._actionName) : this.clearTimer(this, this._frameLoop));
        }
        ,
        i.stop = function() {
            this._isPlaying = !1,
            this.clearTimer(this, this._frameLoop);
        }
        ,
        i.addLabel = function(t, e) {
            this._labels || (this._labels = {}),
            this._labels[e] || (this._labels[e] = []),
            this._labels[e].push(t);
        }
        ,
        i.removeLabel = function(t) {
            if (t) {
                if (this._labels)
                    for (var e in this._labels)
                        this._removeLabelFromLabelList(this._labels[e], t);
            } else
                this._labels = null;
        }
        ,
        i._removeLabelFromLabelList = function(t, e) {
            if (t)
                for (var i = t.length - 1; 0 <= i; i--)
                    t[i] == e && t.splice(i, 1);
        }
        ,
        i.gotoAndStop = function(t) {
            this.index = "string" == typeof t ? this._getFrameByLabel(t) : t,
            this.stop();
        }
        ,
        i._displayToIndex = function(t) {}
        ,
        i.clear = function() {
            this.stop(),
            this._labels = null;
        }
        ,
        u(0, i, "interval", function() {
            return this._interval;
        }, function(t) {
            this._interval != t && (this._frameRateChanged = !0,
            this._interval = t,
            this._isPlaying && 0 < t && this.timerLoop(t, this, this._frameLoop, null, !0, !0));
        }),
        u(0, i, "isPlaying", function() {
            return this._isPlaying;
        }),
        u(0, i, "index", function() {
            return this._index;
        }, function(t) {
            if (this._index = t,
            this._displayToIndex(t),
            this._labels && this._labels[t])
                for (var e = this._labels[t], i = 0, n = e.length; i < n; i++)
                    this.event("label", e[i]);
        }),
        u(0, i, "count", function() {
            return this._count;
        }),
        t.WRAP_POSITIVE = 0,
        t.WRAP_REVERSE = 1,
        t.WRAP_PINGPONG = 2,
        t;
    }(ct)
      , gt = function(e) {
        function _() {
            this._clipPoint = null,
            this._currBitmapFont = null,
            this._text = null,
            this._isChanged = !1,
            this._textWidth = 0,
            this._textHeight = 0,
            this._lines = [],
            this._lineWidths = [],
            this._startX = NaN,
            this._startY = NaN,
            this._lastVisibleLineIndex = -1,
            this._words = null,
            this._charSize = {},
            this.underline = !1,
            this._underlineColor = null,
            _.__super.call(this),
            this.overflow = _.VISIBLE,
            this._style = new et(this),
            this._style.wordWrap = !1;
        }
        f(_, "laya.display.Text", e);
        var t = _.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._lines = null,
            this._words && (this._words.length = 0,
            this._words = null);
        }
        ,
        t._getBoundPointsM = function(t) {
            void 0 === t && (t = !1);
            var e = I.TEMP;
            return e.setTo(0, 0, this.width, this.height),
            e._getBoundPoints();
        }
        ,
        t.getGraphicBounds = function(t) {
            void 0 === t && (t = !1);
            var e = I.TEMP;
            return e.setTo(0, 0, this.width, this.height),
            e;
        }
        ,
        t._getCSSStyle = function() {
            return this._style;
        }
        ,
        t.lang = function(t, e, i, n, a, s, r, o, h, l, u) {
            if (t = _.langPacks && _.langPacks[t] ? _.langPacks[t] : t,
            arguments.length < 2)
                this._text = t;
            else {
                for (var c = 0, d = arguments.length; c < d; c++)
                    t = t.replace("{" + c + "}", arguments[c + 1]);
                this._text = t;
            }
        }
        ,
        t._isPassWordMode = function() {
            var t = this._style.password;
            return "prompt"in this && this.prompt == this._text && (t = !1),
            t;
        }
        ,
        t._getPassWordTxt = function(t) {
            var e;
            e = "";
            for (var i = t.length; 0 < i; i--)
                e += "●";
            return e;
        }
        ,
        t.renderText = function(t, e) {
            var i = this.graphics;
            i.clear(!0);
            var n = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + (G.onIPhone && laya.display.Text._fontFamilyMap[this.font] || this.font);
            G.context.font = n;
            var a = this.padding
              , s = a[3]
              , r = "left"
              , o = this._lines
              , h = this.leading + this._charSize.height
              , l = this._currBitmapFont;
            l && (h = this.leading + l.getMaxHeight());
            var u = a[0];
            if (!l && 0 < this._width && this._textWidth <= this._width && ("right" == this.align ? (r = "right",
            s = this._width - a[1]) : "center" == this.align && (r = "center",
            s = .5 * this._width + a[3] - a[1])),
            0 < this._height) {
                var c = this._textHeight > this._height ? "top" : this.valign;
                "middle" === c ? u = .5 * (this._height - e * h) + a[0] - a[2] : "bottom" === c && (u = this._height - e * h - a[2]);
            }
            var d = this._style;
            if (l && l.autoScaleSize)
                var _ = l.fontSize / this.fontSize;
            if (this._clipPoint)
                if (i.save(),
                l && l.autoScaleSize) {
                    var p = 0
                      , f = 0;
                    p = this._width ? this._width - a[3] - a[1] : this._textWidth,
                    f = this._height ? this._height - a[0] - a[2] : this._textHeight,
                    p *= _,
                    f *= _,
                    i.clipRect(a[3], a[0], p, f);
                } else
                    i.clipRect(a[3], a[0], this._width ? this._width - a[3] - a[1] : this._textWidth, this._height ? this._height - a[0] - a[2] : this._textHeight);
            var g = d.password;
            "prompt"in this && this.prompt == this._text && (g = !1);
            for (var m = 0, y = 0, v = Math.min(this._lines.length, e + t) || 1, S = t; S < v; S++) {
                var x, b = o[S];
                if (g) {
                    var w = b.length;
                    b = "";
                    for (var M = w; 0 < M; M--)
                        b += "●";
                }
                if (void 0 === b && (b = ""),
                m = s - (this._clipPoint ? this._clipPoint.x : 0),
                y = u + h * S - (this._clipPoint ? this._clipPoint.y : 0),
                this.underline && this.drawUnderline(r, m, y, S),
                l) {
                    var I = this.width;
                    l.autoScaleSize && (I = this.width * _),
                    l.drawText(b, this, m, y, this.align, I);
                } else
                    R.isWebGL ? (this._words || (this._words = []),
                    (x = this._words.length > S - t ? this._words[S - t] : new Z()).setText(b)) : x = b,
                    d.stroke ? i.fillBorderText(x, m, y, n, this.color, d.strokeColor, d.stroke, r) : i.fillText(x, m, y, n, this.color, r);
            }
            if (l && l.autoScaleSize) {
                var T = 1 / _;
                this.scale(T, T);
            }
            this._clipPoint && i.restore(),
            this._startX = s,
            this._startY = u;
        }
        ,
        t.drawUnderline = function(t, e, i, n) {
            var a = this._lineWidths[n];
            switch (t) {
            case "center":
                e -= a / 2;
                break;

            case "right":
                e -= a;
            }
            i += this._charSize.height,
            this._graphics.drawLine(e, i, e + a, i, this.underlineColor || this.color, 1);
        }
        ,
        t.typeset = function() {
            if (this._isChanged = !1,
            !this._text)
                return this._clipPoint = null,
                this._textWidth = this._textHeight = 0,
                void this.graphics.clear(!0);
            G.context.font = this._getCSSStyle().font,
            this._lines.length = 0,
            this._lineWidths.length = 0,
            this._isPassWordMode() ? this.parseLines(this._getPassWordTxt(this._text)) : this.parseLines(this._text),
            this.evalTextSize(),
            this.checkEnabledViewportOrNot() ? this._clipPoint || (this._clipPoint = new M(0,0)) : this._clipPoint = null;
            var t = this._lines.length;
            if (this.overflow != _.VISIBLE) {
                var e = this.overflow == _.HIDDEN ? Math.floor : Math.ceil;
                t = Math.min(t, e((this.height - this.padding[0] - this.padding[2]) / (this.leading + this._charSize.height)));
            }
            var i = this.scrollY / (this._charSize.height + this.leading) | 0;
            this.renderText(i, t),
            this.repaint();
        }
        ,
        t.evalTextSize = function() {
            var t, e = NaN;
            t = Math.max.apply(this, this._lineWidths),
            e = this._currBitmapFont ? this._lines.length * (this._currBitmapFont.getMaxHeight() + this.leading) + this.padding[0] + this.padding[2] : this._lines.length * (this._charSize.height + this.leading) + this.padding[0] + this.padding[2],
            t == this._textWidth && e == this._textHeight || (this._textWidth = t,
            this._textHeight = e,
            this._width && this._height || this.conchModel && this.conchModel.size(this._width || this._textWidth, this._height || this._textHeight));
        }
        ,
        t.checkEnabledViewportOrNot = function() {
            return this.overflow == _.SCROLL && (0 < this._width && this._textWidth > this._width || 0 < this._height && this._textHeight > this._height);
        }
        ,
        t.changeText = function(t) {
            this._text !== t && (this.lang(t + ""),
            this._graphics && this._graphics.replaceText(this._text) || this.typeset());
        }
        ,
        t.parseLines = function(t) {
            var e = this.wordWrap || this.overflow == _.HIDDEN;
            if (e)
                var i = this.getWordWrapWidth();
            if (this._currBitmapFont)
                this._charSize.width = this._currBitmapFont.getMaxWidth(),
                this._charSize.height = this._currBitmapFont.getMaxHeight();
            else {
                var n = G.context.measureText(_._testWord);
                R.isConchApp && 0 === n.width && 0 === n.height && (n = G.context.measureText("W")),
                this._charSize.width = n.width,
                this._charSize.height = n.height || this.fontSize;
            }
            for (var a = t.replace(/\r\n/g, "\n").split("\n"), s = 0, r = a.length; s < r; s++) {
                var o = a[s];
                e ? this.parseLine(o, i) : (this._lineWidths.push(this.getTextWidth(o)),
                this._lines.push(o));
            }
        }
        ,
        t.parseLine = function(t, e) {
            G.context;
            var i, n = this._lines, a = 0, s = NaN, r = NaN, o = 0;
            if ((s = this.getTextWidth(t)) <= e)
                return n.push(t),
                void this._lineWidths.push(s);
            s = this._charSize.width,
            0 == (a = Math.floor(e / s)) && (a = 1),
            r = s = this.getTextWidth(t.substring(0, a));
            for (var h = a, l = t.length; h < l; h++)
                if (e < (r += s = this.getTextWidth(t.charAt(h))))
                    if (this.wordWrap) {
                        var u = t.substring(o, h);
                        if (u.charCodeAt(u.length - 1) < 255 ? (i = /(?:\w|-)+$/.exec(u)) && (h = i.index + o,
                        0 == i.index ? h += u.length : u = t.substring(o, h)) : _.RightToLeft && (i = /([\u0600-\u06FF])+$/.exec(u)) && (h = i.index + o,
                        0 == i.index ? h += u.length : u = t.substring(o, h)),
                        n.push(u),
                        this._lineWidths.push(r - s),
                        !((o = h) + a < l)) {
                            n.push(t.substring(o, l)),
                            this._lineWidths.push(this.getTextWidth(n[n.length - 1])),
                            o = -1;
                            break;
                        }
                        h += a,
                        r = s = this.getTextWidth(t.substring(o, h)),
                        h--;
                    } else if (this.overflow == _.HIDDEN)
                        return n.push(t.substring(0, h)),
                        void this._lineWidths.push(this.getTextWidth(n[n.length - 1]));
            this.wordWrap && -1 != o && (n.push(t.substring(o, l)),
            this._lineWidths.push(this.getTextWidth(n[n.length - 1])));
        }
        ,
        t.getTextWidth = function(t) {
            return this._currBitmapFont ? this._currBitmapFont.getTextWidth(t) : G.context.measureText(t).width;
        }
        ,
        t.getWordWrapWidth = function() {
            var t = this.padding
              , e = NaN;
            return (e = this._currBitmapFont && this._currBitmapFont.autoScaleSize ? this._width * (this._currBitmapFont.fontSize / this.fontSize) : this._width) <= 0 && (e = this.wordWrap ? 100 : G.width),
            e <= 0 && (e = 100),
            e - t[3] - t[1];
        }
        ,
        t.getCharPoint = function(t, e) {
            this._isChanged && w.timer.runCallLater(this, this.typeset);
            for (var i = 0, n = this._lines, a = 0, s = 0, r = n.length; s < r; s++) {
                if (t < (i += n[s].length)) {
                    var o = s;
                    break;
                }
                a = i;
            }
            var h = (this.italic ? "italic " : "") + (this.bold ? "bold " : "") + this.fontSize + "px " + this.font;
            G.context.font = h;
            var l = this.getTextWidth(this._text.substring(a, t));
            return (e || new M()).setTo(this._startX + l - (this._clipPoint ? this._clipPoint.x : 0), this._startY + o * (this._charSize.height + this.leading) - (this._clipPoint ? this._clipPoint.y : 0));
        }
        ,
        u(0, t, "width", function() {
            return this._width ? this._width : this.textWidth + this.padding[1] + this.padding[3];
        }, function(t) {
            t != this._width && (w.superSet(ct, this, "width", t),
            this.isChanged = !0);
        }),
        u(0, t, "textWidth", function() {
            return this._isChanged && w.timer.runCallLater(this, this.typeset),
            this._textWidth;
        }),
        u(0, t, "height", function() {
            return this._height ? this._height : this.textHeight;
        }, function(t) {
            t != this._height && (w.superSet(ct, this, "height", t),
            this.isChanged = !0);
        }),
        u(0, t, "textHeight", function() {
            return this._isChanged && w.timer.runCallLater(this, this.typeset),
            this._textHeight;
        }),
        u(0, t, "padding", function() {
            return this._getCSSStyle().padding;
        }, function(t) {
            this._getCSSStyle().padding = t,
            this.isChanged = !0;
        }),
        u(0, t, "bold", function() {
            return this._getCSSStyle().bold;
        }, function(t) {
            this._getCSSStyle().bold = t,
            this.isChanged = !0;
        }),
        u(0, t, "text", function() {
            return this._text || "";
        }, function(t) {
            this._text !== t && (this.lang(t + ""),
            this.isChanged = !0,
            this.event("change"));
        }),
        u(0, t, "color", function() {
            return this._getCSSStyle().color;
        }, function(t) {
            this._getCSSStyle().color != t && (this._getCSSStyle().color = t,
            !this._isChanged && this._graphics ? this._graphics.replaceTextColor(this.color) : this.isChanged = !0);
        }),
        u(0, t, "font", function() {
            return this._getCSSStyle().fontFamily;
        }, function(t) {
            this._currBitmapFont && (this._currBitmapFont = null,
            this.scale(1, 1)),
            _._bitmapFonts && _._bitmapFonts[t] && (this._currBitmapFont = _._bitmapFonts[t]),
            this._getCSSStyle().fontFamily = t,
            this.isChanged = !0;
        }),
        u(0, t, "fontSize", function() {
            return this._getCSSStyle().fontSize;
        }, function(t) {
            this._getCSSStyle().fontSize = t,
            this.isChanged = !0;
        }),
        u(0, t, "italic", function() {
            return this._getCSSStyle().italic;
        }, function(t) {
            this._getCSSStyle().italic = t,
            this.isChanged = !0;
        }),
        u(0, t, "align", function() {
            return this._getCSSStyle().align;
        }, function(t) {
            this._getCSSStyle().align = t,
            this.isChanged = !0;
        }),
        u(0, t, "valign", function() {
            return this._getCSSStyle().valign;
        }, function(t) {
            this._getCSSStyle().valign = t,
            this.isChanged = !0;
        }),
        u(0, t, "wordWrap", function() {
            return this._getCSSStyle().wordWrap;
        }, function(t) {
            this._getCSSStyle().wordWrap = t,
            this.isChanged = !0;
        }),
        u(0, t, "leading", function() {
            return this._getCSSStyle().leading;
        }, function(t) {
            this._getCSSStyle().leading = t,
            this.isChanged = !0;
        }),
        u(0, t, "bgColor", function() {
            return this._getCSSStyle().backgroundColor;
        }, function(t) {
            this._getCSSStyle().backgroundColor = t,
            this.isChanged = !0;
        }),
        u(0, t, "borderColor", function() {
            return this._getCSSStyle().borderColor;
        }, function(t) {
            this._getCSSStyle().borderColor = t,
            this.isChanged = !0;
        }),
        u(0, t, "stroke", function() {
            return this._getCSSStyle().stroke;
        }, function(t) {
            this._getCSSStyle().stroke = t,
            this.isChanged = !0;
        }),
        u(0, t, "strokeColor", function() {
            return this._getCSSStyle().strokeColor;
        }, function(t) {
            this._getCSSStyle().strokeColor = t,
            this.isChanged = !0;
        }),
        u(0, t, "isChanged", null, function(t) {
            this._isChanged !== t && (this._isChanged = t) && w.timer.callLater(this, this.typeset);
        }),
        u(0, t, "scrollX", function() {
            return this._clipPoint ? this._clipPoint.x : 0;
        }, function(t) {
            if (!(this.overflow != _.SCROLL || this.textWidth < this._width) && this._clipPoint) {
                t = t < this.padding[3] ? this.padding[3] : t;
                var e = this._textWidth - this._width;
                t = e < t ? e : t;
                var i = this._height / (this._charSize.height + this.leading) | 1;
                this._clipPoint.x = t,
                this.renderText(this._lastVisibleLineIndex, i);
            }
        }),
        u(0, t, "scrollY", function() {
            return this._clipPoint ? this._clipPoint.y : 0;
        }, function(t) {
            if (!(this.overflow != _.SCROLL || this.textHeight < this._height) && this._clipPoint) {
                t = t < this.padding[0] ? this.padding[0] : t;
                var e = this._textHeight - this._height
                  , i = (t = e < t ? e : t) / (this._charSize.height + this.leading) | 0;
                this._lastVisibleLineIndex = i;
                var n = 1 + (this._height / (this._charSize.height + this.leading) | 0);
                this._clipPoint.y = t,
                this.renderText(i, n);
            }
        }),
        u(0, t, "maxScrollX", function() {
            return this.textWidth < this._width ? 0 : this._textWidth - this._width;
        }),
        u(0, t, "maxScrollY", function() {
            return this.textHeight < this._height ? 0 : this._textHeight - this._height;
        }),
        u(0, t, "lines", function() {
            return this._isChanged && this.typeset(),
            this._lines;
        }),
        u(0, t, "underlineColor", function() {
            return this._underlineColor;
        }, function(t) {
            this._underlineColor = t,
            this._isChanged = !0,
            this.typeset();
        }),
        _.registerBitmapFont = function(t, e) {
            _._bitmapFonts || (_._bitmapFonts = {}),
            _._bitmapFonts[t] = e;
        }
        ,
        _.unregisterBitmapFont = function(t, e) {
            if (void 0 === e && (e = !0),
            _._bitmapFonts && _._bitmapFonts[t]) {
                var i = _._bitmapFonts[t];
                e && i.destroy(),
                delete _._bitmapFonts[t];
            }
        }
        ,
        _.setTextRightToLeft = function() {
            var t;
            (t = G.canvas.source.style).display = "none",
            t.position = "absolute",
            t.direction = "rtl",
            R._mainCanvas.source.style.direction = "rtl",
            laya.display.Text.RightToLeft = !0,
            G.document.body.appendChild(G.canvas.source);
        }
        ,
        _.supportFont = function(t) {
            G.context.font = "10px sans-serif";
            var e = G.context.measureText("abcji").width;
            G.context.font = "10px " + t;
            var i = G.context.measureText("abcji").width;
            return console.log(e, i),
            e !== i;
        }
        ,
        _._testWord = "游",
        _.langPacks = null,
        _.VISIBLE = "visible",
        _.SCROLL = "scroll",
        _.HIDDEN = "hidden",
        _.CharacterCache = !0,
        _.RightToLeft = !1,
        _._bitmapFonts = null,
        h(_, ["_fontFamilyMap", function() {
            return this._fontFamilyMap = {
                "报隶": "报隶-简",
                "黑体": "黑体-简",
                "楷体": "楷体-简",
                "兰亭黑": "兰亭黑-简",
                "隶变": "隶变-简",
                "凌慧体": "凌慧体-简",
                "翩翩体": "翩翩体-简",
                "苹方": "苹方-简",
                "手札体": "手札体-简",
                "宋体": "宋体-简",
                "娃娃体": "娃娃体-简",
                "魏碑": "魏碑-简",
                "行楷": "行楷-简",
                "雅痞": "雅痞-简",
                "圆体": "圆体-简"
            };
        }
        ]),
        _;
    }(ct)
      , mt = function(c) {
        function r() {
            this.focus = null,
            this.designWidth = 0,
            this.designHeight = 0,
            this.canvasRotation = !1,
            this.canvasDegree = 0,
            this.renderingEnabled = !0,
            this.screenAdaptationEnabled = !0,
            this._screenMode = "none",
            this._scaleMode = "noscale",
            this._alignV = "top",
            this._alignH = "left",
            this._bgColor = "black",
            this._mouseMoveTime = 0,
            this._renderCount = 0,
            this._frameStartTime = NaN,
            this._isFocused = !1,
            this._isVisibility = !1,
            this._scenes = null,
            this._frameRate = "fast",
            r.__super.call(this),
            this.offset = new M(),
            this._canvasTransform = new A(),
            this._previousOrientation = G.window.orientation;
            var e = this;
            this.transform = A.create(),
            this._scenes = [],
            this.mouseEnabled = !0,
            this.hitTestPrior = !0,
            this.autoSize = !1,
            this._displayedInStage = !0,
            this._isFocused = !0,
            this._isVisibility = !0;
            var t = G.window
              , i = this;
            t.addEventListener("focus", function() {
                e._isFocused = !0,
                i.event("focus"),
                i.event("focuschange");
            }),
            t.addEventListener("blur", function() {
                e._isFocused = !1,
                i.event("blur"),
                i.event("focuschange"),
                i._isInputting() && (xt.inputElement.target.focus = !1);
            });
            var n = "visibilityState"
              , a = "visibilitychange"
              , s = t.document;
            void 0 !== s.hidden ? (a = "visibilitychange",
            n = "visibilityState") : void 0 !== s.mozHidden ? (a = "mozvisibilitychange",
            n = "mozVisibilityState") : void 0 !== s.msHidden ? (a = "msvisibilitychange",
            n = "msVisibilityState") : void 0 !== s.webkitHidden && (a = "webkitvisibilitychange",
            n = "webkitVisibilityState"),
            t.document.addEventListener(a, function() {
                "hidden" == G.document[n] ? i._setStageVisible(!1) : i._setStageVisible(!0);
            }),
            t.document.addEventListener("qbrowserVisibilityChange", function(t) {
                i._setStageVisible(!t.hidden);
            }),
            t.addEventListener("resize", function() {
                var t = G.window.orientation;
                null != t && t != e._previousOrientation && i._isInputting() && (xt.inputElement.target.focus = !1),
                e._previousOrientation = t,
                i._isInputting() || i._resetCanvas();
            }),
            t.addEventListener("orientationchange", function(t) {
                i._resetCanvas();
            }),
            this.on("mousemove", this, this._onmouseMove),
            G.onMobile && this.on("mousedown", this, this._onmouseMove);
        }
        f(r, "laya.display.Stage", c);
        var t = r.prototype;
        return t._setStageVisible = function(t) {
            this._isVisibility != t && (this._isVisibility = t,
            this._isVisibility || this._isInputting() && (xt.inputElement.target.focus = !1),
            this.event("visibilitychange"));
        }
        ,
        t._isInputting = function() {
            return G.onMobile && xt.isInputting;
        }
        ,
        t._changeCanvasSize = function() {
            this.setScreenSize(G.clientWidth * G.pixelRatio, G.clientHeight * G.pixelRatio);
        }
        ,
        t._resetCanvas = function() {
            if (this.screenAdaptationEnabled) {
                var t = R._mainCanvas;
                t.source.style;
                t.size(1, 1),
                w.timer.once(100, this, this._changeCanvasSize);
            }
        }
        ,
        t.setScreenSize = function(t, e) {
            var i = !1;
            if ("none" !== this._screenMode && (i = (t / e < 1 ? "vertical" : "horizontal") !== this._screenMode)) {
                var n = e;
                e = t,
                t = n;
            }
            this.canvasRotation = i;
            var a = R._mainCanvas
              , s = a.source.style
              , r = this._canvasTransform.identity()
              , o = this._scaleMode
              , h = t / this.designWidth
              , l = e / this.designHeight
              , u = this.designWidth
              , c = this.designHeight
              , d = t
              , _ = e
              , p = G.pixelRatio;
            switch (this._width = this.designWidth,
            this._height = this.designHeight,
            o) {
            case "noscale":
                h = l = 1,
                d = this.designWidth,
                _ = this.designHeight;
                break;

            case "showall":
                h = l = Math.min(h, l),
                u = d = Math.round(this.designWidth * h),
                c = _ = Math.round(this.designHeight * l);
                break;

            case "noborder":
                h = l = Math.max(h, l),
                d = Math.round(this.designWidth * h),
                _ = Math.round(this.designHeight * l);
                break;

            case "full":
                h = l = 1,
                this._width = u = t,
                this._height = c = e;
                break;

            case "fixedwidth":
                l = h,
                this._height = c = Math.round(e / h);
                break;

            case "fixedheight":
                h = l,
                this._width = u = Math.round(t / l);
                break;

            case "fixedauto":
                t / e < this.designWidth / this.designHeight ? (l = h,
                this._height = c = Math.round(e / h)) : (h = l,
                this._width = u = Math.round(t / l));
            }
            this.conchModel && this.conchModel.size(this._width, this._height),
            h *= this.scaleX,
            l *= this.scaleY,
            1 === h && 1 === l ? this.transform.identity() : (this.transform.a = this._formatData(h / (d / u)),
            this.transform.d = this._formatData(l / (_ / c)),
            this.conchModel && this.conchModel.scale(this.transform.a, this.transform.d)),
            a.size(u, c),
            P.changeWebGLSize(u, c),
            r.scale(d / u / p, _ / c / p),
            "left" === this._alignH ? this.offset.x = 0 : "right" === this._alignH ? this.offset.x = (t - d) / p : this.offset.x = .5 * (t - d) / p,
            "top" === this._alignV ? this.offset.y = 0 : "bottom" === this._alignV ? this.offset.y = (e - _) / p : this.offset.y = .5 * (e - _) / p,
            this.offset.x = Math.round(this.offset.x),
            this.offset.y = Math.round(this.offset.y),
            r.translate(this.offset.x, this.offset.y),
            this.canvasDegree = 0,
            i && ("horizontal" === this._screenMode ? (r.rotate(Math.PI / 2),
            r.translate(e / p, 0),
            this.canvasDegree = 90) : (r.rotate(-Math.PI / 2),
            r.translate(0, t / p),
            this.canvasDegree = -90)),
            r.a = this._formatData(r.a),
            r.d = this._formatData(r.d),
            r.tx = this._formatData(r.tx),
            r.ty = this._formatData(r.ty),
            s.transformOrigin = s.webkitTransformOrigin = s.msTransformOrigin = s.mozTransformOrigin = s.oTransformOrigin = "0px 0px 0px",
            s.transform = s.webkitTransform = s.msTransform = s.mozTransform = s.oTransform = "matrix(" + r.toString() + ")",
            //调整布局啊啊啊啊啊啊啊
            r.translate(parseInt(s.left) || 0, parseInt(s.top) || 0),
            this.visible = !0,
            this._repaint = 1,
            this.event("resize");
        }
        ,
        t._formatData = function(t) {
            return Math.abs(t) < 1e-6 ? 0 : Math.abs(1 - t) < .001 ? 0 < t ? 1 : -1 : t;
        }
        ,
        t.getMousePoint = function() {
            return M.TEMP.setTo(this.mouseX, this.mouseY);
        }
        ,
        t.repaint = function() {
            this._repaint = 1;
        }
        ,
        t.parentRepaint = function() {}
        ,
        t._loop = function() {
            return this.render(R.context, 0, 0),
            !0;
        }
        ,
        t._onmouseMove = function(t) {
            this._mouseMoveTime = G.now();
        }
        ,
        t.getTimeFromFrameStart = function() {
            return G.now() - this._frameStartTime;
        }
        ,
        t.render = function(t, e, i) {
            if ("sleep" === this._frameRate && !R.isConchApp) {
                var n = G.now();
                if (!(1e3 <= n - this._frameStartTime))
                    return;
                this._frameStartTime = n;
            }
            if (this._renderCount++,
            R.isFlash && this.repaint(),
            this._style.visible) {
                this._frameStartTime = G.now();
                var a = "slow" !== ("mouse" === this._frameRate ? this._frameStartTime - this._mouseMoveTime < 2e3 ? "fast" : "slow" : this._frameRate)
                  , s = this._renderCount % 2 == 0;
                if (K.renderSlow = !a,
                a || s || R.isConchApp) {
                    var r;
                    K.loopCount++,
                    p.instance.runEvent(),
                    w.timer._update(),
                    P.update3DLoop();
                    var o = 0
                      , h = 0;
                    if (R.isConchNode)
                        for (o = 0,
                        h = this._scenes.length; o < h; o++)
                            (r = this._scenes[o]) && r._updateSceneConch();
                    else
                        for (o = 0,
                        h = this._scenes.length; o < h; o++)
                            (r = this._scenes[o]) && r._updateScene();
                    if (R.isConchNode) {
                        var l = ct.CustomList;
                        for (o = 0,
                        h = l.length; o < h; o++) {
                            var u = l[o];
                            u.customRender(u.customContext, 0, 0);
                        }
                        return;
                    }
                }
                R.isConchNode || this.renderingEnabled && (a || !s || R.isConchWebGL) && (R.isWebGL ? (t.clear(),
                c.prototype.render.call(this, t, e, i),
                K._show && K._sp && K._sp.render(t, e, i),
                P.clear(this._bgColor),
                P.beginFlush(),
                t.flush(),
                P.endFinish(),
                Q.instance && Q.getInstance().endDispose()) : (P.clear(this._bgColor),
                c.prototype.render.call(this, t, e, i),
                K._show && K._sp && K._sp.render(t, e, i)));
            } else
                this._renderCount % 5 == 0 && (K.loopCount++,
                p.instance.runEvent(),
                w.timer._update());
        }
        ,
        t._requestFullscreen = function() {
            var t = G.document.documentElement;
            t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen();
        }
        ,
        t._fullScreenChanged = function() {
            w.stage.event("fullscreenchange");
        }
        ,
        t.exitFullscreen = function() {
            var t = G.document;
            t.exitFullscreen ? t.exitFullscreen() : t.mozCancelFullScreen ? t.mozCancelFullScreen() : t.webkitExitFullscreen && t.webkitExitFullscreen();
        }
        ,
        u(0, t, "clientScaleX", function() {
            return this._transform ? this._transform.getScaleX() : 1;
        }),
        u(0, t, "desginHeight", function() {
            return console.debug("desginHeight已经弃用，请使用designHeight代替"),
            this.designHeight;
        }),
        u(0, t, "frameRate", function() {
            return this._frameRate;
        }, function(t) {
            if (this._frameRate = t,
            R.isConchApp)
                switch (this._frameRate) {
                case "slow":
                    G.window.conch && G.window.conchConfig.setSlowFrame && G.window.conchConfig.setSlowFrame(!0);
                    break;

                case "fast":
                    G.window.conch && G.window.conchConfig.setSlowFrame && G.window.conchConfig.setSlowFrame(!1);
                    break;

                case "mouse":
                    G.window.conch && G.window.conchConfig.setMouseFrame && G.window.conchConfig.setMouseFrame(2e3);
                    break;

                case "sleep":
                    G.window.conch && G.window.conchConfig.setLimitFPS && G.window.conchConfig.setLimitFPS(1);
                    break;

                default:
                    throw new Error("Stage:frameRate invalid.");
                }
        }),
        u(0, t, "clientScaleY", function() {
            return this._transform ? this._transform.getScaleY() : 1;
        }),
        u(0, t, "width", c.prototype._$get_width, function(t) {
            this.designWidth = t,
            w.superSet(ct, this, "width", t),
            w.timer.callLater(this, this._changeCanvasSize);
        }),
        u(0, t, "alignH", function() {
            return this._alignH;
        }, function(t) {
            this._alignH = t,
            w.timer.callLater(this, this._changeCanvasSize);
        }),
        u(0, t, "isFocused", function() {
            return this._isFocused;
        }),
        u(0, t, "height", c.prototype._$get_height, function(t) {
            this.designHeight = t,
            w.superSet(ct, this, "height", t),
            w.timer.callLater(this, this._changeCanvasSize);
        }),
        u(0, t, "transform", function() {
            return this._tfChanged && this._adjustTransform(),
            this._transform = this._transform || A.create();
        }, c.prototype._$set_transform),
        u(0, t, "isVisibility", function() {
            return this._isVisibility;
        }),
        u(0, t, "desginWidth", function() {
            return console.debug("desginWidth已经弃用，请使用designWidth代替"),
            this.designWidth;
        }),
        u(0, t, "scaleMode", function() {
            return this._scaleMode;
        }, function(t) {
            this._scaleMode = t,
            w.timer.callLater(this, this._changeCanvasSize);
        }),
        u(0, t, "alignV", function() {
            return this._alignV;
        }, function(t) {
            this._alignV = t,
            w.timer.callLater(this, this._changeCanvasSize);
        }),
        u(0, t, "bgColor", function() {
            return this._bgColor;
        }, function(t) {
            this._bgColor = t,
            this.conchModel && this.conchModel.bgColor(t),
            R.isWebGL && (t ? r._wgColor = V.create(t)._color : G.onMiniGame || (r._wgColor = null)),
            G.onLimixiu ? r._wgColor = V.create(t)._color : R.canvas.style.background = t || "none";
        }),
        u(0, t, "mouseX", function() {
            return Math.round(p.instance.mouseX / this.clientScaleX);
        }),
        u(0, t, "mouseY", function() {
            return Math.round(p.instance.mouseY / this.clientScaleY);
        }),
        u(0, t, "screenMode", function() {
            return this._screenMode;
        }, function(t) {
            this._screenMode = t;
        }),
        u(0, t, "visible", c.prototype._$get_visible, function(t) {
            this.visible !== t && (w.superSet(ct, this, "visible", t),
            R._mainCanvas.source.style.visibility = t ? "visible" : "hidden");
        }),
        u(0, t, "fullScreenEnabled", null, function(t) {
            var e = G.document
              , i = R.canvas;
            t ? (i.addEventListener("mousedown", this._requestFullscreen),
            i.addEventListener("touchstart", this._requestFullscreen),
            e.addEventListener("fullscreenchange", this._fullScreenChanged),
            e.addEventListener("mozfullscreenchange", this._fullScreenChanged),
            e.addEventListener("webkitfullscreenchange", this._fullScreenChanged),
            e.addEventListener("msfullscreenchange", this._fullScreenChanged)) : (i.removeEventListener("mousedown", this._requestFullscreen),
            i.removeEventListener("touchstart", this._requestFullscreen),
            e.removeEventListener("fullscreenchange", this._fullScreenChanged),
            e.removeEventListener("mozfullscreenchange", this._fullScreenChanged),
            e.removeEventListener("webkitfullscreenchange", this._fullScreenChanged),
            e.removeEventListener("msfullscreenchange", this._fullScreenChanged));
        }),
        r.SCALE_NOSCALE = "noscale",
        r.SCALE_EXACTFIT = "exactfit",
        r.SCALE_SHOWALL = "showall",
        r.SCALE_NOBORDER = "noborder",
        r.SCALE_FULL = "full",
        r.SCALE_FIXED_WIDTH = "fixedwidth",
        r.SCALE_FIXED_HEIGHT = "fixedheight",
        r.SCALE_FIXED_AUTO = "fixedauto",
        r.ALIGN_LEFT = "left",
        r.ALIGN_RIGHT = "right",
        r.ALIGN_CENTER = "center",
        r.ALIGN_TOP = "top",
        r.ALIGN_MIDDLE = "middle",
        r.ALIGN_BOTTOM = "bottom",
        r.SCREEN_NONE = "none",
        r.SCREEN_HORIZONTAL = "horizontal",
        r.SCREEN_VERTICAL = "vertical",
        r.FRAME_FAST = "fast",
        r.FRAME_SLOW = "slow",
        r.FRAME_MOUSE = "mouse",
        r.FRAME_SLEEP = "sleep",
        r.FRAME_MOUSE_THREDHOLD = 2e3,
        h(r, ["_wgColor", function() {
            return this._wgColor = [0, 0, 0, 1];
        }
        ]),
        r;
    }(ct)
      , yt = (function(t) {
        function e() {
            this.url = null,
            this._channel = null,
            this._tar = null,
            this._playEvents = null,
            this._stopEvents = null,
            e.__super.call(this),
            this.visible = !1,
            this.on("added", this, this._onParentChange),
            this.on("removed", this, this._onParentChange);
        }
        f(e, "laya.media.SoundNode", ct);
        var i = e.prototype;
        i._onParentChange = function() {
            this.target = this.parent;
        }
        ,
        i.play = function(t, e) {
            void 0 === t && (t = 1),
            isNaN(t) && (t = 1),
            this.url && (this.stop(),
            this._channel = E.playSound(this.url, t, e));
        }
        ,
        i.stop = function() {
            this._channel && !this._channel.isStopped && this._channel.stop(),
            this._channel = null;
        }
        ,
        i._setPlayAction = function(t, e, i, n) {
            void 0 === n && (n = !0),
            this[i] && t && (n ? t.on(e, this, this[i]) : t.off(e, this, this[i]));
        }
        ,
        i._setPlayActions = function(t, e, i, n) {
            if (void 0 === n && (n = !0),
            t && e) {
                var a, s = e.split(","), r = 0;
                for (a = s.length,
                r = 0; r < a; r++)
                    this._setPlayAction(t, s[r], i, n);
            }
        }
        ,
        u(0, i, "playEvent", null, function(t) {
            (this._playEvents = t) && this._tar && this._setPlayActions(this._tar, t, "play");
        }),
        u(0, i, "target", null, function(t) {
            this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !1),
            this._setPlayActions(this._tar, this._stopEvents, "stop", !1)),
            this._tar = t,
            this._tar && (this._setPlayActions(this._tar, this._playEvents, "play", !0),
            this._setPlayActions(this._tar, this._stopEvents, "stop", !0));
        }),
        u(0, i, "stopEvent", null, function(t) {
            (this._stopEvents = t) && this._tar && this._setPlayActions(this._tar, t, "stop");
        });
    }(),
    function(t) {
        function e() {
            this._src = null,
            this._onload = null,
            this._onerror = null,
            e.__super.call(this);
        }
        f(e, "laya.resource.FileBitmap", pt);
        var i = e.prototype;
        return u(0, i, "src", function() {
            return this._src;
        }, function(t) {
            this._src = t;
        }),
        u(0, i, "onload", null, function(t) {}),
        u(0, i, "onerror", null, function(t) {}),
        e;
    }())
      , vt = function(t) {
        function i(t, e) {
            this._is2D = !1,
            i.__super.call(this);
            var n = this;
            if (this._source = this,
            "2D" === t || "AUTO" === t && !R.isWebGL) {
                this._is2D = !0,
                this._source = e || G.createElement("canvas"),
                this._w = this._source.width,
                this._h = this._source.height;
                var a = this;
                a.getContext = function(t, e) {
                    if (n._ctx)
                        return n._ctx;
                    var i = n._ctx = n._source.getContext(t, e);
                    return i && (i._canvas = a,
                    R.isFlash || G.onLimixiu || (i.size = function(t, e) {}
                    )),
                    i;
                }
                ;
            }
            this.lock = !0;
        }
        f(i, "laya.resource.HTMLCanvas", pt);
        var e = i.prototype;
        return e.clear = function() {
            this._ctx && this._ctx.clear();
        }
        ,
        e.destroy = function() {
            this._ctx && this._ctx.destroy(),
            this._ctx = null,
            laya.resource.Resource.prototype.destroy.call(this);
        }
        ,
        e.release = function() {}
        ,
        e._setContext = function(t) {
            this._ctx = t;
        }
        ,
        e.getContext = function(t, e) {
            return this._ctx ? this._ctx : this._ctx = i._createContext(this);
        }
        ,
        e.getMemSize = function() {
            return 0;
        }
        ,
        e.size = function(t, e) {
            (this._w != t || this._h != e || this._source && (this._source.width != t || this._source.height != e)) && (this._w = t,
            this._h = e,
            this.memorySize = this._w * this._h * 4,
            this._ctx && this._ctx.size(t, e),
            this._source && (this._source.height = e,
            this._source.width = t));
        }
        ,
        e.getCanvas = function() {
            return this._source;
        }
        ,
        e.toBase64 = function(t, e, i) {
            if (this._source)
                if (R.isConchApp && this._source.toBase64)
                    this._source.toBase64(t, e, i);
                else {
                    var n = this._source.toDataURL(t, e);
                    i.call(this, n);
                }
        }
        ,
        u(0, e, "context", function() {
            return this._ctx;
        }),
        u(0, e, "asBitmap", null, function(t) {}),
        i.create = function(t, e) {
            return new i(t,e);
        }
        ,
        i.TYPE2D = "2D",
        i.TYPE3D = "3D",
        i.TYPEAUTO = "AUTO",
        i._createContext = null,
        i;
    }()
      , St = (function(t) {
        function h(t, e, i, n, a, s, r, o) {
            throw h.__super.call(this),
            new Error("不允许new！");
        }
        f(h, "laya.resource.HTMLSubImage", pt),
        h.create = function(t, e, i, n, a, s, r, o) {
            return void 0 === o && (o = !1),
            new h(t,e,i,n,a,s,r,o);
        }
        ;
    }(),
    function(t) {
        function c() {
            this._frames = null,
            this._url = null,
            c.__super.call(this),
            this._setControlNode(this);
        }
        f(c, "laya.display.Animation", t);
        var e = c.prototype;
        e.destroy = function(t) {
            void 0 === t && (t = !0),
            this.stop(),
            laya.display.Sprite.prototype.destroy.call(this, t),
            this._frames = null,
            this._labels = null;
        }
        ,
        e.play = function(t, e, i, n) {
            void 0 === t && (t = 0),
            void 0 === e && (e = !0),
            void 0 === i && (i = ""),
            void 0 === n && (n = !0),
            i && this._setFramesFromCache(i, n),
            this._isPlaying = !0,
            this.index = "string" == typeof t ? this._getFrameByLabel(t) : t,
            this.loop = e,
            this._actionName = i,
            this._isReverse = 1 == this.wrapMode,
            this._frames && 0 < this.interval && this.timerLoop(this.interval, this, this._frameLoop, null, !0, !0);
        }
        ,
        e._setFramesFromCache = function(t, e) {
            var i;
            return void 0 === e && (e = !1),
            this._url && (t = this._url + "#" + t),
            t && c.framesMap[t] ? ((i = c.framesMap[t])instanceof Array ? (this._frames = c.framesMap[t],
            this._count = this._frames.length) : (i.nodeRoot && (c.framesMap[t] = this._parseGraphicAnimationByData(i),
            i = c.framesMap[t]),
            this._frames = i.frames,
            this._count = this._frames.length,
            this._frameRateChanged || (this._interval = i.interval),
            this._labels = this._copyLabels(i.labels)),
            !0) : (e && console.log("ani not found:", t),
            !1);
        }
        ,
        e._copyLabels = function(t) {
            if (!t)
                return null;
            var e, i;
            for (i in e = {},
            t)
                e[i] = q.copyArray([], t[i]);
            return e;
        }
        ,
        e._frameLoop = function() {
            this._style.visible && .01 < this._style.alpha && t.prototype._frameLoop.call(this);
        }
        ,
        e._displayToIndex = function(t) {
            this._frames && (this.graphics = this._frames[t]);
        }
        ,
        e.clear = function() {
            this.stop(),
            this.graphics = null,
            this._frames = null,
            this._labels = null;
        }
        ,
        e.loadImages = function(t, e) {
            return void 0 === e && (e = ""),
            this._url = "",
            this._setFramesFromCache(e) || (this.frames = c.framesMap[e] ? c.framesMap[e] : c.createFrames(t, e)),
            this;
        }
        ,
        e.loadAtlas = function(e, i, n) {
            void 0 === n && (n = ""),
            this._url = "";
            var a = this;
            function t(t) {
                e === t && (a.frames = c.framesMap[n] ? c.framesMap[n] : c.createFrames(e, n),
                i && i.run());
            }
            return a._setFramesFromCache(n) || (ot.getAtlas(e) ? t(e) : w.loader.load(e, y.create(null, t, [e]), null, "atlas")),
            this;
        }
        ,
        e.loadAnimation = function(t, e, i) {
            this._url = t;
            return this._actionName || (this._actionName = ""),
            this._setFramesFromCache(this._actionName) ? (this._setFramesFromCache(this._actionName, !0),
            this.index = 0,
            e && e.run()) : !i || ot.getAtlas(i) ? this._loadAnimationData(t, e, i) : w.loader.load(i, y.create(this, this._loadAnimationData, [t, e, i]), null, "atlas"),
            this;
        }
        ,
        e._loadAnimationData = function(o, h, t) {
            var l = this;
            if (!t || ot.getAtlas(t)) {
                var u = this;
                ot.getRes(o) ? e(o) : w.loader.load(o, y.create(null, e, [o]), null, "json"),
                ot.clearRes(o);
            } else
                console.warn("atlas load fail:" + t);
            function e(t) {
                if (ot.getRes(t) && o === t) {
                    var e;
                    if (c.framesMap[o + "#"])
                        u._setFramesFromCache(l._actionName, !0),
                        l.index = 0,
                        l._checkResumePlaying();
                    else {
                        var i = u._parseGraphicAnimation(ot.getRes(o));
                        if (!i)
                            return;
                        var n, a = i.animationList, s = 0, r = a.length;
                        for (s = 0; s < r; s++)
                            e = a[s],
                            c.framesMap[o + "#" + e.name] = e,
                            n || (n = e);
                        n && (c.framesMap[o + "#"] = n,
                        u._setFramesFromCache(l._actionName, !0),
                        l.index = 0),
                        l._checkResumePlaying();
                    }
                    h && h.run();
                }
            }
        }
        ,
        e._parseGraphicAnimation = function(t) {
            return wt.parseAnimationData(t);
        }
        ,
        e._parseGraphicAnimationByData = function(t) {
            return wt.parseAnimationByData(t);
        }
        ,
        u(0, e, "frames", function() {
            return this._frames;
        }, function(t) {
            (this._frames = t) && (this._count = t.length,
            this._isPlaying ? this.play(this._index, this.loop, this._actionName) : this.index = this._index);
        }),
        u(0, e, "autoPlay", null, function(t) {
            t ? this.play() : this.stop();
        }),
        u(0, e, "source", null, function(t) {
            -1 < t.indexOf(".ani") ? this.loadAnimation(t) : -1 < t.indexOf(".json") || -1 < t.indexOf("als") || -1 < t.indexOf("atlas") ? this.loadAtlas(t) : this.loadImages(t.split(","));
        }),
        u(0, e, "autoAnimation", null, function(t) {
            this.play(0, !0, t, !1);
        }),
        c.createFrames = function(t, e) {
            var i, n, a = 0, s = 0;
            if ("string" == typeof t) {
                var r = ot.getAtlas(t);
                if (r && r.length)
                    for (i = [],
                    a = 0,
                    s = r.length; a < s; a++)
                        (n = new P.createGraphics()).drawTexture(ot.getRes(r[a]), 0, 0),
                        i.push(n);
            } else if (t instanceof Array)
                for (i = [],
                a = 0,
                s = t.length; a < s; a++)
                    (n = new P.createGraphics()).loadImage(t[a], 0, 0),
                    i.push(n);
            return e && (c.framesMap[e] = i),
            i;
        }
        ,
        c.clearCache = function(t) {
            var e, i = c.framesMap, n = t + "#";
            for (e in i)
                e !== t && 0 != e.indexOf(n) || delete c.framesMap[e];
        }
        ,
        c.framesMap = {};
    }(ft),
    function(t) {
        function s() {
            this._targetDic = null,
            this._animationData = null,
            this._animationNewFrames = null,
            s.__super.call(this),
            null == s._sortIndexFun && (s._sortIndexFun = b.sortByKey("index", !1, !0));
        }
        f(s, "laya.display.FrameAnimation", t);
        var e = s.prototype;
        return e._setUp = function(t, e) {
            this._labels = null,
            this._animationNewFrames = null,
            this._targetDic = t,
            this._animationData = e,
            this.interval = 1e3 / e.frameRate,
            e.parsed ? (this._count = e.count,
            this._labels = e.labels,
            this._animationNewFrames = e.animationNewFrames) : (this._animationNewFrames = [],
            this._calculateDatas()),
            e.parsed = !0,
            e.labels = this._labels,
            e.count = this._count,
            e.animationNewFrames = this._animationNewFrames;
        }
        ,
        e.clear = function() {
            t.prototype.clear.call(this),
            this._targetDic = null,
            this._animationData = null;
        }
        ,
        e._displayToIndex = function(t) {
            if (this._animationData) {
                t < 0 && (t = 0),
                t > this._count && (t = this._count);
                var e = this._animationData.nodes
                  , i = 0
                  , n = e.length;
                for (i = 0; i < n; i++)
                    this._displayNodeToFrame(e[i], t);
            }
        }
        ,
        e._displayNodeToFrame = function(t, e, i) {
            i || (i = this._targetDic);
            var n = i[t.target];
            if (n) {
                var a, s, r, o = t.frames, h = t.keys, l = 0, u = h.length;
                for (l = 0; l < u; l++)
                    r = (s = o[a = h[l]]).length > e ? s[e] : s[s.length - 1],
                    n[a] = r;
            }
        }
        ,
        e._calculateDatas = function() {
            if (this._animationData) {
                var t, e = this._animationData.nodes, i = 0, n = e.length;
                for (i = this._count = 0; i < n; i++)
                    t = e[i],
                    this._calculateNodeKeyFrames(t);
                this._count += 1;
            }
        }
        ,
        e._calculateNodeKeyFrames = function(t) {
            var e, i, n = t.keyframes, a = t.target;
            for (e in t.frames || (t.frames = {}),
            t.keys ? t.keys.length = 0 : t.keys = [],
            t.initValues || (t.initValues = {}),
            n)
                i = n[e],
                t.frames[e] || (t.frames[e] = []),
                this._targetDic && this._targetDic[a] && (t.initValues[e] = this._targetDic[a][e]),
                i.sort(s._sortIndexFun),
                t.keys.push(e),
                this._calculateNodePropFrames(i, t.frames[e], e, a);
        }
        ,
        e.resetToInitState = function() {
            if (this._targetDic && this._animationData) {
                var t, e, i = this._animationData.nodes, n = 0, a = i.length;
                for (n = 0; n < a; n++)
                    if (e = (t = i[n]).initValues) {
                        var s, r = this._targetDic[t.target];
                        if (r)
                            for (s in e)
                                r[s] = e[s];
                    }
            }
        }
        ,
        e._calculateNodePropFrames = function(t, e, i, n) {
            var a = 0
              , s = t.length - 1;
            for (e.length = t[s].index + 1,
            a = 0; a < s; a++)
                this._dealKeyFrame(t[a]),
                this._calculateFrameValues(t[a], t[a + 1], e);
            0 == s && (e[t[0].index] = t[0].value,
            this._animationNewFrames && (this._animationNewFrames[t[0].index] = !0)),
            this._dealKeyFrame(t[a]);
        }
        ,
        e._dealKeyFrame = function(t) {
            t.label && "" != t.label && this.addLabel(t.label, t.index);
        }
        ,
        e._calculateFrameValues = function(t, e, i) {
            var n, a = 0, s = t.index, r = e.index, o = t.value, h = e.value - t.value, l = r - s;
            if (r > this._count && (this._count = r),
            t.tween)
                for (null == (n = X[t.tweenMethod]) && (n = X.linearNone),
                a = s; a < r; a++)
                    i[a] = n(a - s, o, h, l),
                    this._animationNewFrames && (this._animationNewFrames[a] = !0);
            else
                for (a = s; a < r; a++)
                    i[a] = o;
            this._animationNewFrames && (this._animationNewFrames[t.index] = !0,
            this._animationNewFrames[e.index] = !0),
            i[e.index] = e.value;
        }
        ,
        s._sortIndexFun = null,
        s;
    }(ft))
      , xt = function(e) {
        function a() {
            this._focus = !1,
            this._multiline = !1,
            this._editable = !0,
            this._restrictPattern = null,
            this._type = "text",
            this._prompt = "",
            this._promptColor = "#A9A9A9",
            this._originColor = "#000000",
            this._content = "",
            a.__super.call(this),
            this._maxChars = 1e5,
            this._width = 100,
            this._height = 20,
            this.multiline = !1,
            this.overflow = gt.SCROLL,
            this.on("mousedown", this, this._onMouseDown),
            this.on("undisplay", this, this._onUnDisplay);
        }
        f(a, "laya.display.Input", e);
        var t = a.prototype;
        return t.setSelection = function(t, e) {
            this.focus = !0,
            laya.display.Input.inputElement.selectionStart = t,
            laya.display.Input.inputElement.selectionEnd = e;
        }
        ,
        t._onUnDisplay = function(t) {
            this.focus = !1;
        }
        ,
        t._onMouseDown = function(t) {
            this.focus = !0;
        }
        ,
        t._syncInputTransform = function() {
            var t = this.nativeInput
              , e = q.getTransformRelativeToWindow(this, this.padding[3], this.padding[0])
              , i = this._width - this.padding[1] - this.padding[3]
              , n = this._height - this.padding[0] - this.padding[2];
            R.isConchApp ? (t.setScale(e.scaleX, e.scaleY),
            t.setSize(i, n),
            t.setPos(e.x, e.y)) : (a.inputContainer.style.transform = a.inputContainer.style.webkitTransform = "scale(" + e.scaleX + "," + e.scaleY + ") rotate(" + w.stage.canvasDegree + "deg)",
            t.style.width = i + "px",
            t.style.height = n + "px",
            a.inputContainer.style.left = e.x + "px",
            a.inputContainer.style.top = e.y + "px");
        }
        ,
        t.select = function() {
            this.nativeInput.select();
        }
        ,
        t._setInputMethod = function() {
            a.input.parentElement && a.inputContainer.removeChild(a.input),
            a.area.parentElement && a.inputContainer.removeChild(a.area),
            a.inputElement = this._multiline ? a.area : a.input,
            a.inputContainer.appendChild(a.inputElement),
            gt.RightToLeft && (a.inputElement.style.direction = "rtl");
        }
        ,
        t._focusIn = function() {
            laya.display.Input.isInputting = !0;
            var t = this.nativeInput;
            this._focus = !0;
            var e = t.style;
            e.whiteSpace = this.wordWrap ? "pre-wrap" : "nowrap",
            this._setPromptColor(),
            t.readOnly = !this._editable,
            R.isConchApp && (t.setType(this._type),
            t.setForbidEdit(!this._editable)),
            t.maxLength = this._maxChars;
            this.padding;
            if (t.type = this._type,
            t.value = this._content,
            t.placeholder = this._prompt,
            w.stage.off("keydown", this, this._onKeyDown),
            w.stage.on("keydown", this, this._onKeyDown),
            (w.stage.focus = this).event("focus"),
            G.onPC && t.focus(),
            !G.onMiniGame) {
                this._text;
                this._text = null;
            }
            this.typeset(),
            t.setColor(this._originColor),
            t.setFontSize(this.fontSize),
            t.setFontFace(G.onIPhone && gt._fontFamilyMap[this.font] || this.font),
            R.isConchApp && t.setMultiAble && t.setMultiAble(this._multiline),
            e.lineHeight = this.leading + this.fontSize + "px",
            e.fontStyle = this.italic ? "italic" : "normal",
            e.fontWeight = this.bold ? "bold" : "normal",
            e.textAlign = this.align,
            e.padding = "0 0",
            this._syncInputTransform(),
            !R.isConchApp && G.onPC && w.timer.frameLoop(1, this, this._syncInputTransform);
        }
        ,
        t._setPromptColor = function() {
            (a.promptStyleDOM = G.getElementById("promptStyle")) || ((a.promptStyleDOM = G.createElement("style")).setAttribute("id", "promptStyle"),
            G.document.head.appendChild(a.promptStyleDOM)),
            a.promptStyleDOM.innerText = "input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {color:" + this._promptColor + "}input:-moz-placeholder, textarea:-moz-placeholder {color:" + this._promptColor + "}input::-moz-placeholder, textarea::-moz-placeholder {color:" + this._promptColor + "}input:-ms-input-placeholder, textarea:-ms-input-placeholder {color:" + this._promptColor + "}";
        }
        ,
        t._focusOut = function() {
            laya.display.Input.isInputting = !1,
            this._focus = !1,
            this._text = null,
            this._content = this.nativeInput.value,
            this._content ? (w.superSet(gt, this, "text", this._content),
            w.superSet(gt, this, "color", this._originColor)) : (w.superSet(gt, this, "text", this._prompt),
            w.superSet(gt, this, "color", this._promptColor)),
            w.stage.off("keydown", this, this._onKeyDown),
            w.stage.focus = null,
            this.event("blur"),
            R.isConchApp && this.nativeInput.blur(),
            G.onPC && w.timer.clear(this, this._syncInputTransform);
        }
        ,
        t._onKeyDown = function(t) {
            13 === t.keyCode && (G.onMobile && !this._multiline && (this.focus = !1),
            this.event("enter"));
        }
        ,
        t.changeText = function(t) {
            this._content = t,
            this._focus ? (this.nativeInput.value = t || "",
            this.event("change")) : e.prototype.changeText.call(this, t);
        }
        ,
        u(0, t, "color", e.prototype._$get_color, function(t) {
            this._focus && this.nativeInput.setColor(t),
            w.superSet(gt, this, "color", this._content ? t : this._promptColor),
            this._originColor = t;
        }),
        u(0, t, "inputElementYAdjuster", function() {
            return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。"),
            0;
        }, function(t) {
            console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementYAdjuster已弃用。");
        }),
        u(0, t, "multiline", function() {
            return this._multiline;
        }, function(t) {
            this._multiline = t,
            this.valign = t ? "top" : "middle";
        }),
        u(0, t, "maxChars", function() {
            return this._maxChars;
        }, function(t) {
            t <= 0 && (t = 1e5),
            this._maxChars = t;
        }),
        u(0, t, "text", function() {
            return this._focus ? this.nativeInput.value : this._content || "";
        }, function(t) {
            w.superSet(gt, this, "color", this._originColor),
            t += "",
            this._focus ? (this.nativeInput.value = t || "",
            this.event("change")) : (this._multiline || (t = t.replace(/\r?\n/g, "")),
            (this._content = t) ? w.superSet(gt, this, "text", t) : (w.superSet(gt, this, "text", this._prompt),
            w.superSet(gt, this, "color", this.promptColor)));
        }),
        u(0, t, "nativeInput", function() {
            return this._multiline ? a.area : a.input;
        }),
        u(0, t, "prompt", function() {
            return this._prompt;
        }, function(t) {
            !this._text && t && w.superSet(gt, this, "color", this._promptColor),
            this.promptColor = this._promptColor,
            this._text ? w.superSet(gt, this, "text", this._text == this._prompt ? t : this._text) : w.superSet(gt, this, "text", t),
            this._prompt = gt.langPacks && gt.langPacks[t] ? gt.langPacks[t] : t;
        }),
        u(0, t, "focus", function() {
            return this._focus;
        }, function(t) {
            var e = this.nativeInput;
            this._focus !== t && (t ? (e.target ? e.target._focusOut() : this._setInputMethod(),
            (e.target = this)._focusIn()) : (e.target = null,
            this._focusOut(),
            G.document.body.scrollTop = 0,
            e.blur(),
            R.isConchApp ? e.setPos(-1e4, -1e4) : a.inputContainer.contains(e) && a.inputContainer.removeChild(e)));
        }),
        u(0, t, "restrict", function() {
            return this._restrictPattern ? this._restrictPattern.source : "";
        }, function(t) {
            this._restrictPattern = t ? (-1 < (t = "[^" + t + "]").indexOf("^^") && (t = t.replace("^^", "")),
            new RegExp(t,"g")) : null;
        }),
        u(0, t, "editable", function() {
            return this._editable;
        }, function(t) {
            this._editable = t,
            R.isConchApp && a.input.setForbidEdit(!t);
        }),
        u(0, t, "promptColor", function() {
            return this._promptColor;
        }, function(t) {
            this._promptColor = t,
            this._content || w.superSet(gt, this, "color", t);
        }),
        u(0, t, "type", function() {
            return this._type;
        }, function(t) {
            this._getCSSStyle().password = "password" == t,
            this._type = t,
            R.isConchApp && this.nativeInput.setType(t);
        }),
        u(0, t, "inputElementXAdjuster", function() {
            return console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。"),
            0;
        }, function(t) {
            console.warn("deprecated: 由于即使设置了该值，在各平台和浏览器之间也不一定一致，inputElementXAdjuster已弃用。");
        }),
        u(0, t, "asPassword", function() {
            return this._getCSSStyle().password;
        }, function(t) {
            this._getCSSStyle().password = t,
            this._type = "password",
            console.warn('deprecated: 使用type="password"替代设置asPassword, asPassword将在下次重大更新时删去'),
            this.isChanged = !0;
        }),
        a.__init__ = function() {
            a._createInputElement(),
            G.onMobile && R.canvas.addEventListener(a.IOS_IFRAME ? G.onMiniGame ? "touchend" : "click" : "touchend", a._popupInputMethod);
        }
        ,
        a._popupInputMethod = function(t) {
            laya.display.Input.isInputting && laya.display.Input.inputElement.focus();
        }
        ,
        a._createInputElement = function() {
            a._initInput(a.area = G.createElement("textarea")),
            a._initInput(a.input = G.createElement("input")),
            (a.inputContainer = G.createElement("div")).style.position = "absolute",
            a.inputContainer.style.zIndex = 1e5,
            G.container.appendChild(a.inputContainer),
            a.inputContainer.setPos = function(t, e) {
                a.inputContainer.style.left = t + "px",
                a.inputContainer.style.top = e + "px";
            }
            ;
        }
        ,
        a._initInput = function(e) {
            var t = e.style;
            t.cssText = "position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;",
            t.resize = "none",
            t.backgroundColor = "transparent",
            t.border = "none",
            t.outline = "none",
            t.zIndex = 1,
            e.addEventListener("input", a._processInputting),
            e.addEventListener("mousemove", a._stopEvent),
            e.addEventListener("mousedown", a._stopEvent),
            e.addEventListener("touchmove", a._stopEvent),
            e.setFontFace = function(t) {
                e.style.fontFamily = t;
            }
            ,
            R.isConchApp || (e.setColor = function(t) {
                e.style.color = t;
            }
            ,
            e.setFontSize = function(t) {
                e.style.fontSize = t + "px";
            }
            );
        }
        ,
        a._processInputting = function(t) {
            var e = laya.display.Input.inputElement.target;
            if (e) {
                var i = laya.display.Input.inputElement.value;
                e._restrictPattern && (i = i.replace(/\u2006|\x27/g, ""),
                e._restrictPattern.test(i) && (i = i.replace(e._restrictPattern, ""),
                laya.display.Input.inputElement.value = i)),
                e._text = i,
                e.event("input");
            }
        }
        ,
        a._stopEvent = function(t) {
            "touchmove" == t.type && t.preventDefault(),
            t.stopPropagation && t.stopPropagation();
        }
        ,
        a.TYPE_TEXT = "text",
        a.TYPE_PASSWORD = "password",
        a.TYPE_EMAIL = "email",
        a.TYPE_URL = "url",
        a.TYPE_NUMBER = "number",
        a.TYPE_RANGE = "range",
        a.TYPE_DATE = "date",
        a.TYPE_MONTH = "month",
        a.TYPE_WEEK = "week",
        a.TYPE_TIME = "time",
        a.TYPE_DATE_TIME = "datetime",
        a.TYPE_DATE_TIME_LOCAL = "datetime-local",
        a.TYPE_SEARCH = "search",
        a.input = null,
        a.area = null,
        a.inputElement = null,
        a.inputContainer = null,
        a.confirmButton = null,
        a.promptStyleDOM = null,
        a.inputHeight = 45,
        a.isInputting = !1,
        a.stageMatrix = null,
        h(a, ["IOS_IFRAME", function() {
            return this.IOS_IFRAME = G.onIOS && G.window.top != G.window.self;
        }
        ]),
        a;
    }(gt)
      , bt = function(t) {
        function i(t, e) {
            this._recreateLock = !1,
            this._needReleaseAgain = !1,
            this._enableMerageInAtlas = !0,
            i.__super.call(this),
            this._init_(t, e);
        }
        f(i, "laya.resource.HTMLImage", yt);
        var e = i.prototype;
        return e._init_ = function(t, e) {
            this._src = t,
            this._source = new G.window.Image(),
            e && (e.onload && (this.onload = e.onload),
            e.onerror && (this.onerror = e.onerror),
            e.onCreate && e.onCreate(this)),
            0 != t.indexOf("data:image") && (this._source.crossOrigin = ""),
            t && (this._source.src = t);
        }
        ,
        e.recreateResource = function() {
            var t = this;
            if ("" === this._src)
                throw new Error("src no null！");
            if (this._needReleaseAgain = !1,
            this._source) {
                if (this._recreateLock)
                    return;
                this.memorySize = this._w * this._h * 4,
                this._recreateLock = !1,
                this.completeCreate();
            } else {
                this._recreateLock = !0;
                var e = this;
                this._source = new G.window.Image(),
                this._source.crossOrigin = "",
                this._source.onload = function() {
                    if (e._needReleaseAgain)
                        return e._needReleaseAgain = !1,
                        e._source.onload = null,
                        void (e._source = null);
                    e._source.onload = null,
                    e.memorySize = t._w * t._h * 4,
                    e._recreateLock = !1,
                    e.completeCreate();
                }
                ,
                this._source.src = this._src;
            }
        }
        ,
        e.disposeResource = function() {
            this._recreateLock && (this._needReleaseAgain = !0),
            this._source && (this._source = null,
            this.memorySize = 0);
        }
        ,
        e.onresize = function() {
            this._w = this._source.width,
            this._h = this._source.height;
        }
        ,
        u(0, e, "onload", null, function(t) {
            var e = this;
            this._onload = t,
            this._source && (this._source.onload = null != this._onload ? function() {
                e.onresize(),
                e._onload();
            }
            : null);
        }),
        u(0, e, "onerror", null, function(t) {
            var e = this;
            this._onerror = t,
            this._source && (this._source.onerror = null != this._onerror ? function() {
                e._onerror();
            }
            : null);
        }),
        u(0, e, "enableMerageInAtlas", function() {
            return this._enableMerageInAtlas;
        }, function(t) {
            this._enableMerageInAtlas = t,
            R.isConchApp && this._source && (this._source.enableMerageInAtlas = t);
        }),
        i.create = function(t, e) {
            return new i(t,e);
        }
        ,
        i;
    }()
      , wt = (function(s) {
        function t() {
            this._target = null,
            this._playEvents = null,
            this._initData = {},
            this._aniKeys = null,
            this._effectClass = null,
            t.__super.call(this);
        }
        f(t, "laya.display.EffectAnimation", s);
        var e = t.prototype;
        e._onOtherBegin = function(t) {
            t != this && this.stop();
        }
        ,
        e.addEvent = function() {
            this._target && this._playEvents && (this._setControlNode(this._target),
            this._target.on(this._playEvents, this, this._onPlayAction));
        }
        ,
        e._onPlayAction = function() {
            this.play(0, !1);
        }
        ,
        e.play = function(t, e, i, n) {
            void 0 === t && (t = 0),
            void 0 === e && (e = !0),
            void 0 === i && (i = ""),
            void 0 === n && (n = !0),
            this._target && (this._target.event("effectanimationbegin", [this]),
            this._recordInitData(),
            laya.display.AnimationPlayerBase.prototype.play.call(this, t, e, i, n));
        }
        ,
        e._recordInitData = function() {
            if (this._aniKeys) {
                var t, e, i = 0;
                for (t = this._aniKeys.length,
                i = 0; i < t; i++)
                    e = this._aniKeys[i],
                    this._initData[e] = this._target[e];
            }
        }
        ,
        e._displayToIndex = function(t) {
            if (this._animationData) {
                t < 0 && (t = 0),
                t > this._count && (t = this._count);
                var e = this._animationData.nodes
                  , i = 0
                  , n = e.length;
                for (n = 1 < n ? 1 : n,
                i = 0; i < n; i++)
                    this._displayNodeToFrame(e[i], t);
            }
        }
        ,
        e._displayNodeToFrame = function(t, e, i) {
            if (this._target) {
                var n;
                n = this._target;
                var a, s, r, o, h = t.frames, l = t.keys, u = 0, c = l.length;
                o = t.secondFrames;
                var d, _, p, f, g = 0;
                for (u = 0; u < c; u++)
                    s = h[a = l[u]],
                    r = -1 == (g = o[a]) ? this._initData[a] : e < g ? (p = (_ = t.keyframes[a])[0]).tween ? (null == (d = X[p.tweenMethod]) && (d = X.linearNone),
                    f = _[1],
                    d(e, this._initData[a], f.value - this._initData[a], f.index)) : this._initData[a] : s.length > e ? s[e] : s[s.length - 1],
                    n[a] = r;
            }
        }
        ,
        e._calculateNodeKeyFrames = function(t) {
            s.prototype._calculateNodeKeyFrames.call(this, t);
            var e, i, n, a = t.keyframes;
            t.target;
            for (e in n = {},
            t.secondFrames = n,
            a)
                (i = a[e]).length <= 1 ? n[e] = -1 : n[e] = i[1].index;
        }
        ,
        u(0, e, "target", function() {
            return this._target;
        }, function(t) {
            this._target && this._target.off("effectanimationbegin", this, this._onOtherBegin),
            this._target = t,
            this._target && this._target.on("effectanimationbegin", this, this._onOtherBegin),
            this.addEvent();
        }),
        u(0, e, "playEvent", null, function(t) {
            (this._playEvents = t) && this.addEvent();
        }),
        u(0, e, "effectData", null, function(t) {
            var e;
            t && ((e = t.animations) && e[0] && (this._setUp({}, e[0]),
            e[0].nodes && e[0].nodes[0] && (this._aniKeys = e[0].nodes[0].keys)));
        }),
        u(0, e, "effectClass", null, function(t) {
            var e, i;
            (this._effectClass = H.getClass(t),
            this._effectClass) && ((e = this._effectClass.uiView) && (i = e.animations) && i[0] && (this._setUp({}, i[0]),
            i[0].nodes && i[0].nodes[0] && (this._aniKeys = i[0].nodes[0].keys)));
        }),
        t.EffectAnimationBegin = "effectanimationbegin";
    }(St),
    function(e) {
        var C;
        function E() {
            this.animationList = null,
            this.animationDic = null,
            this._nodeList = null,
            this._nodeDefaultProps = null,
            this._gList = null,
            this._nodeIDAniDic = {},
            this._rootNode = null,
            this._nodeGDic = null,
            E.__super.call(this);
        }
        f(E, "laya.utils.GraphicAnimation", e);
        var t = E.prototype;
        return t._parseNodeList = function(t) {
            this._nodeList || (this._nodeList = []),
            this._nodeDefaultProps[t.compId] = t.props,
            t.compId && this._nodeList.push(t.compId);
            var e = t.child;
            if (e) {
                var i = 0
                  , n = e.length;
                for (i = 0; i < n; i++)
                    this._parseNodeList(e[i]);
            }
        }
        ,
        t._calGraphicData = function(t) {
            var e;
            if (this._setUp(null, t),
            this._createGraphicData(),
            this._nodeIDAniDic)
                for (e in this._nodeIDAniDic)
                    this._nodeIDAniDic[e] = null;
        }
        ,
        t._createGraphicData = function() {
            var t, e = [], i = 0, n = this.count, a = this._animationNewFrames;
            for (a || (a = []),
            i = 0; i < n; i++)
                !a[i] && t || (t = this._createFrameGraphic(i)),
                e.push(t);
            this._gList = e;
        }
        ,
        t._createFrameGraphic = function(t) {
            var e = P.createGraphics();
            return E._rootMatrix || (E._rootMatrix = new A()),
            this._updateNodeGraphic(this._rootNode, t, E._rootMatrix, e),
            e;
        }
        ,
        t._updateNodeGraphic = function(t, e, i, n, a) {
            var s;
            void 0 === a && (a = 1);
            var r, o, h, l = (s = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId])).alpha * a;
            if (!(l < .01) && (s.resultTransform || (s.resultTransform = A.create()),
            r = s.resultTransform,
            A.mul(s.transform, i, r),
            s.skin && (o = this._getTextureByUrl(s.skin)) && (r._checkTransform() ? (n.drawTexture(o, 0, 0, s.width, s.height, r, l),
            s.resultTransform = null) : n.drawTexture(o, r.tx, r.ty, s.width, s.height, null, l)),
            h = t.child)) {
                var u, c = 0;
                for (u = h.length,
                c = 0; c < u; c++)
                    this._updateNodeGraphic(h[c], e, r, n, l);
            }
        }
        ,
        t._updateNoChilds = function(t, e) {
            if (t.skin) {
                var i = this._getTextureByUrl(t.skin);
                if (i) {
                    var n = t.transform;
                    n._checkTransform();
                    !n.bTransform ? e.drawTexture(i, n.tx, n.ty, t.width, t.height, null, t.alpha) : e.drawTexture(i, 0, 0, t.width, t.height, n.clone(), t.alpha);
                }
            }
        }
        ,
        t._updateNodeGraphic2 = function(t, e, i) {
            var n;
            if (n = this._nodeGDic[t.compId] = this._getNodeGraphicData(t.compId, e, this._nodeGDic[t.compId]),
            t.child) {
                var a = n.transform;
                a._checkTransform();
                var s, r;
                r = (s = !a.bTransform) && (0 != a.tx || 0 != a.ty);
                var o, h, l;
                if ((o = a.bTransform || 1 != n.alpha) && i.save(),
                1 != n.alpha && i.alpha(n.alpha),
                s ? r && i.translate(a.tx, a.ty) : i.transform(a.clone()),
                h = t.child,
                n.skin && (l = this._getTextureByUrl(n.skin)) && i.drawTexture(l, 0, 0, n.width, n.height),
                h) {
                    var u, c = 0;
                    for (u = h.length,
                    c = 0; c < u; c++)
                        this._updateNodeGraphic2(h[c], e, i);
                }
                o ? i.restore() : s ? r && i.translate(-a.tx, -a.ty) : i.transform(a.clone().invert());
            } else
                this._updateNoChilds(n, i);
        }
        ,
        t._calculateNodeKeyFrames = function(t) {
            e.prototype._calculateNodeKeyFrames.call(this, t),
            this._nodeIDAniDic[t.target] = t;
        }
        ,
        t.getNodeDataByID = function(t) {
            return this._nodeIDAniDic[t];
        }
        ,
        t._getParams = function(t, e, i, n) {
            var a = E._temParam;
            a.length = e.length;
            var s = 0
              , r = e.length;
            for (s = 0; s < r; s++)
                a[s] = this._getObjVar(t, e[s][0], i, e[s][1], n);
            return a;
        }
        ,
        t._getObjVar = function(t, e, i, n, a) {
            if (t.hasOwnProperty(e)) {
                var s = t[e];
                if (i >= s.length && (i = s.length - 1),
                null != t[e][i])
                    return t[e][i];
            }
            return a.hasOwnProperty(e) ? a[e] : n;
        }
        ,
        t._getNodeGraphicData = function(t, e, i) {
            i || (i = C.create()),
            i.transform ? i.transform.identity() : i.transform = A.create();
            var n = this.getNodeDataByID(t);
            if (!n)
                return i;
            var a, s, r = n.frames, o = this._getParams(r, E._drawTextureCmd, e, this._nodeDefaultProps[t]), h = o[0], l = NaN, u = NaN, c = o[5], d = o[6], _ = o[13], p = o[14], f = o[7], g = o[8], m = o[9], y = o[11], v = o[12];
            l = o[3],
            u = o[4],
            0 != l && 0 != u || (h = null),
            -1 == l && (l = 0),
            -1 == u && (u = 0),
            i.skin = h,
            i.width = l,
            i.height = u,
            h && ((a = this._getTextureByUrl(h)) ? (l || (l = a.sourceWidth),
            u || (u = a.sourceHeight)) : console.warn("lost skin:", h, ",you may load pics first")),
            i.alpha = o[10],
            s = i.transform,
            0 != _ && (c = _ * l),
            0 != p && (d = p * u),
            0 == c && 0 == d || s.translate(-c, -d);
            var S = null;
            if (m || 1 !== f || 1 !== g || y || v) {
                (S = E._tempMt).identity(),
                S.bTransform = !0;
                var x = .0174532922222222 * (m - y)
                  , b = .0174532922222222 * (m + v)
                  , w = Math.cos(b)
                  , M = Math.sin(b)
                  , I = Math.sin(x)
                  , T = Math.cos(x);
                S.a = f * w,
                S.b = f * M,
                S.c = -g * I,
                S.d = g * T,
                S.tx = S.ty = 0;
            }
            return S && (s = A.mul(s, S, s)),
            s.translate(o[1], o[2]),
            i;
        }
        ,
        t._getTextureByUrl = function(t) {
            return ot.getRes(t);
        }
        ,
        t.setAniData = function(t, e) {
            if (t.animations) {
                this._nodeDefaultProps = {},
                this._nodeGDic = {},
                this._nodeList && (this._nodeList.length = 0),
                this._rootNode = t,
                this._parseNodeList(t);
                var i, n = {}, a = [], s = t.animations, r = 0, o = s.length;
                for (r = 0; r < o; r++)
                    if (i = s[r],
                    this._labels = null,
                    (!e || e == i.name) && i) {
                        try {
                            this._calGraphicData(i);
                        } catch (t) {
                            console.warn("parse animation fail:" + i.name + ",empty animation created"),
                            this._gList = [];
                        }
                        var h = {};
                        h.interval = 1e3 / i.frameRate,
                        h.frames = this._gList,
                        h.labels = this._labels,
                        h.name = i.name,
                        a.push(h),
                        n[i.name] = h;
                    }
                this.animationList = a,
                this.animationDic = n;
            }
            E._temParam.length = 0;
        }
        ,
        t.parseByData = function(t) {
            var e, i;
            e = t.nodeRoot,
            i = t.aniO,
            delete t.nodeRoot,
            delete t.aniO,
            this._nodeDefaultProps = {},
            this._nodeGDic = {},
            this._nodeList && (this._nodeList.length = 0),
            this._rootNode = e,
            this._parseNodeList(e),
            this._labels = null;
            try {
                this._calGraphicData(i);
            } catch (t) {
                console.warn("parse animation fail:" + i.name + ",empty animation created"),
                this._gList = [];
            }
            var n = t;
            return n.interval = 1e3 / i.frameRate,
            n.frames = this._gList,
            n.labels = this._labels,
            n.name = i.name,
            n;
        }
        ,
        t.setUpAniData = function(t) {
            if (t.animations) {
                var e, i = {}, n = [], a = t.animations, s = 0, r = a.length;
                for (s = 0; s < r; s++)
                    if (e = a[s]) {
                        var o = {};
                        o.name = e.name,
                        o.aniO = e,
                        o.nodeRoot = t,
                        n.push(o),
                        i[e.name] = o;
                    }
                this.animationList = n,
                this.animationDic = i;
            }
        }
        ,
        t._clear = function() {
            var t, e;
            if (this.animationList = null,
            this.animationDic = null,
            this._gList = null,
            this._nodeGDic)
                for (t in this._nodeGDic)
                    (e = this._nodeGDic[t]) && e.recover();
            this._nodeGDic = null;
        }
        ,
        E.parseAnimationByData = function(t) {
            var e;
            return E._I || (E._I = new E()),
            e = E._I.parseByData(t),
            E._I._clear(),
            e;
        }
        ,
        E.parseAnimationData = function(t) {
            var e;
            return E._I || (E._I = new E()),
            E._I.setUpAniData(t),
            (e = {}).animationList = E._I.animationList,
            e.animationDic = E._I.animationDic,
            E._I._clear(),
            e;
        }
        ,
        E._drawTextureCmd = [["skin", null], ["x", 0], ["y", 0], ["width", -1], ["height", -1], ["pivotX", 0], ["pivotY", 0], ["scaleX", 1], ["scaleY", 1], ["rotation", 0], ["alpha", 1], ["skewX", 0], ["skewY", 0], ["anchorX", 0], ["anchorY", 0]],
        E._temParam = [],
        E._I = null,
        E._rootMatrix = null,
        h(E, ["_tempMt", function() {
            return this._tempMt = new A();
        }
        ]),
        E.__init$ = function() {
            C = function() {
                function t() {
                    this.skin = null,
                    this.transform = null,
                    this.resultTransform = null,
                    this.width = NaN,
                    this.height = NaN,
                    this.alpha = 1;
                }
                return f(t, ""),
                t.prototype.recover = function() {
                    this.skin = null,
                    this.width = 0,
                    this.height = 0,
                    this.alpha = 1,
                    this.transform && (this.transform.destroy(),
                    this.transform = null),
                    this.resultTransform && (this.resultTransform.destroy(),
                    this.resultTransform = null),
                    z.recover("GraphicNode", this);
                }
                ,
                t.create = function() {
                    return z.getItemByClass("GraphicNode", t);
                }
                ,
                t;
            }();
        }
        ,
        E;
    }(St));
    w.__init([l, ht, wt, R, G, j, T, t]);
}(window, document, Laya),
function(t, e, i) {
    i.un,
    i.uns,
    i.static;
    var n = i.class;
    i.getset,
    i.__newvec;
    new (function() {
        function t() {}
        return n(t, "LayaMain"),
        t;
    }())();
}(window, document, Laya),
"function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
    }
}),
function(a, t, s) {
    s.un,
    s.uns;
    var e = s.static
      , n = s.class
      , r = s.getset
      , c = (s.__newvec,
    laya.utils.Browser)
      , i = (laya.events.Event,
    laya.events.EventDispatcher)
      , d = laya.resource.HTMLImage
      , m = laya.utils.Handler
      , o = laya.display.Input
      , y = laya.net.Loader
      , h = laya.net.LocalStorage
      , l = (laya.maths.Matrix,
    laya.renders.Render)
      , u = laya.utils.RunDriver
      , _ = laya.media.SoundChannel
      , p = laya.media.SoundManager
      , v = laya.net.URL
      , S = laya.utils.Utils
      , x = function() {
        function l() {}
        return n(l, "laya.wx.mini.MiniAdpter"),
        l.getJson = function(t) {
            return JSON.parse(t);
        }
        ,
        l.init = function(t, e) {
            if (void 0 === t && (t = !1),
            void 0 === e && (e = !1),
            !(l._inited || (l._inited = !0,
            (l.window = a).navigator.userAgent.indexOf("MiniGame") < 0))) {
                l.isZiYu = e,
                l.isPosMsgYu = t,
                l.EnvConfig = {};
                try {
                    laya.webgl.resource.WebGLCanvas.premulAlpha = !0;
                } catch (t) {}
                if (l.isZiYu || (b.setNativeFileDir("/layaairGame"),
                b.existDir(b.fileNativeDir, m.create(l, l.onMkdirCallBack))),
                "ios 10.1.1" === (l.systemInfo = wx.getSystemInfoSync()).system.toLowerCase())
                    try {
                        laya.webgl.resource.WebGLCharImage.canUseCanvas = !1;
                    } catch (t) {}
                l.window.focus = function() {}
                ,
                s._getUrlPath = function() {}
                ,
                l.window.logtime = function(t) {}
                ,
                l.window.alertTimeLog = function(t) {}
                ,
                l.window.resetShareInfo = function() {}
                ,
                l.window.CanvasRenderingContext2D = function() {}
                ,
                l.window.CanvasRenderingContext2D.prototype = l.window.wx.createCanvas().getContext("2d").__proto__,
                l.window.document.body.appendChild = function() {}
                ,
                l.EnvConfig.pixelRatioInt = 0,
                u.getPixelRatio = l.pixelRatio,
                l._preCreateElement = c.createElement,
                c.createElement = l.createElement,
                u.createShaderCondition = l.createShaderCondition,
                S.parseXMLFromString = l.parseXMLFromString,
                o._createInputElement = g._createInputElement,
                l.EnvConfig.load = y.prototype.load,
                y.prototype.load = M.prototype.load,
                y.prototype._loadImage = f.prototype._loadImage,
                (h._baseClass = w).__init__(),
                l.onReciveData();
            }
        }
        ,
        l.onReciveData = function() {
            laya.wx.mini.MiniAdpter.isZiYu && wx.onMessage(function(t) {
                "opendatacontext" == t.isLoad ? t.url && (b.ziyuFileData[t.url] = t.atlasdata,
                b.ziyuFileTextureData[t.imgReadyUrl] = t.imgNativeUrl) : "openJsondatacontext" == t.isLoad ? t.url && (b.ziyuFileData[t.url] = t.atlasdata) : "openJsondatacontextPic" == t.isLoad && (b.ziyuFileTextureData[t.imgReadyUrl] = t.imgNativeUrl);
            });
        }
        ,
        l.measureText = function(t) {
            var e = l._measureText(t);
            return e || (e = {
                width: 16
            },
            console.warn("-------微信获取文字宽度失败----等待修复---------")),
            e;
        }
        ,
        l.getUrlEncode = function(t, e) {
            return "arraybuffer" == e ? "" : "utf8";
        }
        ,
        l.downLoadFile = function(t, e, i, n) {
            void 0 === e && (e = ""),
            void 0 === n && (n = "ascii"),
            b.getFileInfo(t) ? null != i && i.runWith([0]) : b.downLoadFile(t, e, i, n);
        }
        ,
        l.remove = function(t, e) {
            b.deleteFile("", t, e, "", 0);
        }
        ,
        l.removeAll = function() {
            b.deleteAll();
        }
        ,
        l.hasNativeFile = function(t) {
            return b.isLocalNativeFile(t);
        }
        ,
        l.getFileInfo = function(t) {
            return b.getFileInfo(t);
        }
        ,
        l.getFileList = function() {
            return b.filesListObj;
        }
        ,
        l.exitMiniProgram = function() {
            l.window.wx.exitMiniProgram();
        }
        ,
        l.onMkdirCallBack = function(t, e) {
            t || (b.filesListObj = JSON.parse(e.data));
        }
        ,
        l.pixelRatio = function() {
            if (!l.EnvConfig.pixelRatioInt)
                try {
                    return l.EnvConfig.pixelRatioInt = l.systemInfo.pixelRatio,
                    l.systemInfo.pixelRatio;
                } catch (t) {}
            return l.EnvConfig.pixelRatioInt;
        }
        ,
        l.createElement = function(t) {
            var e;
            if ("canvas" == t)
                return 1 == l.idx ? l.isZiYu ? (e = sharedCanvas).style = {} : e = a.canvas : e = a.wx.createCanvas(),
                l.idx++,
                e;
            if ("textarea" == t || "input" == t)
                return l.onCreateInput(t);
            if ("div" != t)
                return l._preCreateElement(t);
            var i = l._preCreateElement(t);
            return i.contains = function(t) {
                return null;
            }
            ,
            i.removeChild = function(t) {}
            ,
            i;
        }
        ,
        l.onCreateInput = function(t) {
            var e = l._preCreateElement(t);
            return e.focus = g.wxinputFocus,
            e.blur = g.wxinputblur,
            e.style = {},
            e.value = 0,
            e.parentElement = {},
            e.placeholder = {},
            e.type = {},
            e.setColor = function(t) {}
            ,
            e.setType = function(t) {}
            ,
            e.setFontFace = function(t) {}
            ,
            e.addEventListener = function(t) {}
            ,
            e.contains = function(t) {
                return null;
            }
            ,
            e.removeChild = function(t) {}
            ,
            e;
        }
        ,
        l.createShaderCondition = function(t) {
            var e = this;
            return function() {
                return e[t.replace("this.", "")];
            }
            ;
        }
        ,
        l.sendAtlasToOpenDataContext = function(t) {
            if (!laya.wx.mini.MiniAdpter.isZiYu) {
                var e = y.getRes(v.formatURL(t));
                if (!e)
                    throw "传递的url没有获取到对应的图集数据信息，请确保图集已经过！";
                e.meta.image.split(",");
                if (e.meta && e.meta.image)
                    for (var i = e.meta.image.split(","), n = 0 <= t.indexOf("/") ? "/" : "\\", a = t.lastIndexOf(n), s = 0 <= a ? t.substr(0, a + 1) : "", r = 0, o = i.length; r < o; r++)
                        i[r] = s + i[r];
                else
                    i = [t.replace(".json", ".png")];
                for (r = 0; r < i.length; r++) {
                    var h = i[r];
                    l.postInfoToContext(t, h, e);
                }
            }
        }
        ,
        l.postInfoToContext = function(t, e, i) {
            var n = {
                frames: i.frames,
                meta: i.meta
            }
              , a = e
              , s = b.getFileInfo(v.formatURL(e));
            if (s)
                var r = s.md5
                  , o = b.getFileNativePath(r);
            else
                o = a;
            if (!o)
                throw "获取图集的磁盘url路径不存在！";
            wx.postMessage({
                url: t,
                atlasdata: n,
                imgNativeUrl: o,
                imgReadyUrl: a,
                isLoad: "opendatacontext"
            });
        }
        ,
        l.sendSinglePicToOpenDataContext = function(t) {
            var e = v.formatURL(t)
              , i = b.getFileInfo(e);
            if (i) {
                var n = i.md5
                  , a = b.getFileNativePath(n);
                t = e;
            } else
                a = t;
            if (!a)
                throw "获取图集的磁盘url路径不存在！";
            wx.postMessage({
                url: t,
                imgNativeUrl: a,
                imgReadyUrl: t,
                isLoad: "openJsondatacontextPic"
            });
        }
        ,
        l.sendJsonDataToDataContext = function(t) {
            if (!laya.wx.mini.MiniAdpter.isZiYu) {
                var e = y.getRes(t);
                if (!e)
                    throw "传递的url没有获取到对应的图集数据信息，请确保图集已经过！";
                wx.postMessage({
                    url: t,
                    atlasdata: e,
                    isLoad: "openJsondatacontext"
                });
            }
        }
        ,
        l.EnvConfig = null,
        l.window = null,
        l._preCreateElement = null,
        l._inited = !1,
        l.systemInfo = null,
        l.isZiYu = !1,
        l.isPosMsgYu = !1,
        l.autoCacheFile = !0,
        l.minClearSize = 5242880,
        l.subNativeFiles = null,
        l.subNativeheads = [],
        l.subMaps = [],
        l.AutoCacheDownFile = !1,
        l._measureText = null,
        l.parseXMLFromString = function(t) {
            var e;
            t = t.replace(/>\s+</g, "><");
            try {
                e = new a.Parser.DOMParser().parseFromString(t, "text/xml");
            } catch (t) {
                throw "需要引入xml解析库文件";
            }
            return e;
        }
        ,
        l.idx = 1,
        e(l, ["nativefiles", function() {
            return this.nativefiles = ["layaNativeDir", "wxlocal"];
        }
        ]),
        l;
    }()
      , b = function() {
        function u() {}
        return n(u, "laya.wx.mini.MiniFileMgr"),
        u.isLocalNativeFile = function(t) {
            for (var e = 0, i = x.nativefiles.length; e < i; e++)
                if (-1 != t.indexOf(x.nativefiles[e]))
                    return !0;
            return !1;
        }
        ,
        u.getFileInfo = function(t) {
            var e = u.filesListObj[t];
            return null == e ? null : e;
        }
        ,
        u.read = function(t, e, i, n, a, s) {
            var r;
            void 0 === e && (e = "ascill"),
            void 0 === n && (n = ""),
            void 0 === a && (a = !1),
            void 0 === s && (s = ""),
            r = "" == n || -1 == n.indexOf("http://") && -1 == n.indexOf("https://") ? t : u.getFileNativePath(t),
            u.fs.readFile({
                filePath: r,
                encoding: e,
                success: function(t) {
                    null != i && i.runWith([0, t]);
                },
                fail: function(t) {
                    t && "" != n ? u.downFiles(n, e, i, n, a, s) : null != i && i.runWith([1]);
                }
            });
        }
        ,
        u.downFiles = function(e, i, n, a, s, r, o) {
            void 0 === i && (i = "ascii"),
            void 0 === a && (a = ""),
            void 0 === s && (s = !1),
            void 0 === r && (r = ""),
            void 0 === o && (o = !0),
            u.wxdown({
                url: e,
                success: function(t) {
                    200 === t.statusCode ? u.readFile(t.tempFilePath, i, n, a, s, r, o) : 403 === t.statusCode ? null != n && n.runWith([0, e]) : null != n && n.runWith([1, t]);
                },
                fail: function(t) {
                    null != n && n.runWith([1, t]);
                }
            }).onProgressUpdate(function(t) {
                null != n && n.runWith([2, t.progress]);
            });
        }
        ,
        u.readFile = function(e, i, n, a, s, t, r) {
            void 0 === i && (i = "ascill"),
            void 0 === a && (a = ""),
            void 0 === s && (s = !1),
            void 0 === t && (t = ""),
            void 0 === r && (r = !0),
            u.fs.readFile({
                filePath: e,
                encoding: i,
                success: function(t) {
                    -1 != e.indexOf("http://") || -1 != e.indexOf("https://") ? (x.autoCacheFile || s) && u.copyFile(e, a, n, i, r) : null != n && n.runWith([0, t]);
                },
                fail: function(t) {
                    t && null != n && n.runWith([1, t]);
                }
            });
        }
        ,
        u.downOtherFiles = function(t, e, i, n, a) {
            void 0 === i && (i = ""),
            void 0 === n && (n = !1),
            void 0 === a && (a = !0),
            u.wxdown({
                url: t,
                success: function(t) {
                    200 === t.statusCode ? (x.autoCacheFile || n) && -1 == i.indexOf("wx.qlogo.cn") && -1 == i.indexOf(".php") ? u.copyFile(t.tempFilePath, i, e, "", a) : null != e && e.runWith([0, t.tempFilePath]) : null != e && e.runWith([1, t]);
                },
                fail: function(t) {
                    null != e && e.runWith([1, t]);
                }
            });
        }
        ,
        u.downLoadFile = function(t, e, i, n) {
            void 0 === e && (e = ""),
            void 0 === n && (n = "ascii"),
            a.navigator.userAgent.indexOf("MiniGame") < 0 ? s.loader.load(t, i) : "image" == e || "sound" == e ? u.downOtherFiles(t, i, t, !0, !1) : u.downFiles(t, n, i, t, !0, e, !1);
        }
        ,
        u.copyFile = function(t, i, n, a, s) {
            void 0 === a && (a = ""),
            void 0 === s && (s = !0);
            var e = t.split("/")
              , r = e[e.length - 1]
              , o = u.getFileInfo(i)
              , h = u.getFileNativePath(r)
              , l = u.getCacheUseSize();
            o ? o.readyUrl != i ? u.fs.getFileInfo({
                filePath: t,
                success: function(t) {
                    s && 52428800 <= l + 4194304 + t.size && (t.size > x.minClearSize && (x.minClearSize = t.size),
                    u.onClearCacheRes()),
                    u.deleteFile(r, i, n, a, t.size);
                },
                fail: function(t) {
                    null != n && n.runWith([1, t]);
                }
            }) : null != n && n.runWith([0]) : u.fs.getFileInfo({
                filePath: t,
                success: function(e) {
                    s && 52428800 <= l + 4194304 + e.size && (e.size > x.minClearSize && (x.minClearSize = e.size),
                    u.onClearCacheRes()),
                    u.fs.copyFile({
                        srcPath: t,
                        destPath: h,
                        success: function(t) {
                            u.onSaveFile(i, r, !0, a, n, e.size);
                        },
                        fail: function(t) {
                            null != n && n.runWith([1, t]);
                        }
                    });
                },
                fail: function(t) {
                    null != n && n.runWith([1, t]);
                }
            });
        }
        ,
        u.onClearCacheRes = function() {
            var t = x.minClearSize
              , e = [];
            for (var i in u.filesListObj)
                e.push(u.filesListObj[i]);
            u.sortOn(e, "times", 16);
            for (var n = 0, a = 1, s = e.length; a < s; a++) {
                var r = e[a];
                if (t <= n)
                    break;
                n += r.size,
                u.deleteFile("", r.readyUrl);
            }
        }
        ,
        u.sortOn = function(t, i, e) {
            return void 0 === e && (e = 0),
            16 == e ? t.sort(function(t, e) {
                return t[i] - e[i];
            }) : 18 == e ? t.sort(function(t, e) {
                return e[i] - t[i];
            }) : t.sort(function(t, e) {
                return t[i] - e[i];
            });
        }
        ,
        u.getFileNativePath = function(t) {
            return laya.wx.mini.MiniFileMgr.fileNativeDir + "/" + t;
        }
        ,
        u.deleteFile = function(n, a, s, r, o) {
            void 0 === a && (a = ""),
            void 0 === r && (r = ""),
            void 0 === o && (o = 0);
            var t = u.getFileInfo(a)
              , e = u.getFileNativePath(t.md5);
            u.fs.unlink({
                filePath: e,
                success: function(t) {
                    var e = "" != n;
                    if ("" != n) {
                        var i = u.getFileNativePath(n);
                        u.fs.copyFile({
                            srcPath: n,
                            destPath: i,
                            success: function(t) {
                                u.onSaveFile(a, n, e, r, s, t.size);
                            },
                            fail: function(t) {
                                null != s && s.runWith([1, t]);
                            }
                        });
                    } else
                        u.onSaveFile(a, n, e, r, s, o);
                },
                fail: function(t) {}
            });
        }
        ,
        u.deleteAll = function() {
            var t = [];
            for (var e in u.filesListObj)
                t.push(u.filesListObj[e]);
            for (var i = 1, n = t.length; i < n; i++) {
                var a = t[i];
                u.deleteFile("", a.readyUrl);
            }
            laya.wx.mini.MiniFileMgr.filesListObj && laya.wx.mini.MiniFileMgr.filesListObj.fileUsedSize && (laya.wx.mini.MiniFileMgr.filesListObj.fileUsedSize = 0),
            laya.wx.mini.MiniFileMgr.writeFilesList("", JSON.stringify({}), !1);
        }
        ,
        u.onSaveFile = function(t, e, i, n, a, s) {
            void 0 === i && (i = !0),
            void 0 === n && (n = ""),
            void 0 === s && (s = 0);
            var r = t;
            if (null == u.filesListObj.fileUsedSize && (u.filesListObj.fileUsedSize = 0),
            i) {
                u.getFileNativePath(e);
                u.filesListObj[r] = {
                    md5: e,
                    readyUrl: t,
                    size: s,
                    times: c.now(),
                    encoding: n
                },
                u.filesListObj.fileUsedSize = parseInt(u.filesListObj.fileUsedSize) + s,
                u.writeFilesList(r, JSON.stringify(u.filesListObj), !0),
                null != a && a.runWith([0]);
            } else if (u.filesListObj[r]) {
                var o = parseInt(u.filesListObj[r].size);
                u.filesListObj.fileUsedSize = parseInt(u.filesListObj.fileUsedSize) - o,
                delete u.filesListObj[r],
                u.writeFilesList(r, JSON.stringify(u.filesListObj), !1),
                null != a && a.runWith([0]);
            }
        }
        ,
        u.writeFilesList = function(t, e, i) {
            var n = u.fileNativeDir + "/" + u.fileListName;
            u.fs.writeFile({
                filePath: n,
                encoding: "utf8",
                data: e,
                success: function(t) {},
                fail: function(t) {}
            }),
            !x.isZiYu && x.isPosMsgYu && wx.postMessage({
                url: t,
                data: u.filesListObj[t],
                isLoad: "filenative",
                isAdd: i
            });
        }
        ,
        u.getCacheUseSize = function() {
            return u.filesListObj && u.filesListObj.fileUsedSize ? u.filesListObj.fileUsedSize : 0;
        }
        ,
        u.existDir = function(t, e) {
            u.fs.mkdir({
                dirPath: t,
                success: function(t) {
                    null != e && e.runWith([0, {
                        data: JSON.stringify({})
                    }]);
                },
                fail: function(t) {
                    -1 != t.errMsg.indexOf("file already exists") ? u.readSync(u.fileListName, "utf8", e) : null != e && e.runWith([1, t]);
                }
            });
        }
        ,
        u.readSync = function(t, e, i, n) {
            void 0 === e && (e = "ascill"),
            void 0 === n && (n = "");
            var a, s = u.getFileNativePath(t);
            try {
                a = u.fs.readFileSync(s, e),
                null != i && i.runWith([0, {
                    data: a
                }]);
            } catch (t) {
                null != i && i.runWith([1]);
            }
        }
        ,
        u.setNativeFileDir = function(t) {
            u.fileNativeDir = wx.env.USER_DATA_PATH + t;
        }
        ,
        u.filesListObj = {},
        u.fileNativeDir = null,
        u.fileListName = "layaairfiles.txt",
        u.ziyuFileData = {},
        u.ziyuFileTextureData = {},
        u.loadPath = "",
        u.DESCENDING = 2,
        u.NUMERIC = 16,
        e(u, ["fs", function() {
            return this.fs = wx.getFileSystemManager();
        }
        , "wxdown", function() {
            return this.wxdown = wx.downloadFile;
        }
        ]),
        u;
    }()
      , f = function() {
        function l() {}
        return n(l, "laya.wx.mini.MiniImage"),
        l.prototype._loadImage = function(t) {
            if (x.isZiYu)
                l.onCreateImage(t, this, !0);
            else {
                var e = !1;
                if (b.isLocalNativeFile(t)) {
                    if (-1 != t.indexOf("http://") || -1 != t.indexOf("https://"))
                        if ("" != b.loadPath)
                            t = t.split(b.loadPath)[1];
                        else {
                            var i = "" != v.rootPath ? v.rootPath : v.basePath
                              , n = t;
                            "" != i && (t = t.split(i)[1]),
                            t || (t = n);
                        }
                    if (x.subNativeFiles && 0 == x.subNativeheads.length)
                        for (var a in x.subNativeFiles) {
                            var s = x.subNativeFiles[a];
                            x.subNativeheads = x.subNativeheads.concat(s);
                            for (var r = 0; r < s.length; r++)
                                x.subMaps[s[r]] = a + "/" + s[r];
                        }
                    if (x.subNativeFiles && -1 != t.indexOf("/")) {
                        var o = t.split("/")[0] + "/";
                        if (o && -1 != x.subNativeheads.indexOf(o)) {
                            var h = x.subMaps[o];
                            t = t.replace(o, h);
                        }
                    }
                } else
                    e = !0,
                    t = v.formatURL(t);
                b.getFileInfo(t) ? l.onCreateImage(t, this, !e) : -1 != t.indexOf("http://") || -1 != t.indexOf("https://") ? x.isZiYu ? l.onCreateImage(t, this, !0) : b.downOtherFiles(t, new m(l,l.onDownImgCallBack,[t, this]), t) : l.onCreateImage(t, this, !0);
            }
        }
        ,
        l.onDownImgCallBack = function(t, e, i, n) {
            void 0 === n && (n = ""),
            i ? e.onError(null) : l.onCreateImage(t, e, !1, n);
        }
        ,
        l.onCreateImage = function(e, i, t, n) {
            var a, s;
            if (void 0 === t && (t = !1),
            void 0 === n && (n = ""),
            x.autoCacheFile)
                if (t)
                    if (x.isZiYu) {
                        var r = v.formatURL(e);
                        a = b.ziyuFileTextureData[r] ? b.ziyuFileTextureData[r] : e;
                    } else
                        a = e;
                else if ("" != n)
                    a = n;
                else {
                    var o = b.getFileInfo(e).md5;
                    a = b.getFileNativePath(o);
                }
            else
                a = t ? e : n;
            function h() {
                s.onload = null,
                s.onerror = null,
                delete i.imgCache[e];
            }
            null == i.imgCache && (i.imgCache = {});
            var l = function() {
                h(),
                i._url = v.formatURL(i._url),
                i.onLoaded(s);
            }
              , u = function() {
                h(),
                i.event("error", "Load image failed");
            };
            "nativeimage" == i._type ? ((s = new c.window.Image()).crossOrigin = "",
            s.onload = l,
            s.onerror = u,
            s.src = a,
            i.imgCache[e] = s) : new d.create(a,{
                onload: l,
                onerror: u,
                onCreate: function(t) {
                    s = t,
                    i.imgCache[e] = t;
                }
            });
        }
        ,
        l;
    }()
      , g = function() {
        function i() {}
        return n(i, "laya.wx.mini.MiniInput"),
        i._createInputElement = function() {
            o._initInput(o.area = c.createElement("textarea")),
            o._initInput(o.input = c.createElement("input")),
            o.inputContainer = c.createElement("div"),
            o.inputContainer.style.position = "absolute",
            o.inputContainer.style.zIndex = 1e5,
            c.container.appendChild(o.inputContainer),
            o.inputContainer.setPos = function(t, e) {
                o.inputContainer.style.left = t + "px",
                o.inputContainer.style.top = e + "px";
            }
            ,
            s.stage.on("resize", null, i._onStageResize),
            wx.onWindowResize && wx.onWindowResize(function(t) {
                a.dispatchEvent && a.dispatchEvent("resize");
            }),
            p._soundClass = I,
            p._musicClass = I;
            var t = x.systemInfo.model
              , e = x.systemInfo.system;
            -1 != t.indexOf("iPhone") && (c.onIPhone = !0,
            c.onIOS = !0,
            c.onIPad = !0,
            c.onAndroid = !1),
            -1 == e.indexOf("Android") && -1 == e.indexOf("Adr") || (c.onAndroid = !0,
            c.onIPhone = !1,
            c.onIOS = !1,
            c.onIPad = !1);
        }
        ,
        i._onStageResize = function() {
            s.stage._canvasTransform.identity().scale(c.width / l.canvas.width / u.getPixelRatio(), c.height / l.canvas.height / u.getPixelRatio());
        }
        ,
        i.wxinputFocus = function(t) {
            var i = o.inputElement.target;
            i && !i.editable || (x.window.wx.offKeyboardConfirm(),
            x.window.wx.offKeyboardInput(),
            x.window.wx.showKeyboard({
                defaultValue: i.text,
                maxLength: i.maxChars,
                multiple: i.multiline,
                confirmHold: !0,
                confirmType: "done",
                success: function(t) {},
                fail: function(t) {}
            }),
            x.window.wx.onKeyboardConfirm(function(t) {
                var e = t ? t.value : "";
                i.text = e,
                i.event("input"),
                laya.wx.mini.MiniInput.inputEnter();
            }),
            x.window.wx.onKeyboardInput(function(t) {
                var e = t ? t.value : "";
                i.multiline || -1 == e.indexOf("\n") ? (i.text = e,
                i.event("input")) : laya.wx.mini.MiniInput.inputEnter();
            }));
        }
        ,
        i.inputEnter = function() {
            o.inputElement.target.focus = !1;
        }
        ,
        i.wxinputblur = function() {
            i.hideKeyboard();
        }
        ,
        i.hideKeyboard = function() {
            x.window.wx.offKeyboardConfirm(),
            x.window.wx.offKeyboardInput(),
            x.window.wx.hideKeyboard({
                success: function(t) {
                    console.log("隐藏键盘");
                },
                fail: function(t) {
                    console.log("隐藏键盘出错:" + (t ? t.errMsg : ""));
                }
            });
        }
        ,
        i;
    }()
      , w = function() {
        function i() {}
        return n(i, "laya.wx.mini.MiniLocalStorage"),
        i.__init__ = function() {
            i.items = i;
        }
        ,
        i.setItem = function(e, i) {
            try {
                wx.setStorageSync(e, i);
            } catch (t) {
                wx.setStorage({
                    key: e,
                    data: i
                });
            }
        }
        ,
        i.getItem = function(t) {
            return wx.getStorageSync(t);
        }
        ,
        i.setJSON = function(t, e) {
            i.setItem(t, e);
        }
        ,
        i.getJSON = function(t) {
            return i.getItem(t);
        }
        ,
        i.removeItem = function(t) {
            wx.removeStorageSync(t);
        }
        ,
        i.clear = function() {
            wx.clearStorageSync();
        }
        ,
        i.getStorageInfoSync = function() {
            try {
                var t = wx.getStorageInfoSync();
                return console.log(t.keys),
                console.log(t.currentSize),
                console.log(t.limitSize),
                t;
            } catch (t) {}
            return null;
        }
        ,
        i.support = !0,
        i.items = null,
        i;
    }()
      , M = (function() {
        function a() {}
        n(a, "laya.wx.mini.MiniLocation"),
        a.__init__ = function() {
            x.window.navigator.geolocation.getCurrentPosition = a.getCurrentPosition,
            x.window.navigator.geolocation.watchPosition = a.watchPosition,
            x.window.navigator.geolocation.clearWatch = a.clearWatch;
        }
        ,
        a.getCurrentPosition = function(e, t, i) {
            var n;
            (n = {
                success: function(t) {
                    null != e && e(t);
                }
            }).fail = t,
            x.window.wx.getLocation(n);
        }
        ,
        a.watchPosition = function(t, e, i) {
            var n;
            return a._curID++,
            (n = {}).success = t,
            n.error = e,
            a._watchDic[a._curID] = n,
            s.timer.loop(1e3, null, a._myLoop),
            a._curID;
        }
        ,
        a.clearWatch = function(t) {
            delete a._watchDic[t],
            a._hasWatch() || s.timer.clear(null, a._myLoop);
        }
        ,
        a._hasWatch = function() {
            var t;
            for (t in a._watchDic)
                if (a._watchDic[t])
                    return !0;
            return !1;
        }
        ,
        a._myLoop = function() {
            a.getCurrentPosition(a._mySuccess, a._myError);
        }
        ,
        a._mySuccess = function(t) {
            var e, i = {};
            for (e in i.coords = t,
            i.timestamp = c.now(),
            a._watchDic)
                a._watchDic[e].success && a._watchDic[e].success(i);
        }
        ,
        a._myError = function(t) {
            var e;
            for (e in a._watchDic)
                a._watchDic[e].error && a._watchDic[e].error(t);
        }
        ,
        a._watchDic = {},
        a._curID = 0;
    }(),
    function(a) {
        function s() {
            s.__super.call(this);
        }
        n(s, "laya.wx.mini.MiniAccelerator", a);
        var t = s.prototype;
        t.on = function(t, e, i, n) {
            return a.prototype.on.call(this, t, e, i, n),
            s.startListen(this.onDeviceOrientationChange),
            this;
        }
        ,
        t.off = function(t, e, i, n) {
            return void 0 === n && (n = !1),
            this.hasListener(t) || s.stopListen(),
            a.prototype.off.call(this, t, e, i, n);
        }
        ,
        s.__init__ = function() {
            try {
                var t;
                if (!(t = laya.device.motion.Accelerator))
                    return;
                t.prototype.on = s.prototype.on,
                t.prototype.off = s.prototype.off;
            } catch (t) {}
        }
        ,
        s.startListen = function(t) {
            if (s._callBack = t,
            !s._isListening) {
                s._isListening = !0;
                try {
                    wx.onAccelerometerChange(s.onAccelerometerChange);
                } catch (t) {}
            }
        }
        ,
        s.stopListen = function() {
            s._isListening = !1;
            try {
                wx.stopAccelerometer({});
            } catch (t) {}
        }
        ,
        s.onAccelerometerChange = function(t) {
            var e;
            (e = {}).acceleration = t,
            e.accelerationIncludingGravity = t,
            e.rotationRate = {},
            null != s._callBack && s._callBack(e);
        }
        ,
        s._isListening = !1,
        s._callBack = null;
    }(i),
    function(t) {
        function g() {
            g.__super.call(this);
        }
        return n(g, "laya.wx.mini.MiniLoader", i),
        g.prototype.load = function(t, e, i, n, a) {
            void 0 === i && (i = !0),
            void 0 === a && (a = !1);
            var s = this;
            if (0 === (s._url = t).indexOf("data:image") ? s._type = e = "image" : s._type = e || (e = s.getTypeFromUrl(t)),
            s._cache = i,
            s._data = null,
            !a && y.loadedMap[v.formatURL(t)])
                return s._data = y.loadedMap[v.formatURL(t)],
                this.event("progress", 1),
                void this.event("complete", s._data);
            if (null != y.parserMap[e])
                return s._customParse = !0,
                void (y.parserMap[e]instanceof laya.utils.Handler ? y.parserMap[e].runWith(this) : y.parserMap[e].call(null, this));
            var r = x.getUrlEncode(t, e)
              , o = S.getFileExtension(t);
            if (-1 != g._fileTypeArr.indexOf(o))
                x.EnvConfig.load.call(this, t, e, i, n, a);
            else {
                if (x.isZiYu && !b.ziyuFileData[t] && (t = v.formatURL(t)),
                x.isZiYu && b.ziyuFileData[t]) {
                    var h = b.ziyuFileData[t];
                    return void s.onLoaded(h);
                }
                if (b.getFileInfo(t)) {
                    var l = b.getFileInfo(t);
                    l.encoding = null == l.encoding ? "ascii" : l.encoding,
                    b.readFile(t, l.encoding, new m(g,g.onReadNativeCallBack,[r, t, e, i, n, a, s]), t);
                } else {
                    if (b.isLocalNativeFile(t)) {
                        if (x.subNativeFiles && 0 == x.subNativeheads.length)
                            for (var u in x.subNativeFiles) {
                                var c = x.subNativeFiles[u];
                                x.subNativeheads = x.subNativeheads.concat(c);
                                for (var d = 0; d < c.length; d++)
                                    x.subMaps[c[d]] = u + "/" + c[d];
                            }
                        if (x.subNativeFiles && -1 != t.indexOf("/")) {
                            var _ = t.split("/")[0] + "/";
                            if (_ && -1 != x.subNativeheads.indexOf(_)) {
                                var p = x.subMaps[_];
                                t = t.replace(_, p);
                            }
                        }
                        return void b.read(t, r, new m(g,g.onReadNativeCallBack,[r, t, e, i, n, a, s]));
                    }
                    var f = t;
                    -1 != (t = v.formatURL(t)).indexOf("http://") || -1 != t.indexOf("https://") ? x.EnvConfig.load.call(s, f, e, i, n, a) : b.readFile(t, r, new m(g,g.onReadNativeCallBack,[r, t, e, i, n, a, s]), t);
                }
            }
        }
        ,
        g.onReadNativeCallBack = function(t, e, i, n, a, s, r, o, h) {
            var l;
            (void 0 === n && (n = !0),
            void 0 === s && (s = !1),
            void 0 === o && (o = 0),
            o) ? 1 == o && (console.log("-----------本地加载失败，尝试外网加载----"),
            x.EnvConfig.load.call(r, e, i, n, a, s)) : (l = "json" == i || "atlas" == i ? x.getJson(h.data) : "xml" == i ? S.parseXMLFromString(h.data) : h.data,
            !x.isZiYu && x.isPosMsgYu && "arraybuffer" != i && wx.postMessage({
                url: e,
                data: l,
                isLoad: "filedata"
            }),
            r.onLoaded(l));
        }
        ,
        e(g, ["_fileTypeArr", function() {
            return this._fileTypeArr = ["png", "jpg", "bmp", "jpeg", "gif"];
        }
        ]),
        g;
    }())
      , I = function(t) {
        function h() {
            this._sound = null,
            this.url = null,
            this.loaded = !1,
            this.readyUrl = null,
            h.__super.call(this);
        }
        n(h, "laya.wx.mini.MiniSound", i);
        var e = h.prototype;
        return e.load = function(t) {
            if (b.isLocalNativeFile(t)) {
                if (-1 != t.indexOf("http://") || -1 != t.indexOf("https://"))
                    if ("" != b.loadPath)
                        t = t.split(b.loadPath)[1];
                    else {
                        var e = "" != v.rootPath ? v.rootPath : v.basePath;
                        "" != e && (t = t.split(e)[1]);
                    }
            } else
                t = v.formatURL(t);
            if (this.url = t,
            this.readyUrl = t,
            h._audioCache[this.readyUrl])
                this.event("complete");
            else if (x.autoCacheFile && b.getFileInfo(t))
                this.onDownLoadCallBack(t, 0);
            else if (x.autoCacheFile)
                if (b.isLocalNativeFile(t)) {
                    var i = t;
                    if ("" != (e = "" != v.rootPath ? v.rootPath : v.basePath) && (t = t.split(e)[1]),
                    t || (t = i),
                    x.subNativeFiles && 0 == x.subNativeheads.length)
                        for (var n in x.subNativeFiles) {
                            var a = x.subNativeFiles[n];
                            x.subNativeheads = x.subNativeheads.concat(a);
                            for (var s = 0; s < a.length; s++)
                                x.subMaps[a[s]] = n + "/" + a[s];
                        }
                    if (x.subNativeFiles && -1 != t.indexOf("/")) {
                        var r = t.split("/")[0] + "/";
                        if (r && -1 != x.subNativeheads.indexOf(r)) {
                            var o = x.subMaps[r];
                            t = t.replace(r, o);
                        }
                    }
                    this.onDownLoadCallBack(t, 0);
                } else
                    b.downOtherFiles(t, m.create(this, this.onDownLoadCallBack, [t]), t);
            else
                this.onDownLoadCallBack(t, 0);
        }
        ,
        e.onDownLoadCallBack = function(t, e) {
            if (e)
                this.event("error");
            else {
                var i;
                if (x.autoCacheFile) {
                    var n = b.getFileInfo(t);
                    if (n && n.md5) {
                        var a = n.md5;
                        i = b.getFileNativePath(a);
                    } else
                        i = t;
                    this._sound = h._createSound(),
                    this._sound.src = this.url = i;
                } else
                    this._sound = h._createSound(),
                    this._sound.src = t;
                this._sound.onCanplay(h.bindToThis(this.onCanPlay, this)),
                this._sound.onError(h.bindToThis(this.onError, this));
            }
        }
        ,
        e.onError = function(t) {
            try {
                console.log("-----1---------------minisound-----id:" + h._id),
                console.log(t);
            } catch (t) {
                console.log("-----2---------------minisound-----id:" + h._id),
                console.log(t);
            }
            this.event("error"),
            this._sound.offError(null);
        }
        ,
        e.onCanPlay = function() {
            this.loaded = !0,
            this.event("complete"),
            this._sound.offCanplay(null);
        }
        ,
        e.play = function(t, e) {
            var i;
            if (void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            i = this.url == p._tMusic ? (h._musicAudio || (h._musicAudio = h._createSound()),
            h._musicAudio) : h._audioCache[this.readyUrl] ? h._audioCache[this.readyUrl]._sound : h._createSound(),
            x.autoCacheFile && b.getFileInfo(this.url)) {
                var n = b.getFileInfo(this.url).md5;
                i.src = this.url = b.getFileNativePath(n);
            } else
                i.src = this.url;
            var a = new T(i,this);
            return a.url = this.url,
            a.loops = e,
            a.loop = 0 === e,
            a.startTime = t,
            a.play(),
            p.addChannel(a),
            a;
        }
        ,
        e.dispose = function() {
            var t = h._audioCache[this.readyUrl];
            t && (t.src = "",
            t._sound && (t._sound.destroy(),
            t._sound = null,
            t = null),
            delete h._audioCache[this.readyUrl]);
        }
        ,
        r(0, e, "duration", function() {
            return this._sound.duration;
        }),
        h._createSound = function() {
            return h._id++,
            x.window.wx.createInnerAudioContext();
        }
        ,
        h.bindToThis = function(t, e) {
            return t.bind(e);
        }
        ,
        h._musicAudio = null,
        h._id = 0,
        h._audioCache = {},
        h;
    }()
      , T = function(t) {
        function i(t, e) {
            this._audio = null,
            this._onEnd = null,
            this._miniSound = null,
            i.__super.call(this),
            this._audio = t,
            this._miniSound = e,
            this._onEnd = i.bindToThis(this.__onEnd, this),
            t.onEnded(this._onEnd);
        }
        n(i, "laya.wx.mini.MiniSoundChannel", _);
        var e = i.prototype;
        return e.__onEnd = function() {
            if (1 == this.loops)
                return this.completeHandler && (s.timer.once(10, this, this.__runComplete, [this.completeHandler], !1),
                this.completeHandler = null),
                this.stop(),
                void this.event("complete");
            0 < this.loops && this.loops--,
            this.startTime = 0,
            this.play();
        }
        ,
        e.play = function() {
            this.isStopped = !1,
            p.addChannel(this),
            this._audio.play();
        }
        ,
        e.stop = function() {
            this.isStopped = !0,
            p.removeChannel(this),
            this.completeHandler = null,
            this._audio && (this._audio.pause(),
            this._audio.offEnded(null),
            this._audio = null,
            this._miniSound = null,
            this._onEnd = null);
        }
        ,
        e.pause = function() {
            this.isStopped = !0,
            this._audio.pause();
        }
        ,
        e.resume = function() {
            this._audio && (this.isStopped = !1,
            p.addChannel(this),
            this._audio.play());
        }
        ,
        r(0, e, "startTime", null, function(t) {
            this._audio && (this._audio.startTime = t);
        }),
        r(0, e, "autoplay", function() {
            return this._audio.autoplay;
        }, function(t) {
            this._audio.autoplay = t;
        }),
        r(0, e, "position", function() {
            return this._audio ? this._audio.currentTime : 0;
        }),
        r(0, e, "duration", function() {
            return this._audio ? this._audio.duration : 0;
        }),
        r(0, e, "loop", function() {
            return this._audio.loop;
        }, function(t) {
            this._audio.loop = t;
        }),
        r(0, e, "volume", function() {
            return this._audio ? this._audio.volume : 1;
        }, function(t) {
            this._audio && (this._audio.volume = t);
        }),
        i.bindToThis = function(t, e) {
            return t.bind(e);
        }
        ,
        i;
    }();
}(window, document, Laya),
"function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
    }
}),
function(t, e, b) {
    b.un,
    b.uns;
    var r = b.static
      , d = b.class
      , n = b.getset
      , s = b.__newvec
      , h = laya.maths.Arith
      , u = laya.maths.Bezier
      , i = laya.resource.Bitmap
      , _ = laya.utils.Browser
      , o = laya.utils.Byte
      , p = laya.utils.Color
      , w = (laya.filters.ColorFilter,
    b.Config)
      , a = laya.resource.Context
      , M = (laya.events.Event,
    laya.filters.Filter)
      , l = laya.display.Graphics
      , c = laya.resource.HTMLCanvas
      , f = (laya.utils.HTMLChar,
    laya.resource.HTMLImage)
      , g = laya.resource.HTMLSubImage
      , I = (laya.utils.Handler,
    laya.net.Loader,
    laya.maths.Matrix)
      , T = laya.maths.Point
      , C = laya.maths.Rectangle
      , m = laya.renders.Render
      , y = (laya.renders.RenderContext,
    laya.renders.RenderSprite)
      , v = laya.resource.Resource
      , S = laya.resource.ResourceManager
      , x = laya.utils.RunDriver
      , E = laya.display.Sprite
      , P = laya.display.Stage
      , A = laya.utils.Stat
      , L = laya.utils.StringKey
      , D = (laya.display.css.Style,
    laya.system.System)
      , R = laya.display.Text
      , k = laya.resource.Texture
      , N = (laya.display.css.TransformInfo,
    laya.net.URL,
    laya.utils.Utils)
      , O = laya.utils.VectorGraphManager;
    laya.utils.WordText;
    b.interface("laya.webgl.shapes.IShape"),
    b.interface("laya.webgl.submit.ISubmit"),
    b.interface("laya.webgl.text.ICharSegment"),
    b.interface("laya.webgl.canvas.save.ISaveData"),
    b.interface("laya.webgl.resource.IMergeAtlasBitmap"),
    b.interface("laya.filters.IFilterActionGL", "laya.filters.IFilterAction");
    var B = function() {
        function t() {}
        d(t, "laya.filters.webgl.FilterActionGL");
        var e = t.prototype;
        return b.imps(e, {
            "laya.filters.IFilterActionGL": !0
        }),
        e.setValue = function(t) {}
        ,
        e.setValueMix = function(t) {}
        ,
        e.apply3d = function(t, e, i, n, a) {
            return null;
        }
        ,
        e.apply = function(t) {
            return null;
        }
        ,
        n(0, e, "typeMix", function() {
            return 0;
        }),
        t;
    }()
      , G = function() {
        function t() {}
        return d(t, "laya.webgl.shader.ShaderValue"),
        t;
    }()
      , F = function() {
        var n, a;
        function t(t, e, i) {
            this._atlasID = 0,
            this._width = 0,
            this._height = 0,
            this._texCount = 0,
            this._rowInfo = null,
            this._cells = null,
            this._failSize = new a(),
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            this._cells = null,
            this._rowInfo = null,
            this._init(t, e),
            this._atlasID = i;
        }
        d(t, "laya.webgl.atlas.AtlasGrid");
        var e = t.prototype;
        return e.getAltasID = function() {
            return this._atlasID;
        }
        ,
        e.setAltasID = function(t) {
            0 <= t && (this._atlasID = t);
        }
        ,
        e.addTex = function(t, e, i) {
            var n = this._get(e, i);
            return 0 == n.ret || (this._fill(n.x, n.y, e, i, t),
            this._texCount++),
            n;
        }
        ,
        e._release = function() {
            null != this._cells && (this._cells.length = 0,
            this._cells = null),
            this._rowInfo && (this._rowInfo.length = 0,
            this._rowInfo = null);
        }
        ,
        e._init = function(t, e) {
            if (this._width = t,
            this._height = e,
            this._release(),
            0 == this._width)
                return !1;
            this._cells = new Uint8Array(this._width * this._height * 3),
            this._rowInfo = s(this._height);
            for (var i = 0; i < this._height; i++)
                this._rowInfo[i] = new n();
            return this._clear(),
            !0;
        }
        ,
        e._get = function(t, e) {
            var i = new H();
            if (t >= this._failSize.width && e >= this._failSize.height)
                return i;
            for (var n = -1, a = -1, s = this._width, r = this._height, o = this._cells, h = 0; h < r; h++)
                if (!(this._rowInfo[h].spaceCount < t))
                    for (var l = 0; l < s; ) {
                        var u = 3 * (h * s + l);
                        if (0 != o[u] || o[u + 1] < t || o[u + 2] < e)
                            l += o[u + 1];
                        else {
                            n = l,
                            a = h;
                            for (var c = 0; c < t; c++)
                                if (o[3 * c + u + 2] < e) {
                                    n = -1;
                                    break;
                                }
                            if (!(n < 0))
                                return i.ret = !0,
                                i.x = n,
                                i.y = a,
                                i;
                            l += o[u + 1];
                        }
                    }
            return i;
        }
        ,
        e._fill = function(t, e, i, n, a) {
            var s = this._width
              , r = this._height;
            this._check(t + i <= s && e + n <= r);
            for (var o = e; o < n + e; ++o) {
                this._check(this._rowInfo[o].spaceCount >= i),
                this._rowInfo[o].spaceCount -= i;
                for (var h = 0; h < i; h++) {
                    var l = 3 * (t + o * s + h);
                    this._check(0 == this._cells[l]),
                    this._cells[l] = a,
                    this._cells[l + 1] = i,
                    this._cells[l + 2] = n;
                }
            }
            if (0 < t)
                for (o = 0; o < n; ++o) {
                    var u = 0;
                    for (h = t - 1; 0 <= h && 0 == this._cells[3 * ((e + o) * s + h)]; --h,
                    ++u)
                        ;
                    for (h = u; 0 < h; --h)
                        this._cells[3 * ((e + o) * s + t - h) + 1] = h,
                        this._check(0 < h);
                }
            if (0 < e)
                for (h = t; h < t + i; ++h) {
                    for (u = 0,
                    o = e - 1; 0 <= o && 0 == this._cells[3 * (h + o * s)]; --o,
                    u++)
                        ;
                    for (o = u; 0 < o; --o)
                        this._cells[3 * (h + (e - o) * s) + 2] = o,
                        this._check(0 < o);
                }
        }
        ,
        e._check = function(t) {
            0 == t && console.log("xtexMerger 错误啦");
        }
        ,
        e._clear = function() {
            for (var t = this._texCount = 0; t < this._height; t++)
                this._rowInfo[t].spaceCount = this._width;
            for (var e = 0; e < this._height; e++)
                for (var i = 0; i < this._width; i++) {
                    var n = 3 * (e * this._width + i);
                    this._cells[n] = 0,
                    this._cells[n + 1] = this._width - i,
                    this._cells[n + 2] = this._width - e;
                }
            this._failSize.width = this._width + 1,
            this._failSize.height = this._height + 1;
        }
        ,
        t.__init$ = function() {
            n = function() {
                function t() {
                    this.spaceCount = 0;
                }
                return d(t, ""),
                t;
            }(),
            a = function() {
                function t() {
                    this.width = 0,
                    this.height = 0;
                }
                return d(t, ""),
                t;
            }();
        }
        ,
        t;
    }()
      , U = function() {
        function m(t, e, i, n) {
            this._currentAtlasCount = 0,
            this._maxAtlaserCount = 0,
            this._width = 0,
            this._height = 0,
            this._gridSize = 0,
            this._gridNumX = 0,
            this._gridNumY = 0,
            this._init = !1,
            this._curAtlasIndex = 0,
            this._setAtlasParam = !1,
            this._atlaserArray = null,
            this._needGC = !1,
            this._setAtlasParam = !0,
            this._width = t,
            this._height = e,
            this._gridSize = i,
            this._maxAtlaserCount = n,
            this._gridNumX = t / i,
            this._gridNumY = e / i,
            this._curAtlasIndex = 0,
            this._atlaserArray = [];
        }
        d(m, "laya.webgl.atlas.AtlasResourceManager");
        var t = m.prototype;
        return t.setAtlasParam = function(t, e, i, n) {
            if (1 == this._setAtlasParam)
                return m._sid_ = 0,
                this._width = t,
                this._height = e,
                this._gridSize = i,
                this._maxAtlaserCount = n,
                this._gridNumX = t / i,
                this._gridNumY = e / i,
                this._curAtlasIndex = 0,
                this.freeAll(),
                !0;
            throw console.log("设置大图合集参数错误，只能在开始页面设置各种参数"),
            -1;
        }
        ,
        t.pushData = function(t) {
            var e, i = t.bitmap, n = -1, a = null, s = 0, r = 0;
            for (s = 0,
            e = this._atlaserArray.length; s < e && (r = (this._curAtlasIndex + s) % e,
            -1 == (n = (a = this._atlaserArray[r]).findBitmapIsExist(i))); s++)
                ;
            if (-1 != n) {
                var o = a.InAtlasWebGLImagesOffsetValue[n];
                return p = o[0],
                f = o[1],
                a.addToAtlas(t, p, f),
                !0;
            }
            this._setAtlasParam = !1;
            for (var h = Math.ceil((t.bitmap.width + 2) / this._gridSize), l = Math.ceil((t.bitmap.height + 2) / this._gridSize), u = !1, c = 0; c < 2; c++) {
                var d = this._maxAtlaserCount;
                for (s = 0; s < d; s++) {
                    r = (this._curAtlasIndex + s) % d,
                    this._atlaserArray.length - 1 >= r || this._atlaserArray.push(new Ct(this._gridNumX,this._gridNumY,this._width,this._height,m._sid_++));
                    var _ = this._atlaserArray[r]
                      , p = 0
                      , f = 0
                      , g = _.addTex(1, h, l);
                    if (g.ret) {
                        p = g.x * this._gridSize + 1,
                        f = g.y * this._gridSize + 1,
                        i.lock = !0,
                        _.addToAtlasTexture(i, p, f),
                        _.addToAtlas(t, p, f),
                        u = !0,
                        this._curAtlasIndex = r;
                        break;
                    }
                }
                if (u)
                    break;
                this._atlaserArray.push(new Ct(this._gridNumX,this._gridNumY,this._width,this._height,m._sid_++)),
                this._needGC = !0,
                this.garbageCollection(),
                this._curAtlasIndex = this._atlaserArray.length - 1;
            }
            return u || console.log(">>>AtlasManager pushData error"),
            u;
        }
        ,
        t.addToAtlas = function(t) {
            laya.webgl.atlas.AtlasResourceManager.instance.pushData(t);
        }
        ,
        t.garbageCollection = function() {
            if (!0 === this._needGC) {
                for (var t = this._atlaserArray.length - this._maxAtlaserCount, e = 0; e < t; e++)
                    this._atlaserArray[e].dispose(),
                    console.log("AtlasResourceManager:Dispose the inner Atlas。");
                console.log(">>>>altas garbageCollection =" + t),
                this._atlaserArray.splice(0, t),
                this._needGC = !1;
            }
            return !0;
        }
        ,
        t.freeAll = function() {
            for (var t = 0, e = this._atlaserArray.length; t < e; t++)
                this._atlaserArray[t].dispose();
            this._atlaserArray.length = 0,
            this._curAtlasIndex = 0;
        }
        ,
        t.getAtlaserCount = function() {
            return this._atlaserArray.length;
        }
        ,
        t.getAtlaserByIndex = function(t) {
            return this._atlaserArray[t];
        }
        ,
        n(1, m, "instance", function() {
            return m._Instance || (m._Instance = new m(laya.webgl.atlas.AtlasResourceManager.atlasTextureWidth,laya.webgl.atlas.AtlasResourceManager.atlasTextureHeight,16,laya.webgl.atlas.AtlasResourceManager.maxTextureCount)),
            m._Instance;
        }),
        n(1, m, "enabled", function() {
            return w.atlasEnable;
        }),
        n(1, m, "atlasLimitWidth", function() {
            return m._atlasLimitWidth;
        }, function(t) {
            m._atlasLimitWidth = t;
        }),
        n(1, m, "atlasLimitHeight", function() {
            return m._atlasLimitHeight;
        }, function(t) {
            m._atlasLimitHeight = t;
        }),
        m._enable = function() {
            w.atlasEnable = !0;
        }
        ,
        m._disable = function() {
            w.atlasEnable = !1;
        }
        ,
        m.__init__ = function() {
            m.atlasTextureWidth = 2048,
            m.atlasTextureHeight = 2048,
            m.maxTextureCount = 6,
            m.atlasLimitWidth = 512,
            m.atlasLimitHeight = 512;
        }
        ,
        m._atlasLimitWidth = 0,
        m._atlasLimitHeight = 0,
        m.gridSize = 16,
        m.atlasTextureWidth = 0,
        m.atlasTextureHeight = 0,
        m.maxTextureCount = 0,
        m._atlasRestore = 0,
        m.BOARDER_TYPE_NO = 0,
        m.BOARDER_TYPE_RIGHT = 1,
        m.BOARDER_TYPE_LEFT = 2,
        m.BOARDER_TYPE_BOTTOM = 4,
        m.BOARDER_TYPE_TOP = 8,
        m.BOARDER_TYPE_ALL = 15,
        m._sid_ = 0,
        m._Instance = null,
        m;
    }()
      , H = function() {
        function t() {
            this.x = 0,
            this.y = 0,
            this.ret = !1,
            this.ret = !1,
            this.x = 0,
            this.y = 0;
        }
        return d(t, "laya.webgl.atlas.MergeFillInfo"),
        t;
    }()
      , V = function() {
        function e() {}
        return d(e, "laya.webgl.canvas.BlendMode"),
        e._init_ = function(t) {
            e.fns = [e.BlendNormal, e.BlendAdd, e.BlendMultiply, e.BlendScreen, e.BlendOverlay, e.BlendLight, e.BlendMask, e.BlendDestinationOut],
            e.targetFns = [e.BlendNormalTarget, e.BlendAddTarget, e.BlendMultiplyTarget, e.BlendScreenTarget, e.BlendOverlayTarget, e.BlendLightTarget, e.BlendMask, e.BlendDestinationOut];
        }
        ,
        e.BlendNormal = function(t) {
            t.blendFunc(1, 771);
        }
        ,
        e.BlendAdd = function(t) {
            t.blendFunc(1, 772);
        }
        ,
        e.BlendMultiply = function(t) {
            t.blendFunc(774, 771);
        }
        ,
        e.BlendScreen = function(t) {
            t.blendFunc(1, 1);
        }
        ,
        e.BlendOverlay = function(t) {
            t.blendFunc(1, 769);
        }
        ,
        e.BlendLight = function(t) {
            t.blendFunc(1, 1);
        }
        ,
        e.BlendNormalTarget = function(t) {
            t.blendFunc(1, 771);
        }
        ,
        e.BlendAddTarget = function(t) {
            t.blendFunc(1, 772);
        }
        ,
        e.BlendMultiplyTarget = function(t) {
            t.blendFunc(774, 771);
        }
        ,
        e.BlendScreenTarget = function(t) {
            t.blendFunc(1, 1);
        }
        ,
        e.BlendOverlayTarget = function(t) {
            t.blendFunc(1, 769);
        }
        ,
        e.BlendLightTarget = function(t) {
            t.blendFunc(1, 1);
        }
        ,
        e.BlendMask = function(t) {
            t.blendFunc(0, 770);
        }
        ,
        e.BlendDestinationOut = function(t) {
            t.blendFunc(0, 0);
        }
        ,
        e.activeBlendFunction = null,
        e.NAMES = ["normal", "add", "multiply", "screen", "overlay", "light", "mask", "destination-out"],
        e.TOINT = {
            normal: 0,
            add: 1,
            multiply: 2,
            screen: 3,
            lighter: 1,
            overlay: 4,
            light: 5,
            mask: 6,
            "destination-out": 7
        },
        e.NORMAL = "normal",
        e.ADD = "add",
        e.MULTIPLY = "multiply",
        e.SCREEN = "screen",
        e.LIGHT = "light",
        e.OVERLAY = "overlay",
        e.DESTINATIONOUT = "destination-out",
        e.fns = [],
        e.targetFns = [],
        e;
    }()
      , Y = function() {
        function i(t) {
            this._color = p.create("black"),
            this.setValue(t);
        }
        d(i, "laya.webgl.canvas.DrawStyle");
        var t = i.prototype;
        return t.setValue = function(t) {
            if (t) {
                if ("string" == typeof t)
                    return void (this._color = p.create(t));
                if (t instanceof laya.utils.Color)
                    return void (this._color = t);
            }
        }
        ,
        t.reset = function() {
            this._color = p.create("black");
        }
        ,
        t.equal = function(t) {
            return "string" == typeof t ? this._color.strColor === t : t instanceof laya.utils.Color && this._color.numColor === t.numColor;
        }
        ,
        t.toColorStr = function() {
            return this._color.strColor;
        }
        ,
        i.create = function(t) {
            var e;
            if (t && ("string" == typeof t ? e = p.create(t) : t instanceof laya.utils.Color && (e = t),
            e))
                return e._drawStyle || (e._drawStyle = new i(t));
            return laya.webgl.canvas.DrawStyle.DEFAULT;
        }
        ,
        r(i, ["DEFAULT", function() {
            return this.DEFAULT = new i("#000000");
        }
        ]),
        i;
    }()
      , X = function() {
        function t() {
            this._x = 0,
            this._y = 0,
            this.dirty = !1,
            this.offset = 0,
            this.count = 0,
            this.geoStart = 0,
            this.tempArray = [],
            this.closePath = !1,
            this.geomatrys = [];
            St.mainContext;
            this.ib = Jt.create(35048),
            this.vb = Zt.create(5);
        }
        d(t, "laya.webgl.canvas.Path");
        var e = t.prototype;
        return e.addPoint = function(t, e) {
            this.tempArray.push(t, e);
        }
        ,
        e.getEndPointX = function() {
            return this.tempArray[this.tempArray.length - 2];
        }
        ,
        e.getEndPointY = function() {
            return this.tempArray[this.tempArray.length - 1];
        }
        ,
        e.polygon = function(t, e, i, n, a, s) {
            var r;
            return this.geomatrys.push(this._curGeomatry = r = new Lt(t,e,i,n,a,s)),
            n || (r.fill = !1),
            null == s && (r.borderWidth = 0),
            r;
        }
        ,
        e.setGeomtry = function(t) {
            this.geomatrys.push(this._curGeomatry = t);
        }
        ,
        e.drawLine = function(t, e, i, n, a) {
            var s;
            return this.closePath ? this.geomatrys.push(this._curGeomatry = s = new At(t,e,i,n,a)) : this.geomatrys.push(this._curGeomatry = s = new Pt(t,e,i,n,a)),
            s.fill = !1,
            s;
        }
        ,
        e.update = function() {
            var t = this.ib._byteLength
              , e = this.geomatrys.length;
            this.offset = t;
            for (var i = this.geoStart; i < e; i++)
                this.geomatrys[i].getData(this.ib, this.vb, this.vb._byteLength / 20);
            this.geoStart = e,
            this.count = (this.ib._byteLength - t) / ft.BYTES_PIDX;
        }
        ,
        e.reset = function() {
            this.vb.clear(),
            this.ib.clear(),
            this.offset = this.count = this.geoStart = 0,
            this.geomatrys.length = 0;
        }
        ,
        e.recover = function() {
            this._curGeomatry = null,
            this.vb.destory(),
            this.vb = null,
            this.ib.destory(),
            this.ib = null;
        }
        ,
        t;
    }()
      , W = function() {
        function o() {}
        d(o, "laya.webgl.canvas.save.SaveBase");
        var t = o.prototype;
        return b.imps(t, {
            "laya.webgl.canvas.save.ISaveData": !0
        }),
        t.isSaveMark = function() {
            return !1;
        }
        ,
        t.restore = function(t) {
            this._dataObj[this._valueName] = this._value,
            (o._cache[o._cache._length++] = this)._newSubmit && (t._curSubmit = st.RENDERBASE,
            t._renderKey = 0);
        }
        ,
        o._createArray = function() {
            var t = [];
            return t._length = 0,
            t;
        }
        ,
        o._init = function() {
            var t = o._namemap = {};
            return t[1] = "ALPHA",
            t[2] = "fillStyle",
            t[8] = "font",
            t[256] = "lineWidth",
            t[512] = "strokeStyle",
            t[8192] = "_mergeID",
            t[1024] = t[2048] = t[4096] = [],
            t[16384] = "textBaseline",
            t[32768] = "textAlign",
            t[65536] = "_nBlendType",
            t[1048576] = "shader",
            t[2097152] = "filters",
            t;
        }
        ,
        o.save = function(t, e, i, n) {
            if ((t._saveMark._saveuse & e) !== e) {
                t._saveMark._saveuse |= e;
                var a = o._cache
                  , s = 0 < a._length ? a[--a._length] : new o();
                s._value = i[s._valueName = o._namemap[e]],
                s._dataObj = i,
                s._newSubmit = n;
                var r = t._save;
                r[r._length++] = s;
            }
        }
        ,
        o._cache = laya.webgl.canvas.save.SaveBase._createArray(),
        o._namemap = o._init(),
        o;
    }()
      , z = function() {
        function s() {
            this._clipRect = new C();
        }
        d(s, "laya.webgl.canvas.save.SaveClipRect");
        var t = s.prototype;
        return b.imps(t, {
            "laya.webgl.canvas.save.ISaveData": !0
        }),
        t.isSaveMark = function() {
            return !1;
        }
        ,
        t.restore = function(t) {
            t._clipRect = this._clipSaveRect,
            (s._cache[s._cache._length++] = this)._submitScissor.submitLength = t._submits._length - this._submitScissor.submitIndex,
            t._curSubmit = st.RENDERBASE,
            t._renderKey = 0;
        }
        ,
        s.save = function(t, e) {
            if (131072 != (131072 & t._saveMark._saveuse)) {
                t._saveMark._saveuse |= 131072;
                var i = s._cache
                  , n = 0 < i._length ? i[--i._length] : new s();
                n._clipSaveRect = t._clipRect,
                t._clipRect = n._clipRect.copyFrom(t._clipRect),
                n._submitScissor = e;
                var a = t._save;
                a[a._length++] = n;
            }
        }
        ,
        r(s, ["_cache", function() {
            return this._cache = W._createArray();
        }
        ]),
        s;
    }()
      , K = function() {
        function _() {
            this._contextX = 0,
            this._contextY = 0,
            this._clipRect = new C(),
            this._rect = new C(),
            this._matrix = new I();
        }
        d(_, "laya.webgl.canvas.save.SaveClipRectStencil");
        var t = _.prototype;
        return b.imps(t, {
            "laya.webgl.canvas.save.ISaveData": !0
        }),
        t.isSaveMark = function() {
            return !1;
        }
        ,
        t.restore = function(t) {
            ut.restore(t, this._rect, this._saveMatrix, this._contextX, this._contextY),
            t._clipRect = this._clipSaveRect,
            t._curMat = this._saveMatrix,
            t._x = this._contextX,
            t._y = this._contextY,
            _._cache[_._cache._length++] = this,
            t._curSubmit = st.RENDERBASE;
        }
        ,
        _.save = function(t, e, i, n, a, s, r, o, h, l) {
            if (262144 != (262144 & t._saveMark._saveuse)) {
                t._saveMark._saveuse |= 262144;
                var u = _._cache
                  , c = 0 < u._length ? u[--u._length] : new _();
                c._clipSaveRect = t._clipRect,
                c._clipRect.setTo(r, o, h, l),
                t._clipRect = c._clipRect,
                c._rect.x = i,
                c._rect.y = n,
                c._rect.width = a,
                c._rect.height = s,
                c._contextX = t._x,
                c._contextY = t._y,
                c._saveMatrix = t._curMat,
                t._curMat.copyTo(c._matrix),
                t._curMat = c._matrix,
                c._submitStencil = e;
                var d = t._save;
                d[d._length++] = c;
            }
        }
        ,
        r(_, ["_cache", function() {
            return this._cache = W._createArray();
        }
        ]),
        _;
    }()
      , j = function() {
        function n() {
            this._saveuse = 0;
        }
        d(n, "laya.webgl.canvas.save.SaveMark");
        var t = n.prototype;
        return b.imps(t, {
            "laya.webgl.canvas.save.ISaveData": !0
        }),
        t.isSaveMark = function() {
            return !0;
        }
        ,
        t.restore = function(t) {
            t._saveMark = this._preSaveMark,
            n._no[n._no._length++] = this;
        }
        ,
        n.Create = function(t) {
            var e = n._no
              , i = 0 < e._length ? e[--e._length] : new n();
            return i._saveuse = 0,
            i._preSaveMark = t._saveMark,
            t._saveMark = i;
        }
        ,
        r(n, ["_no", function() {
            return this._no = W._createArray();
        }
        ]),
        n;
    }()
      , $ = function() {
        function s() {
            this._matrix = new I();
        }
        d(s, "laya.webgl.canvas.save.SaveTransform");
        var t = s.prototype;
        return b.imps(t, {
            "laya.webgl.canvas.save.ISaveData": !0
        }),
        t.isSaveMark = function() {
            return !1;
        }
        ,
        t.restore = function(t) {
            t._curMat = this._savematrix,
            s._no[s._no._length++] = this;
        }
        ,
        s.save = function(t) {
            var e = t._saveMark;
            if (2048 != (2048 & e._saveuse)) {
                e._saveuse |= 2048;
                var i = s._no
                  , n = 0 < i._length ? i[--i._length] : new s();
                n._savematrix = t._curMat,
                t._curMat = t._curMat.copyTo(n._matrix);
                var a = t._save;
                a[a._length++] = n;
            }
        }
        ,
        r(s, ["_no", function() {
            return this._no = W._createArray();
        }
        ]),
        s;
    }()
      , q = function() {
        function a() {}
        d(a, "laya.webgl.canvas.save.SaveTranslate");
        var t = a.prototype;
        return b.imps(t, {
            "laya.webgl.canvas.save.ISaveData": !0
        }),
        t.isSaveMark = function() {
            return !1;
        }
        ,
        t.restore = function(t) {
            t._curMat;
            t._x = this._x,
            t._y = this._y,
            a._no[a._no._length++] = this;
        }
        ,
        a.save = function(t) {
            var e = a._no
              , i = 0 < e._length ? e[--e._length] : new a();
            i._x = t._x,
            i._y = t._y;
            var n = t._save;
            n[n._length++] = i;
        }
        ,
        r(a, ["_no", function() {
            return this._no = W._createArray();
        }
        ]),
        a;
    }()
      , Q = function() {
        function t() {
            this.target = null,
            this.repaint = !1,
            this._width = NaN,
            this._height = NaN,
            this._sp = null,
            this._clipRect = new C();
        }
        d(t, "laya.webgl.resource.RenderTargetMAX");
        var e = t.prototype;
        return e.setSP = function(t) {
            this._sp = t;
        }
        ,
        e.size = function(t, e) {
            var i = this;
            this._width !== t || this._height !== e ? (this.repaint = !0,
            this._width = t,
            this._height = e,
            this.target ? this.target.size(t, e) : this.target = Ot.create(t, e),
            this.target.hasListener("recovered") || this.target.on("recovered", this, function(t) {
                b.timer.callLater(i._sp, i._sp.repaint);
            })) : this.target.size(t, e);
        }
        ,
        e._flushToTarget = function(t, e) {
            if (!e._destroy) {
                var i = yt.worldScissorTest
                  , n = yt.worldClipRect;
                yt.worldClipRect = this._clipRect,
                this._clipRect.x = this._clipRect.y = 0,
                this._clipRect.width = this._width,
                this._clipRect.height = this._height,
                yt.worldScissorTest = !1,
                St.mainContext.disable(3089);
                var a = yt.worldAlpha
                  , s = yt.worldMatrix4
                  , r = yt.worldMatrix
                  , o = yt.worldFilters
                  , h = yt.worldShaderDefines;
                if (yt.worldMatrix = I.EMPTY,
                yt.restoreTempArray(),
                yt.worldMatrix4 = yt.TEMPMAT4_ARRAY,
                yt.worldAlpha = 1,
                yt.worldFilters = null,
                yt.worldShaderDefines = null,
                Nt.activeShader = null,
                e.start(),
                w.showCanvasMark ? e.clear(0, 1, 0, .3) : e.clear(0, 0, 0, 0),
                t.flush(),
                e.end(),
                Nt.activeShader = null,
                yt.worldAlpha = a,
                yt.worldMatrix4 = s,
                yt.worldMatrix = r,
                yt.worldFilters = o,
                yt.worldShaderDefines = h,
                yt.worldScissorTest = i) {
                    var l = yt.height - n.y - n.height;
                    St.mainContext.scissor(n.x, l, n.width, n.height),
                    St.mainContext.enable(3089);
                }
                yt.worldClipRect = n;
            }
        }
        ,
        e.flush = function(t) {
            this.repaint && (this._flushToTarget(t, this.target),
            this.repaint = !1);
        }
        ,
        e.drawTo = function(t, e, i, n, a) {
            t.drawTexture(this.target.getTexture(), e, i, n, a, 0, 0);
        }
        ,
        e.destroy = function() {
            this.target && (this.target.destroy(),
            this.target = null,
            this._sp = null);
        }
        ,
        t;
    }()
      , J = function() {
        function t() {
            this.ALPHA = 1,
            this.shaderType = 0,
            this.defines = new Et();
        }
        return d(t, "laya.webgl.shader.d2.Shader2D"),
        t.prototype.destroy = function() {
            this.defines = null,
            this.filters = null,
            this.glTexture = null,
            this.strokeStyle = null,
            this.fillStyle = null;
        }
        ,
        t.__init__ = function() {
            var t, e;
            jt.addInclude("parts/ColorFilter_ps_uniform.glsl", "uniform vec4 colorAlpha;\nuniform mat4 colorMat;"),
            jt.addInclude("parts/ColorFilter_ps_logic.glsl", "mat4 alphaMat =colorMat;\n\nalphaMat[0][3] *= gl_FragColor.a;\nalphaMat[1][3] *= gl_FragColor.a;\nalphaMat[2][3] *= gl_FragColor.a;\n\ngl_FragColor = gl_FragColor * alphaMat;\ngl_FragColor += colorAlpha/255.0*gl_FragColor.a;\n"),
            jt.addInclude("parts/GlowFilter_ps_uniform.glsl", "uniform vec4 u_color;\nuniform float u_strength;\nuniform float u_blurX;\nuniform float u_blurY;\nuniform float u_offsetX;\nuniform float u_offsetY;\nuniform float u_textW;\nuniform float u_textH;"),
            jt.addInclude("parts/GlowFilter_ps_logic.glsl", "const float c_IterationTime = 10.0;\nfloat floatIterationTotalTime = c_IterationTime * c_IterationTime;\nvec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\nvec2 vec2FilterDir = vec2(-(u_offsetX)/u_textW,-(u_offsetY)/u_textH);\nvec2 vec2FilterOff = vec2(u_blurX/u_textW/c_IterationTime * 2.0,u_blurY/u_textH/c_IterationTime * 2.0);\nfloat maxNum = u_blurX * u_blurY;\nvec2 vec2Off = vec2(0.0,0.0);\nfloat floatOff = c_IterationTime/2.0;\nfor(float i = 0.0;i<=c_IterationTime; ++i){\n\tfor(float j = 0.0;j<=c_IterationTime; ++j){\n\t\tvec2Off = vec2(vec2FilterOff.x * (i - floatOff),vec2FilterOff.y * (j - floatOff));\n\t\tvec4Color += texture2D(texture, v_texcoord + vec2FilterDir + vec2Off)/floatIterationTotalTime;\n\t}\n}\ngl_FragColor = vec4(u_color.rgb,vec4Color.a * u_strength);\ngl_FragColor.rgb *= gl_FragColor.a;"),
            jt.addInclude("parts/BlurFilter_ps_logic.glsl", "gl_FragColor =   blur();\ngl_FragColor.w*=alpha;"),
            jt.addInclude("parts/BlurFilter_ps_uniform.glsl", "uniform vec4 strength_sig2_2sig2_gauss1;\nuniform vec2 blurInfo;\n\n#define PI 3.141593\n\n//float sigma=strength/3.0;//3σ以外影响很小。即当σ=1的时候，半径为3\n//float sig2 = sigma*sigma;\n//float _2sig2 = 2.0*sig2;\n//return 1.0/(2*PI*sig2)*exp(-(x*x+y*y)/_2sig2)\n//float gauss1 = 1.0/(2.0*PI*sig2);\n\nfloat getGaussian(float x, float y){\n    return strength_sig2_2sig2_gauss1.w*exp(-(x*x+y*y)/strength_sig2_2sig2_gauss1.z);\n}\n\nvec4 blur(){\n    const float blurw = 9.0;\n    vec4 vec4Color = vec4(0.0,0.0,0.0,0.0);\n    vec2 halfsz=vec2(blurw,blurw)/2.0/blurInfo;    \n    vec2 startpos=v_texcoord-halfsz;\n    vec2 ctexcoord = startpos;\n    vec2 step = 1.0/blurInfo;  //每个像素      \n    \n    for(float y = 0.0;y<=blurw; ++y){\n        ctexcoord.x=startpos.x;\n        for(float x = 0.0;x<=blurw; ++x){\n            //TODO 纹理坐标的固定偏移应该在vs中处理\n            vec4Color += texture2D(texture, ctexcoord)*getGaussian(x-blurw/2.0,y-blurw/2.0);\n            ctexcoord.x+=step.x;\n        }\n        ctexcoord.y+=step.y;\n    }\n    return vec4Color;\n}"),
            jt.addInclude("parts/ColorAdd_ps_uniform.glsl", "uniform vec4 colorAdd;\n"),
            jt.addInclude("parts/ColorAdd_ps_logic.glsl", "gl_FragColor = vec4(colorAdd.rgb,colorAdd.a*gl_FragColor.a);\ngl_FragColor.xyz *= colorAdd.a;"),
            t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}",
            e = 'precision mediump float;\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec4 color= texture2D(texture, v_texcoord);\n   color.a*=alpha;\n   color.rgb*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}',
            jt.preCompile2D(0, 1, t, e, null),
            t = "attribute vec4 position;\nuniform vec2 size;\nuniform mat4 mmat;\nvoid main() {\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n}",
            e = 'precision mediump float;\nuniform vec4 color;\nuniform float alpha;\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\nvoid main() {\n\tvec4 a = vec4(color.r, color.g, color.b, color.a);\n\ta.w = alpha;\n\ta.xyz *= alpha;\n\tgl_FragColor = a;\n\t#include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n}',
            jt.preCompile2D(0, 2, t, e, null),
            t = "attribute vec4 position;\nattribute vec3 a_color;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nuniform vec2 u_pos;\nuniform vec2 size;\nvarying vec3 color;\nvoid main(){\n  vec4 tPos = vec4(position.x + u_pos.x,position.y + u_pos.y,position.z,position.w);\n  vec4 pos=mmat*u_mmat2*tPos;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  color=a_color;\n}",
            e = "precision mediump float;\n//precision mediump float;\nvarying vec3 color;\nuniform float alpha;\nvoid main(){\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\n\t//a.a*=alpha;\n    gl_FragColor=vec4(color.r, color.g, color.b, alpha);\n\tgl_FragColor.rgb*=alpha;\n}",
            jt.preCompile2D(0, 4, t, e, null),
            t = "attribute vec4 position;\nattribute vec2 texcoord;\nuniform vec2 size;\n\n#ifdef WORLDMAT\nuniform mat4 mmat;\n#endif\nvarying vec2 v_texcoord;\nvoid main() {\n  #ifdef WORLDMAT\n  vec4 pos=mmat*position;\n  gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  #else\n  gl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\n  #endif\n  \n  v_texcoord = texcoord;\n}",
            e = '#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n//precision highp float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float alpha;\nuniform vec4 u_TexRange;\nuniform vec2 u_offset;\n#include?BLUR_FILTER  "parts/BlurFilter_ps_uniform.glsl";\n#include?COLOR_FILTER "parts/ColorFilter_ps_uniform.glsl";\n#include?GLOW_FILTER "parts/GlowFilter_ps_uniform.glsl";\n#include?COLOR_ADD "parts/ColorAdd_ps_uniform.glsl";\n\nvoid main() {\n   vec2 newTexCoord;\n   newTexCoord.x = mod(u_offset.x + v_texcoord.x,u_TexRange.y) + u_TexRange.x;\n   newTexCoord.y = mod(u_offset.y + v_texcoord.y,u_TexRange.w) + u_TexRange.z;\n   vec4 color= texture2D(texture, newTexCoord);\n   color.a*=alpha;\n   gl_FragColor=color;\n   #include?COLOR_ADD "parts/ColorAdd_ps_logic.glsl";   \n   #include?BLUR_FILTER  "parts/BlurFilter_ps_logic.glsl";\n   #include?COLOR_FILTER "parts/ColorFilter_ps_logic.glsl";\n   #include?GLOW_FILTER "parts/GlowFilter_ps_logic.glsl";\n}',
            jt.preCompile2D(0, 256, t, e, null),
            t = "attribute vec2 position;\nattribute vec2 texcoord;\nattribute vec4 color;\nuniform vec2 size;\nuniform float offsetX;\nuniform float offsetY;\nuniform mat4 mmat;\nuniform mat4 u_mmat2;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nvoid main() {\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\n  v_color = color;\n  v_color.rgb *= v_color.a;\n  v_texcoord = texcoord;  \n}",
            e = "precision mediump float;\nvarying vec2 v_texcoord;\nvarying vec4 v_color;\nuniform sampler2D texture;\nuniform float alpha;\nvoid main() {\n\tvec4 t_color = texture2D(texture, v_texcoord);\n\tgl_FragColor = t_color.rgba * v_color;\n\tgl_FragColor *= alpha;\n}",
            jt.preCompile2D(0, 512, t, e, null);
        }
        ,
        t;
    }()
      , Z = function() {
        function e(t, e, i) {
            this._value = 0,
            this._name2int = t,
            this._int2name = e,
            this._int2nameMap = i;
        }
        d(e, "laya.webgl.shader.ShaderDefines");
        var t = e.prototype;
        return t.add = function(t) {
            return "string" == typeof t && (t = this._name2int[t]),
            this._value |= t,
            this._value;
        }
        ,
        t.addInt = function(t) {
            return this._value |= t,
            this._value;
        }
        ,
        t.remove = function(t) {
            return "string" == typeof t && (t = this._name2int[t]),
            this._value &= ~t,
            this._value;
        }
        ,
        t.isDefine = function(t) {
            return (this._value & t) === t;
        }
        ,
        t.getValue = function() {
            return this._value;
        }
        ,
        t.setValue = function(t) {
            this._value = t;
        }
        ,
        t.toNameDic = function() {
            var t = this._int2nameMap[this._value];
            return t || e._toText(this._value, this._int2name, this._int2nameMap);
        }
        ,
        e._reg = function(t, e, i, n) {
            n[i[t] = e] = t;
        }
        ,
        e._toText = function(t, e, i) {
            var n = i[t];
            if (n)
                return n;
            for (var a = {}, s = 1, r = 0; r < 32 && !(t < (s = 1 << r)); r++)
                if (t & s) {
                    var o = e[s];
                    o && (a[o] = "");
                }
            return i[t] = a;
        }
        ,
        e._toInt = function(t, e) {
            for (var i = t.split("."), n = 0, a = 0, s = i.length; a < s; a++) {
                var r = e[i[a]];
                if (!r)
                    throw new Error("Defines to int err:" + t + "/" + i[a]);
                n |= r;
            }
            return n;
        }
        ,
        e;
    }()
      , tt = function() {
        function r() {
            this.mVBBuffer = null,
            this.mIBBuffer = null,
            this.mVBData = null,
            this.mIBData = null,
            this.mEleNum = 0,
            this.mTexture = null,
            this.transform = null,
            this._vs = null,
            this._ps = null,
            this._indexStart = -1,
            this._verticles = null,
            this._uvs = null,
            this._tempMatrix = new I();
        }
        d(r, "laya.webgl.shader.d2.skinAnishader.SkinMesh");
        var t = r.prototype;
        return t.init = function(t, e, i) {
            if (e)
                this._vs = e;
            else {
                this._vs = [];
                var n = t.width
                  , a = t.height;
                this._vs.push(0, 0, 0, 0, 1, 1, 1, 1),
                this._vs.push(n, 0, 1, 0, 1, 1, 1, 1),
                this._vs.push(n, a, 1, 1, 1, 1, 1, 1),
                this._vs.push(0, a, 0, 1, 1, 1, 1, 1);
            }
            this._ps = i || (r._defaultPS || (r._defaultPS = []).push(0, 1, 3, 3, 1, 2),
            r._defaultPS),
            this.mVBData = new Float32Array(this._vs),
            this.mIBData = new Uint16Array(this._ps.length),
            this.mIBData.start = -1,
            this.mEleNum = this._ps.length,
            this.mTexture = t;
        }
        ,
        t.init2 = function(t, e, i, n, a) {
            this.transform && (this.transform = null),
            i ? this._ps = i : (this._ps = [],
            this._ps.push(0, 1, 3, 3, 1, 2)),
            this._verticles = n,
            this._uvs = a,
            this.mEleNum = this._ps.length,
            this.mTexture = t,
            (m.isConchNode || m.isConchApp) && (this._initMyData(),
            this.mVBData = new Float32Array(this._vs));
        }
        ,
        t._initMyData = function() {
            var t = 0
              , e = 0
              , i = 4 * this._verticles.length;
            this._vs = r._tempVS;
            var n = !1;
            if (m.isConchNode || m.isConchApp ? (this._vs.length = i,
            n = !0) : this._vs.length < i && (this._vs.length = i,
            n = !0),
            r._tVSLen = i,
            n)
                for (; t < i; )
                    this._vs[t] = this._verticles[e],
                    this._vs[t + 1] = this._verticles[e + 1],
                    this._vs[t + 2] = this._uvs[e],
                    this._vs[t + 3] = this._uvs[e + 1],
                    this._vs[t + 4] = 1,
                    this._vs[t + 5] = 1,
                    this._vs[t + 6] = 1,
                    this._vs[t + 7] = 1,
                    t += 8,
                    e += 2;
            else
                for (; t < i; )
                    this._vs[t] = this._verticles[e],
                    this._vs[t + 1] = this._verticles[e + 1],
                    this._vs[t + 2] = this._uvs[e],
                    this._vs[t + 3] = this._uvs[e + 1],
                    t += 8,
                    e += 2;
        }
        ,
        t.getData2 = function(t, e, i) {
            var n;
            this.mVBBuffer = t,
            this.mIBBuffer = e,
            this._initMyData(),
            t.appendEx2(this._vs, Float32Array, r._tVSLen, 4),
            this._indexStart = e._byteLength,
            (n = r._tempIB).length < this._ps.length && (n.length = this._ps.length);
            for (var a = 0, s = this._ps.length; a < s; a++)
                n[a] = this._ps[a] + i;
            e.appendEx2(n, Uint16Array, this._ps.length, 2);
        }
        ,
        t.getData = function(t, e, i) {
            if (this.mVBBuffer = t,
            this.mIBBuffer = e,
            t.append(this.mVBData),
            this._indexStart = e._byteLength,
            this.mIBData.start != i) {
                for (var n = 0, a = this._ps.length; n < a; n++)
                    this.mIBData[n] = this._ps[n] + i;
                this.mIBData.start = i;
            }
            e.append(this.mIBData);
        }
        ,
        t.render = function(t, e, i) {
            if (m.isWebGL && this.mTexture) {
                t._renderKey = 0,
                t._shader2D.glTexture = null,
                et.getInstance().addSkinMesh(this);
                var n = st.createShape(t, this.mIBBuffer, this.mVBBuffer, this.mEleNum, this._indexStart, Mt.create(512, 0));
                this.transform || (this.transform = I.EMPTY),
                this.transform.translate(e, i),
                I.mul(this.transform, t._curMat, this._tempMatrix),
                this.transform.translate(-e, -i);
                var a = n.shaderValue
                  , s = a.u_mmat2 || yt.getMatrArray();
                yt.mat2MatArray(this._tempMatrix, s),
                a.textureHost = this.mTexture,
                a.offsetX = 0,
                a.offsetY = 0,
                a.u_mmat2 = s,
                a.ALPHA = t._shader2D.ALPHA,
                t._submits[t._submits._length++] = n;
            } else
                m.isConchApp && this.mTexture && (this.transform || (this.transform = I.EMPTY),
                t.setSkinMesh && t.setSkinMesh(e, i, this._ps, this.mVBData, this.mEleNum, 0, this.mTexture, this.transform));
        }
        ,
        r._tempVS = [],
        r._tempIB = [],
        r._defaultPS = null,
        r._tVSLen = 0,
        r;
    }()
      , et = function() {
        function t() {
            this.ib = null,
            this.vb = null;
            St.mainContext;
            this.ib = Jt.create(35048),
            this.vb = Zt.create(8);
        }
        d(t, "laya.webgl.shader.d2.skinAnishader.SkinMeshBuffer");
        var e = t.prototype;
        return e.addSkinMesh = function(t) {
            t.getData2(this.vb, this.ib, this.vb._byteLength / 32);
        }
        ,
        e.reset = function() {
            this.vb.clear(),
            this.ib.clear();
        }
        ,
        t.getInstance = function() {
            return t.instance = t.instance || new t();
        }
        ,
        t.instance = null,
        t;
    }()
      , it = function() {
        function t(t, e, i, n, a, s, r, o, h) {
            this.r0 = 0,
            this.fill = !0,
            this.r1 = Math.PI / 2,
            void 0 === h && (h = 0),
            this.x = t,
            this.y = e,
            this.width = i,
            this.height = n,
            this.edges = a,
            this.color = s,
            this.borderWidth = r,
            this.borderColor = o;
        }
        d(t, "laya.webgl.shapes.BasePoly");
        var e = t.prototype;
        return b.imps(e, {
            "laya.webgl.shapes.IShape": !0
        }),
        e.getData = function(t, e, i) {}
        ,
        e.rebuild = function(t) {}
        ,
        e.setMatrix = function(t) {}
        ,
        e.needUpdate = function(t) {
            return !0;
        }
        ,
        e.sector = function(t, e, i) {
            var n = this.x
              , a = this.y
              , s = this.edges
              , r = (this.r1 - this.r0) / s
              , o = this.width
              , h = this.height
              , l = this.color
              , u = (l >> 16 & 255) / 255
              , c = (l >> 8 & 255) / 255
              , d = (255 & l) / 255;
            t.push(n, a, u, c, d);
            for (var _ = 0; _ < s + 1; _++)
                t.push(n + Math.sin(r * _ + this.r0) * o, a + Math.cos(r * _ + this.r0) * h),
                t.push(u, c, d);
            for (_ = 0; _ < s; _++)
                e.push(i, i + _ + 1, i + _ + 2);
        }
        ,
        e.createLine2 = function(t, e, i, n, a, s) {
            var r, o, h, l, u, c, d, _, p, f, g, m, y, v, S, x, b, w, M, I, T = t.concat(), C = a, E = this.borderColor, P = (E >> 16 & 255) / 255, A = (E >> 8 & 255) / 255, L = (255 & E) / 255, D = T.length / 2, R = n, k = i / 2;
            h = T[0],
            l = T[1],
            f = h - (u = T[2]),
            p = (p = -(l - (c = T[3]))) / (I = Math.sqrt(p * p + f * f)) * k,
            f = f / I * k,
            C.push(h - p + this.x, l - f + this.y, P, A, L, h + p + this.x, l + f + this.y, P, A, L);
            for (var N = 1; N < D - 1; N++)
                h = T[2 * (N - 1)],
                l = T[2 * (N - 1) + 1],
                u = T[2 * N],
                c = T[2 * N + 1],
                d = T[2 * (N + 1)],
                _ = T[2 * (N + 1) + 1],
                f = h - u,
                m = u - d,
                S = (-(p = (p = -(l - c)) / (I = Math.sqrt(p * p + f * f)) * k) + h) * (-(f = f / I * k) + c) - (-p + u) * (-f + l),
                w = (-(g = (g = -(c - _)) / (I = Math.sqrt(g * g + m * m)) * k) + d) * (-(m = m / I * k) + c) - (-g + u) * (-m + _),
                M = (y = -f + l - (-f + c)) * (b = -g + u - (-g + d)) - (x = -m + _ - (-m + c)) * (v = -p + u - (-p + h)),
                Math.abs(M) < .1 ? (M += 10.1,
                C.push(u - p + this.x, c - f + this.y, P, A, L, u + p + this.x, c + f + this.y, P, A, L)) : (((r = (v * w - b * S) / M) - u) * (r - u) + ((o = (x * S - y * w) / M) - c) + (o - c),
                C.push(r + this.x, o + this.y, P, A, L, u - (r - u) + this.x, c - (o - c) + this.y, P, A, L));
            h = T[T.length - 4],
            l = T[T.length - 3],
            f = h - (u = T[T.length - 2]),
            p = (p = -(l - (c = T[T.length - 1]))) / (I = Math.sqrt(p * p + f * f)) * k,
            f = f / I * k,
            C.push(u - p + this.x, c - f + this.y, P, A, L, u + p + this.x, c + f + this.y, P, A, L);
            var O = s;
            for (N = 1; N < O; N++)
                e.push(R + 2 * (N - 1), R + 2 * (N - 1) + 1, R + 2 * N + 1, R + 2 * N + 1, R + 2 * N, R + 2 * (N - 1));
            return C;
        }
        ,
        e.createLine = function(t, e, i, n) {
            var a = t.concat()
              , s = t
              , r = this.borderColor
              , o = (r >> 16 & 255) / 255
              , h = (r >> 8 & 255) / 255
              , l = (255 & r) / 255;
            a.splice(0, 5);
            var u, c, d, _, p, f, g, m, y, v, S, x, b, w, M, I, T, C, E, P, A = a.length / 5, L = n, D = i / 2;
            d = a[0],
            _ = a[1],
            v = d - (p = a[5]),
            y = (y = -(_ - (f = a[6]))) / (P = Math.sqrt(y * y + v * v)) * D,
            v = v / P * D,
            s.push(d - y, _ - v, o, h, l, d + y, _ + v, o, h, l);
            for (var R = 1; R < A - 1; R++)
                d = a[5 * (R - 1)],
                _ = a[5 * (R - 1) + 1],
                p = a[5 * R],
                f = a[5 * R + 1],
                g = a[5 * (R + 1)],
                m = a[5 * (R + 1) + 1],
                v = d - p,
                x = p - g,
                M = (-(y = (y = -(_ - f)) / (P = Math.sqrt(y * y + v * v)) * D) + d) * (-(v = v / P * D) + f) - (-y + p) * (-v + _),
                C = (-(S = (S = -(f - m)) / (P = Math.sqrt(S * S + x * x)) * D) + g) * (-(x = x / P * D) + f) - (-S + p) * (-x + m),
                E = (b = -v + _ - (-v + f)) * (T = -S + p - (-S + g)) - (I = -x + m - (-x + f)) * (w = -y + p - (-y + d)),
                Math.abs(E) < .1 ? (E += 10.1,
                s.push(p - y, f - v, o, h, l, p + y, f + v, o, h, l)) : (((u = (w * C - T * M) / E) - p) * (u - p) + ((c = (I * M - b * C) / E) - f) + (c - f),
                s.push(u, c, o, h, l, p - (u - p), f - (c - f), o, h, l));
            d = a[a.length - 10],
            _ = a[a.length - 9],
            v = d - (p = a[a.length - 5]),
            y = (y = -(_ - (f = a[a.length - 4]))) / (P = Math.sqrt(y * y + v * v)) * D,
            v = v / P * D,
            s.push(p - y, f - v, o, h, l, p + y, f + v, o, h, l);
            var k = this.edges + 1;
            for (R = 1; R < k; R++)
                e.push(L + 2 * (R - 1), L + 2 * (R - 1) + 1, L + 2 * R + 1, L + 2 * R + 1, L + 2 * R, L + 2 * (R - 1));
            return s;
        }
        ,
        e.createLoopLine = function(t, e, i, n, a, s) {
            var r = t.concat()
              , o = a || t
              , h = this.borderColor
              , l = (h >> 16 & 255) / 255
              , u = (h >> 8 & 255) / 255
              , c = (255 & h) / 255;
            r.splice(0, 5);
            var d = [r[0], r[1]]
              , _ = [r[r.length - 5], r[r.length - 4]]
              , p = _[0] + .5 * (d[0] - _[0])
              , f = _[1] + .5 * (d[1] - _[1]);
            r.unshift(p, f, 0, 0, 0),
            r.push(p, f, 0, 0, 0);
            var g, m, y, v, S, x, b, w, M, I, T, C, E, P, A, L, D, R, k, N, O = r.length / 5, B = n, G = i / 2;
            y = r[0],
            v = r[1],
            I = y - (S = r[5]),
            M = (M = -(v - (x = r[6]))) / (N = Math.sqrt(M * M + I * I)) * G,
            I = I / N * G,
            o.push(y - M, v - I, l, u, c, y + M, v + I, l, u, c);
            for (var F = 1; F < O - 1; F++)
                y = r[5 * (F - 1)],
                v = r[5 * (F - 1) + 1],
                S = r[5 * F],
                x = r[5 * F + 1],
                b = r[5 * (F + 1)],
                w = r[5 * (F + 1) + 1],
                I = y - S,
                C = S - b,
                A = (-(M = (M = -(v - x)) / (N = Math.sqrt(M * M + I * I)) * G) + y) * (-(I = I / N * G) + x) - (-M + S) * (-I + v),
                R = (-(T = (T = -(x - w)) / (N = Math.sqrt(T * T + C * C)) * G) + b) * (-(C = C / N * G) + x) - (-T + S) * (-C + w),
                k = (E = -I + v - (-I + x)) * (D = -T + S - (-T + b)) - (L = -C + w - (-C + x)) * (P = -M + S - (-M + y)),
                Math.abs(k) < .1 ? (k += 10.1,
                o.push(S - M, x - I, l, u, c, S + M, x + I, l, u, c)) : (((g = (P * R - D * A) / k) - S) * (g - S) + ((m = (L * A - E * R) / k) - x) + (m - x),
                o.push(g, m, l, u, c, S - (g - S), x - (m - x), l, u, c));
            s && (e = s);
            var U = this.edges + 1;
            for (F = 1; F < U; F++)
                e.push(B + 2 * (F - 1), B + 2 * (F - 1) + 1, B + 2 * F + 1, B + 2 * F + 1, B + 2 * F, B + 2 * (F - 1));
            return e.push(B + 2 * (F - 1), B + 2 * (F - 1) + 1, B + 1, B + 1, B, B + 2 * (F - 1)),
            o;
        }
        ,
        t;
    }()
      , nt = function() {
        function f() {}
        return d(f, "laya.webgl.shapes.Earcut"),
        f.earcut = function(t, e, i) {
            i = i || 2;
            var n, a, s, r, o, h, l, u = e && e.length, c = u ? e[0] * i : t.length, d = f.linkedList(t, 0, c, i, !0), _ = [];
            if (!d)
                return _;
            if (u && (d = f.eliminateHoles(t, e, d, i)),
            t.length > 80 * i) {
                n = s = t[0],
                a = r = t[1];
                for (var p = i; p < c; p += i)
                    (o = t[p]) < n && (n = o),
                    (h = t[p + 1]) < a && (a = h),
                    s < o && (s = o),
                    r < h && (r = h);
                l = 0 !== (l = Math.max(s - n, r - a)) ? 1 / l : 0;
            }
            return f.earcutLinked(d, _, i, n, a, l),
            _;
        }
        ,
        f.linkedList = function(t, e, i, n, a) {
            var s, r;
            if (a === 0 < f.signedArea(t, e, i, n))
                for (s = e; s < i; s += n)
                    r = f.insertNode(s, t[s], t[s + 1], r);
            else
                for (s = i - n; e <= s; s -= n)
                    r = f.insertNode(s, t[s], t[s + 1], r);
            return r && f.equals(r, r.next) && (f.removeNode(r),
            r = r.next),
            r;
        }
        ,
        f.filterPoints = function(t, e) {
            if (!t)
                return t;
            e || (e = t);
            var i, n = t;
            do {
                if (i = !1,
                n.steiner || !f.equals(n, n.next) && 0 !== f.area(n.prev, n, n.next))
                    n = n.next;
                else {
                    if (f.removeNode(n),
                    (n = e = n.prev) === n.next)
                        break;
                    i = !0;
                }
            } while (i || n !== e);return e;
        }
        ,
        f.earcutLinked = function(t, e, i, n, a, s, r) {
            if (t) {
                !r && s && f.indexCurve(t, n, a, s);
                for (var o, h, l = t; t.prev !== t.next; )
                    if (o = t.prev,
                    h = t.next,
                    s ? f.isEarHashed(t, n, a, s) : f.isEar(t))
                        e.push(o.i / i),
                        e.push(t.i / i),
                        e.push(h.i / i),
                        f.removeNode(t),
                        t = h.next,
                        l = h.next;
                    else if ((t = h) === l) {
                        r ? 1 === r ? (t = f.cureLocalIntersections(t, e, i),
                        f.earcutLinked(t, e, i, n, a, s, 2)) : 2 === r && f.splitEarcut(t, e, i, n, a, s) : f.earcutLinked(f.filterPoints(t, null), e, i, n, a, s, 1);
                        break;
                    }
            }
        }
        ,
        f.isEar = function(t) {
            var e = t.prev
              , i = t
              , n = t.next;
            if (0 <= f.area(e, i, n))
                return !1;
            for (var a = t.next.next; a !== t.prev; ) {
                if (f.pointInTriangle(e.x, e.y, i.x, i.y, n.x, n.y, a.x, a.y) && 0 <= f.area(a.prev, a, a.next))
                    return !1;
                a = a.next;
            }
            return !0;
        }
        ,
        f.isEarHashed = function(t, e, i, n) {
            var a = t.prev
              , s = t
              , r = t.next;
            if (0 <= f.area(a, s, r))
                return !1;
            for (var o = a.x < s.x ? a.x < r.x ? a.x : r.x : s.x < r.x ? s.x : r.x, h = a.y < s.y ? a.y < r.y ? a.y : r.y : s.y < r.y ? s.y : r.y, l = a.x > s.x ? a.x > r.x ? a.x : r.x : s.x > r.x ? s.x : r.x, u = a.y > s.y ? a.y > r.y ? a.y : r.y : s.y > r.y ? s.y : r.y, c = f.zOrder(o, h, e, i, n), d = f.zOrder(l, u, e, i, n), _ = t.nextZ; _ && _.z <= d; ) {
                if (_ !== t.prev && _ !== t.next && f.pointInTriangle(a.x, a.y, s.x, s.y, r.x, r.y, _.x, _.y) && 0 <= f.area(_.prev, _, _.next))
                    return !1;
                _ = _.nextZ;
            }
            for (_ = t.prevZ; _ && _.z >= c; ) {
                if (_ !== t.prev && _ !== t.next && f.pointInTriangle(a.x, a.y, s.x, s.y, r.x, r.y, _.x, _.y) && 0 <= f.area(_.prev, _, _.next))
                    return !1;
                _ = _.prevZ;
            }
            return !0;
        }
        ,
        f.cureLocalIntersections = function(t, e, i) {
            var n = t;
            do {
                var a = n.prev
                  , s = n.next.next;
                !f.equals(a, s) && f.intersects(a, n, n.next, s) && f.locallyInside(a, s) && f.locallyInside(s, a) && (e.push(a.i / i),
                e.push(n.i / i),
                e.push(s.i / i),
                f.removeNode(n),
                f.removeNode(n.next),
                n = t = s),
                n = n.next;
            } while (n !== t);return n;
        }
        ,
        f.splitEarcut = function(t, e, i, n, a, s) {
            var r = t;
            do {
                for (var o = r.next.next; o !== r.prev; ) {
                    if (r.i !== o.i && f.isValidDiagonal(r, o)) {
                        var h = f.splitPolygon(r, o);
                        return r = f.filterPoints(r, r.next),
                        h = f.filterPoints(h, h.next),
                        f.earcutLinked(r, e, i, n, a, s),
                        void f.earcutLinked(h, e, i, n, a, s);
                    }
                    o = o.next;
                }
                r = r.next;
            } while (r !== t);
        }
        ,
        f.eliminateHoles = function(t, e, i, n) {
            var a, s, r, o, h, l = [];
            for (a = 0,
            s = e.length; a < s; a++)
                r = e[a] * n,
                o = a < s - 1 ? e[a + 1] * n : t.length,
                (h = f.linkedList(t, r, o, n, !1)) === h.next && (h.steiner = !0),
                l.push(f.getLeftmost(h));
            for (l.sort(f.compareX),
            a = 0; a < l.length; a++)
                f.eliminateHole(l[a], i),
                i = f.filterPoints(i, i.next);
            return i;
        }
        ,
        f.compareX = function(t, e) {
            return t.x - e.x;
        }
        ,
        f.eliminateHole = function(t, e) {
            if (e = f.findHoleBridge(t, e)) {
                var i = f.splitPolygon(e, t);
                f.filterPoints(i, i.next);
            }
        }
        ,
        f.findHoleBridge = function(t, e) {
            var i, n = e, a = t.x, s = t.y, r = -1 / 0;
            do {
                if (s <= n.y && s >= n.next.y && n.next.y !== n.y) {
                    var o = n.x + (s - n.y) * (n.next.x - n.x) / (n.next.y - n.y);
                    if (o <= a && r < o) {
                        if ((r = o) === a) {
                            if (s === n.y)
                                return n;
                            if (s === n.next.y)
                                return n.next;
                        }
                        i = n.x < n.next.x ? n : n.next;
                    }
                }
                n = n.next;
            } while (n !== e);if (!i)
                return null;
            if (a === r)
                return i.prev;
            var h, l = i, u = i.x, c = i.y, d = 1 / 0;
            for (n = i.next; n !== l; )
                a >= n.x && n.x >= u && a !== n.x && f.pointInTriangle(s < c ? a : r, s, u, c, s < c ? r : a, s, n.x, n.y) && ((h = Math.abs(s - n.y) / (a - n.x)) < d || h === d && n.x > i.x) && f.locallyInside(n, t) && (i = n,
                d = h),
                n = n.next;
            return i;
        }
        ,
        f.indexCurve = function(t, e, i, n) {
            for (var a = t; null === a.z && (a.z = f.zOrder(a.x, a.y, e, i, n)),
            a.prevZ = a.prev,
            a.nextZ = a.next,
            (a = a.next) !== t; )
                ;
            a.prevZ.nextZ = null,
            a.prevZ = null,
            f.sortLinked(a);
        }
        ,
        f.sortLinked = function(t) {
            var e, i, n, a, s, r, o, h, l = 1;
            do {
                for (i = t,
                s = t = null,
                r = 0; i; ) {
                    for (r++,
                    n = i,
                    e = o = 0; e < l && (o++,
                    n = n.nextZ); e++)
                        ;
                    for (h = l; 0 < o || 0 < h && n; )
                        0 !== o && (0 === h || !n || i.z <= n.z) ? (i = (a = i).nextZ,
                        o--) : (n = (a = n).nextZ,
                        h--),
                        s ? s.nextZ = a : t = a,
                        a.prevZ = s,
                        s = a;
                    i = n;
                }
                s.nextZ = null,
                l *= 2;
            } while (1 < r);return t;
        }
        ,
        f.zOrder = function(t, e, i, n, a) {
            return (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - i) * a) | t << 8)) | t << 4)) | t << 2)) | t << 1)) | (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * a) | e << 8)) | e << 4)) | e << 2)) | e << 1)) << 1;
        }
        ,
        f.getLeftmost = function(t) {
            for (var e = t, i = t; e.x < i.x && (i = e),
            (e = e.next) !== t; )
                ;
            return i;
        }
        ,
        f.pointInTriangle = function(t, e, i, n, a, s, r, o) {
            return 0 <= (a - r) * (e - o) - (t - r) * (s - o) && 0 <= (t - r) * (n - o) - (i - r) * (e - o) && 0 <= (i - r) * (s - o) - (a - r) * (n - o);
        }
        ,
        f.isValidDiagonal = function(t, e) {
            return t.next.i !== e.i && t.prev.i !== e.i && !f.intersectsPolygon(t, e) && f.locallyInside(t, e) && f.locallyInside(e, t) && f.middleInside(t, e);
        }
        ,
        f.area = function(t, e, i) {
            return (e.y - t.y) * (i.x - e.x) - (e.x - t.x) * (i.y - e.y);
        }
        ,
        f.equals = function(t, e) {
            return t.x === e.x && t.y === e.y;
        }
        ,
        f.intersects = function(t, e, i, n) {
            return !!(f.equals(t, e) && f.equals(i, n) || f.equals(t, n) && f.equals(i, e)) || 0 < f.area(t, e, i) != 0 < f.area(t, e, n) && 0 < f.area(i, n, t) != 0 < f.area(i, n, e);
        }
        ,
        f.intersectsPolygon = function(t, e) {
            var i = t;
            do {
                if (i.i !== t.i && i.next.i !== t.i && i.i !== e.i && i.next.i !== e.i && f.intersects(i, i.next, t, e))
                    return !0;
                i = i.next;
            } while (i !== t);return !1;
        }
        ,
        f.locallyInside = function(t, e) {
            return f.area(t.prev, t, t.next) < 0 ? 0 <= f.area(t, e, t.next) && 0 <= f.area(t, t.prev, e) : f.area(t, e, t.prev) < 0 || f.area(t, t.next, e) < 0;
        }
        ,
        f.middleInside = function(t, e) {
            for (var i = t, n = !1, a = (t.x + e.x) / 2, s = (t.y + e.y) / 2; i.y > s != i.next.y > s && i.next.y !== i.y && a < (i.next.x - i.x) * (s - i.y) / (i.next.y - i.y) + i.x && (n = !n),
            (i = i.next) !== t; )
                ;
            return n;
        }
        ,
        f.splitPolygon = function(t, e) {
            var i = new at(t.i,t.x,t.y)
              , n = new at(e.i,e.x,e.y)
              , a = t.next
              , s = e.prev;
            return (t.next = e).prev = t,
            (i.next = a).prev = i,
            (n.next = i).prev = n,
            (s.next = n).prev = s,
            n;
        }
        ,
        f.insertNode = function(t, e, i, n) {
            var a = new at(t,e,i);
            return n ? (a.next = n.next,
            (a.prev = n).next.prev = a,
            n.next = a) : (a.prev = a).next = a,
            a;
        }
        ,
        f.removeNode = function(t) {
            t.next.prev = t.prev,
            t.prev.next = t.next,
            t.prevZ && (t.prevZ.nextZ = t.nextZ),
            t.nextZ && (t.nextZ.prevZ = t.prevZ);
        }
        ,
        f.signedArea = function(t, e, i, n) {
            for (var a = 0, s = e, r = i - n; s < i; s += n)
                a += (t[r] - t[s]) * (t[s + 1] + t[r + 1]),
                r = s;
            return a;
        }
        ,
        f;
    }()
      , at = function() {
        function t(t, e, i) {
            this.i = null,
            this.x = null,
            this.y = null,
            this.prev = null,
            this.next = null,
            this.z = null,
            this.prevZ = null,
            this.nextZ = null,
            this.steiner = null,
            this.i = t,
            this.x = e,
            this.y = i,
            this.prev = null,
            this.next = null,
            this.z = null,
            this.prevZ = null,
            this.nextZ = null,
            this.steiner = !1;
        }
        return d(t, "laya.webgl.shapes.EarcutNode"),
        t;
    }()
      , st = (function() {
        function t(t, e, i, n, a, s, r) {
            this.lineWidth = t,
            this.lineColor = e,
            this.lineAlpha = i,
            this.fillColor = n,
            this.fillAlpha = a,
            this.shape = r,
            this.fill = s;
        }
        d(t, "laya.webgl.shapes.GeometryData");
        var e = t.prototype;
        e.clone = function() {
            return new t(this.lineWidth,this.lineColor,this.lineAlpha,this.fillColor,this.fillAlpha,this.fill,this.shape);
        }
        ,
        e.getIndexData = function() {
            return null;
        }
        ,
        e.getVertexData = function() {
            return null;
        }
        ,
        e.destroy = function() {
            this.shape = null;
        }
        ;
    }(),
    function() {
        function t(t) {
            if (t instanceof Float32Array)
                this.points = t;
            else if (t instanceof Array) {
                t.length;
                this.points = new Float32Array(t);
            }
        }
        d(t, "laya.webgl.shapes.Vertex");
        var e = t.prototype;
        b.imps(e, {
            "laya.webgl.shapes.IShape": !0
        }),
        e.getData = function(t, e, i) {}
        ,
        e.needUpdate = function(t) {
            return !1;
        }
        ,
        e.rebuild = function(t) {}
        ,
        e.setMatrix = function(t) {}
        ;
    }(),
    function() {
        function h(t) {
            void 0 === t && (t = 1e4),
            this._renderType = t;
        }
        d(h, "laya.webgl.submit.Submit");
        var t = h.prototype;
        return b.imps(t, {
            "laya.webgl.submit.ISubmit": !0
        }),
        t.releaseRender = function() {
            var t = h._cache;
            (t[t._length++] = this).shaderValue.release(),
            this._vb = null;
        }
        ,
        t.getRenderType = function() {
            return this._renderType;
        }
        ,
        t.renderSubmit = function() {
            if (0 === this._numEle)
                return 1;
            var t = this.shaderValue.textureHost;
            if (t) {
                var e = t.source;
                if (!t.bitmap || !e)
                    return 1;
                this.shaderValue.texture = e;
            }
            this._vb.bind_upload(this._ib);
            var i = St.mainContext;
            return this.shaderValue.upload(),
            V.activeBlendFunction !== this._blendFn && (i.enable(3042),
            this._blendFn(i),
            V.activeBlendFunction = this._blendFn),
            A.drawCall++,
            A.trianglesFaces += this._numEle / 3,
            i.drawElements(4, this._numEle, 5123, this._startIdx),
            1;
        }
        ,
        h.__init__ = function() {
            var t = h.RENDERBASE = new h(-1);
            t.shaderValue = new Mt(0,0),
            t.shaderValue.ALPHA = -1234;
        }
        ,
        h.createSubmit = function(t, e, i, n, a) {
            var s = h._cache._length ? h._cache[--h._cache._length] : new h();
            null == i && ((i = s._selfVb || (s._selfVb = Zt.create(-1))).clear(),
            n = 0),
            s._ib = e,
            s._vb = i,
            s._startIdx = n * ft.BYTES_PIDX,
            s._numEle = 0;
            var r = t._nBlendType;
            s._blendFn = t._targets ? V.targetFns[r] : V.fns[r],
            s.shaderValue = a,
            s.shaderValue.setValue(t._shader2D);
            var o = t._shader2D.filters;
            return o && s.shaderValue.setFilters(o),
            s;
        }
        ,
        h.createShape = function(t, e, i, n, a, s) {
            var r = h._cache._length ? h._cache[--h._cache._length] : new h();
            r._ib = e,
            r._vb = i,
            r._numEle = n,
            r._startIdx = a,
            r.shaderValue = s,
            r.shaderValue.setValue(t._shader2D);
            var o = t._nBlendType;
            return r._blendFn = t._targets ? V.targetFns[o] : V.fns[o],
            r;
        }
        ,
        h.TYPE_2D = 1e4,
        h.TYPE_CANVAS = 10003,
        h.TYPE_CMDSETRT = 10004,
        h.TYPE_CUSTOM = 10005,
        h.TYPE_BLURRT = 10006,
        h.TYPE_CMDDESTORYPRERT = 10007,
        h.TYPE_DISABLESTENCIL = 10008,
        h.TYPE_OTHERIBVB = 10009,
        h.TYPE_PRIMITIVE = 10010,
        h.TYPE_RT = 10011,
        h.TYPE_BLUR_RT = 10012,
        h.TYPE_TARGET = 10013,
        h.TYPE_CHANGE_VALUE = 10014,
        h.TYPE_SHAPE = 10015,
        h.TYPE_TEXTURE = 10016,
        h.TYPE_FILLTEXTURE = 10017,
        h.RENDERBASE = null,
        h._cache = ((h._cache = [])._length = 0,
        h._cache),
        h;
    }())
      , rt = function() {
        function n() {
            this.fun = null,
            this.args = null;
        }
        d(n, "laya.webgl.submit.SubmitCMD");
        var t = n.prototype;
        return b.imps(t, {
            "laya.webgl.submit.ISubmit": !0
        }),
        t.renderSubmit = function() {
            return this.fun.apply(null, this.args),
            1;
        }
        ,
        t.getRenderType = function() {
            return 0;
        }
        ,
        t.releaseRender = function() {
            var t = n._cache;
            t[t._length++] = this;
        }
        ,
        n.create = function(t, e) {
            var i = n._cache._length ? n._cache[--n._cache._length] : new n();
            return i.fun = e,
            i.args = t,
            i;
        }
        ,
        n._cache = ((n._cache = [])._length = 0,
        n._cache),
        n;
    }()
      , ot = function() {
        function e() {
            this.variables = {};
        }
        d(e, "laya.webgl.submit.SubmitCMDScope");
        var t = e.prototype;
        return t.getValue = function(t) {
            return this.variables[t];
        }
        ,
        t.addValue = function(t, e) {
            return this.variables[t] = e;
        }
        ,
        t.setValue = function(t, e) {
            return this.variables.hasOwnProperty(t) ? this.variables[t] = e : null;
        }
        ,
        t.clear = function() {
            for (var t in this.variables)
                delete this.variables[t];
        }
        ,
        t.recycle = function() {
            this.clear(),
            e.POOL.push(this);
        }
        ,
        e.create = function() {
            var t = e.POOL.pop();
            return t || (t = new e()),
            t;
        }
        ,
        e.POOL = [],
        e;
    }()
      , ht = function() {
        function c() {
            this.offset = 0,
            this.startIndex = 0,
            this._mat = I.create();
        }
        d(c, "laya.webgl.submit.SubmitOtherIBVB");
        var t = c.prototype;
        return b.imps(t, {
            "laya.webgl.submit.ISubmit": !0
        }),
        t.releaseRender = function() {
            var t = c._cache;
            t[t._length++] = this;
        }
        ,
        t.getRenderType = function() {
            return 10009;
        }
        ,
        t.renderSubmit = function() {
            var t = this._shaderValue.textureHost;
            if (t) {
                var e = t.source;
                if (!t.bitmap || !e)
                    return 1;
                this._shaderValue.texture = e;
            }
            this._vb.bind_upload(this._ib);
            var i = yt.worldMatrix4
              , n = I.TEMP;
            I.mulPre(this._mat, i[0], i[1], i[4], i[5], i[12], i[13], n);
            var a = yt.worldMatrix4 = c.tempMatrix4;
            a[0] = n.a,
            a[1] = n.b,
            a[4] = n.c,
            a[5] = n.d,
            a[12] = n.tx,
            a[13] = n.ty,
            this._shader._offset = this.offset,
            this._shaderValue.refresh(),
            this._shader.upload(this._shaderValue),
            this._shader._offset = 0;
            var s = St.mainContext;
            return V.activeBlendFunction !== this._blendFn && (s.enable(3042),
            this._blendFn(s),
            V.activeBlendFunction = this._blendFn),
            A.drawCall++,
            A.trianglesFaces += this._numEle / 3,
            s.drawElements(4, this._numEle, 5123, this.startIndex),
            yt.worldMatrix4 = i,
            Nt.activeShader = null,
            1;
        }
        ,
        c.create = function(t, e, i, n, a, s, r, o, h) {
            void 0 === h && (h = 0);
            var l = c._cache._length ? c._cache[--c._cache._length] : new c();
            l._ib = i,
            l._vb = e,
            l._numEle = n,
            l._shader = a,
            l._shaderValue = s;
            var u = t._nBlendType;
            switch (l._blendFn = t._targets ? V.targetFns[u] : V.fns[u],
            h) {
            case 0:
                l.offset = 0,
                l.startIndex = o / (ft.BYTES_PE * e.vertexStride) * 1.5,
                l.startIndex *= ft.BYTES_PIDX;
                break;

            case 1:
                l.startIndex = r,
                l.offset = o;
            }
            return l;
        }
        ,
        c._cache = ((c._cache = [])._length = 0,
        c._cache),
        c.tempMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        c;
    }()
      , lt = function() {
        function i() {
            this.submitIndex = 0,
            this.submitLength = 0,
            this.context = null,
            this.clipRect = new C(),
            this.screenRect = new C();
        }
        d(i, "laya.webgl.submit.SubmitScissor");
        var t = i.prototype;
        return b.imps(t, {
            "laya.webgl.submit.ISubmit": !0
        }),
        t._scissor = function(t, e, i, n) {
            var a = yt.worldMatrix4
              , s = a[0]
              , r = a[5]
              , o = a[12]
              , h = a[13];
            if (n *= r,
            (i *= s) < 1 || n < 1)
                return !1;
            var l = (t = t * s + o) + i
              , u = (e = e * r + h) + n;
            t < 0 && (i = l - (t = 0)),
            e < 0 && (n = u - (e = 0));
            var c = yt.worldClipRect;
            if (t = Math.max(t, c.x),
            e = Math.max(e, c.y),
            i = Math.min(l, c.right) - t,
            n = Math.min(u, c.bottom) - e,
            i < 1 || n < 1)
                return !1;
            var d = yt.worldScissorTest;
            return this.screenRect.copyFrom(c),
            c.x = t,
            c.y = e,
            c.width = i,
            c.height = n,
            yt.worldScissorTest = !0,
            e = yt.height - e - n,
            St.mainContext.scissor(t, e, i, n),
            St.mainContext.enable(3089),
            this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength),
            d ? (e = yt.height - this.screenRect.y - this.screenRect.height,
            St.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height),
            St.mainContext.enable(3089)) : (St.mainContext.disable(3089),
            yt.worldScissorTest = !1),
            c.copyFrom(this.screenRect),
            !0;
        }
        ,
        t._scissorWithTagart = function(t, e, i, n) {
            if (i < 1 || n < 1)
                return !1;
            var a = t + i
              , s = e + n;
            t < 0 && (i = a - (t = 0)),
            e < 0 && (n = s - (e = 0));
            var r = yt.worldClipRect;
            if (t = Math.max(t, r.x),
            e = Math.max(e, r.y),
            i = Math.min(a, r.right) - t,
            n = Math.min(s, r.bottom) - e,
            i < 1 || n < 1)
                return !1;
            var o = yt.worldScissorTest;
            return this.screenRect.copyFrom(r),
            yt.worldScissorTest = !0,
            r.x = t,
            r.y = e,
            r.width = i,
            r.height = n,
            e = yt.height - e - n,
            St.mainContext.scissor(t, e, i, n),
            St.mainContext.enable(3089),
            this.context.submitElement(this.submitIndex, this.submitIndex + this.submitLength),
            o ? (e = yt.height - this.screenRect.y - this.screenRect.height,
            St.mainContext.scissor(this.screenRect.x, e, this.screenRect.width, this.screenRect.height),
            St.mainContext.enable(3089)) : (St.mainContext.disable(3089),
            yt.worldScissorTest = !1),
            r.copyFrom(this.screenRect),
            !0;
        }
        ,
        t.renderSubmit = function() {
            return this.submitLength = Math.min(this.context._submits._length - 1, this.submitLength),
            this.submitLength < 1 || this.clipRect.width < 1 || this.clipRect.height < 1 || (this.context._targets ? this._scissorWithTagart(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height) : this._scissor(this.clipRect.x, this.clipRect.y, this.clipRect.width, this.clipRect.height)),
            this.submitLength + 1;
        }
        ,
        t.getRenderType = function() {
            return 0;
        }
        ,
        t.releaseRender = function() {
            var t = i._cache;
            (t[t._length++] = this).context = null;
        }
        ,
        i.create = function(t) {
            var e = i._cache._length ? i._cache[--i._cache._length] : new i();
            return e.context = t,
            e;
        }
        ,
        i._cache = ((i._cache = [])._length = 0,
        i._cache),
        i;
    }()
      , ut = function() {
        function h() {
            this.step = 0,
            this.blendMode = null,
            this.level = 0;
        }
        d(h, "laya.webgl.submit.SubmitStencil");
        var t = h.prototype;
        return b.imps(t, {
            "laya.webgl.submit.ISubmit": !0
        }),
        t.renderSubmit = function() {
            switch (this.step) {
            case 1:
                this.do1();
                break;

            case 2:
                this.do2();
                break;

            case 3:
                this.do3();
                break;

            case 4:
                this.do4();
                break;

            case 5:
                this.do5();
                break;

            case 6:
                this.do6();
                break;

            case 7:
                this.do7();
                break;

            case 8:
                this.do8();
            }
            return 1;
        }
        ,
        t.getRenderType = function() {
            return 0;
        }
        ,
        t.releaseRender = function() {
            var t = h._cache;
            t[t._length++] = this;
        }
        ,
        t.do1 = function() {
            var t = St.mainContext;
            t.enable(2960),
            t.clear(1024),
            t.colorMask(!1, !1, !1, !1),
            t.stencilFunc(514, this.level, 255),
            t.stencilOp(7680, 7680, 7682);
        }
        ,
        t.do2 = function() {
            var t = St.mainContext;
            t.stencilFunc(514, this.level + 1, 255),
            t.colorMask(!0, !0, !0, !0),
            t.stencilOp(7680, 7680, 7680);
        }
        ,
        t.do3 = function() {
            var t = St.mainContext;
            t.colorMask(!0, !0, !0, !0),
            t.stencilOp(7680, 7680, 7680),
            t.clear(1024),
            t.disable(2960);
        }
        ,
        t.do4 = function() {
            var t = St.mainContext;
            0 == this.level && (t.enable(2960),
            t.clear(1024)),
            t.colorMask(!1, !1, !1, !1),
            t.stencilFunc(519, 0, 255),
            t.stencilOp(7680, 7680, 7682);
        }
        ,
        t.do5 = function() {
            var t = St.mainContext;
            t.stencilFunc(514, this.level, 255),
            t.colorMask(!0, !0, !0, !0),
            t.stencilOp(7680, 7680, 7680);
        }
        ,
        t.do6 = function() {
            var t = St.mainContext;
            V.targetFns[V.TOINT[this.blendMode]](t);
        }
        ,
        t.do7 = function() {
            var t = St.mainContext;
            t.colorMask(!1, !1, !1, !1),
            t.stencilOp(7680, 7680, 7683);
        }
        ,
        t.do8 = function() {
            var t = St.mainContext;
            t.colorMask(!0, !0, !0, !0),
            t.stencilFunc(514, this.level, 255),
            t.stencilOp(7680, 7680, 7680);
        }
        ,
        h.restore = function(t, e, i, n, a) {
            var s;
            if ((t._renderKey = 0) < h._mask && h._mask--,
            0 == h._mask)
                s = laya.webgl.submit.SubmitStencil.create(3),
                t.addRenderObject(s),
                t._curSubmit = st.RENDERBASE;
            else {
                s = laya.webgl.submit.SubmitStencil.create(7),
                t.addRenderObject(s);
                var r = t._vb;
                r._byteLength;
                if (gt.fillRectImgVb(r, null, e.x, e.y, e.width, e.height, k.DEF_UV, i, n, a, 0, 0)) {
                    t._shader2D.glTexture = null;
                    var o = t._curSubmit = st.createSubmit(t, t._ib, r, (r._byteLength - 64) / 32 * 3, Mt.create(2, 0));
                    o.shaderValue.ALPHA = 1,
                    t._submits[t._submits._length++] = o,
                    t._curSubmit._numEle += 6,
                    t._curSubmit = st.RENDERBASE;
                } else
                    alert("clipRect calc stencil rect error");
                s = laya.webgl.submit.SubmitStencil.create(8),
                t.addRenderObject(s);
            }
        }
        ,
        h.restore2 = function(t, e) {
            var i;
            (t._renderKey = 0) < h._mask && h._mask--,
            0 == h._mask ? (i = laya.webgl.submit.SubmitStencil.create(3),
            t.addRenderObject(i),
            t._curSubmit = st.RENDERBASE) : (i = laya.webgl.submit.SubmitStencil.create(7),
            t.addRenderObject(i),
            t._submits[t._submits._length++] = e,
            i = laya.webgl.submit.SubmitStencil.create(8),
            t.addRenderObject(i));
        }
        ,
        h.create = function(t) {
            var e = h._cache._length ? h._cache[--h._cache._length] : new h();
            return 5 == (e.step = t) && ++h._mask,
            e.level = h._mask,
            e;
        }
        ,
        h._cache = ((h._cache = [])._length = 0,
        h._cache),
        h._mask = 0,
        h;
    }()
      , ct = function() {
        function o() {
            this._renderType = 0,
            this._vb = null,
            this._ib = null,
            this._startIdx = 0,
            this._numEle = 0,
            this.shaderValue = null,
            this.blendType = 0,
            this.proName = null,
            this.scope = null;
        }
        d(o, "laya.webgl.submit.SubmitTarget");
        var t = o.prototype;
        return b.imps(t, {
            "laya.webgl.submit.ISubmit": !0
        }),
        t.renderSubmit = function() {
            this._vb.bind_upload(this._ib);
            var t = this.scope.getValue(this.proName);
            return t && (this.shaderValue.texture = t.source,
            this.shaderValue.strength && !this.shaderValue.blurInfo && (this.shaderValue.blurInfo = [t.width, t.height]),
            this.shaderValue.upload(),
            this.blend(),
            A.drawCall++,
            A.trianglesFaces += this._numEle / 3,
            St.mainContext.drawElements(4, this._numEle, 5123, this._startIdx)),
            1;
        }
        ,
        t.blend = function() {
            if (V.activeBlendFunction !== V.fns[this.blendType]) {
                var t = St.mainContext;
                t.enable(3042),
                V.fns[this.blendType](t),
                V.activeBlendFunction = V.fns[this.blendType];
            }
        }
        ,
        t.getRenderType = function() {
            return 0;
        }
        ,
        t.releaseRender = function() {
            var t = o._cache;
            t[t._length++] = this;
        }
        ,
        o.create = function(t, e, i, n, a, s) {
            var r = o._cache._length ? o._cache[--o._cache._length] : new o();
            return r._ib = e,
            r._vb = i,
            r.proName = s,
            r._startIdx = n * ft.BYTES_PIDX,
            r._numEle = 0,
            r.blendType = t._nBlendType,
            r.shaderValue = a,
            r.shaderValue.setValue(t._shader2D),
            r;
        }
        ,
        o._cache = ((o._cache = [])._length = 0,
        o._cache),
        o;
    }()
      , dt = function() {
        function t() {
            this._sourceStr = null;
        }
        d(t, "laya.webgl.text.CharSegment");
        var e = t.prototype;
        return b.imps(e, {
            "laya.webgl.text.ICharSegment": !0
        }),
        e.textToSpit = function(t) {
            this._sourceStr = t;
        }
        ,
        e.getChar = function(t) {
            return this._sourceStr.charAt(t);
        }
        ,
        e.getCharCode = function(t) {
            return this._sourceStr.charCodeAt(t);
        }
        ,
        e.length = function() {
            return this._sourceStr.length;
        }
        ,
        t;
    }()
      , _t = function() {
        var t;
        function A() {}
        return d(A, "laya.webgl.text.DrawText"),
        A.__init__ = function() {
            A._charsTemp = new Array(),
            A._drawValue = new t(),
            A._charSeg = new dt();
        }
        ,
        A.customCharSeg = function(t) {
            A._charSeg = t;
        }
        ,
        A.getChar = function(t, e, i) {
            var n = Wt.createOneChar(t, i);
            return -1 != e && (A._charsCache[e] = n),
            n;
        }
        ,
        A._drawSlow = function(t, e, i, n, a, s, r, o, h, l, u, c, d, _, p) {
            var f, g, m = A._drawValue.value(s, o, h, l, d, _, p), y = 0, v = 0, S = A._charsTemp, x = 0, b = NaN;
            if (n)
                for (S.length = n.length,
                y = 0,
                v = n.length; y < v; y++)
                    b = (g = n[y]).charNum + m.txtID,
                    S[y] = f = A._charsCache[b] || A.getChar(g.char, b, m),
                    f.active();
            else {
                var w = i instanceof laya.utils.WordText ? i.toString() : i;
                if (R.CharacterCache) {
                    A._charSeg.textToSpit(w);
                    var M = A._charSeg.length();
                    for (y = 0,
                    v = S.length = M; y < v; y++)
                        b = A._charSeg.getCharCode(y) + m.txtID,
                        S[y] = f = A._charsCache[b] || A.getChar(A._charSeg.getChar(y), b, m),
                        f.active(),
                        x += f.cw;
                } else
                    S.length = 0,
                    (f = A.getChar(w, -1, m)).active(),
                    x += f.cw,
                    S[0] = f;
            }
            var I = 0;
            null !== r && "left" !== r && (I = -("center" == r ? x / 2 : x));
            var T, C, E = NaN, P = 0;
            if (n)
                for (y = 0,
                v = S.length; y < v; y++)
                    (f = S[y]).isSpace || (g = n[y],
                    E = f.borderSize,
                    T = f.texture,
                    e._drawText(T, u + I + g.x * d - E, c + g.y * _ - E, T.width, T.height, a, 0, 0, 0, 0));
            else {
                for (y = 0,
                v = S.length; y < v; y++)
                    (f = S[y]).isSpace || (E = f.borderSize,
                    T = f.texture,
                    e._drawText(T, u + I - E, c - E, T.width, T.height, a, 0, 0, 0, 0),
                    t && ((C = t[P++]) || (C = t[P - 1] = []),
                    C[0] = T,
                    C[1] = I - E,
                    C[2] = -E)),
                    I += f.cw;
                t && (t.length = P);
            }
        }
        ,
        A._drawFast = function(t, e, i, n, a) {
            for (var s, r, o = 0, h = t.length; o < h; o++)
                (s = (r = t[o])[0]).active(),
                e._drawText(s, n + r[1], a + r[2], s.width, s.height, i, 0, 0, 0, 0);
        }
        ,
        A.drawText = function(t, e, i, n, a, s, r, o, h, l, u, c) {
            if (void 0 === c && (c = 0),
            !(e && 0 === e.length || i && 0 === i.length)) {
                var d = n.a
                  , _ = n.d;
                (0 !== n.b || 0 !== n.c) && (d = _ = 1);
                var p = 1 !== d || 1 !== _;
                if (p && b.stage.transform) {
                    var f = b.stage.transform;
                    p = f.a === d && f.d === _;
                } else
                    p = !1;
                if (p) {
                    var g = (n = n.copyTo(wt._tmpMatrix)).tx
                      , m = n.ty;
                    n.scale(1 / d, 1 / _),
                    n._checkTransform(),
                    l *= d,
                    u *= _,
                    l += g - n.tx,
                    u += m - n.ty;
                } else
                    d = _ = 1;
                if (i)
                    A._drawSlow(null, t, e, i, n, a, s, r, o, h, l, u, d, _, c);
                else {
                    if (null === e.toUpperCase) {
                        var y = d + 1e5 * _
                          , v = e;
                        return void (v.changed || v.id !== y ? (v.id = y,
                        v.changed = !1,
                        A._drawSlow(v.save, t, e, i, n, a, s, r, o, h, l, u, d, _, c)) : A._drawFast(v.save, t, n, l, u));
                    }
                    var S = e + a.toString() + r + o + h + d + _ + s
                      , x = A._textsCache[S];
                    R.CharacterCache ? x ? A._drawFast(x, t, n, l, u) : (A._textsCache.__length || (A._textsCache.__length = 0),
                    A._textsCache.__length > w.WebGLTextCacheCount && ((A._textsCache = {}).__length = 0,
                    A._curPoolIndex = 0),
                    A._textCachesPool[A._curPoolIndex] ? (x = A._textsCache[S] = A._textCachesPool[A._curPoolIndex]).length = 0 : A._textCachesPool[A._curPoolIndex] = x = A._textsCache[S] = [],
                    A._textsCache.__length++,
                    A._curPoolIndex++,
                    A._drawSlow(x, t, e, i, n, a, s, r, o, h, l, u, d, _, c)) : A._drawSlow(x, t, e, i, n, a, s, r, o, h, l, u, d, _, c);
                }
            }
        }
        ,
        A._charsTemp = null,
        A._textCachesPool = [],
        A._curPoolIndex = 0,
        A._charsCache = {},
        A._textsCache = {},
        A._drawValue = null,
        A.d = [],
        A._charSeg = null,
        A.__init$ = function() {
            t = function() {
                function h() {}
                return d(h, ""),
                h.prototype.value = function(t, e, i, n, a, s, r) {
                    this.font = t,
                    this.fillColor = e,
                    this.borderColor = i,
                    this.lineWidth = n,
                    this.scaleX = a,
                    this.scaleY = s,
                    this.underLine = r;
                    var o = t.toString() + a + s + n + e + i + r;
                    return this.txtID = h._keymap[o],
                    this.txtID || (this.txtID = 1e-7 * ++h._keymapCount,
                    h._keymap[o] = this.txtID),
                    this;
                }
                ,
                h.clear = function() {
                    h._keymap = {},
                    h._keymapCount = 1;
                }
                ,
                h._keymap = {},
                h._keymapCount = 1,
                h;
            }();
        }
        ,
        A;
    }()
      , pt = function() {
        function a(t) {
            this._index = 0,
            this._size = 14,
            this._italic = -2,
            a._cache2 = a._cache2 || [],
            this.setFont(t || "14px Arial");
        }
        d(a, "laya.webgl.text.FontInContext");
        var t = a.prototype;
        return t.setFont = function(t) {
            var e = a._cache2[t];
            if (e)
                this._words = e[0],
                this._size = e[1];
            else {
                this._words = t.split(" ");
                for (var i = 0, n = this._words.length; i < n; i++)
                    if (0 < this._words[i].indexOf("px")) {
                        this._index = i;
                        break;
                    }
                this._size = parseInt(this._words[this._index]),
                a._cache2[t] = [this._words, this._size];
            }
            this._text = null,
            this._italic = -2;
        }
        ,
        t.getItalic = function() {
            return -2 === this._italic && (this._italic = this.hasType("italic")),
            this._italic;
        }
        ,
        t.hasType = function(t) {
            for (var e = 0, i = this._words.length; e < i; e++)
                if (this._words[e] === t)
                    return e;
            return -1;
        }
        ,
        t.removeType = function(t) {
            for (var e = 0, i = this._words.length; e < i; e++)
                if (this._words[e] === t) {
                    this._words.splice(e, 1),
                    this._index > e && this._index--;
                    break;
                }
            this._text = null,
            this._italic = -2;
        }
        ,
        t.copyTo = function(t) {
            return t._text = this._text,
            t._size = this._size,
            t._index = this._index,
            t._words = this._words.slice(),
            t._italic = -2,
            t;
        }
        ,
        t.toString = function() {
            return this._text ? this._text : this._text = this._words.join(" ");
        }
        ,
        n(0, t, "size", function() {
            return this._size;
        }, function(t) {
            this._size = t,
            this._words[this._index] = t + "px",
            this._text = null;
        }),
        a.create = function(t) {
            var e = a._cache[t];
            return e || (e = a._cache[t] = new a(t));
        }
        ,
        a.EMPTY = new a(),
        a._cache = {},
        a._cache2 = null,
        a;
    }()
      , ft = function() {
        function t() {}
        return d(t, "laya.webgl.utils.CONST3D2D"),
        t.defaultMatrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        t.defaultMinusYMatrix4 = [1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        t.uniformMatrix3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
        t._TMPARRAY = [],
        t._OFFSETX = 0,
        t._OFFSETY = 0,
        r(t, ["BYTES_PE", function() {
            return this.BYTES_PE = Float32Array.BYTES_PER_ELEMENT;
        }
        , "BYTES_PIDX", function() {
            return this.BYTES_PIDX = Uint16Array.BYTES_PER_ELEMENT;
        }
        ]),
        t;
    }()
      , gt = function() {
        function p() {}
        return d(p, "laya.webgl.utils.GlUtils"),
        p.make2DProjection = function(t, e, i) {
            return [2 / t, 0, 0, 0, 0, -2 / e, 0, 0, 0, 0, 2 / i, 0, -1, 1, 0, 1];
        }
        ,
        p.fillIBQuadrangle = function(t, e) {
            if (65535 / 4 < e)
                throw Error("IBQuadrangle count:" + e + " must<:" + Math.floor(65535 / 4));
            e = Math.floor(e),
            t._resizeBuffer(6 * (e + 1) * 2, !1),
            t.byteLength = t.bufferLength;
            for (var i = t.getUint16Array(), n = 0, a = 0; a < e; a++)
                i[n++] = 4 * a,
                i[n++] = 4 * a + 2,
                i[n++] = 4 * a + 1,
                i[n++] = 4 * a,
                i[n++] = 4 * a + 3,
                i[n++] = 4 * a + 2;
            return t.setNeedUpload(),
            !0;
        }
        ,
        p.expandIBQuadrangle = function(t, e) {
            t.bufferLength >= 6 * e * 2 || p.fillIBQuadrangle(t, e);
        }
        ,
        p.mathCeilPowerOfTwo = function(t) {
            return t--,
            t |= t >> 1,
            t |= t >> 2,
            t |= t >> 4,
            t |= t >> 8,
            t |= t >> 16,
            ++t;
        }
        ,
        p.fillQuadrangleImgVb = function(t, e, i, n, a, s, r, o) {
            var h = 16 + (t._byteLength >> 2);
            t.byteLength = h << 2;
            var l = t.getFloat32Array();
            l[(h -= 16) + 2] = a[0],
            l[h + 3] = a[1],
            l[h + 6] = a[2],
            l[h + 7] = a[3],
            l[h + 10] = a[4],
            l[h + 11] = a[5],
            l[h + 14] = a[6],
            l[h + 15] = a[7];
            var u = s.a
              , c = s.b
              , d = s.c
              , _ = s.d;
            if (1 !== u || 0 !== c || 0 !== d || 1 !== _) {
                s.bTransform = !0;
                var p = s.tx + r
                  , f = s.ty + o;
                l[h] = (n[0] + e) * u + (n[1] + i) * d + p,
                l[h + 1] = (n[0] + e) * c + (n[1] + i) * _ + f,
                l[h + 4] = (n[2] + e) * u + (n[3] + i) * d + p,
                l[h + 5] = (n[2] + e) * c + (n[3] + i) * _ + f,
                l[h + 8] = (n[4] + e) * u + (n[5] + i) * d + p,
                l[h + 9] = (n[4] + e) * c + (n[5] + i) * _ + f,
                l[h + 12] = (n[6] + e) * u + (n[7] + i) * d + p,
                l[h + 13] = (n[6] + e) * c + (n[7] + i) * _ + f;
            } else
                s.bTransform = !1,
                e += s.tx + r,
                i += s.ty + o,
                l[h] = e + n[0],
                l[h + 1] = i + n[1],
                l[h + 4] = e + n[2],
                l[h + 5] = i + n[3],
                l[h + 8] = e + n[4],
                l[h + 9] = i + n[5],
                l[h + 12] = e + n[6],
                l[h + 13] = i + n[7];
            return t._upload = !0;
        }
        ,
        p.fillTranglesVB = function(t, e, i, n, a, s, r) {
            var o = (t._byteLength >> 2) + n.length;
            t.byteLength = o << 2;
            var h = t.getFloat32Array();
            o -= n.length;
            for (var l = n.length, u = a.a, c = a.b, d = a.c, _ = a.d, p = 0; p < l; p += 4)
                if (h[o + p + 2] = n[p + 2],
                h[o + p + 3] = n[p + 3],
                1 !== u || 0 !== c || 0 !== d || 1 !== _) {
                    a.bTransform = !0;
                    var f = a.tx + s
                      , g = a.ty + r;
                    h[o + p] = (n[p] + e) * u + (n[p + 1] + i) * d + f,
                    h[o + p + 1] = (n[p] + e) * c + (n[p + 1] + i) * _ + g;
                } else
                    a.bTransform = !1,
                    e += a.tx + s,
                    i += a.ty + r,
                    h[o + p] = e + n[p],
                    h[o + p + 1] = i + n[p + 1];
            return t._upload = !0;
        }
        ,
        p.copyPreImgVb = function(t, e, i) {
            var n = t._byteLength >> 2;
            t.byteLength = n + 16 << 2;
            for (var a = t.getFloat32Array(), s = 0, r = n - 16; s < 4; s++)
                a[n] = a[r] + e,
                ++r,
                a[++n] = a[r] + i,
                ++r,
                a[++n] = a[r],
                ++r,
                a[++n] = a[r],
                ++n,
                ++r;
            t._upload = !0;
        }
        ,
        p.fillRectImgVb = function(t, e, i, n, a, s, r, o, h, l, u, c, d) {
            void 0 === d && (d = !1);
            var _, p, f, g, m, y, v, S, x, b, w, M, I, T, C, E, P = 1, A = o.a, L = o.b, D = o.c, R = o.d, k = e && e.width < 99999999;
            if (1 !== A || 0 !== L || 0 !== D || 1 !== R ? (o.bTransform = !0,
            0 === L && 0 === D && (P = 23,
            x = a + i,
            b = s + n,
            _ = A * i + (w = o.tx + h),
            f = A * x + w,
            p = R * n + (M = o.ty + l),
            g = R * b + M)) : (P = 23,
            o.bTransform = !1,
            f = (_ = i + o.tx + h) + a,
            g = (p = n + o.ty + l) + s),
            k && (m = e.x,
            y = e.y,
            v = e.width + m,
            S = e.height + y),
            1 !== P) {
                if (Math.min(_, f) >= v)
                    return !1;
                if (Math.min(p, g) >= S)
                    return !1;
                if (Math.max(f, _) <= m)
                    return !1;
                if (Math.max(g, p) <= y)
                    return !1;
            }
            var N = t._byteLength >> 2;
            t.byteLength = N + 16 << 2;
            var O = t.getFloat32Array();
            switch (O[N + 2] = r[0],
            O[N + 3] = r[1],
            O[N + 6] = r[2],
            O[N + 7] = r[3],
            O[N + 10] = r[4],
            O[N + 11] = r[5],
            O[N + 14] = r[6],
            O[N + 15] = r[7],
            P) {
            case 1:
                w = o.tx + h,
                M = o.ty + l;
                var B = A * i
                  , G = D * n
                  , F = R * n
                  , U = L * i
                  , H = A * (x = a + i)
                  , V = D * (b = s + n)
                  , Y = R * b
                  , X = L * x;
                O[N + 13] = d ? (I = B + G + w,
                C = Math.round(I) - I,
                T = F + U + M,
                E = Math.round(T) - T,
                O[N] = I + C,
                O[N + 1] = T + E,
                O[N + 4] = H + G + w + C,
                O[N + 5] = F + X + M + E,
                O[N + 8] = H + V + w + C,
                O[N + 9] = Y + X + M + E,
                O[N + 12] = B + V + w + C,
                Y + U + M + E) : (O[N] = B + G + w,
                O[N + 1] = F + U + M,
                O[N + 4] = H + G + w,
                O[N + 5] = F + X + M,
                O[N + 8] = H + V + w,
                O[N + 9] = Y + X + M,
                O[N + 12] = B + V + w,
                Y + U + M);
                break;

            case 23:
                O[N + 13] = d ? (I = _ + u,
                C = Math.round(I) - I,
                T = p,
                E = Math.round(T) - T,
                O[N] = I + C,
                O[N + 1] = T + E,
                O[N + 4] = f + u + C,
                O[N + 5] = p + E,
                O[N + 8] = f + C,
                O[N + 9] = g + E,
                O[N + 12] = _ + C,
                g + E) : (O[N] = _ + u,
                O[N + 1] = p,
                O[N + 4] = f + u,
                O[N + 5] = p,
                O[N + 8] = f,
                O[N + 9] = g,
                O[N + 12] = _,
                g);
            }
            return t._upload = !0;
        }
        ,
        p.fillLineVb = function(t, e, i, n, a, s, r, o) {
            var h = .5 * r
              , l = p._fillLineArray
              , u = -(n - s)
              , c = i - a
              , d = Math.sqrt(u * u + c * c);
            u /= d,
            c /= d,
            u *= h,
            c *= h,
            l[0] = i - u,
            l[1] = n - c,
            l[4] = i + u,
            l[5] = n + c,
            l[8] = a + u,
            l[9] = s + c,
            l[12] = a - u,
            l[13] = s - c,
            o && o.transformPointArray(l, l);
            var _ = 16 + (t._byteLength >> 2);
            return t.byteLength = _ << 2,
            t.insertData(l, _ - 16),
            !0;
        }
        ,
        p._fillLineArray = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        p;
    }()
      , mt = (function() {
        function h() {}
        d(h, "laya.webgl.utils.MatirxArray"),
        h.ArrayMul = function(t, e, i) {
            if (t)
                if (e)
                    for (var n = NaN, a = NaN, s = NaN, r = NaN, o = 0; o < 4; o++)
                        n = t[o],
                        a = t[o + 4],
                        s = t[o + 8],
                        r = t[o + 12],
                        i[o] = n * e[0] + a * e[1] + s * e[2] + r * e[3],
                        i[o + 4] = n * e[4] + a * e[5] + s * e[6] + r * e[7],
                        i[o + 8] = n * e[8] + a * e[9] + s * e[10] + r * e[11],
                        i[o + 12] = n * e[12] + a * e[13] + s * e[14] + r * e[15];
                else
                    h.copyArray(t, i);
            else
                h.copyArray(e, i);
        }
        ,
        h.copyArray = function(t, e) {
            if (t && e)
                for (var i = 0; i < t.length; i++)
                    e[i] = t[i];
        }
        ;
    }(),
    function() {
        function e(t, e, i) {
            this._stride = 0,
            this.vertNum = 0,
            this.indexNum = 0,
            this._applied = !1,
            this._vb = null,
            this._ib = null,
            this._vao = null,
            this._attribInfo = null,
            this._quadNum = 0,
            this.canReuse = !1,
            this._stride = t,
            this._vb = new Zt(t,35048),
            e && this._vb._resizeBuffer(e, !1),
            this._ib = new Jt(),
            i && this._ib._resizeBuffer(i, !1);
        }
        d(e, "laya.webgl.utils.Mesh2D");
        var t = e.prototype;
        return t.cloneWithNewVB = function() {
            var t = new e(this._stride,0,0);
            return t._ib = this._ib,
            t._quadNum = this._quadNum,
            t._attribInfo = this._attribInfo,
            t;
        }
        ,
        t.cloneWithNewVBIB = function() {
            var t = new e(this._stride,0,0);
            return t._attribInfo = this._attribInfo,
            t;
        }
        ,
        t.getVBW = function() {
            return this._vb.setNeedUpload(),
            this._vb;
        }
        ,
        t.getVBR = function() {
            return this._vb;
        }
        ,
        t.getIBR = function() {
            return this._ib;
        }
        ,
        t.getIBW = function() {
            return this._ib.setNeedUpload(),
            this._ib;
        }
        ,
        t.createQuadIB = function(t) {
            this._quadNum = t,
            this._ib._resizeBuffer(6 * t * 2, !1),
            this._ib.byteLength = this._ib.bufferLength;
            for (var e = this._ib.getUint16Array(), i = 0, n = 0, a = 0; a < t; a++)
                e[i++] = n,
                e[i++] = n + 2,
                e[i++] = n + 1,
                e[i++] = n,
                e[i++] = n + 3,
                e[i++] = n + 2,
                n += 4;
            this._ib.setNeedUpload();
        }
        ,
        t.setAttributes = function(t) {
            if (this._attribInfo = t,
            this._attribInfo.length % 3 != 0)
                throw "Mesh2D setAttributes error!";
        }
        ,
        t.getEleNum = function() {
            return this._ib.getBuffer().byteLength / 2;
        }
        ,
        t.releaseMesh = function() {}
        ,
        t.destroy = function() {}
        ,
        t.clearVB = function() {
            this._vb.clear();
        }
        ,
        e._gvaoid = 0,
        e;
    }())
      , yt = function() {
        function a() {}
        return d(a, "laya.webgl.utils.RenderState2D"),
        a.getMatrArray = function() {
            return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
        }
        ,
        a.mat2MatArray = function(t, e) {
            var i = t
              , n = e;
            return n[0] = i.a,
            n[1] = i.b,
            n[2] = a.EMPTYMAT4_ARRAY[2],
            n[3] = a.EMPTYMAT4_ARRAY[3],
            n[4] = i.c,
            n[5] = i.d,
            n[6] = a.EMPTYMAT4_ARRAY[6],
            n[7] = a.EMPTYMAT4_ARRAY[7],
            n[8] = a.EMPTYMAT4_ARRAY[8],
            n[9] = a.EMPTYMAT4_ARRAY[9],
            n[10] = a.EMPTYMAT4_ARRAY[10],
            n[11] = a.EMPTYMAT4_ARRAY[11],
            n[12] = i.tx,
            n[13] = i.ty,
            n[14] = a.EMPTYMAT4_ARRAY[14],
            n[15] = a.EMPTYMAT4_ARRAY[15],
            e;
        }
        ,
        a.restoreTempArray = function() {
            a.TEMPMAT4_ARRAY[0] = 1,
            a.TEMPMAT4_ARRAY[1] = 0,
            a.TEMPMAT4_ARRAY[4] = 0,
            a.TEMPMAT4_ARRAY[5] = 1,
            a.TEMPMAT4_ARRAY[12] = 0,
            a.TEMPMAT4_ARRAY[13] = 0;
        }
        ,
        a.clear = function() {
            a.worldScissorTest = !1,
            a.worldShaderDefines = null,
            a.worldFilters = null,
            a.worldAlpha = 1,
            a.worldClipRect.x = a.worldClipRect.y = 0,
            a.worldClipRect.width = a.width,
            a.worldClipRect.height = a.height,
            a.curRenderTarget = null;
        }
        ,
        a._MAXSIZE = 99999999,
        a.EMPTYMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        a.worldMatrix4 = a.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        a.worldAlpha = 1,
        a.worldScissorTest = !1,
        a.worldFilters = null,
        a.worldShaderDefines = null,
        a.curRenderTarget = null,
        a.width = 0,
        a.height = 0,
        r(a, ["worldMatrix", function() {
            return this.worldMatrix = new I();
        }
        , "worldClipRect", function() {
            return this.worldClipRect = new C(0,0,99999999,99999999);
        }
        ]),
        a;
    }()
      , vt = function() {
        var y, i;
        function v(t, e, i, n, a) {
            var s = this;
            function r(t) {
                var e = []
                  , i = new y(e);
                return s._compileToTree(i, t.split("\n"), 0, e, a),
                i;
            }
            var o = _.now();
            this._VS = r(e),
            this._PS = r(i),
            this._nameMap = n,
            2 < _.now() - o && console.log("ShaderCompile use time:" + (_.now() - o) + "  size:" + e.length + "/" + i.length);
        }
        d(v, "laya.webgl.utils.ShaderCompile");
        var t = v.prototype;
        return t._compileToTree = function(t, e, i, n, a) {
            var s, r, o, h, l, u, c, d = 0, _ = 0, p = 0, f = 0;
            for (_ = i; _ < e.length; _++)
                if (!((o = e[_]).length < 1) && 0 !== (d = o.indexOf("//"))) {
                    if (0 <= d && (o = o.substr(0, d)),
                    s = c || new y(n),
                    c = null,
                    s.text = o,
                    s.noCompile = !0,
                    0 <= (d = o.indexOf("#"))) {
                        for (h = "#",
                        f = d + 1,
                        p = o.length; f < p; f++) {
                            var g = o.charAt(f);
                            if (" " === g || "\t" === g || "?" === g)
                                break;
                            h += g;
                        }
                        switch (s.name = h) {
                        case "#ifdef":
                        case "#ifndef":
                            if (s.src = o,
                            s.noCompile = null != o.match(/[!&|()=<>]/),
                            s.noCompile ? console.log("function():Boolean{return " + o.substr(d + s.name.length) + "}") : (u = o.replace(/^\s*/, "").split(/\s+/),
                            s.setCondition(u[1], "#ifdef" === h ? 1 : 2),
                            s.text = "//" + s.text),
                            s.setParent(t),
                            t = s,
                            a)
                                for (u = o.substr(f).split(v._splitToWordExps3),
                                f = 0; f < u.length; f++)
                                    (o = u[f]).length && (a[o] = !0);
                            continue;

                        case "#if":
                            if (s.src = o,
                            s.noCompile = !0,
                            s.setParent(t),
                            t = s,
                            a)
                                for (u = o.substr(f).split(v._splitToWordExps3),
                                f = 0; f < u.length; f++)
                                    (o = u[f]).length && "defined" != o && (a[o] = !0);
                            continue;

                        case "#else":
                            s.src = o,
                            r = (t = t.parent).childs[t.childs.length - 1],
                            s.noCompile = r.noCompile,
                            s.noCompile || (s.condition = r.condition,
                            s.conditionType = 1 == r.conditionType ? 2 : 1,
                            s.text = "//" + s.text + " " + r.text + " " + s.conditionType),
                            s.setParent(t),
                            t = s;
                            continue;

                        case "#endif":
                            r = (t = t.parent).childs[t.childs.length - 1],
                            s.noCompile = r.noCompile,
                            s.noCompile || (s.text = "//" + s.text),
                            s.setParent(t);
                            continue;

                        case "#include":
                            u = v.splitToWords(o, null);
                            var m = v.includes[u[1]];
                            if (!m)
                                throw "ShaderCompile error no this include file:" + u[1];
                            if ((d = u[0].indexOf("?")) < 0) {
                                s.setParent(t),
                                o = m.getWith("with" == u[2] ? u[3] : null),
                                this._compileToTree(s, o.split("\n"), 0, n, a),
                                s.text = "";
                                continue;
                            }
                            s.setCondition(u[0].substr(d + 1), 1),
                            s.text = m.getWith("with" == u[2] ? u[3] : null);
                            break;

                        case "#import":
                            l = (u = v.splitToWords(o, null))[1],
                            n.push({
                                node: s,
                                file: v.includes[l],
                                ofs: s.text.length
                            });
                            continue;
                        }
                    } else {
                        if ((r = t.childs[t.childs.length - 1]) && !r.name) {
                            0 < n.length && v.splitToWords(o, r),
                            c = s,
                            r.text += "\n" + o;
                            continue;
                        }
                        0 < n.length && v.splitToWords(o, s);
                    }
                    s.setParent(t);
                }
        }
        ,
        t.createShader = function(t, e, i) {
            var n = {}
              , a = "";
            if (t)
                for (var s in t)
                    a += "#define " + s + "\n",
                    n[s] = !0;
            var r = this._VS.toscript(n, [])
              , o = this._PS.toscript(n, []);
            return (i || jt.create)(a + r.join("\n"), a + o.join("\n"), e, this._nameMap);
        }
        ,
        v._parseOne = function(t, e, i, n, a, s) {
            var r = {
                type: v.shaderParamsMap[i[n + 1]],
                name: i[n + 2],
                size: isNaN(parseInt(i[n + 3])) ? 1 : parseInt(i[n + 3])
            };
            return s && ("attribute" == a ? t.push(r) : e.push(r)),
            ":" == i[n + 3] && (r.type = i[n + 4],
            n += 2),
            n += 2;
        }
        ,
        v.addInclude = function(t, e) {
            if (!e || 0 === e.length)
                throw new Error("add shader include file err:" + t);
            if (v.includes[t])
                throw new Error("add shader include file err, has add:" + t);
            v.includes[t] = new i(e);
        }
        ,
        v.preGetParams = function(t, e) {
            var i = [t, e]
              , n = {}
              , a = []
              , s = []
              , r = {}
              , o = [];
            n.attributes = a,
            n.uniforms = s,
            n.defines = r;
            for (var h = 0, l = 0, u = 0; u < 2; u++) {
                i[u] = i[u].replace(v._removeAnnotation, "");
                var c, d = i[u].match(v._reg);
                for (h = 0,
                l = d.length; h < l; h++) {
                    var _ = d[h];
                    if ("attribute" == _ || "uniform" == _)
                        h = v._parseOne(a, s, d, h, _, !0);
                    else {
                        if ("#define" == _) {
                            o[_ = d[++h]] = 1;
                            continue;
                        }
                        if ("#ifdef" == _) {
                            r[c = d[++h]] = r[c] || [];
                            for (h++; h < l; h++)
                                if ("attribute" == (_ = d[h]) || "uniform" == _)
                                    h = v._parseOne(a, s, d, h, _, o[c]);
                                else if ("#else" == _)
                                    for (h++; h < l; h++)
                                        if ("attribute" == (_ = d[h]) || "uniform" == _)
                                            h = v._parseOne(a, s, d, h, _, !o[c]);
                                        else if ("#endif" == _)
                                            break;
                        }
                    }
                }
            }
            return n;
        }
        ,
        v.splitToWords = function(t, e) {
            for (var i, n, a = [], s = -1, r = 0, o = t.length; r < o; r++)
                if (i = t.charAt(r),
                0 <= " \t=+-*/&%!<>()'\",;".indexOf(i)) {
                    if (0 <= s && 1 < r - s && (n = t.substr(s, r - s),
                    a.push(n)),
                    '"' == i || "'" == i) {
                        var h = t.indexOf(i, r + 1);
                        if (h < 0)
                            throw "Sharder err:" + t;
                        a.push(t.substr(r + 1, h - r - 1)),
                        r = h,
                        s = -1;
                        continue;
                    }
                    "(" == i && e && 0 < a.length && (n = a[a.length - 1] + ";",
                    "vec4;main;".indexOf(n) < 0 && (e.useFuns += n)),
                    s = -1;
                } else
                    s < 0 && (s = r);
            return s < o && 1 < o - s && (n = t.substr(s, o - s),
            a.push(n)),
            a;
        }
        ,
        v.IFDEF_NO = 0,
        v.IFDEF_YES = 1,
        v.IFDEF_ELSE = 2,
        v.IFDEF_PARENT = 3,
        v._removeAnnotation = new RegExp("(/\\*([^*]|[\\r\\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+/)|(//.*)","g"),
        v._reg = new RegExp("(\".*\")|('.*')|([#\\w\\*-\\.+/()=<>{}\\\\]+)|([,;:\\\\])","g"),
        v._splitToWordExps = new RegExp("[(\".*\")]+|[('.*')]+|([ \\t=\\+\\-*/&%!<>!%(),;])","g"),
        v.includes = {},
        r(v, ["shaderParamsMap", function() {
            return this.shaderParamsMap = {
                float: 5126,
                int: 5124,
                bool: 35670,
                vec2: 35664,
                vec3: 35665,
                vec4: 35666,
                ivec2: 35667,
                ivec3: 35668,
                ivec4: 35669,
                bvec2: 35671,
                bvec3: 35672,
                bvec4: 35673,
                mat2: 35674,
                mat3: 35675,
                mat4: 35676,
                sampler2D: 35678,
                samplerCube: 35680
            };
        }
        , "_splitToWordExps3", function() {
            return this._splitToWordExps3 = new RegExp("[ \\t=\\+\\-*/&%!<>!%(),;\\|]","g");
        }
        ]),
        v.__init$ = function() {
            y = function() {
                function i(t) {
                    this.childs = [],
                    this.text = "",
                    this.parent = null,
                    this.name = null,
                    this.noCompile = !1,
                    this.includefiles = null,
                    this.condition = null,
                    this.conditionType = 0,
                    this.useFuns = "",
                    this.z = 0,
                    this.src = null,
                    this.includefiles = t;
                }
                d(i, "");
                var t = i.prototype;
                return t.setParent = function(t) {
                    t.childs.push(this),
                    this.z = t.z + 1,
                    this.parent = t;
                }
                ,
                t.setCondition = function(t, e) {
                    t && (this.conditionType = e,
                    t = t.replace(/(\s*$)/g, ""),
                    this.condition = function() {
                        return this[t];
                    }
                    ,
                    this.condition.__condition = t);
                }
                ,
                t.toscript = function(t, e) {
                    return this._toscript(t, e, ++i.__id);
                }
                ,
                t._toscript = function(n, a, s) {
                    if (this.childs.length < 1 && !this.text)
                        return a;
                    a.length;
                    if (this.condition) {
                        var t = !!this.condition.call(n);
                        if (2 === this.conditionType && (t = !t),
                        !t)
                            return a;
                    }
                    if (this.text && a.push(this.text),
                    0 < this.childs.length && this.childs.forEach(function(t, e, i) {
                        t._toscript(n, a, s);
                    }),
                    0 < this.includefiles.length && 0 < this.useFuns.length)
                        for (var e, i = 0, r = this.includefiles.length; i < r; i++)
                            this.includefiles[i].curUseID != s && 0 < (e = this.includefiles[i].file.getFunsScript(this.useFuns)).length && (this.includefiles[i].curUseID = s,
                            a[0] = e + a[0]);
                    return a;
                }
                ,
                i.__id = 1,
                i;
            }(),
            i = function() {
                function t(t) {
                    this.script = null,
                    this.codes = {},
                    this.funs = {},
                    this.curUseID = -1,
                    this.funnames = "",
                    this.script = t;
                    for (var e = 0, i = 0, n = 0; !((e = t.indexOf("#begin", e)) < 0); ) {
                        for (n = e + 5; !((n = t.indexOf("#end", n)) < 0) && "i" === t.charAt(n + 4); )
                            n += 5;
                        if (n < 0)
                            throw "add include err,no #end:" + t;
                        i = t.indexOf("\n", e);
                        var a = v.splitToWords(t.substr(e, i - e), null);
                        "code" == a[1] ? this.codes[a[2]] = t.substr(i + 1, n - i - 1) : "function" == a[1] && (i = t.indexOf("function", e),
                        i += "function".length,
                        this.funs[a[3]] = t.substr(i + 1, n - i - 1),
                        this.funnames += a[3] + ";"),
                        e = n + 1;
                    }
                }
                d(t, "");
                var e = t.prototype;
                return e.getWith = function(t) {
                    var e = t ? this.codes[t] : this.script;
                    if (!e)
                        throw "get with error:" + t;
                    return e;
                }
                ,
                e.getFunsScript = function(t) {
                    var e = "";
                    for (var i in this.funs)
                        0 <= t.indexOf(i + ";") && (e += this.funs[i]);
                    return e;
                }
                ,
                t;
            }();
        }
        ,
        v;
    }()
      , St = function() {
        function r() {}
        return d(r, "laya.webgl.WebGL"),
        r._uint8ArraySlice = function() {
            for (var t = this.length, e = new Uint8Array(this.length), i = 0; i < t; i++)
                e[i] = this[i];
            return e;
        }
        ,
        r._float32ArraySlice = function() {
            for (var t = this.length, e = new Float32Array(this.length), i = 0; i < t; i++)
                e[i] = this[i];
            return e;
        }
        ,
        r._uint16ArraySlice = function(t) {
            var e, i = arguments, n = 0, a = 0;
            if (0 === i.length)
                for (n = this.length,
                e = new Uint16Array(n),
                a = 0; a < n; a++)
                    e[a] = this[a];
            else if (2 === i.length) {
                var s = i[0]
                  , r = i[1];
                if (s < r)
                    for (n = r - s,
                    e = new Uint16Array(n),
                    a = s; a < r; a++)
                        e[a - s] = this[a];
                else
                    e = new Uint16Array(0);
            }
            return e;
        }
        ,
        r.expandContext = function() {
            var t = a.prototype
              , e = CanvasRenderingContext2D.prototype;
            e.fillTrangles = t.fillTrangles,
            $t.__int__(null),
            e.setIBVB = function(t, e, i, n, a, s, r, o, h, l) {
                void 0 === h && (h = 0),
                void 0 === l && (l = 0),
                null === i && (this._ib = this._ib || Jt.QuadrangleIB,
                i = this._ib,
                gt.expandIBQuadrangle(i, n._byteLength / 64 + 8)),
                this._setIBVB(t, e, i, n, a, s, r, o, h, l);
            }
            ,
            e.fillTrangles = function(t, e, i, n, a) {
                this._curMat = this._curMat || I.create(),
                this._vb = this._vb || Zt.create(),
                this._ib || (this._ib = Jt.create(),
                gt.fillIBQuadrangle(this._ib, r / 4));
                var s = this._vb
                  , r = n.length >> 4;
                gt.fillTranglesVB(s, e, i, n, a || this._curMat, 0, 0),
                gt.expandIBQuadrangle(this._ib, s._byteLength / 64 + 8);
                var o = new Mt(1,0);
                o.textureHost = t;
                var h = new Qt("attribute vec2 position; attribute vec2 texcoord; uniform vec2 size; uniform mat4 mmat; varying vec2 v_texcoord; void main() { vec4 p=vec4(position.xy,0.0,1.0);vec4 pos=mmat*p; gl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0); v_texcoord = texcoord; }","precision mediump float; varying vec2 v_texcoord; uniform sampler2D texture; void main() {vec4 color= texture2D(texture, v_texcoord); color.a*=1.0; gl_FragColor= color;}");
                s._vertType = 3,
                this._setIBVB(e, i, this._ib, s, 6 * r, a, h, o, 0, 0);
            }
            ;
        }
        ,
        r.enable = function() {
            if (_.__init__(),
            m.isConchApp && !m.isConchWebGL)
                return x.skinAniSprite = function() {
                    return new tt();
                }
                ,
                r.expandContext(),
                !1;
            if (x.getWebGLContext = function(t) {
                for (var e, i = ["webgl", "experimental-webgl", "webkit-3d", "moz-webgl"], n = 0; n < i.length; n++) {
                    try {
                        e = t.getContext(i[n], {
                            stencil: w.isStencil,
                            alpha: w.isAlpha,
                            antialias: w.isAntialias,
                            premultipliedAlpha: w.premultipliedAlpha,
                            preserveDrawingBuffer: w.preserveDrawingBuffer
                        });
                    } catch (t) {}
                    if (e)
                        return e;
                }
                return null;
            }
            ,
            null == (r.mainContext = x.getWebGLContext(m._mainCanvas)))
                return !1;
            if (m.isWebGL)
                return !0;
            f.create = function(t, e) {
                return new te(t,e);
            }
            ,
            g.create = function(t, e, i, n, a, s, r) {
                return new Kt(t,e,i,n,a,s,r);
            }
            ,
            m.WebGL = r,
            m.isWebGL = !0,
            _t.__init__(),
            x.createRenderSprite = function(t, e) {
                return new It(t,e);
            }
            ,
            x.createWebGLContext2D = function(t) {
                return new wt(t);
            }
            ,
            x.changeWebGLSize = function(t, e) {
                laya.webgl.WebGL.onStageResize(t, e);
            }
            ,
            x.createGraphics = function() {
                return new bt();
            }
            ;
            var t = x.createFilterAction;
            return x.createFilterAction = t || function(t) {
                return new Tt();
            }
            ,
            x.clear = function(t) {
                yt.worldScissorTest && laya.webgl.WebGL.mainContext.disable(3089);
                var e = m.context.ctx
                  , i = 0 == e._submits._length || w.preserveDrawingBuffer ? p.create(t)._color : P._wgColor;
                i && e.clearBG(i[0], i[1], i[2], i[3]),
                yt.clear();
            }
            ,
            x.addToAtlas = function(t, e) {
                void 0 === e && (e = !1);
                var i = t.bitmap;
                m.optimizeTextureMemory(t.url, t) ? b.__typeof(i, "laya.webgl.resource.IMergeAtlasBitmap") && i.allowMerageInAtlas && i.on("recovered", t, t.addTextureToAtlas) : i.enableMerageInAtlas = !1;
            }
            ,
            x.isAtlas = function(t) {
                return t instanceof laya.webgl.atlas.AtlasWebGLCanvas;
            }
            ,
            U._enable(),
            x.beginFlush = function() {
                for (var t = U.instance, e = t.getAtlaserCount(), i = 0; i < e; i++) {
                    var n = t.getAtlaserByIndex(i).texture;
                    n._flashCacheImageNeedFlush && x.flashFlushImage(n);
                }
            }
            ,
            x.drawToCanvas = function(t, e, i, n, a, s) {
                (i <= 0 || n <= 0) && console.log("[error] canvasWidth and canvasHeight should greater than zero"),
                i |= 0,
                n |= 0,
                a |= 0,
                s |= 0;
                var r = Ot.create(i, n, 6408, 5121, 0, !1);
                r.start(),
                r.clear(0, 0, 0, 0),
                m.context.clear(),
                y.renders[e]._fun(t, m.context, a, yt.height - n + s),
                m.context.flush(),
                r.end();
                var o = r.getData(0, 0, i, n);
                if (r.recycle(),
                o.byteLength == i * n * 4) {
                    var h = new Xt();
                    h._canvas = _.createElement("canvas"),
                    h.size(i, n);
                    var l = h._canvas.getContext("2d");
                    _.canvas.size(i, n);
                    var u = _.context
                      , c = u.createImageData(i, n);
                    return c.data.set(new Uint8ClampedArray(o.buffer)),
                    h._imgData = c,
                    u.putImageData(c, 0, 0),
                    l.save(),
                    l.translate(0, n),
                    l.scale(1, -1),
                    l.drawImage(_.canvas.source, 0, 0),
                    l.restore(),
                    h;
                }
                console.log("drawToCanvas error: w:" + i + ",h:" + n + ",datalen:" + o.byteLength);
            }
            ,
            x.createFilterAction = function(t) {
                var e;
                switch (t) {
                case 32:
                    e = new Tt();
                }
                return e;
            }
            ,
            x.addTextureToAtlas = function(t) {
                t._uvID++,
                U._atlasRestore++,
                t.bitmap.enableMerageInAtlas && U.instance.addToAtlas(t);
            }
            ,
            x.getTexturePixels = function(t, e, i, n, a) {
                m.context.ctx.clear();
                var s = new E();
                s.graphics.drawTexture(t, -e, -i);
                var r = Ot.create(n, a);
                r.start(),
                r.clear(0, 0, 0, 0),
                s.render(m.context, 0, 0),
                m.context.ctx.flush(),
                r.end();
                for (var o = r.getData(0, 0, n, a), h = [], l = 0, u = a - 1; 0 <= u; u--)
                    for (var c = 0; c < n; c++)
                        l = 4 * (u * n + c),
                        h.push(o[l]),
                        h.push(o[l + 1]),
                        h.push(o[l + 2]),
                        h.push(o[l + 3]);
                return h;
            }
            ,
            x.skinAniSprite = function() {
                return new tt();
            }
            ,
            c.create = function(t, e) {
                var i = new Xt();
                return i._imgData = e,
                i.flipY = !1,
                i;
            }
            ,
            M._filterStart = function(t, e, i, n, a) {
                var s = t.getValue("bounds")
                  , r = Ot.create(s.width, s.height);
                if (r.start(),
                r.clear(0, 0, 0, 0),
                t.addValue("src", r),
                t.addValue("ScissorTest", yt.worldScissorTest),
                yt.worldScissorTest) {
                    var o = new C();
                    o.copyFrom(i.ctx._clipRect),
                    t.addValue("clipRect", o),
                    yt.worldScissorTest = !1,
                    laya.webgl.WebGL.mainContext.disable(3089);
                }
            }
            ,
            M._filterEnd = function(t, e, i, n, a) {
                var s = t.getValue("bounds");
                t.getValue("src").end();
                var r = Ot.create(s.width, s.height);
                r.start(),
                r.clear(0, 0, 0, 0),
                t.addValue("out", r),
                e._set$P("_filterCache", r),
                e._set$P("_isHaveGlowFilter", t.getValue("_isHaveGlowFilter"));
            }
            ,
            M._EndTarget = function(t, e) {
                if (t.getValue("src").recycle(),
                t.getValue("out").end(),
                t.getValue("ScissorTest")) {
                    yt.worldScissorTest = !0,
                    laya.webgl.WebGL.mainContext.enable(3089),
                    e.ctx.save();
                    var i = t.getValue("clipRect");
                    e.ctx.clipRect(i.x, i.y, i.width, i.height);
                }
            }
            ,
            M._useSrc = function(t) {
                var e = t.getValue("out");
                e.end(),
                (e = t.getValue("src")).start(),
                e.clear(0, 0, 0, 0);
            }
            ,
            M._endSrc = function(t) {
                t.getValue("src").end();
            }
            ,
            M._useOut = function(t) {
                var e = t.getValue("src");
                e.end(),
                (e = t.getValue("out")).start(),
                e.clear(0, 0, 0, 0);
            }
            ,
            M._endOut = function(t) {
                t.getValue("out").end();
            }
            ,
            M._recycleScope = function(t) {
                t.recycle();
            }
            ,
            M._filter = function(t, e, i, n) {
                var a = this._next;
                if (a) {
                    var s, r, o = t.filters, h = o.length;
                    if (1 == h && 32 == o[0].type)
                        return e.ctx.save(),
                        e.ctx.setFilters([o[0]]),
                        a._fun.call(a, t, e, i, n),
                        void e.ctx.restore();
                    var l = ot.create()
                      , u = T.TEMP
                      , c = e.ctx._getTransformMatrix()
                      , d = I.create();
                    c.copyTo(d);
                    var _ = 0
                      , p = 0
                      , f = !1
                      , g = t._$P._filterCache ? t._$P._filterCache : null;
                    if (!g || t._repaint) {
                        f = t._isHaveGlowFilter(),
                        l.addValue("_isHaveGlowFilter", f),
                        f && (_ = 50,
                        p = 25),
                        (r = new C()).copyFrom(t.getSelfBounds()),
                        r.x += t.x,
                        r.y += t.y,
                        r.x -= t.pivotX + 4,
                        r.y -= t.pivotY + 4;
                        var m = r.x
                          , y = r.y;
                        if (r.width += _ + 8,
                        r.height += _ + 8,
                        u.x = r.x * d.a + r.y * d.c,
                        u.y = r.y * d.d + r.x * d.b,
                        r.x = u.x,
                        r.y = u.y,
                        u.x = r.width * d.a + r.height * d.c,
                        u.y = r.height * d.d + r.width * d.b,
                        r.width = u.x,
                        r.height = u.y,
                        r.width <= 0 || r.height <= 0)
                            return;
                        g && g.recycle(),
                        l.addValue("bounds", r);
                        var v = rt.create([l, t, e, 0, 0], M._filterStart);
                        e.addRenderObject(v),
                        e.ctx._renderKey = 0,
                        e.ctx._shader2D.glTexture = null;
                        var S = t.x - m + p
                          , x = t.y - y + p;
                        a._fun.call(a, t, e, S, x),
                        v = rt.create([l, t, e, 0, 0], M._filterEnd),
                        e.addRenderObject(v);
                        for (var b = 0; b < h; b++) {
                            0 != b && (v = rt.create([l], M._useSrc),
                            e.addRenderObject(v),
                            s = Mt.create(1, 0),
                            I.TEMP.identity(),
                            e.ctx.drawTarget(l, 0, 0, r.width, r.height, I.TEMP, "out", s, null, V.TOINT.overlay),
                            v = rt.create([l], M._useOut),
                            e.addRenderObject(v)),
                            o[b].action.apply3d(l, t, e, 0, 0);
                        }
                        v = rt.create([l, e], M._EndTarget),
                        e.addRenderObject(v);
                    } else {
                        if ((f = !!t._$P._isHaveGlowFilter && t._$P._isHaveGlowFilter) && (_ = 50,
                        p = 25),
                        (r = t.getBounds()).width <= 0 || r.height <= 0)
                            return;
                        r.width += _,
                        r.height += _,
                        u.x = r.x * d.a + r.y * d.c,
                        u.y = r.y * d.d + r.x * d.b,
                        r.x = u.x,
                        r.y = u.y,
                        u.x = r.width * d.a + r.height * d.c,
                        u.y = r.height * d.d + r.width * d.b,
                        r.width = u.x,
                        r.height = u.y,
                        l.addValue("out", g);
                    }
                    i = i - p - t.x,
                    n = n - p - t.y,
                    u.setTo(i, n),
                    d.transformPoint(u),
                    i = u.x + r.x,
                    n = u.y + r.y,
                    s = Mt.create(1, 0),
                    I.TEMP.identity(),
                    e.ctx.drawTarget(l, i, n, r.width, r.height, I.TEMP, "out", s, null, V.TOINT.overlay),
                    v = rt.create([l], M._recycleScope),
                    e.addRenderObject(v),
                    d.destroy();
                }
            }
            ,
            Float32Array.prototype.slice || (Float32Array.prototype.slice = r._float32ArraySlice),
            Uint16Array.prototype.slice || (Uint16Array.prototype.slice = r._uint16ArraySlice),
            Uint8Array.prototype.slice || (Uint8Array.prototype.slice = r._uint8ArraySlice),
            !0;
        }
        ,
        r.onStageResize = function(t, e) {
            null != r.mainContext && (r.mainContext.viewport(0, 0, t, e),
            yt.width = t,
            yt.height = e);
        }
        ,
        r.onInvalidGLRes = function() {
            U.instance.freeAll(),
            S.releaseContentManagers(!0),
            r.doNodeRepaint(b.stage),
            r.mainContext.viewport(0, 0, yt.width, yt.height),
            b.stage.event("devicelost");
        }
        ,
        r.doNodeRepaint = function(t) {
            0 == t.numChildren && t.repaint();
            for (var e = 0; e < t.numChildren; e++)
                r.doNodeRepaint(t.getChildAt(e));
        }
        ,
        r.init = function(t, e, i) {
            r.mainCanvas = t,
            c._createContext = function(t) {
                return new wt(t);
            }
            ,
            Xt._createContext = function(t) {
                return new wt(t);
            }
            ;
            var n = laya.webgl.WebGL.mainContext;
            if (null != n.getShaderPrecisionFormat) {
                var a = n.getShaderPrecisionFormat(35633, 36338)
                  , s = n.getShaderPrecisionFormat(35632, 36338);
                r.shaderHighPrecision = !(!a.precision || !s.precision);
            } else
                r.shaderHighPrecision = !1;
            if (r.compressAstc = n.getExtension("WEBGL_compressed_texture_astc"),
            r.compressAtc = n.getExtension("WEBGL_compressed_texture_atc"),
            r.compressEtc = n.getExtension("WEBGL_compressed_texture_etc"),
            r.compressEtc1 = n.getExtension("WEBGL_compressed_texture_etc1"),
            r.compressPvrtc = n.getExtension("WEBGL_compressed_texture_pvrtc"),
            r.compressS3tc = n.getExtension("WEBGL_compressed_texture_s3tc"),
            r.compressS3tc_srgb = n.getExtension("WEBGL_compressed_texture_s3tc_srgb"),
            n.deleteTexture1 = n.deleteTexture,
            n.deleteTexture = function(t) {
                t == xt.curBindTexValue && (xt.curBindTexValue = null),
                n.deleteTexture1(t);
            }
            ,
            r.onStageResize(e, i),
            null == r.mainContext)
                throw new Error("webGL getContext err!");
            D.__init__(),
            U.__init__(),
            Et.__init__(),
            st.__init__(),
            wt.__init__(),
            Mt.__init__(),
            J.__init__(),
            $t.__int__(n),
            V._init_(n),
            m.isConchApp && conch.setOnInvalidGLRes(r.onInvalidGLRes);
        }
        ,
        r.compressAstc = null,
        r.compressAtc = null,
        r.compressEtc = null,
        r.compressEtc1 = null,
        r.compressPvrtc = null,
        r.compressS3tc = null,
        r.compressS3tc_srgb = null,
        r.mainCanvas = null,
        r.mainContext = null,
        r.antialias = !0,
        r.shaderHighPrecision = !1,
        r._bg_null = [0, 0, 0, 0],
        r;
    }()
      , xt = function() {
        function n() {}
        return d(n, "laya.webgl.WebGLContext"),
        n.UseProgram = function(t) {
            return n._useProgram !== t && (St.mainContext.useProgram(t),
            n._useProgram = t,
            !0);
        }
        ,
        n.setDepthTest = function(t, e) {
            e !== n._depthTest && ((n._depthTest = e) ? t.enable(2929) : t.disable(2929));
        }
        ,
        n.setDepthMask = function(t, e) {
            e !== n._depthMask && (n._depthMask = e,
            t.depthMask(e));
        }
        ,
        n.setDepthFunc = function(t, e) {
            e !== n._depthFunc && (n._depthFunc = e,
            t.depthFunc(e));
        }
        ,
        n.setBlend = function(t, e) {
            e !== n._blend && ((n._blend = e) ? t.enable(3042) : t.disable(3042));
        }
        ,
        n.setBlendFunc = function(t, e, i) {
            (e !== n._sFactor || i !== n._dFactor) && (n._sFactor = e,
            n._dFactor = i,
            t.blendFunc(e, i));
        }
        ,
        n.setCullFace = function(t, e) {
            e !== n._cullFace && ((n._cullFace = e) ? t.enable(2884) : t.disable(2884));
        }
        ,
        n.setFrontFace = function(t, e) {
            e !== n._frontFace && (n._frontFace = e,
            t.frontFace(e));
        }
        ,
        n.bindTexture = function(t, e, i) {
            t.bindTexture(e, i),
            n.curBindTexTarget = e,
            n.curBindTexValue = i;
        }
        ,
        n.DEPTH_BUFFER_BIT = 256,
        n.STENCIL_BUFFER_BIT = 1024,
        n.COLOR_BUFFER_BIT = 16384,
        n.POINTS = 0,
        n.LINES = 1,
        n.LINE_LOOP = 2,
        n.LINE_STRIP = 3,
        n.TRIANGLES = 4,
        n.TRIANGLE_STRIP = 5,
        n.TRIANGLE_FAN = 6,
        n.ZERO = 0,
        n.ONE = 1,
        n.SRC_COLOR = 768,
        n.ONE_MINUS_SRC_COLOR = 769,
        n.SRC_ALPHA = 770,
        n.ONE_MINUS_SRC_ALPHA = 771,
        n.DST_ALPHA = 772,
        n.ONE_MINUS_DST_ALPHA = 773,
        n.DST_COLOR = 774,
        n.ONE_MINUS_DST_COLOR = 775,
        n.SRC_ALPHA_SATURATE = 776,
        n.FUNC_ADD = 32774,
        n.BLEND_EQUATION = 32777,
        n.BLEND_EQUATION_RGB = 32777,
        n.BLEND_EQUATION_ALPHA = 34877,
        n.FUNC_SUBTRACT = 32778,
        n.FUNC_REVERSE_SUBTRACT = 32779,
        n.BLEND_DST_RGB = 32968,
        n.BLEND_SRC_RGB = 32969,
        n.BLEND_DST_ALPHA = 32970,
        n.BLEND_SRC_ALPHA = 32971,
        n.CONSTANT_COLOR = 32769,
        n.ONE_MINUS_CONSTANT_COLOR = 32770,
        n.CONSTANT_ALPHA = 32771,
        n.ONE_MINUS_CONSTANT_ALPHA = 32772,
        n.BLEND_COLOR = 32773,
        n.ARRAY_BUFFER = 34962,
        n.ELEMENT_ARRAY_BUFFER = 34963,
        n.ARRAY_BUFFER_BINDING = 34964,
        n.ELEMENT_ARRAY_BUFFER_BINDING = 34965,
        n.STREAM_DRAW = 35040,
        n.STATIC_DRAW = 35044,
        n.DYNAMIC_DRAW = 35048,
        n.BUFFER_SIZE = 34660,
        n.BUFFER_USAGE = 34661,
        n.CURRENT_VERTEX_ATTRIB = 34342,
        n.FRONT = 1028,
        n.BACK = 1029,
        n.CULL_FACE = 2884,
        n.FRONT_AND_BACK = 1032,
        n.BLEND = 3042,
        n.DITHER = 3024,
        n.STENCIL_TEST = 2960,
        n.DEPTH_TEST = 2929,
        n.SCISSOR_TEST = 3089,
        n.POLYGON_OFFSET_FILL = 32823,
        n.SAMPLE_ALPHA_TO_COVERAGE = 32926,
        n.SAMPLE_COVERAGE = 32928,
        n.NO_ERROR = 0,
        n.INVALID_ENUM = 1280,
        n.INVALID_VALUE = 1281,
        n.INVALID_OPERATION = 1282,
        n.OUT_OF_MEMORY = 1285,
        n.CW = 2304,
        n.CCW = 2305,
        n.LINE_WIDTH = 2849,
        n.ALIASED_POINT_SIZE_RANGE = 33901,
        n.ALIASED_LINE_WIDTH_RANGE = 33902,
        n.CULL_FACE_MODE = 2885,
        n.FRONT_FACE = 2886,
        n.DEPTH_RANGE = 2928,
        n.DEPTH_WRITEMASK = 2930,
        n.DEPTH_CLEAR_VALUE = 2931,
        n.DEPTH_FUNC = 2932,
        n.STENCIL_CLEAR_VALUE = 2961,
        n.STENCIL_FUNC = 2962,
        n.STENCIL_FAIL = 2964,
        n.STENCIL_PASS_DEPTH_FAIL = 2965,
        n.STENCIL_PASS_DEPTH_PASS = 2966,
        n.STENCIL_REF = 2967,
        n.STENCIL_VALUE_MASK = 2963,
        n.STENCIL_WRITEMASK = 2968,
        n.STENCIL_BACK_FUNC = 34816,
        n.STENCIL_BACK_FAIL = 34817,
        n.STENCIL_BACK_PASS_DEPTH_FAIL = 34818,
        n.STENCIL_BACK_PASS_DEPTH_PASS = 34819,
        n.STENCIL_BACK_REF = 36003,
        n.STENCIL_BACK_VALUE_MASK = 36004,
        n.STENCIL_BACK_WRITEMASK = 36005,
        n.VIEWPORT = 2978,
        n.SCISSOR_BOX = 3088,
        n.COLOR_CLEAR_VALUE = 3106,
        n.COLOR_WRITEMASK = 3107,
        n.UNPACK_ALIGNMENT = 3317,
        n.PACK_ALIGNMENT = 3333,
        n.MAX_TEXTURE_SIZE = 3379,
        n.MAX_VIEWPORT_DIMS = 3386,
        n.SUBPIXEL_BITS = 3408,
        n.RED_BITS = 3410,
        n.GREEN_BITS = 3411,
        n.BLUE_BITS = 3412,
        n.ALPHA_BITS = 3413,
        n.DEPTH_BITS = 3414,
        n.STENCIL_BITS = 3415,
        n.POLYGON_OFFSET_UNITS = 10752,
        n.POLYGON_OFFSET_FACTOR = 32824,
        n.TEXTURE_BINDING_2D = 32873,
        n.SAMPLE_BUFFERS = 32936,
        n.SAMPLES = 32937,
        n.SAMPLE_COVERAGE_VALUE = 32938,
        n.SAMPLE_COVERAGE_INVERT = 32939,
        n.NUM_COMPRESSED_TEXTURE_FORMATS = 34466,
        n.COMPRESSED_TEXTURE_FORMATS = 34467,
        n.DONT_CARE = 4352,
        n.FASTEST = 4353,
        n.NICEST = 4354,
        n.GENERATE_MIPMAP_HINT = 33170,
        n.BYTE = 5120,
        n.UNSIGNED_BYTE = 5121,
        n.SHORT = 5122,
        n.UNSIGNED_SHORT = 5123,
        n.INT = 5124,
        n.UNSIGNED_INT = 5125,
        n.FLOAT = 5126,
        n.DEPTH_COMPONENT = 6402,
        n.ALPHA = 6406,
        n.RGB = 6407,
        n.RGBA = 6408,
        n.LUMINANCE = 6409,
        n.LUMINANCE_ALPHA = 6410,
        n.UNSIGNED_SHORT_4_4_4_4 = 32819,
        n.UNSIGNED_SHORT_5_5_5_1 = 32820,
        n.UNSIGNED_SHORT_5_6_5 = 33635,
        n.FRAGMENT_SHADER = 35632,
        n.VERTEX_SHADER = 35633,
        n.MAX_VERTEX_ATTRIBS = 34921,
        n.MAX_VERTEX_UNIFORM_VECTORS = 36347,
        n.MAX_VARYING_VECTORS = 36348,
        n.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661,
        n.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660,
        n.MAX_TEXTURE_IMAGE_UNITS = 34930,
        n.MAX_FRAGMENT_UNIFORM_VECTORS = 36349,
        n.SHADER_TYPE = 35663,
        n.DELETE_STATUS = 35712,
        n.LINK_STATUS = 35714,
        n.VALIDATE_STATUS = 35715,
        n.ATTACHED_SHADERS = 35717,
        n.ACTIVE_UNIFORMS = 35718,
        n.ACTIVE_ATTRIBUTES = 35721,
        n.SHADING_LANGUAGE_VERSION = 35724,
        n.CURRENT_PROGRAM = 35725,
        n.NEVER = 512,
        n.LESS = 513,
        n.EQUAL = 514,
        n.LEQUAL = 515,
        n.GREATER = 516,
        n.NOTEQUAL = 517,
        n.GEQUAL = 518,
        n.ALWAYS = 519,
        n.KEEP = 7680,
        n.REPLACE = 7681,
        n.INCR = 7682,
        n.DECR = 7683,
        n.INVERT = 5386,
        n.INCR_WRAP = 34055,
        n.DECR_WRAP = 34056,
        n.VENDOR = 7936,
        n.RENDERER = 7937,
        n.VERSION = 7938,
        n.NEAREST = 9728,
        n.LINEAR = 9729,
        n.NEAREST_MIPMAP_NEAREST = 9984,
        n.LINEAR_MIPMAP_NEAREST = 9985,
        n.NEAREST_MIPMAP_LINEAR = 9986,
        n.LINEAR_MIPMAP_LINEAR = 9987,
        n.TEXTURE_MAG_FILTER = 10240,
        n.TEXTURE_MIN_FILTER = 10241,
        n.TEXTURE_WRAP_S = 10242,
        n.TEXTURE_WRAP_T = 10243,
        n.TEXTURE_2D = 3553,
        n.TEXTURE = 5890,
        n.TEXTURE_CUBE_MAP = 34067,
        n.TEXTURE_BINDING_CUBE_MAP = 34068,
        n.TEXTURE_CUBE_MAP_POSITIVE_X = 34069,
        n.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070,
        n.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071,
        n.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072,
        n.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073,
        n.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074,
        n.MAX_CUBE_MAP_TEXTURE_SIZE = 34076,
        n.TEXTURE0 = 33984,
        n.TEXTURE1 = 33985,
        n.TEXTURE2 = 33986,
        n.TEXTURE3 = 33987,
        n.TEXTURE4 = 33988,
        n.TEXTURE5 = 33989,
        n.TEXTURE6 = 33990,
        n.TEXTURE7 = 33991,
        n.TEXTURE8 = 33992,
        n.TEXTURE9 = 33993,
        n.TEXTURE10 = 33994,
        n.TEXTURE11 = 33995,
        n.TEXTURE12 = 33996,
        n.TEXTURE13 = 33997,
        n.TEXTURE14 = 33998,
        n.TEXTURE15 = 33999,
        n.TEXTURE16 = 34e3,
        n.TEXTURE17 = 34001,
        n.TEXTURE18 = 34002,
        n.TEXTURE19 = 34003,
        n.TEXTURE20 = 34004,
        n.TEXTURE21 = 34005,
        n.TEXTURE22 = 34006,
        n.TEXTURE23 = 34007,
        n.TEXTURE24 = 34008,
        n.TEXTURE25 = 34009,
        n.TEXTURE26 = 34010,
        n.TEXTURE27 = 34011,
        n.TEXTURE28 = 34012,
        n.TEXTURE29 = 34013,
        n.TEXTURE30 = 34014,
        n.TEXTURE31 = 34015,
        n.ACTIVE_TEXTURE = 34016,
        n.REPEAT = 10497,
        n.CLAMP_TO_EDGE = 33071,
        n.MIRRORED_REPEAT = 33648,
        n.FLOAT_VEC2 = 35664,
        n.FLOAT_VEC3 = 35665,
        n.FLOAT_VEC4 = 35666,
        n.INT_VEC2 = 35667,
        n.INT_VEC3 = 35668,
        n.INT_VEC4 = 35669,
        n.BOOL = 35670,
        n.BOOL_VEC2 = 35671,
        n.BOOL_VEC3 = 35672,
        n.BOOL_VEC4 = 35673,
        n.FLOAT_MAT2 = 35674,
        n.FLOAT_MAT3 = 35675,
        n.FLOAT_MAT4 = 35676,
        n.SAMPLER_2D = 35678,
        n.SAMPLER_CUBE = 35680,
        n.VERTEX_ATTRIB_ARRAY_ENABLED = 34338,
        n.VERTEX_ATTRIB_ARRAY_SIZE = 34339,
        n.VERTEX_ATTRIB_ARRAY_STRIDE = 34340,
        n.VERTEX_ATTRIB_ARRAY_TYPE = 34341,
        n.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922,
        n.VERTEX_ATTRIB_ARRAY_POINTER = 34373,
        n.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975,
        n.COMPILE_STATUS = 35713,
        n.LOW_FLOAT = 36336,
        n.MEDIUM_FLOAT = 36337,
        n.HIGH_FLOAT = 36338,
        n.LOW_INT = 36339,
        n.MEDIUM_INT = 36340,
        n.HIGH_INT = 36341,
        n.FRAMEBUFFER = 36160,
        n.RENDERBUFFER = 36161,
        n.RGBA4 = 32854,
        n.RGB5_A1 = 32855,
        n.RGB565 = 36194,
        n.DEPTH_COMPONENT16 = 33189,
        n.STENCIL_INDEX = 6401,
        n.STENCIL_INDEX8 = 36168,
        n.DEPTH_STENCIL = 34041,
        n.RENDERBUFFER_WIDTH = 36162,
        n.RENDERBUFFER_HEIGHT = 36163,
        n.RENDERBUFFER_INTERNAL_FORMAT = 36164,
        n.RENDERBUFFER_RED_SIZE = 36176,
        n.RENDERBUFFER_GREEN_SIZE = 36177,
        n.RENDERBUFFER_BLUE_SIZE = 36178,
        n.RENDERBUFFER_ALPHA_SIZE = 36179,
        n.RENDERBUFFER_DEPTH_SIZE = 36180,
        n.RENDERBUFFER_STENCIL_SIZE = 36181,
        n.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048,
        n.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049,
        n.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050,
        n.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051,
        n.COLOR_ATTACHMENT0 = 36064,
        n.DEPTH_ATTACHMENT = 36096,
        n.STENCIL_ATTACHMENT = 36128,
        n.DEPTH_STENCIL_ATTACHMENT = 33306,
        n.NONE = 0,
        n.FRAMEBUFFER_COMPLETE = 36053,
        n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054,
        n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055,
        n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057,
        n.FRAMEBUFFER_UNSUPPORTED = 36061,
        n.FRAMEBUFFER_BINDING = 36006,
        n.RENDERBUFFER_BINDING = 36007,
        n.MAX_RENDERBUFFER_SIZE = 34024,
        n.INVALID_FRAMEBUFFER_OPERATION = 1286,
        n.UNPACK_FLIP_Y_WEBGL = 37440,
        n.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441,
        n.CONTEXT_LOST_WEBGL = 37442,
        n.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443,
        n.BROWSER_DEFAULT_WEBGL = 37444,
        n._useProgram = null,
        n._depthTest = !0,
        n._depthMask = !0,
        n._blend = !1,
        n._cullFace = !1,
        n.curBindTexTarget = null,
        n.curBindTexValue = null,
        r(n, ["_depthFunc", function() {
            return this._depthFunc = 513;
        }
        , "_sFactor", function() {
            return this._sFactor = 1;
        }
        , "_dFactor", function() {
            return this._dFactor = 0;
        }
        , "_frontFace", function() {
            return this._frontFace = 2305;
        }
        ]),
        n;
    }()
      , bt = function(t) {
        function e() {
            e.__super.call(this);
        }
        d(e, "laya.webgl.display.GraphicsGL", l);
        var i = e.prototype;
        return i.setShader = function(t) {
            this._saveToCmd(m.context._setShader, [t]);
        }
        ,
        i.setIBVB = function(t, e, i, n, a, s) {
            this._saveToCmd(m.context._setIBVB, [t, e, i, n, a, s]);
        }
        ,
        i.drawParticle = function(t, e, i) {
            var n = x.createParticleTemplate2D(i);
            n.x = t,
            n.y = e,
            this._saveToCmd(m.context._drawParticle, [n]);
        }
        ,
        e;
    }()
      , wt = function(t) {
        var i;
        function F(t) {
            this._x = 0,
            this._y = 0,
            this._id = ++F._COUNT,
            this._path = null,
            this._drawCount = 1,
            this._maxNumEle = 0,
            this._clear = !1,
            this._isMain = !1,
            this._atlasResourceChange = 0,
            this._submits = null,
            this._curSubmit = null,
            this._ib = null,
            this._vb = null,
            this._nBlendType = 0,
            this._saveMark = null,
            this._shader2D = null,
            this.meshlist = [],
            this.mId = -1,
            this.mHaveKey = !1,
            this.mHaveLineKey = !1,
            this.mX = 0,
            this.mY = 0,
            F.__super.call(this),
            this._width = 99999999,
            this._height = 99999999,
            this._clipRect = F.MAXCLIPRECT,
            this.mOutPoint,
            this._canvas = t,
            F._contextcount++,
            m.isFlash ? (this._ib = Jt.create(35044),
            gt.fillIBQuadrangle(this._ib, 16)) : this._ib = Jt.QuadrangleIB,
            this.clear();
        }
        d(F, "laya.webgl.canvas.WebGLContext2D", a);
        var e = F.prototype;
        return e.setIsMainContext = function() {
            this._isMain = !0;
        }
        ,
        e.clearBG = function(t, e, i, n) {
            var a = St.mainContext;
            a.clearColor(t, e, i, n),
            a.clear(16384);
        }
        ,
        e._getSubmits = function() {
            return this._submits;
        }
        ,
        e._releaseMem = function() {
            if (this._submits) {
                this._curMat.destroy(),
                this._curMat = null,
                this._shader2D.destroy(),
                this._shader2D = null;
                for (var t = 0, e = this._submits._length; t < e; t++)
                    this._submits[t].releaseRender();
                this._submits.length = 0,
                this._submits._length = 0,
                this._submits = null,
                this._curSubmit = null,
                this._path && this._path.recover(),
                this._path = null,
                this._other && (this._other.font = null),
                this._save = null,
                this._vb && (this._vb.releaseResource(),
                this._vb.destroy(),
                this._vb.destory(),
                this._vb = null);
            }
        }
        ,
        e.destroy = function() {
            --F._contextcount,
            this.sprite = null,
            this._releaseMem(),
            this._targets && this._targets.destroy(),
            this._targets = null,
            this._canvas = null,
            this._ib && this._ib != Jt.QuadrangleIB && this._ib.releaseResource();
        }
        ,
        e.clear = function() {
            this._submits || (this._other = i.DEFAULT,
            this._curMat = I.create(),
            this._vb = Zt.create(-1),
            this._submits = [],
            this._save = [j.Create(this)],
            this._save.length = 10,
            this._shader2D = new J(),
            this._triangleMesh = kt.getAMesh()),
            this._vb.clear(),
            this._targets && (this._targets.repaint = !0),
            this._other = i.DEFAULT,
            this._clear = !0,
            this._repaint = !1,
            this._drawCount = 1,
            this._renderKey = 0,
            this._other.lineWidth = this._shader2D.ALPHA = 1,
            this._nBlendType = 0,
            this._clipRect = F.MAXCLIPRECT,
            this._curSubmit = st.RENDERBASE,
            this._shader2D.glTexture = null,
            this._shader2D.fillStyle = this._shader2D.strokeStyle = Y.DEFAULT;
            for (var t = 0, e = this._submits._length; t < e; t++)
                this._submits[t].releaseRender();
            this._submits._length = 0,
            this._curMat.identity(),
            this._other.clear(),
            this._saveMark = this._save[0],
            this._save._length = 1;
        }
        ,
        e.size = function(t, e) {
            if (this._width != t || this._height != e)
                if (0 == t || 0 == e) {
                    0 != this._vb._byteLength && (this._width = t,
                    this._height = e,
                    this._vb.clear(),
                    this._vb.upload());
                    for (var i = 0, n = this._submits._length; i < n; i++)
                        this._submits[i].releaseRender();
                    this._submits.length = 0,
                    this._submits._length = 0,
                    this._curSubmit = null,
                    this._path && this._path.recover(),
                    this._path = null,
                    this.sprite = null,
                    this._targets && this._targets.destroy(),
                    this._targets = null;
                } else
                    this._width = t,
                    this._height = e,
                    this._targets && this._targets.size(t, e),
                    this._canvas.memorySize -= this._canvas.memorySize;
            0 === t && 0 === e && this._releaseMem();
        }
        ,
        e._getTransformMatrix = function() {
            return this._curMat;
        }
        ,
        e.translate = function(t, e) {
            0 === t && 0 === e || (q.save(this),
            this._curMat.bTransform && ($.save(this),
            this._curMat.transformPointN(T.TEMP.setTo(t, e)),
            t = T.TEMP.x,
            e = T.TEMP.y),
            this._x += t,
            this._y += e);
        }
        ,
        e.save = function() {
            this._save[this._save._length++] = j.Create(this);
        }
        ,
        e.restore = function() {
            var t = this._save._length;
            if (!(t < 1))
                for (var e = t - 1; 0 <= e; e--) {
                    var i = this._save[e];
                    if (i.restore(this),
                    i.isSaveMark())
                        return void (this._save._length = e);
                }
        }
        ,
        e._fillText = function(t, e, i, n, a, s, r, o, h, l) {
            void 0 === l && (l = 0);
            var u = this._shader2D
              , c = this._curSubmit.shaderValue
              , d = a ? pt.create(a) : this._other.font;
            if (U.enabled)
                u.ALPHA !== c.ALPHA && (u.glTexture = null),
                _t.drawText(this, t, e, this._curMat, d, h || this._other.textAlign, s, r, o, i, n, l);
            else {
                this._shader2D.defines.getValue();
                var _ = s ? p.create(s)._color : u.colorAdd;
                u.ALPHA === c.ALPHA && _ === u.colorAdd && c.colorAdd === u.colorAdd || (u.glTexture = null,
                u.colorAdd = _),
                _t.drawText(this, t, e, this._curMat, d, h || this._other.textAlign, s, r, o, i, n, l);
            }
        }
        ,
        e.fillWords = function(t, e, i, n, a, s) {
            this._fillText(null, t, e, i, n, a, null, -1, null, s);
        }
        ,
        e.fillBorderWords = function(t, e, i, n, a, s, r) {
            this._fillBorderText(null, t, e, i, n, a, s, r, null);
        }
        ,
        e.fillText = function(t, e, i, n, a, s) {
            this._fillText(t, null, e, i, n, a, null, -1, s);
        }
        ,
        e.strokeText = function(t, e, i, n, a, s, r) {
            this._fillText(t, null, e, i, n, null, a, s || 1, r);
        }
        ,
        e.fillBorderText = function(t, e, i, n, a, s, r, o) {
            this._fillBorderText(t, null, e, i, n, a, s, r, o);
        }
        ,
        e._fillBorderText = function(t, e, i, n, a, s, r, o, h) {
            if (!U.enabled)
                return this._fillText(t, e, i, n, a, null, r, o || 1, h),
                void this._fillText(t, e, i, n, a, s, null, -1, h);
            var l = this._shader2D
              , u = this._curSubmit.shaderValue;
            l.ALPHA !== u.ALPHA && (l.glTexture = null);
            var c = a ? (F._fontTemp.setFont(a),
            F._fontTemp) : this._other.font;
            _t.drawText(this, t, e, this._curMat, c, h || this._other.textAlign, s, r, o || 1, i, n, 0);
        }
        ,
        e.fillRect = function(t, e, i, n, a) {
            var s = this._vb;
            if (gt.fillRectImgVb(s, this._clipRect, t, e, i, n, k.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
                this._renderKey = 0;
                var r = this._shader2D.fillStyle;
                a && (this._shader2D.fillStyle = Y.create(a));
                var o = this._shader2D
                  , h = this._curSubmit.shaderValue;
                if (o.fillStyle !== h.fillStyle || o.ALPHA !== h.ALPHA) {
                    o.glTexture = null;
                    var l = this._curSubmit = st.createSubmit(this, this._ib, s, (s._byteLength - 64) / 32 * 3, Mt.create(2, 0));
                    l.shaderValue.color = o.fillStyle._color._color,
                    l.shaderValue.ALPHA = o.ALPHA,
                    this._submits[this._submits._length++] = l;
                }
                this._curSubmit._numEle += 6,
                this._shader2D.fillStyle = r;
            }
        }
        ,
        e.fillTexture = function(t, e, i, n, a, s, r, o) {
            if (t.loaded && t.bitmap && t.source) {
                var h = this._vb
                  , l = t.bitmap.width
                  , u = t.bitmap.height
                  , c = t.uv
                  , d = r.x % t.width
                  , _ = r.y % t.height;
                if (l != o.w || u != o.h) {
                    if (!o.w && !o.h)
                        switch (o.oy = o.ox = 0,
                        s) {
                        case "repeat":
                            o.width = n,
                            o.height = a;
                            break;

                        case "repeat-x":
                            o.width = n,
                            _ < 0 ? t.height + _ > a ? o.height = a : o.height = t.height + _ : (o.oy = _,
                            t.height + _ > a ? o.height = a - _ : o.height = t.height);
                            break;

                        case "repeat-y":
                            d < 0 ? t.width + d > n ? o.width = n : o.width = t.width + d : (o.ox = d,
                            t.width + d > n ? o.width = n - d : o.width = t.width),
                            o.height = a;
                            break;

                        case "no-repeat":
                            d < 0 ? t.width + d > n ? o.width = n : o.width = t.width + d : (o.ox = d,
                            t.width + d > n ? o.width = n - d : o.width = t.width),
                            _ < 0 ? t.height + _ > a ? o.height = a : o.height = t.height + _ : (o.oy = _,
                            t.height + _ > a ? o.height = a - _ : o.height = t.height);
                            break;

                        default:
                            o.width = n,
                            o.height = a;
                        }
                    o.w = l,
                    o.h = u,
                    o.uv = [0, 0, o.width / l, 0, o.width / l, o.height / u, 0, o.height / u];
                }
                if (e += o.ox,
                i += o.oy,
                d -= o.ox,
                _ -= o.oy,
                gt.fillRectImgVb(h, this._clipRect, e, i, o.width, o.height, o.uv, this._curMat, this._x, this._y, 0, 0)) {
                    this._renderKey = 0;
                    var p = Rt.create(this, this._ib, h, (h._byteLength - 64) / 32 * 3, Mt.create(256, 0))
                      , f = (this._submits[this._submits._length++] = p).shaderValue;
                    f.textureHost = t;
                    var g = c[0] * l
                      , m = c[1] * u
                      , y = (c[2] - c[0]) * l
                      , v = (c[5] - c[3]) * u
                      , S = -d / l
                      , x = -_ / u;
                    f.u_TexRange[0] = g / l,
                    f.u_TexRange[1] = y / l,
                    f.u_TexRange[2] = m / u,
                    f.u_TexRange[3] = v / u,
                    f.u_offset[0] = S,
                    f.u_offset[1] = x,
                    U.enabled && !this._isMain && p.addTexture(t, (h._byteLength >> 2) - 16),
                    (this._curSubmit = p)._renderType = 10017,
                    p._numEle += 6;
                }
            } else
                this.sprite && b.timer.callLater(this, this._repaintSprite);
        }
        ,
        e.setShader = function(t) {
            W.save(this, 1048576, this._shader2D, !0),
            this._shader2D.shader = t;
        }
        ,
        e.setFilters = function(t) {
            W.save(this, 2097152, this._shader2D, !0),
            this._shader2D.filters = t,
            this._curSubmit = st.RENDERBASE,
            this._renderKey = 0,
            this._drawCount++;
        }
        ,
        e.drawTexture = function(t, e, i, n, a, s, r) {
            this._drawTextureM(t, e, i, n, a, s, r, null, 1);
        }
        ,
        e.addTextureVb = function(t, e, i) {
            var n = this._curSubmit._vb || this._vb
              , a = n._byteLength >> 2;
            n.byteLength = a + 16 << 2;
            for (var s = n.getFloat32Array(), r = 0; r < 16; r += 4)
                s[a++] = t[r] + e,
                s[a++] = t[r + 1] + i,
                s[a++] = t[r + 2],
                s[a++] = t[r + 3];
            this._curSubmit._numEle += 6,
            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle),
            n._upload = !0;
        }
        ,
        e.willDrawTexture = function(t, e) {
            if (!(t.loaded && t.bitmap && t.source))
                return this.sprite && b.timer.callLater(this, this._repaintSprite),
                0;
            var i = t.bitmap
              , n = i.id + this._shader2D.ALPHA * e + 10016;
            if (n == this._renderKey)
                return n;
            var a = this._shader2D
              , s = a.ALPHA
              , r = this._curSubmit.shaderValue;
            a.ALPHA *= e,
            this._renderKey = n,
            this._drawCount++,
            a.glTexture = i;
            var o = this._vb
              , h = null
              , l = o._byteLength / 32 * 3;
            return h = Rt.create(this, this._ib, o, l, Mt.create(1, 0)),
            (this._submits[this._submits._length++] = h).shaderValue.textureHost = t,
            h._renderType = 10016,
            h._preIsSameTextureShader = 10016 === this._curSubmit._renderType && a.ALPHA === r.ALPHA,
            this._curSubmit = h,
            a.ALPHA = s,
            n;
        }
        ,
        e.drawTextures = function(t, e, i, n) {
            if (t.loaded && t.bitmap && t.source) {
                var a = this._clipRect;
                if (this._clipRect = F.MAXCLIPRECT,
                this._drawTextureM(t, e[0], e[1], t.width, t.height, i, n, null, 1)) {
                    if (this._clipRect = a,
                    A.drawCall++,
                    !(e.length < 4)) {
                        for (var s = this._curSubmit._vb || this._vb, r = this._curMat.a, o = this._curMat.d, h = 2, l = e.length; h < l; h += 2)
                            gt.copyPreImgVb(s, (e[h] - e[h - 2]) * r, (e[h + 1] - e[h - 1]) * o),
                            this._curSubmit._numEle += 6;
                        this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle);
                    }
                } else
                    alert("drawTextures err");
            } else
                this.sprite && b.timer.callLater(this, this._repaintSprite);
        }
        ,
        e._drawTextureM = function(t, e, i, n, a, s, r, o, h) {
            if (!t.loaded || !t.source)
                return this.sprite && b.timer.callLater(this, this._repaintSprite),
                !1;
            var l = this._curSubmit._vb || this._vb
              , u = t.bitmap;
            e += s,
            i += r,
            this._drawCount++;
            var c = u.id + this._shader2D.ALPHA * h + 10016;
            if (c != this._renderKey) {
                this._renderKey = c;
                var d = this._curSubmit.shaderValue
                  , _ = this._shader2D
                  , p = _.ALPHA;
                _.ALPHA *= h,
                _.glTexture = u;
                var f = this._vb
                  , g = null
                  , m = f._byteLength / 32 * 3;
                g = Rt.create(this, this._ib, f, m, Mt.create(1, 0)),
                (this._submits[this._submits._length++] = g).shaderValue.textureHost = t,
                g._renderType = 10016,
                g._preIsSameTextureShader = 10016 === this._curSubmit._renderType && _.ALPHA === d.ALPHA,
                this._curSubmit = g,
                l = this._curSubmit._vb || this._vb,
                _.ALPHA = p;
            }
            return !!gt.fillRectImgVb(l, this._clipRect, e, i, n || t.width, a || t.height, t.uv, o || this._curMat, this._x, this._y, 0, 0) && (U.enabled && !this._isMain && this._curSubmit.addTexture(t, (l._byteLength >> 2) - 16),
            this._curSubmit._numEle += 6,
            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle),
            !0);
        }
        ,
        e._repaintSprite = function() {
            this.sprite && this.sprite.repaint();
        }
        ,
        e._drawText = function(t, e, i, n, a, s, r, o, h, l) {
            var u = t.bitmap;
            this._drawCount++;
            var c = u.id + this._shader2D.ALPHA + 10016;
            if (c != this._renderKey) {
                this._renderKey = c;
                var d = this._curSubmit.shaderValue
                  , _ = this._shader2D;
                _.glTexture = u;
                var p = this._vb
                  , f = null
                  , g = p._byteLength / 32 * 3;
                (f = U.enabled ? Rt.create(this, this._ib, p, g, Mt.create(1, 0)) : Rt.create(this, this._ib, p, g, qt.create()))._preIsSameTextureShader = 10016 === this._curSubmit._renderType && _.ALPHA === d.ALPHA,
                (this._submits[this._submits._length++] = f).shaderValue.textureHost = t,
                f._renderType = 10016,
                this._curSubmit = f;
            }
            t.active();
            var m = this._curSubmit._vb || this._vb;
            gt.fillRectImgVb(m, this._clipRect, e + r, i + o, n || t.width, a || t.height, t.uv, s || this._curMat, this._x, this._y, h, l, !0) && (U.enabled && !this._isMain && this._curSubmit.addTexture(t, (m._byteLength >> 2) - 16),
            this._curSubmit._numEle += 6,
            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle));
        }
        ,
        e.drawTextureWithTransform = function(t, e, i, n, a, s, r, o, h) {
            if (s) {
                var l = this._curMat
                  , u = this._x
                  , c = this._y;
                (0 !== r || 0 !== o) && (this._x = r * l.a + o * l.c,
                this._y = o * l.d + r * l.b),
                s && l.bTransform ? (I.mul(s, l, F._tmpMatrix),
                (s = F._tmpMatrix)._checkTransform()) : (this._x += l.tx,
                this._y += l.ty),
                this._drawTextureM(t, e, i, n, a, 0, 0, s, h),
                this._x = u,
                this._y = c;
            } else
                this._drawTextureM(t, e, i, n, a, r, o, null, h);
        }
        ,
        e.fillQuadrangle = function(t, e, i, n, a) {
            var s = this._curSubmit
              , r = this._vb
              , o = this._shader2D
              , h = s.shaderValue;
            if (this._renderKey = 0,
            t.bitmap) {
                var l = t.bitmap;
                o.glTexture == l && o.ALPHA === h.ALPHA || (o.glTexture = l,
                (s = this._curSubmit = st.createSubmit(this, this._ib, r, r._byteLength / 32 * 3, Mt.create(1, 0))).shaderValue.glTexture = l,
                this._submits[this._submits._length++] = s),
                gt.fillQuadrangleImgVb(r, e, i, n, t.uv, a || this._curMat, this._x, this._y);
            } else
                s.shaderValue.fillStyle && s.shaderValue.fillStyle.equal(t) && o.ALPHA === h.ALPHA || (o.glTexture = null,
                (s = this._curSubmit = st.createSubmit(this, this._ib, r, r._byteLength / 32 * 3, Mt.create(2, 0))).shaderValue.defines.add(2),
                s.shaderValue.fillStyle = Y.create(t),
                this._submits[this._submits._length++] = s),
                gt.fillQuadrangleImgVb(r, e, i, n, k.DEF_UV, a || this._curMat, this._x, this._y);
            s._numEle += 6;
        }
        ,
        e.drawTexture2 = function(t, e, i, n, a, s, r, o) {
            if (0 != s) {
                var h = this._curMat;
                if (this._x = t * h.a + e * h.c,
                this._y = e * h.d + t * h.b,
                a && (a = h.bTransform || a.bTransform ? (I.mul(a, h, F._tmpMatrix),
                F._tmpMatrix) : (this._x += a.tx + h.tx,
                this._y += a.ty + h.ty,
                I.EMPTY)),
                1 !== s || r) {
                    var l = this._shader2D.ALPHA
                      , u = this._nBlendType;
                    this._shader2D.ALPHA = s,
                    r && (this._nBlendType = V.TOINT(r)),
                    this._drawTextureM(o[0], o[1] - i, o[2] - n, o[3], o[4], 0, 0, a, 1),
                    this._shader2D.ALPHA = l,
                    this._nBlendType = u;
                } else
                    this._drawTextureM(o[0], o[1] - i, o[2] - n, o[3], o[4], 0, 0, a, 1);
                this._x = this._y = 0;
            }
        }
        ,
        e.drawCanvas = function(t, e, i, n, a) {
            var s = t.context;
            if (this._renderKey = 0,
            s._targets)
                this._submits[this._submits._length++] = Dt.create(s, 0, null),
                this._curSubmit = st.RENDERBASE,
                s._targets.drawTo(this, e, i, n, a);
            else {
                var r = this._submits[this._submits._length++] = Dt.create(s, this._shader2D.ALPHA, this._shader2D.filters)
                  , o = n / t.width
                  , h = a / t.height
                  , l = r._matrix;
                this._curMat.copyTo(l),
                1 != o && 1 != h && l.scale(o, h);
                var u = l.tx
                  , c = l.ty;
                l.tx = l.ty = 0,
                l.transformPoint(T.TEMP.setTo(e, i)),
                l.translate(T.TEMP.x + u, T.TEMP.y + c),
                this._curSubmit = st.RENDERBASE;
            }
            w.showCanvasMark && (this.save(),
            this.lineWidth = 4,
            this.strokeStyle = s._targets ? "yellow" : "green",
            this.strokeRect(e - 1, i - 1, n + 2, a + 2, 1),
            this.strokeRect(e, i, n, a, 1),
            this.restore());
        }
        ,
        e.drawTarget = function(t, e, i, n, a, s, r, o, h, l) {
            void 0 === l && (l = -1);
            var u = this._vb;
            if (gt.fillRectImgVb(u, this._clipRect, e, i, n, a, h || k.DEF_UV, s || this._curMat, this._x, this._y, 0, 0)) {
                this._renderKey = 0,
                this._shader2D.glTexture = null;
                this._curSubmit.shaderValue;
                var c = this._curSubmit = ct.create(this, this._ib, u, (u._byteLength - 64) / 32 * 3, o, r);
                c.blendType = -1 == l ? this._nBlendType : l,
                c.scope = t,
                this._submits[this._submits._length++] = c,
                this._curSubmit._numEle += 6;
            }
        }
        ,
        e.mixRGBandAlpha = function(t) {
            return this._mixRGBandAlpha(t, this._shader2D.ALPHA);
        }
        ,
        e._mixRGBandAlpha = function(t, e) {
            var i = (4278190080 & t) >>> 24;
            return 0 != i ? i *= e : i = 255 * e,
            16777215 & t | i << 24;
        }
        ,
        e.drawTriangles = function(t, e, i, n, a, s, r, o, h, l) {
            if (!t.loaded || !t.source)
                return this.sprite && b.timer.callLater(this, this._repaintSprite),
                !1;
            this._drawCount++;
            t.bitmap;
            var u = this._mixRGBandAlpha(4294967295, o)
              , c = (n.length,
            s.length);
            this._renderKey = -1;
            var d = this._curSubmit = Rt.create(this, this._triangleMesh.getIBR(), this._triangleMesh.getVBR(), this._triangleMesh.indexNum, Mt.create(1, 0));
            return d.shaderValue.textureHost = t,
            d._renderType = 10016,
            this._submits[this._submits._length++] = d,
            r ? (F._tmpMatrix.a = r.a,
            F._tmpMatrix.b = r.b,
            F._tmpMatrix.c = r.c,
            F._tmpMatrix.d = r.d,
            F._tmpMatrix.tx = r.tx + e,
            F._tmpMatrix.ty = r.ty + i,
            I.mul(F._tmpMatrix, this._curMat, F._tmpMatrix)) : (F._tmpMatrix.a = this._curMat.a,
            F._tmpMatrix.b = this._curMat.b,
            F._tmpMatrix.c = this._curMat.c,
            F._tmpMatrix.d = this._curMat.d,
            F._tmpMatrix.tx = this._curMat.tx + e,
            F._tmpMatrix.ty = this._curMat.ty + i),
            this._triangleMesh.addData(n, a, s, F._tmpMatrix, u, this),
            this._curSubmit._numEle += c,
            this._maxNumEle = Math.max(this._maxNumEle, this._curSubmit._numEle),
            !0;
        }
        ,
        e.transform = function(t, e, i, n, a, s) {
            $.save(this),
            I.mul(I.TEMP.setTo(t, e, i, n, a, s), this._curMat, this._curMat),
            this._curMat._checkTransform();
        }
        ,
        e.setTransformByMatrix = function(t) {
            t.copyTo(this._curMat);
        }
        ,
        e.transformByMatrix = function(t) {
            $.save(this),
            I.mul(t, this._curMat, this._curMat),
            this._curMat._checkTransform();
        }
        ,
        e.rotate = function(t) {
            $.save(this),
            this._curMat.rotateEx(t);
        }
        ,
        e.scale = function(t, e) {
            $.save(this),
            this._curMat.scaleEx(t, e);
        }
        ,
        e.clipRect = function(t, e, i, n) {
            if (0 != this._curMat.b || 0 != this._curMat.c) {
                this._renderKey = 0;
                var a = ut.create(4);
                this.addRenderObject(a);
                var s = this._vb
                  , r = s._byteLength >> 2;
                if (gt.fillRectImgVb(s, null, t, e, i, n, k.DEF_UV, this._curMat, this._x, this._y, 0, 0)) {
                    this._shader2D.glTexture = null;
                    var o = this._curSubmit = st.createSubmit(this, this._ib, s, (s._byteLength - 64) / 32 * 3, Mt.create(2, 0));
                    o.shaderValue.ALPHA = 1,
                    this._submits[this._submits._length++] = o,
                    this._curSubmit._numEle += 6;
                } else
                    alert("clipRect calc stencil rect error");
                var h = ut.create(5);
                this.addRenderObject(h);
                var l = s.getFloat32Array()
                  , u = Math.min(Math.min(Math.min(l[r + 0], l[r + 4]), l[r + 8]), l[r + 12])
                  , c = Math.max(Math.max(Math.max(l[r + 0], l[r + 4]), l[r + 8]), l[r + 12])
                  , d = Math.min(Math.min(Math.min(l[r + 1], l[r + 5]), l[r + 9]), l[r + 13])
                  , _ = Math.max(Math.max(Math.max(l[r + 1], l[r + 5]), l[r + 9]), l[r + 13]);
                K.save(this, h, t, e, i, n, u, d, c - u, _ - d),
                this._curSubmit = st.RENDERBASE;
            } else {
                i *= this._curMat.a,
                n *= this._curMat.d;
                var p = T.TEMP;
                this._curMat.transformPoint(p.setTo(t, e)),
                i < 0 && (p.x = p.x + i,
                i = -i),
                n < 0 && (p.y = p.y + n,
                n = -n),
                this._renderKey = 0;
                var f = this._curSubmit = lt.create(this);
                (this._submits[this._submits._length++] = f).submitIndex = this._submits._length,
                f.submitLength = 9999999,
                z.save(this, f);
                var g = this._clipRect
                  , m = g.x
                  , y = g.y
                  , v = p.x + i
                  , S = p.y + n;
                m < p.x && (g.x = p.x),
                y < p.y && (g.y = p.y),
                g.width = Math.min(v, m + g.width) - g.x,
                g.height = Math.min(S, y + g.height) - g.y,
                this._shader2D.glTexture = null,
                f.clipRect.copyFrom(g),
                this._curSubmit = st.RENDERBASE;
            }
        }
        ,
        e.setIBVB = function(t, e, i, n, a, s, r, o, h, l, u) {
            if (void 0 === h && (h = 0),
            void 0 === l && (l = 0),
            void 0 === u && (u = 0),
            null === i) {
                if (m.isFlash) {
                    var c = n;
                    c._selfIB || (c._selfIB = Jt.create(35044)),
                    c._selfIB.clear(),
                    i = c._selfIB;
                } else
                    i = this._ib;
                gt.expandIBQuadrangle(i, n._byteLength / (4 * n.vertexStride * 4));
            }
            if (!o || !r)
                throw Error("setIBVB must input:shader shaderValues");
            var d = ht.create(this, n, i, a, r, o, h, l, u);
            s || (s = I.EMPTY),
            s.translate(t, e),
            I.mul(s, this._curMat, d._mat),
            s.translate(-t, -e),
            this._submits[this._submits._length++] = d,
            this._curSubmit = st.RENDERBASE,
            this._renderKey = 0;
        }
        ,
        e.addRenderObject = function(t) {
            this._submits[this._submits._length++] = t;
        }
        ,
        e.fillTrangles = function(t, e, i, n, a) {
            var s = this._curSubmit
              , r = this._vb
              , o = this._shader2D
              , h = s.shaderValue
              , l = n.length >> 4
              , u = t.bitmap;
            this._renderKey = 0,
            o.glTexture == u && o.ALPHA === h.ALPHA || ((s = this._curSubmit = st.createSubmit(this, this._ib, r, r._byteLength / 32 * 3, Mt.create(1, 0))).shaderValue.textureHost = t,
            this._submits[this._submits._length++] = s),
            gt.fillTranglesVB(r, e, i, n, a || this._curMat, this._x, this._y),
            s._numEle += 6 * l;
        }
        ,
        e.submitElement = function(t, e) {
            var i = this._submits;
            for (e < 0 && (e = i._length); t < e; )
                t += i[t].renderSubmit();
        }
        ,
        e.finish = function() {
            St.mainContext.finish();
        }
        ,
        e.flush = function() {
            var t = Math.max(this._vb._byteLength / 64, this._maxNumEle / 6) + 8;
            if (t > this._ib.bufferLength / 12 && gt.expandIBQuadrangle(this._ib, t),
            !this._isMain && U.enabled && U._atlasRestore > this._atlasResourceChange) {
                this._atlasResourceChange = U._atlasRestore;
                for (var e = this._submits, i = 0, n = e._length; i < n; i++) {
                    var a = e[i];
                    10016 === a.getRenderType() && a.checkTexture();
                }
            }
            this.submitElement(0, this._submits._length),
            this._path && this._path.reset(),
            et.instance && et.getInstance().reset();
            var s;
            for (i = 0,
            s = this.meshlist.length; i < s; i++) {
                var r = this.meshlist[i];
                r.canReuse ? r.releaseMesh() : r.destroy();
            }
            return this.meshlist.length = 0,
            this._curSubmit = st.RENDERBASE,
            this._renderKey = 0,
            this._triangleMesh = kt.getAMesh(),
            this.meshlist.push(this._triangleMesh),
            this._submits._length;
        }
        ,
        e.setPathId = function(t) {
            if (this.mId = t,
            -1 != this.mId) {
                this.mHaveKey = !1;
                var e = O.getInstance();
                e.shapeDic[this.mId] && (this.mHaveKey = !0),
                this.mHaveLineKey = !1,
                e.shapeLineDic[this.mId] && (this.mHaveLineKey = !0);
            }
        }
        ,
        e.movePath = function(t, e) {
            var i = t
              , n = e;
            t = this._curMat.a * i + this._curMat.c * n + this._curMat.tx,
            e = this._curMat.b * i + this._curMat.d * n + this._curMat.ty,
            this.mX += t,
            this.mY += e;
        }
        ,
        e.beginPath = function() {
            var t = this._getPath();
            t.tempArray.length = 0,
            t.closePath = !1,
            this.mX = 0,
            this.mY = 0;
        }
        ,
        e.closePath = function() {
            this._path.closePath = !0;
        }
        ,
        e.fill = function(t) {
            void 0 === t && (t = !1);
            var e = this._getPath();
            this.drawPoly(0, 0, e.tempArray, this.fillStyle._color.numColor, 0, 0, t);
        }
        ,
        e.stroke = function() {
            var t = this._getPath();
            if (0 < this.lineWidth) {
                if (-1 == this.mId)
                    t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor);
                else if (this.mHaveLineKey) {
                    var e = O.getInstance().shapeLineDic[this.mId];
                    e.rebuild(t.tempArray),
                    t.setGeomtry(e);
                } else
                    O.getInstance().addLine(this.mId, t.drawLine(0, 0, t.tempArray, this.lineWidth, this.strokeStyle._color.numColor));
                t.update();
                var i = [this.mX, this.mY]
                  , n = st.createShape(this, t.ib, t.vb, t.count, t.offset, Mt.create(4, 0));
                n.shaderValue.ALPHA = this._shader2D.ALPHA,
                n.shaderValue.u_pos = i,
                n.shaderValue.u_mmat2 = yt.TEMPMAT4_ARRAY,
                this._submits[this._submits._length++] = n,
                this._renderKey = -1;
            }
        }
        ,
        e.line = function(t, e, i, n, a, s) {
            var r = this._curSubmit
              , o = this._vb;
            if (gt.fillLineVb(o, this._clipRect, t, e, i, n, a, s)) {
                this._renderKey = 0;
                var h = this._shader2D
                  , l = r.shaderValue;
                h.strokeStyle === l.strokeStyle && h.ALPHA === l.ALPHA || (h.glTexture = null,
                (r = this._curSubmit = st.createSubmit(this, this._ib, o, (o._byteLength - 64) / 32 * 3, Mt.create(2, 0))).shaderValue.strokeStyle = h.strokeStyle,
                r.shaderValue.mainID = 2,
                r.shaderValue.ALPHA = h.ALPHA,
                this._submits[this._submits._length++] = r),
                r._numEle += 6;
            }
        }
        ,
        e.moveTo = function(t, e, i) {
            void 0 === i && (i = !0);
            var n = this._getPath();
            if (i) {
                var a = t
                  , s = e;
                t = this._curMat.a * a + this._curMat.c * s,
                e = this._curMat.b * a + this._curMat.d * s;
            }
            n.addPoint(t, e);
        }
        ,
        e.lineTo = function(t, e, i) {
            void 0 === i && (i = !0);
            var n = this._getPath();
            if (i) {
                var a = t
                  , s = e;
                t = this._curMat.a * a + this._curMat.c * s,
                e = this._curMat.b * a + this._curMat.d * s;
            }
            n.addPoint(t, e);
        }
        ,
        e.drawCurves = function(t, e, i) {
            this.setPathId(-1),
            this.beginPath(),
            this.strokeStyle = i[3],
            this.lineWidth = i[4];
            var n = i[2];
            t += i[0],
            e += i[1],
            this.movePath(t, e),
            this.moveTo(n[0], n[1]);
            for (var a = 2, s = n.length; a < s; )
                this.quadraticCurveTo(n[a++], n[a++], n[a++], n[a++]);
            this.stroke();
        }
        ,
        e.arcTo = function(t, e, i, n, a) {
            if (-1 == this.mId || !this.mHaveKey) {
                var s = 0
                  , r = 0
                  , o = 0
                  , h = this._getPath();
                this._curMat.copyTo(F._tmpMatrix),
                F._tmpMatrix.tx = F._tmpMatrix.ty = 0,
                F._tempPoint.setTo(h.getEndPointX(), h.getEndPointY()),
                F._tmpMatrix.invertTransformPoint(F._tempPoint);
                var l = F._tempPoint.x - t
                  , u = F._tempPoint.y - e
                  , c = Math.sqrt(l * l + u * u);
                if (!(c <= 1e-6)) {
                    var d = l / c
                      , _ = u / c
                      , p = i - t
                      , f = n - e
                      , g = p * p + f * f
                      , m = Math.sqrt(g);
                    if (!(m <= 1e-6)) {
                        var y = p / m
                          , v = f / m
                          , S = d + y
                          , x = _ + v
                          , b = Math.sqrt(S * S + x * x);
                        if (!(b <= 1e-6)) {
                            var w = S / b
                              , M = x / b
                              , I = Math.acos(w * d + M * _)
                              , T = Math.PI / 2 - I
                              , C = (c = a / Math.tan(T)) * d + t
                              , E = c * _ + e
                              , P = Math.sqrt(c * c + a * a)
                              , A = t + w * P
                              , L = e + M * P
                              , D = 0
                              , R = 0;
                            if (0 <= d * v - _ * y) {
                                var k = 2 * T / F.SEGNUM;
                                D = Math.sin(k),
                                R = Math.cos(k);
                            } else
                                k = 2 * -T / F.SEGNUM,
                                D = Math.sin(k),
                                R = Math.cos(k);
                            r = this._curMat.a * C + this._curMat.c * E,
                            o = this._curMat.b * C + this._curMat.d * E,
                            r == this._path.getEndPointX() && o == this._path.getEndPointY() || h.addPoint(r, o);
                            var N = C - A
                              , O = E - L;
                            for (s = 0; s < F.SEGNUM; s++) {
                                var B = N * R + O * D
                                  , G = -N * D + O * R;
                                r = B + A,
                                o = G + L,
                                t = this._curMat.a * r + this._curMat.c * o,
                                o = e = this._curMat.b * r + this._curMat.d * o,
                                (r = t) == this._path.getEndPointX() && o == this._path.getEndPointY() || h.addPoint(r, o),
                                N = B,
                                O = G;
                            }
                        }
                    }
                }
            }
        }
        ,
        e.arc = function(t, e, i, n, a, s, r) {
            if (void 0 === s && (s = !1),
            void 0 === r && (r = !0),
            -1 != this.mId) {
                var o = O.getInstance().shapeDic[this.mId];
                if (o && this.mHaveKey && !o.needUpdate(this._curMat))
                    return;
                e = t = 0;
            }
            var h, l = 0, u = 0, c = 0, d = 0, _ = 0, p = 0, f = 0;
            if (u = a - n,
            s)
                if (Math.abs(u) >= 2 * Math.PI)
                    u = 2 * -Math.PI;
                else
                    for (; 0 < u; )
                        u -= 2 * Math.PI;
            else if (Math.abs(u) >= 2 * Math.PI)
                u = 2 * Math.PI;
            else
                for (; u < 0; )
                    u += 2 * Math.PI;
            h = u / (f = i < 101 ? Math.max(10, u * i / 5) : i < 201 ? Math.max(10, u * i / 20) : Math.max(10, u * i / 40)) / 2,
            c = Math.abs(4 / 3 * (1 - Math.cos(h)) / Math.sin(h)),
            s && (c = -c);
            var g = this._getPath()
              , m = NaN
              , y = NaN;
            for (p = 0; p <= f; p++)
                l = n + u * (p / f),
                d = t + Math.cos(l) * i,
                _ = e + Math.sin(l) * i,
                r && (m = d,
                y = _,
                d = this._curMat.a * m + this._curMat.c * y,
                _ = this._curMat.b * m + this._curMat.d * y),
                d == this._path.getEndPointX() && _ == this._path.getEndPointY() || g.addPoint(d, _);
            d = t + Math.cos(a) * i,
            _ = e + Math.sin(a) * i,
            r && (m = d,
            y = _,
            d = this._curMat.a * m + this._curMat.c * y,
            _ = this._curMat.b * m + this._curMat.d * y),
            d == this._path.getEndPointX() && _ == this._path.getEndPointY() || g.addPoint(d, _);
        }
        ,
        e.quadraticCurveTo = function(t, e, i, n) {
            var a = u.I
              , s = i
              , r = n;
            i = this._curMat.a * s + this._curMat.c * r,
            n = this._curMat.b * s + this._curMat.d * r,
            s = t,
            r = e,
            t = this._curMat.a * s + this._curMat.c * r,
            e = this._curMat.b * s + this._curMat.d * r;
            for (var o = a.getBezierPoints([this._path.getEndPointX(), this._path.getEndPointY(), t, e, i, n], 30, 2), h = 0, l = o.length / 2; h < l; h++)
                this.lineTo(o[2 * h], o[2 * h + 1], !1);
            this.lineTo(i, n, !1);
        }
        ,
        e.rect = function(t, e, i, n) {
            this._other = this._other.make(),
            this._other.path || (this._other.path = new X()),
            this._other.path.rect(t, e, i, n);
        }
        ,
        e.strokeRect = function(t, e, i, n, a) {
            var s = .5 * a;
            this.line(t - s, e, t + i + s, e, a, this._curMat),
            this.line(t + i, e, t + i, e + n, a, this._curMat),
            this.line(t, e, t, e + n, a, this._curMat),
            this.line(t - s, e + n, t + i + s, e + n, a, this._curMat);
        }
        ,
        e.clip = function() {}
        ,
        e.drawPoly = function(t, e, i, n, a, s, r) {
            void 0 === r && (r = !1),
            this._renderKey = 0,
            this._shader2D.glTexture = null;
            var o = this._getPath();
            if (-1 == this.mId)
                o.polygon(t, e, i, n, a || 1, s);
            else if (this.mHaveKey) {
                var h = O.getInstance().shapeDic[this.mId];
                h.setMatrix(this._curMat),
                h.rebuild(o.tempArray),
                o.setGeomtry(h);
            } else {
                var l = o.polygon(t, e, i, n, a || 1, s);
                O.getInstance().addShape(this.mId, l),
                l.setMatrix(this._curMat);
            }
            o.update();
            var u, c = [this.mX, this.mY];
            if ((u = st.createShape(this, o.ib, o.vb, o.count, o.offset, Mt.create(4, 0))).shaderValue.ALPHA = this._shader2D.ALPHA,
            u.shaderValue.u_pos = c,
            u.shaderValue.u_mmat2 = yt.EMPTYMAT4_ARRAY,
            this._submits[this._submits._length++] = u,
            0 < a) {
                if (this.mHaveLineKey) {
                    var d = O.getInstance().shapeLineDic[this.mId];
                    d.rebuild(o.tempArray),
                    o.setGeomtry(d);
                } else
                    O.getInstance().addShape(this.mId, o.drawLine(t, e, i, a, s));
                o.update(),
                (u = st.createShape(this, o.ib, o.vb, o.count, o.offset, Mt.create(4, 0))).shaderValue.ALPHA = this._shader2D.ALPHA,
                u.shaderValue.u_mmat2 = yt.EMPTYMAT4_ARRAY,
                this._submits[this._submits._length++] = u;
            }
        }
        ,
        e.drawParticle = function(t, e, i) {
            i.x = t,
            i.y = e,
            this._submits[this._submits._length++] = i;
        }
        ,
        e._getPath = function() {
            return this._path || (this._path = new X());
        }
        ,
        n(0, e, "globalCompositeOperation", function() {
            return V.NAMES[this._nBlendType];
        }, function(t) {
            var e = V.TOINT[t];
            null == e || this._nBlendType === e || (W.save(this, 65536, this, !0),
            this._curSubmit = st.RENDERBASE,
            this._renderKey = 0,
            this._nBlendType = e);
        }),
        n(0, e, "strokeStyle", function() {
            return this._shader2D.strokeStyle;
        }, function(t) {
            this._shader2D.strokeStyle.equal(t) || (W.save(this, 512, this._shader2D, !1),
            this._shader2D.strokeStyle = Y.create(t));
        }),
        n(0, e, "globalAlpha", function() {
            return this._shader2D.ALPHA;
        }, function(t) {
            (t = Math.floor(1e3 * t) / 1e3) != this._shader2D.ALPHA && (W.save(this, 1, this._shader2D, !0),
            this._shader2D.ALPHA = t);
        }),
        n(0, e, "asBitmap", null, function(t) {
            if (t) {
                if (this._targets || (this._targets = new Q()),
                this._targets.repaint = !0,
                !this._width || !this._height)
                    throw Error("asBitmap no size!");
                this._targets.setSP(this.sprite),
                this._targets.size(this._width, this._height);
            } else
                this._targets = null;
        }),
        n(0, e, "fillStyle", function() {
            return this._shader2D.fillStyle;
        }, function(t) {
            this._shader2D.fillStyle.equal(t) || (W.save(this, 2, this._shader2D, !1),
            this._shader2D.fillStyle = Y.create(t));
        }),
        n(0, e, "textAlign", function() {
            return this._other.textAlign;
        }, function(t) {
            this._other.textAlign === t || (this._other = this._other.make(),
            W.save(this, 32768, this._other, !1),
            this._other.textAlign = t);
        }),
        n(0, e, "lineWidth", function() {
            return this._other.lineWidth;
        }, function(t) {
            this._other.lineWidth === t || (this._other = this._other.make(),
            W.save(this, 256, this._other, !1),
            this._other.lineWidth = t);
        }),
        n(0, e, "textBaseline", function() {
            return this._other.textBaseline;
        }, function(t) {
            this._other.textBaseline === t || (this._other = this._other.make(),
            W.save(this, 16384, this._other, !1),
            this._other.textBaseline = t);
        }),
        n(0, e, "font", null, function(t) {
            t != this._other.font.toString() && (this._other = this._other.make(),
            W.save(this, 8, this._other, !1),
            this._other.font === pt.EMPTY ? this._other.font = new pt(t) : this._other.font.setFont(t));
        }),
        F.__init__ = function() {
            i.DEFAULT = new i();
        }
        ,
        F._tempPoint = new T(),
        F._SUBMITVBSIZE = 32e3,
        F._MAXSIZE = 99999999,
        F._RECTVBSIZE = 16,
        F.MAXCLIPRECT = new C(0,0,99999999,99999999),
        F._COUNT = 0,
        F._tmpMatrix = new I(),
        F.SEGNUM = 32,
        F._contextcount = 0,
        r(F, ["_fontTemp", function() {
            return this._fontTemp = new pt();
        }
        , "_drawStyleTemp", function() {
            return this._drawStyleTemp = new Y(null);
        }
        ]),
        F.__init$ = function() {
            i = function() {
                function t() {
                    this.lineWidth = 1,
                    this.path = null,
                    this.textAlign = null,
                    this.textBaseline = null,
                    this.font = pt.EMPTY;
                }
                d(t, "");
                var e = t.prototype;
                return e.clear = function() {
                    this.lineWidth = 1,
                    this.path && this.path.clear(),
                    this.textAlign = this.textBaseline = null,
                    this.font = pt.EMPTY;
                }
                ,
                e.make = function() {
                    return this === t.DEFAULT ? new t() : this;
                }
                ,
                t.DEFAULT = null,
                t;
            }();
        }
        ,
        F;
    }()
      , Mt = function(t) {
        function n(t, e) {
            this.size = [0, 0],
            this.alpha = 1,
            this.ALPHA = 1,
            this.subID = 0,
            this._cacheID = 0,
            n.__super.call(this),
            this.defines = new Et(),
            this.position = n._POSITION,
            this.mainID = t,
            this.subID = e,
            this.textureHost = null,
            this.texture = null,
            this.fillStyle = null,
            this.color = null,
            this.strokeStyle = null,
            this.colorAdd = null,
            this.glTexture = null,
            this.u_mmat2 = null,
            this._cacheID = t | e,
            this._inClassCache = n._cache[this._cacheID],
            0 < t && !this._inClassCache && (this._inClassCache = n._cache[this._cacheID] = [],
            this._inClassCache._length = 0),
            this.clear();
        }
        d(n, "laya.webgl.shader.d2.value.Value2D", G);
        var e = n.prototype;
        return e.setValue = function(t) {}
        ,
        e.refresh = function() {
            var t = this.size;
            return t[0] = yt.width,
            t[1] = yt.height,
            this.alpha = this.ALPHA * yt.worldAlpha,
            this.mmat = yt.worldMatrix4,
            this;
        }
        ,
        e._ShaderWithCompile = function() {
            return jt.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, Qt.create);
        }
        ,
        e._withWorldShaderDefines = function() {
            var t = yt.worldShaderDefines
              , e = jt.sharders[this.mainID | this.defines._value | t.getValue()];
            if (!e) {
                var i, n = {};
                for (i in this.defines.toNameDic())
                    n[i] = "";
                for (i in t.toNameDic())
                    n[i] = "";
                e = jt.withCompile2D(0, this.mainID, n, this.mainID | this.defines._value | t.getValue(), Qt.create);
            }
            var a = yt.worldFilters;
            if (!a)
                return e;
            for (var s, r = a.length, o = 0; o < r; o++)
                (s = a[o]) && s.action.setValue(this);
            return e;
        }
        ,
        e.upload = function() {
            var t = yt;
            this.alpha = this.ALPHA * t.worldAlpha,
            yt.worldMatrix4 !== yt.TEMPMAT4_ARRAY && this.defines.add(128),
            St.shaderHighPrecision && this.defines.add(1024);
            var e, i = t.worldShaderDefines ? this._withWorldShaderDefines() : jt.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile();
            this.size[0] = t.width,
            this.size[1] = t.height,
            this.mmat = t.worldMatrix4,
            Nt.activeShader !== i ? i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width,
            i._shaderValueHeight = t.height) : e = i._params2dQuick2 || i._make2dQuick2() : i._shaderValueWidth !== t.width || i._shaderValueHeight !== t.height ? (i._shaderValueWidth = t.width,
            i._shaderValueHeight = t.height) : e = i._params2dQuick1 || i._make2dQuick1(),
            i.upload(this, e);
        }
        ,
        e.setFilters = function(t) {
            if (this.filters = t)
                for (var e, i = t.length, n = 0; n < i; n++)
                    (e = t[n]) && (this.defines.add(e.type),
                    e.action.setValue(this));
        }
        ,
        e.clear = function() {
            this.defines.setValue(this.subID);
        }
        ,
        e.release = function() {
            (this._inClassCache[this._inClassCache._length++] = this).fillStyle = null,
            this.strokeStyle = null,
            this.clear();
        }
        ,
        n._initone = function(t, e) {
            n._typeClass[t] = e,
            n._cache[t] = [],
            n._cache[t]._length = 0;
        }
        ,
        n.__init__ = function() {
            n._POSITION = [2, 5126, !1, 4 * ft.BYTES_PE, 0],
            n._TEXCOORD = [2, 5126, !1, 4 * ft.BYTES_PE, 2 * ft.BYTES_PE],
            n._initone(2, Ft),
            n._initone(4, Vt),
            n._initone(256, Ut),
            n._initone(512, Gt),
            n._initone(1, Ht),
            n._initone(65, qt),
            n._initone(9, Ht);
        }
        ,
        n.create = function(t, e) {
            var i = n._cache[t | e];
            return i._length ? i[--i._length] : new n._typeClass[t | e](e);
        }
        ,
        n._POSITION = null,
        n._TEXCOORD = null,
        n._cache = [],
        n._typeClass = [],
        n.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
        n;
    }()
      , It = function(t) {
        function g(t, e) {
            g.__super.call(this, t, e);
        }
        d(g, "laya.webgl.utils.RenderSprite3D", y);
        var e = g.prototype;
        return e.onCreate = function(t) {
            switch (t) {
            case 8:
                return void (this._fun = this._blend);

            case 4:
                return void (this._fun = this._transform);
            }
        }
        ,
        e._mask = function(t, e, i, n) {
            var a, s, r = this._next, o = t.mask;
            if (o) {
                e.ctx.save();
                var h = e.ctx.globalCompositeOperation
                  , l = new C();
                if (l.copyFrom(o.getBounds()),
                l.width = Math.round(l.width),
                l.height = Math.round(l.height),
                l.x = Math.round(l.x),
                l.y = Math.round(l.y),
                0 < l.width && 0 < l.height) {
                    var u = t._style._tf
                      , c = ot.create();
                    c.addValue("bounds", l),
                    a = rt.create([c, e], laya.webgl.utils.RenderSprite3D.tmpTarget),
                    e.addRenderObject(a),
                    o.render(e, -l.x, -l.y),
                    a = rt.create([c], laya.webgl.utils.RenderSprite3D.endTmpTarget),
                    e.addRenderObject(a),
                    e.ctx.save(),
                    e.clipRect(i - u.translateX + l.x, n - u.translateY + l.y, l.width, l.height),
                    r._fun.call(r, t, e, i, n),
                    e.ctx.restore(),
                    s = ut.create(6),
                    h = e.ctx.globalCompositeOperation,
                    s.blendMode = "mask",
                    e.addRenderObject(s),
                    I.TEMP.identity();
                    var d = Mt.create(1, 0)
                      , _ = k.INV_UV
                      , p = l.width
                      , f = l.height;
                    (l.width < 32 || l.height < 32) && ((_ = g.tempUV)[0] = 0,
                    _[1] = 0,
                    _[2] = 32 <= l.width ? 1 : l.width / 32,
                    _[3] = 0,
                    _[4] = 32 <= l.width ? 1 : l.width / 32,
                    _[5] = 32 <= l.height ? 1 : l.height / 32,
                    _[6] = 0,
                    _[7] = 32 <= l.height ? 1 : l.height / 32,
                    l.width = 32 <= l.width ? l.width : 32,
                    l.height = 32 <= l.height ? l.height : 32,
                    _[1] *= -1,
                    _[3] *= -1,
                    _[5] *= -1,
                    _[7] *= -1,
                    _[1] += 1,
                    _[3] += 1,
                    _[5] += 1,
                    _[7] += 1),
                    e.ctx.drawTarget(c, i + l.x - u.translateX, n + l.y - u.translateY, p, f, I.TEMP, "tmpTarget", d, _, 6),
                    a = rt.create([c], laya.webgl.utils.RenderSprite3D.recycleTarget),
                    e.addRenderObject(a),
                    (s = ut.create(6)).blendMode = h,
                    e.addRenderObject(s);
                }
                e.ctx.restore();
            } else
                r._fun.call(r, t, e, i, n);
        }
        ,
        e._blend = function(t, e, i, n) {
            var a = t._style
              , s = this._next;
            a.blendMode ? (e.ctx.save(),
            e.ctx.globalCompositeOperation = a.blendMode,
            s._fun.call(s, t, e, i, n),
            e.ctx.restore()) : s._fun.call(s, t, e, i, n);
        }
        ,
        e._transform = function(t, e, i, n) {
            var a = t.transform
              , s = this._next;
            if (a && s != y.NORENDER) {
                var r = e.ctx;
                t._style;
                a.tx = i,
                a.ty = n;
                var o = r._getTransformMatrix()
                  , h = o.clone();
                I.mul(a, o, o),
                o._checkTransform(),
                a.tx = a.ty = 0,
                s._fun.call(s, t, e, 0, 0),
                h.copyTo(o),
                h.destroy();
            } else
                s._fun.call(s, t, e, i, n);
        }
        ,
        g.tmpTarget = function(t, e) {
            var i = t.getValue("bounds")
              , n = Ot.create(i.width, i.height);
            n.start(),
            n.clear(0, 0, 0, 0),
            t.addValue("tmpTarget", n);
        }
        ,
        g.endTmpTarget = function(t) {
            t.getValue("tmpTarget").end();
        }
        ,
        g.recycleTarget = function(t) {
            t.getValue("tmpTarget").recycle(),
            t.recycle();
        }
        ,
        r(g, ["tempUV", function() {
            return this.tempUV = new Array(8);
        }
        ]),
        g;
    }()
      , Tt = function(t) {
        function e() {
            this.data = null,
            e.__super.call(this);
        }
        d(e, "laya.filters.webgl.ColorFilterActionGL", B);
        var i = e.prototype;
        return b.imps(i, {
            "laya.filters.IFilterActionGL": !0
        }),
        i.setValue = function(t) {
            t.colorMat = this.data._mat,
            t.colorAlpha = this.data._alpha;
        }
        ,
        i.apply3d = function(t, e, i, n, a) {
            var s = t.getValue("bounds")
              , r = Mt.create(1, 0);
            r.setFilters([this.data]);
            var o = I.TEMP;
            o.identity(),
            i.ctx.drawTarget(t, 0, 0, s.width, s.height, o, "src", r);
        }
        ,
        e;
    }()
      , Ct = function(t) {
        function s(t, e, i, n, a) {
            this._atlasCanvas = null,
            this._inAtlasTextureKey = null,
            this._inAtlasTextureBitmapValue = null,
            this._inAtlasTextureOriUVValue = null,
            this._InAtlasWebGLImagesKey = null,
            this._InAtlasWebGLImagesOffsetValue = null,
            s.__super.call(this, t, e, a),
            this._inAtlasTextureKey = [],
            this._inAtlasTextureBitmapValue = [],
            this._inAtlasTextureOriUVValue = [],
            this._InAtlasWebGLImagesKey = {},
            this._InAtlasWebGLImagesOffsetValue = [],
            this._atlasCanvas = new Yt(),
            (this._atlasCanvas._atlaser = this)._atlasCanvas.width = i,
            this._atlasCanvas.height = n,
            this._atlasCanvas.activeResource(),
            this._atlasCanvas.lock = !0;
        }
        d(s, "laya.webgl.atlas.Atlaser", F);
        var e = s.prototype;
        return e.computeUVinAtlasTexture = function(t, e, i, n) {
            var a = U.atlasTextureWidth
              , s = U.atlasTextureHeight
              , r = i / a
              , o = n / s
              , h = (i + t.bitmap.width) / a
              , l = (n + t.bitmap.height) / s
              , u = t.bitmap.width / a
              , c = t.bitmap.height / s;
            t.uv = [r + e[0] * u, o + e[1] * c, h - (1 - e[2]) * u, o + e[3] * c, h - (1 - e[4]) * u, l - (1 - e[5]) * c, r + e[6] * u, l - (1 - e[7]) * c];
        }
        ,
        e.findBitmapIsExist = function(t) {
            if (t instanceof laya.webgl.resource.WebGLImage) {
                var e = t
                  , i = e.url
                  , n = this._InAtlasWebGLImagesKey[i || e.id];
                if (n)
                    return n.offsetInfoID;
            }
            return -1;
        }
        ,
        e.addToAtlasTexture = function(t, e, i) {
            if (t instanceof laya.webgl.resource.WebGLImage) {
                var n = t
                  , a = n.url;
                this._InAtlasWebGLImagesKey[a || n.id] = {
                    bitmap: t,
                    offsetInfoID: this._InAtlasWebGLImagesOffsetValue.length
                },
                this._InAtlasWebGLImagesOffsetValue.push([e, i]);
            }
            this._atlasCanvas.texSubImage2D(e, i, t.atlasImgData || t.atlasSource),
            t.clearAtlasSource();
        }
        ,
        e.addToAtlas = function(t, e, i) {
            t._atlasID = this._inAtlasTextureKey.length;
            var n = t.uv.slice()
              , a = t.bitmap;
            this._inAtlasTextureKey.push(t),
            this._inAtlasTextureOriUVValue.push(n),
            this._inAtlasTextureBitmapValue.push(a),
            this.computeUVinAtlasTexture(t, n, e, i),
            t.bitmap = this._atlasCanvas;
        }
        ,
        e.clear = function() {
            for (var t = 0, e = this._inAtlasTextureKey.length; t < e; t++)
                this._inAtlasTextureKey[t].bitmap = this._inAtlasTextureBitmapValue[t],
                this._inAtlasTextureKey[t].uv = this._inAtlasTextureOriUVValue[t],
                this._inAtlasTextureKey[t]._atlasID = -1,
                this._inAtlasTextureKey[t].bitmap.lock = !1,
                this._inAtlasTextureKey[t].bitmap.releaseResource();
            this._inAtlasTextureKey.length = 0,
            this._inAtlasTextureBitmapValue.length = 0,
            this._inAtlasTextureOriUVValue.length = 0,
            this._InAtlasWebGLImagesKey = null,
            this._InAtlasWebGLImagesOffsetValue.length = 0;
        }
        ,
        e.dispose = function() {
            this.clear(),
            this._atlasCanvas.destroy();
        }
        ,
        n(0, e, "InAtlasWebGLImagesOffsetValue", function() {
            return this._InAtlasWebGLImagesOffsetValue;
        }),
        n(0, e, "texture", function() {
            return this._atlasCanvas;
        }),
        n(0, e, "inAtlasWebGLImagesKey", function() {
            return this._InAtlasWebGLImagesKey;
        }),
        s;
    }()
      , Et = function(t) {
        function i() {
            i.__super.call(this, i.__name2int, i.__int2name, i.__int2nameMap);
        }
        return d(i, "laya.webgl.shader.d2.ShaderDefines2D", Z),
        i.__init__ = function() {
            i.reg("TEXTURE2D", 1),
            i.reg("COLOR2D", 2),
            i.reg("PRIMITIVE", 4),
            i.reg("GLOW_FILTER", 8),
            i.reg("BLUR_FILTER", 16),
            i.reg("COLOR_FILTER", 32),
            i.reg("COLOR_ADD", 64),
            i.reg("WORLDMAT", 128),
            i.reg("FILLTEXTURE", 256),
            i.reg("FSHIGHPRECISION", 1024);
        }
        ,
        i.reg = function(t, e) {
            Z._reg(t, e, i.__name2int, i.__int2name);
        }
        ,
        i.toText = function(t, e, i) {
            return Z._toText(t, e, i);
        }
        ,
        i.toInt = function(t) {
            return Z._toInt(t, i.__name2int);
        }
        ,
        i.TEXTURE2D = 1,
        i.COLOR2D = 2,
        i.PRIMITIVE = 4,
        i.FILTERGLOW = 8,
        i.FILTERBLUR = 16,
        i.FILTERCOLOR = 32,
        i.COLORADD = 64,
        i.WORLDMAT = 128,
        i.FILLTEXTURE = 256,
        i.SKINMESH = 512,
        i.SHADERDEFINE_FSHIGHPRECISION = 1024,
        i.__name2int = {},
        i.__int2name = [],
        i.__int2nameMap = [],
        i;
    }()
      , Pt = (function(t) {
        function o(t, e, i, n, a, s, r) {
            o.__super.call(this, t, e, i, n, 40, a, s, r);
        }
        d(o, "laya.webgl.shapes.Ellipse", it);
    }(),
    function(t) {
        function s(t, e, i, n, a) {
            this._points = [],
            this.rebuild(i),
            s.__super.call(this, t, e, 0, 0, 0, a, n, a, 0);
        }
        d(s, "laya.webgl.shapes.Line", it);
        var e = s.prototype;
        return e.rebuild = function(t) {
            var e = t.length;
            e != this._points.length && (this.mUint16Array = new Uint16Array(6 * (e / 2 - 1)),
            this.mFloat32Array = new Float32Array(5 * e)),
            this._points.length = 0;
            for (var i = NaN, n = NaN, a = -1, s = -1, r = t.length / 2, o = 0; o < r; o++)
                i = t[2 * o],
                n = t[2 * o + 1],
                (.01 < Math.abs(a - i) || .01 < Math.abs(s - n)) && this._points.push(i, n),
                a = i,
                s = n;
        }
        ,
        e.getData = function(t, e, i) {
            var n = []
              , a = [];
            0 < this.borderWidth && this.createLine2(this._points, n, this.borderWidth, i, a, this._points.length / 2),
            this.mUint16Array.set(n, 0),
            this.mFloat32Array.set(a, 0),
            t.append(this.mUint16Array),
            e.append(this.mFloat32Array);
        }
        ,
        s;
    }())
      , At = function(t) {
        function c(t, e, i, n, a) {
            this._points = [];
            for (var s = NaN, r = NaN, o = -1, h = -1, l = i.length / 2 - 1, u = 0; u < l; u++)
                s = i[2 * u],
                r = i[2 * u + 1],
                (.01 < Math.abs(o - s) || .01 < Math.abs(h - r)) && this._points.push(s, r),
                o = s,
                h = r;
            s = i[2 * l],
            r = i[2 * l + 1],
            o = this._points[0],
            h = this._points[1],
            (.01 < Math.abs(o - s) || .01 < Math.abs(h - r)) && this._points.push(s, r),
            c.__super.call(this, t, e, 0, 0, this._points.length / 2, 0, n, a);
        }
        d(c, "laya.webgl.shapes.LoopLine", it);
        var e = c.prototype;
        return e.getData = function(t, e, i) {
            if (0 < this.borderWidth) {
                for (var n = this.color, a = (n >> 16 & 255) / 255, s = (n >> 8 & 255) / 255, r = (255 & n) / 255, o = [], h = 0, l = 0, u = [], c = Math.floor(this._points.length / 2), d = 0; d < c; d++)
                    h = this._points[2 * d],
                    l = this._points[2 * d + 1],
                    o.push(this.x + h, this.y + l, a, s, r);
                this.createLoopLine(o, u, this.borderWidth, i + o.length / 5),
                t.append(new Uint16Array(u)),
                e.append(new Float32Array(o));
            }
        }
        ,
        e.createLoopLine = function(t, e, i, n, a, s) {
            t.length;
            var r = t.concat()
              , o = a || t
              , h = this.borderColor
              , l = (h >> 16 & 255) / 255
              , u = (h >> 8 & 255) / 255
              , c = (255 & h) / 255
              , d = [r[0], r[1]]
              , _ = [r[r.length - 5], r[r.length - 4]]
              , p = _[0] + .5 * (d[0] - _[0])
              , f = _[1] + .5 * (d[1] - _[1]);
            r.unshift(p, f, 0, 0, 0),
            r.push(p, f, 0, 0, 0);
            var g, m, y, v, S, x, b, w, M, I, T, C, E, P, A, L, D, R, k, N, O = r.length / 5, B = n, G = i / 2;
            y = r[0],
            v = r[1],
            I = y - (S = r[5]),
            M = (M = -(v - (x = r[6]))) / (N = Math.sqrt(M * M + I * I)) * G,
            I = I / N * G,
            o.push(y - M, v - I, l, u, c, y + M, v + I, l, u, c);
            for (var F = 1; F < O - 1; F++)
                y = r[5 * (F - 1)],
                v = r[5 * (F - 1) + 1],
                S = r[5 * F],
                x = r[5 * F + 1],
                b = r[5 * (F + 1)],
                w = r[5 * (F + 1) + 1],
                I = y - S,
                C = S - b,
                A = (-(M = (M = -(v - x)) / (N = Math.sqrt(M * M + I * I)) * G) + y) * (-(I = I / N * G) + x) - (-M + S) * (-I + v),
                R = (-(T = (T = -(x - w)) / (N = Math.sqrt(T * T + C * C)) * G) + b) * (-(C = C / N * G) + x) - (-T + S) * (-C + w),
                k = (E = -I + v - (-I + x)) * (D = -T + S - (-T + b)) - (L = -C + w - (-C + x)) * (P = -M + S - (-M + y)),
                Math.abs(k) < .1 ? (k += 10.1,
                o.push(S - M, x - I, l, u, c, S + M, x + I, l, u, c)) : (((g = (P * R - D * A) / k) - S) * (g - S) + ((m = (L * A - E * R) / k) - x) + (m - x),
                o.push(g, m, l, u, c, S - (g - S), x - (m - x), l, u, c));
            s && (e = s);
            var U = this.edges + 1;
            for (F = 1; F < U; F++)
                e.push(B + 2 * (F - 1), B + 2 * (F - 1) + 1, B + 2 * F + 1, B + 2 * F + 1, B + 2 * F, B + 2 * (F - 1));
            return e.push(B + 2 * (F - 1), B + 2 * (F - 1) + 1, B + 1, B + 1, B, B + 2 * (F - 1)),
            o;
        }
        ,
        c;
    }()
      , Lt = function(t) {
        function r(t, e, i, n, a, s) {
            this._points = null,
            this._start = -1,
            this._repaint = !1,
            this.earcutTriangles = null,
            this._mat = I.create(),
            this._points = i.slice(0, i.length),
            r.__super.call(this, t, e, 0, 0, this._points.length / 2, n, a, s);
        }
        d(r, "laya.webgl.shapes.Polygon", it);
        var e = r.prototype;
        return e.rebuild = function(t) {
            this._repaint || (this._points.length = 0,
            this._points = this._points.concat(t));
        }
        ,
        e.setMatrix = function(t) {
            t.copyTo(this._mat);
        }
        ,
        e.needUpdate = function(t) {
            return this._repaint = this._mat.a == t.a && this._mat.b == t.b && this._mat.c == t.c && this._mat.d == t.d && this._mat.tx == t.tx && this._mat.ty == t.ty,
            !this._repaint;
        }
        ,
        e.getData = function(t, e, i) {
            var n, a = 0, s = this._points, r = 0;
            if (this.mUint16Array && this.mFloat32Array && this._repaint) {
                if (this._start != i) {
                    for (this._start = i,
                    n = [],
                    r = this.earcutTriangles.length,
                    a = 0; a < r; a++)
                        n.push(this.earcutTriangles[a] + i);
                    this.mUint16Array = new Uint16Array(n);
                }
            } else {
                this._start = i,
                n = [];
                var o = []
                  , h = []
                  , l = this.color
                  , u = (l >> 16 & 255) / 255
                  , c = (l >> 8 & 255) / 255
                  , d = (255 & l) / 255;
                for (r = Math.floor(s.length / 2),
                a = 0; a < r; a++)
                    o.push(this.x + s[2 * a], this.y + s[2 * a + 1], u, c, d),
                    h.push(this.x + s[2 * a], this.y + s[2 * a + 1]);
                for (this.earcutTriangles = nt.earcut(h, null, 2),
                r = this.earcutTriangles.length,
                a = 0; a < r; a++)
                    n.push(this.earcutTriangles[a] + i);
                this.mUint16Array = new Uint16Array(n),
                this.mFloat32Array = new Float32Array(o);
            }
            t.append(this.mUint16Array),
            e.append(this.mFloat32Array);
        }
        ,
        r;
    }()
      , Dt = function(t) {
        function s() {
            this._matrix = new I(),
            this._matrix4 = ft.defaultMatrix4.concat(),
            s.__super.call(this, 1e4),
            this.shaderValue = new Mt(0,0);
        }
        d(s, "laya.webgl.submit.SubmitCanvas", st);
        var e = s.prototype;
        return e.renderSubmit = function() {
            if (this._ctx_src._targets)
                return this._ctx_src._targets.flush(this._ctx_src),
                1;
            var t = yt.worldAlpha
              , e = yt.worldMatrix4
              , i = yt.worldMatrix
              , n = yt.worldFilters
              , a = yt.worldShaderDefines
              , s = this.shaderValue
              , r = this._matrix
              , o = this._matrix4
              , h = I.TEMP;
            return I.mul(r, i, h),
            o[0] = h.a,
            o[1] = h.b,
            o[4] = h.c,
            o[5] = h.d,
            o[12] = h.tx,
            o[13] = h.ty,
            yt.worldMatrix = h.clone(),
            yt.worldMatrix4 = o,
            yt.worldAlpha = yt.worldAlpha * s.alpha,
            s.filters && s.filters.length && (yt.worldFilters = s.filters,
            yt.worldShaderDefines = s.defines),
            this._ctx_src.flush(),
            yt.worldAlpha = t,
            yt.worldMatrix4 = e,
            yt.worldMatrix.destroy(),
            yt.worldMatrix = i,
            yt.worldFilters = n,
            yt.worldShaderDefines = a,
            1;
        }
        ,
        e.releaseRender = function() {
            var t = s._cache;
            this._ctx_src = null,
            t[t._length++] = this;
        }
        ,
        e.getRenderType = function() {
            return 10003;
        }
        ,
        s.create = function(t, e, i) {
            var n = s._cache._length ? s._cache[--s._cache._length] : new s();
            n._ctx_src = t;
            var a = n.shaderValue;
            return a.alpha = e,
            a.defines.setValue(0),
            i && i.length && a.setFilters(i),
            n;
        }
        ,
        s._cache = ((s._cache = [])._length = 0,
        s._cache),
        s;
    }()
      , Rt = function(t) {
        function l(t) {
            this._preIsSameTextureShader = !1,
            this._isSameTexture = !0,
            this._texs = new Array(),
            this._texsID = new Array(),
            this._vbPos = new Array(),
            void 0 === t && (t = 1e4),
            l.__super.call(this, t);
        }
        d(l, "laya.webgl.submit.SubmitTexture", st);
        var e = l.prototype;
        return e.releaseRender = function() {
            var t = l._cache;
            (t[t._length++] = this).shaderValue.release(),
            this._preIsSameTextureShader = !1,
            this._vb = null,
            this._texs.length = 0,
            this._vbPos.length = 0,
            this._isSameTexture = !0;
        }
        ,
        e.addTexture = function(t, e) {
            this._texsID[this._texs.length] = t._uvID,
            this._texs.push(t),
            this._vbPos.push(e);
        }
        ,
        e.checkTexture = function() {
            if (this._texs.length < 1)
                this._isSameTexture = !0;
            else {
                var t = this.shaderValue.textureHost.bitmap;
                if (null !== t)
                    for (var e = this._vb.getFloat32Array(), i = 0, n = this._texs.length; i < n; i++) {
                        var a = this._texs[i];
                        a.active();
                        var s = a.uv;
                        if (this._texsID[i] !== a._uvID) {
                            this._texsID[i] = a._uvID;
                            var r = this._vbPos[i];
                            e[r + 2] = s[0],
                            e[r + 3] = s[1],
                            e[r + 6] = s[2],
                            e[r + 7] = s[3],
                            e[r + 10] = s[4],
                            e[r + 11] = s[5],
                            e[r + 14] = s[6],
                            e[r + 15] = s[7],
                            this._vb.setNeedUpload();
                        }
                        a.bitmap !== t && (this._isSameTexture = !1);
                    }
            }
        }
        ,
        e.renderSubmit = function() {
            if (0 === this._numEle)
                return l._shaderSet = !1,
                1;
            var t = this.shaderValue.textureHost;
            if (t) {
                var e = t.source;
                if (!t.bitmap || !e)
                    return l._shaderSet = !1,
                    1;
                this.shaderValue.texture = e;
            }
            this._vb.bind_upload(this._ib);
            var i = St.mainContext;
            if (V.activeBlendFunction !== this._blendFn && (i.enable(3042),
            this._blendFn(i),
            V.activeBlendFunction = this._blendFn),
            A.drawCall++,
            A.trianglesFaces += this._numEle / 3,
            this._preIsSameTextureShader && Nt.activeShader && l._shaderSet ? Nt.activeShader.uploadTexture2D(this.shaderValue.texture) : this.shaderValue.upload(),
            l._shaderSet = !0,
            1 < this._texs.length && !this._isSameTexture)
                for (var n = t.bitmap, a = 0, s = Nt.activeShader, r = 0, o = this._texs.length; r < o; r++) {
                    var h = this._texs[r];
                    h.bitmap === n && r + 1 !== o || (s.uploadTexture2D(h.source),
                    i.drawElements(4, 6 * (r - a + 1), 5123, this._startIdx + 6 * a * ft.BYTES_PIDX),
                    n = h.bitmap,
                    a = r);
                }
            else
                i.drawElements(4, this._numEle, 5123, this._startIdx);
            return 1;
        }
        ,
        l.create = function(t, e, i, n, a) {
            var s = l._cache._length ? l._cache[--l._cache._length] : new l();
            null == i && ((i = s._selfVb || (s._selfVb = Zt.create(-1))).clear(),
            n = 0),
            s._ib = e,
            s._vb = i,
            s._startIdx = n * ft.BYTES_PIDX,
            s._numEle = 0;
            var r = t._nBlendType;
            s._blendFn = t._targets ? V.targetFns[r] : V.fns[r],
            s.shaderValue = a,
            s.shaderValue.setValue(t._shader2D);
            var o = t._shader2D.filters;
            return o && s.shaderValue.setFilters(o),
            s;
        }
        ,
        l._cache = ((l._cache = [])._length = 0,
        l._cache),
        l._shaderSet = !0,
        l;
    }()
      , kt = function(t) {
        function y() {
            y.__super.call(this, laya.webgl.utils.MeshTexture.const_stride, 0, 0),
            this.canReuse = !0,
            this.setAttributes(laya.webgl.utils.MeshTexture._fixattriInfo);
        }
        d(y, "laya.webgl.utils.MeshTexture", mt);
        var e = y.prototype;
        return e.addData = function(t, e, i, n, a, s) {
            for (var r = t.length / 2, o = this._vb.needSize(r * y.const_stride) >> 2, h = this._vb.getFloat32Array(), l = 0, u = 0; u < r; u++) {
                var c = t[l]
                  , d = t[l + 1]
                  , _ = c * n.a + d * n.c + n.tx
                  , p = c * n.b + d * n.d + n.ty;
                h[o++] = _,
                h[o++] = p,
                h[o++] = e[l],
                h[o++] = e[l + 1],
                l += 2;
            }
            this._vb.setNeedUpload();
            var f = this.vertNum;
            if (0 < f) {
                var g = i.length;
                g > y.tmpIdx.length && (y.tmpIdx = new Uint16Array(g));
                for (var m = 0; m < g; m++)
                    y.tmpIdx[m] = i[m] + f;
                this._ib.appendU16Array(y.tmpIdx, i.length);
            } else
                this._ib.append(i);
            this._ib.setNeedUpload(),
            this.vertNum += r,
            this.indexNum += i.length;
        }
        ,
        e.releaseMesh = function() {
            this._vb._byteLength = 0,
            this._ib._byteLength = 0,
            this.vertNum = 0,
            this.indexNum = 0,
            laya.webgl.utils.MeshTexture._POOL.push(this);
        }
        ,
        e.destroy = function() {
            this._ib.destroy(),
            this._vb.destroy();
        }
        ,
        y.getAMesh = function() {
            return laya.webgl.utils.MeshTexture._POOL.length ? laya.webgl.utils.MeshTexture._POOL.pop() : new y();
        }
        ,
        y.const_stride = 16,
        y._POOL = [],
        r(y, ["_fixattriInfo", function() {
            return this._fixattriInfo = [5126, 2, 0, 5126, 2, 8];
        }
        , "tmpIdx", function() {
            return this.tmpIdx = new Uint16Array(4);
        }
        ]),
        y;
    }()
      , Nt = function(t) {
        function e() {
            e.__super.call(this),
            this.lock = !0;
        }
        return d(e, "laya.webgl.shader.BaseShader", v),
        e.activeShader = null,
        e.bindShader = null,
        e;
    }()
      , Ot = function(e) {
        function u(t, e, i, n, a, s, r, o, h) {
            this._type = 0,
            this._svWidth = NaN,
            this._svHeight = NaN,
            this._preRenderTarget = null,
            this._alreadyResolved = !1,
            this._looked = !1,
            this._surfaceFormat = 0,
            this._surfaceType = 0,
            this._depthStencilFormat = 0,
            this._mipMap = !1,
            this._repeat = !1,
            this._minFifter = 0,
            this._magFifter = 0,
            this._destroy = !1,
            void 0 === i && (i = 6408),
            void 0 === n && (n = 5121),
            void 0 === a && (a = 34041),
            void 0 === s && (s = !1),
            void 0 === r && (r = !1),
            void 0 === o && (o = -1),
            void 0 === h && (h = -1),
            this._type = 1,
            this._w = t,
            this._h = e,
            this._surfaceFormat = i,
            this._surfaceType = n,
            this._depthStencilFormat = a,
            m.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189),
            this._mipMap = s,
            this._repeat = r,
            this._minFifter = o,
            this._magFifter = h,
            this._createWebGLRenderTarget(),
            this.bitmap.lock = !0,
            u.__super.call(this, this.bitmap, k.INV_UV);
        }
        d(u, "laya.webgl.resource.RenderTarget2D", e);
        var t = u.prototype;
        return b.imps(t, {
            "laya.resource.IDispose": !0
        }),
        t.getType = function() {
            return this._type;
        }
        ,
        t.getTexture = function() {
            return this;
        }
        ,
        t.size = function(t, e) {
            this._w == t && this._h == e || (this._w = t,
            this._h = e,
            this.release(),
            0 != this._w && 0 != this._h && this._createWebGLRenderTarget());
        }
        ,
        t.release = function() {
            this.destroy();
        }
        ,
        t.recycle = function() {
            u.POOL.push(this);
        }
        ,
        t.start = function() {
            var t = St.mainContext;
            return this._preRenderTarget = yt.curRenderTarget,
            yt.curRenderTarget = this,
            t.bindFramebuffer(36160, this.bitmap.frameBuffer),
            this._alreadyResolved = !1,
            1 == this._type && (t.viewport(0, 0, this._w, this._h),
            this._svWidth = yt.width,
            this._svHeight = yt.height,
            yt.width = this._w,
            yt.height = this._h,
            Nt.activeShader = null),
            this;
        }
        ,
        t.clear = function(t, e, i, n) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            void 0 === n && (n = 1);
            var a = St.mainContext;
            a.clearColor(t, e, i, n);
            var s = 16384;
            switch (this._depthStencilFormat) {
            case 33189:
                s |= 256;
                break;

            case 36168:
                s |= 1024;
                break;

            case 34041:
                s |= 256,
                s |= 1024;
            }
            a.clear(s);
        }
        ,
        t.end = function() {
            var t = St.mainContext;
            t.bindFramebuffer(36160, this._preRenderTarget ? this._preRenderTarget.bitmap.frameBuffer : null),
            this._alreadyResolved = !0,
            yt.curRenderTarget = this._preRenderTarget,
            1 == this._type ? (t.viewport(0, 0, this._svWidth, this._svHeight),
            yt.width = this._svWidth,
            yt.height = this._svHeight,
            Nt.activeShader = null) : t.viewport(0, 0, b.stage.width, b.stage.height);
        }
        ,
        t.getData = function(t, e, i, n) {
            var a = St.mainContext;
            if (a.bindFramebuffer(36160, this.bitmap.frameBuffer),
            !(36053 === a.checkFramebufferStatus(36160)))
                return a.bindFramebuffer(36160, null),
                null;
            var s = new Uint8Array(this._w * this._h * 4);
            return a.readPixels(t, e, i, n, this._surfaceFormat, this._surfaceType, s),
            a.bindFramebuffer(36160, null),
            s;
        }
        ,
        t.destroy = function(t) {
            void 0 === t && (t = !1),
            this._destroy || (this._loaded = !1,
            this.bitmap.offAll(),
            this.bitmap.disposeResource(),
            this.bitmap.dispose(),
            this.offAll(),
            this.bitmap = null,
            this._alreadyResolved = !1,
            this._destroy = !0,
            e.prototype.destroy.call(this));
        }
        ,
        t.dispose = function() {}
        ,
        t._createWebGLRenderTarget = function() {
            this.bitmap = new zt(this.width,this.height,this._surfaceFormat,this._surfaceType,this._depthStencilFormat,this._mipMap,this._repeat,this._minFifter,this._magFifter),
            this.bitmap.activeResource(),
            this._alreadyResolved = !0,
            this._destroy = !1,
            this._loaded = !0,
            this.bitmap.on("recovered", this, function(t) {
                this.event("recovered");
            });
        }
        ,
        n(0, t, "surfaceFormat", function() {
            return this._surfaceFormat;
        }),
        n(0, t, "magFifter", function() {
            return this._magFifter;
        }),
        n(0, t, "surfaceType", function() {
            return this._surfaceType;
        }),
        n(0, t, "mipMap", function() {
            return this._mipMap;
        }),
        n(0, t, "depthStencilFormat", function() {
            return this._depthStencilFormat;
        }),
        n(0, t, "minFifter", function() {
            return this._minFifter;
        }),
        n(0, t, "source", function() {
            return this._alreadyResolved ? b.superGet(k, this, "source") : null;
        }),
        u.create = function(t, e, i, n, a, s, r, o, h) {
            void 0 === i && (i = 6408),
            void 0 === n && (n = 5121),
            void 0 === a && (a = 34041),
            void 0 === s && (s = !1),
            void 0 === r && (r = !1),
            void 0 === o && (o = -1),
            void 0 === h && (h = -1);
            var l = u.POOL.pop();
            return l || (l = new u(t,e)),
            l.bitmap && l._w == t && l._h == e && l._surfaceFormat == i && l._surfaceType == n && l._depthStencilFormat == a && l._mipMap == s && l._repeat == r && l._minFifter == o && l._magFifter == h || (l._w = t,
            l._h = e,
            l._surfaceFormat = i,
            l._surfaceType = n,
            l._depthStencilFormat = a,
            m.isConchWebGL && 34041 === l._depthStencilFormat && (l._depthStencilFormat = 33189),
            l._mipMap = s,
            l._repeat = r,
            l._minFifter = o,
            l._magFifter = h,
            l.release(),
            l._createWebGLRenderTarget()),
            l;
        }
        ,
        u.TYPE2D = 1,
        u.TYPE3D = 2,
        u.POOL = [],
        u;
    }(k)
      , Bt = function(t) {
        function e() {
            this._glBuffer = null,
            this._buffer = null,
            this._bufferType = 0,
            this._bufferUsage = 0,
            this._byteLength = 0,
            e.__super.call(this),
            e._gl = St.mainContext;
        }
        d(e, "laya.webgl.utils.Buffer", v);
        var i = e.prototype;
        return i._bind = function() {
            this.activeResource(),
            e._bindActive[this._bufferType] !== this._glBuffer && (34962 === this._bufferType && (e._bindVertexBuffer = this._glBuffer),
            e._gl.bindBuffer(this._bufferType, e._bindActive[this._bufferType] = this._glBuffer),
            Nt.activeShader = null);
        }
        ,
        i.recreateResource = function() {
            this._glBuffer || (this._glBuffer = e._gl.createBuffer()),
            this.completeCreate();
        }
        ,
        i.disposeResource = function() {
            this._glBuffer && (St.mainContext.deleteBuffer(this._glBuffer),
            this._glBuffer = null),
            this.memorySize = 0;
        }
        ,
        n(0, i, "bufferUsage", function() {
            return this._bufferUsage;
        }),
        e._gl = null,
        e._bindActive = {},
        e._bindVertexBuffer = null,
        e._enableAtributes = [],
        e;
    }()
      , Gt = function(t) {
        function i(t) {
            this.texcoord = null,
            this.offsetX = 300,
            this.offsetY = 0,
            i.__super.call(this, 512, 0);
            var e = 8 * ft.BYTES_PE;
            this.position = [2, 5126, !1, e, 0],
            this.texcoord = [2, 5126, !1, e, 2 * ft.BYTES_PE],
            this.color = [4, 5126, !1, e, 4 * ft.BYTES_PE];
        }
        return d(i, "laya.webgl.shader.d2.skinAnishader.SkinSV", Mt),
        i;
    }()
      , Ft = function(t) {
        function e(t) {
            e.__super.call(this, 2, 0),
            this.color = [];
        }
        return d(e, "laya.webgl.shader.d2.value.Color2dSV", Mt),
        e.prototype.setValue = function(t) {
            t.fillStyle && (this.color = t.fillStyle._color._color),
            t.strokeStyle && (this.color = t.strokeStyle._color._color);
        }
        ,
        e;
    }()
      , Ut = function(t) {
        function e(t) {
            this.u_colorMatrix = null,
            this.strength = 0,
            this.colorMat = null,
            this.colorAlpha = null,
            this.u_TexRange = [0, 1, 0, 1],
            this.u_offset = [0, 0],
            this.texcoord = Mt._TEXCOORD,
            e.__super.call(this, 256, 0);
        }
        d(e, "laya.webgl.shader.d2.value.FillTextureSV", Mt);
        var i = e.prototype;
        return i.setValue = function(t) {
            this.ALPHA = t.ALPHA,
            t.filters && this.setFilters(t.filters);
        }
        ,
        i.clear = function() {
            this.texture = null,
            this.shader = null,
            this.defines.setValue(0);
        }
        ,
        e;
    }()
      , Ht = function(t) {
        function e(t) {
            this.u_colorMatrix = null,
            this.strength = 0,
            this.blurInfo = null,
            this.colorMat = null,
            this.colorAlpha = null,
            this.texcoord = Mt._TEXCOORD,
            void 0 === t && (t = 0),
            e.__super.call(this, 1, t);
        }
        d(e, "laya.webgl.shader.d2.value.TextureSV", Mt);
        var i = e.prototype;
        return i.setValue = function(t) {
            this.ALPHA = t.ALPHA,
            t.filters && this.setFilters(t.filters);
        }
        ,
        i.clear = function() {
            this.texture = null,
            this.shader = null,
            this.defines.setValue(0);
        }
        ,
        e;
    }()
      , Vt = function(t) {
        function e(t) {
            this.a_color = null,
            this.u_pos = [0, 0],
            e.__super.call(this, 4, 0),
            this.position = [2, 5126, !1, 5 * ft.BYTES_PE, 0],
            this.a_color = [3, 5126, !1, 5 * ft.BYTES_PE, 2 * ft.BYTES_PE];
        }
        return d(e, "laya.webgl.shader.d2.value.PrimitiveSV", Mt),
        e;
    }()
      , Yt = function(t) {
        function e() {
            this._atlaser = null,
            this._flashCacheImage = null,
            this._flashCacheImageNeedFlush = !1,
            e.__super.call(this);
        }
        d(e, "laya.webgl.atlas.AtlasWebGLCanvas", t);
        var i = e.prototype;
        return i.recreateResource = function() {
            var t = St.mainContext
              , e = this._source = t.createTexture()
              , i = xt.curBindTexTarget
              , n = xt.curBindTexValue;
            xt.bindTexture(t, 3553, e),
            t.texImage2D(3553, 0, 6408, this._w, this._h, 0, 6408, 5121, null),
            t.texParameteri(3553, 10241, 9729),
            t.texParameteri(3553, 10240, 9729),
            t.texParameteri(3553, 10242, 33071),
            t.texParameteri(3553, 10243, 33071),
            i && n && xt.bindTexture(t, i, n),
            this.memorySize = this._w * this._h * 4,
            this.completeCreate();
        }
        ,
        i.disposeResource = function() {
            this._source && (St.mainContext.deleteTexture(this._source),
            this._source = null,
            this.memorySize = 0);
        }
        ,
        i.texSubImage2D = function(t, e, i) {
            if (m.isFlash) {
                this._flashCacheImage || (this._flashCacheImage = f.create(""),
                this._flashCacheImage._image.createCanvas(this._w, this._h));
                var n = i.bitmapdata;
                this._flashCacheImage._image.copyPixels(n, 0, 0, n.width, n.height, t, e),
                this._flashCacheImageNeedFlush || (this._flashCacheImageNeedFlush = !0);
            } else {
                var a = St.mainContext
                  , s = xt.curBindTexTarget
                  , r = xt.curBindTexValue;
                xt.bindTexture(a, 3553, this._source),
                m.isConchWebGL ? (i !== ConchTextCanvas && (0 <= t - 1 && a.texSubImage2DEx(!0, 3553, 0, t - 1, e, 6408, 5121, i),
                t + 1 <= this._w && a.texSubImage2DEx(!0, 3553, 0, t + 1, e, 6408, 5121, i),
                0 <= e - 1 && a.texSubImage2DEx(!0, 3553, 0, t, e - 1, 6408, 5121, i),
                e + 1 <= this._h && a.texSubImage2DEx(!0, 3553, 0, t, e + 1, 6408, 5121, i)),
                a.texSubImage2DEx(!0, 3553, 0, t, e, 6408, 5121, i)) : (a.pixelStorei(37441, !0),
                0 <= t - 1 && a.texSubImage2D(3553, 0, t - 1, e, 6408, 5121, i),
                t + 1 <= this._w && a.texSubImage2D(3553, 0, t + 1, e, 6408, 5121, i),
                0 <= e - 1 && a.texSubImage2D(3553, 0, t, e - 1, 6408, 5121, i),
                e + 1 <= this._h && a.texSubImage2D(3553, 0, t, e + 1, 6408, 5121, i),
                a.texSubImage2D(3553, 0, t, e, 6408, 5121, i),
                a.pixelStorei(37441, !1)),
                s && r && xt.bindTexture(a, s, r);
            }
        }
        ,
        i.texSubImage2DPixel = function(t, e, i, n, a) {
            var s = St.mainContext
              , r = xt.curBindTexTarget
              , o = xt.curBindTexValue;
            xt.bindTexture(s, 3553, this._source);
            var h = new Uint8Array(a.data);
            m.isConchWebGL ? s.texSubImage2DEx(!0, 3553, 0, t, e, i, n, 6408, 5121, h) : (s.pixelStorei(37441, !0),
            s.texSubImage2D(3553, 0, t, e, i, n, 6408, 5121, h),
            s.pixelStorei(37441, !1)),
            r && o && xt.bindTexture(s, r, o);
        }
        ,
        n(0, i, "width", t.prototype._$get_width, function(t) {
            this._w = t;
        }),
        n(0, i, "height", t.prototype._$get_height, function(t) {
            this._h = t;
        }),
        e;
    }(i)
      , Xt = function(t) {
        function a() {
            this.flipY = !0,
            this.alwaysChange = !1,
            a.__super.call(this);
        }
        d(a, "laya.webgl.resource.WebGLCanvas", i);
        var e = a.prototype;
        return e.getCanvas = function() {
            return this._canvas;
        }
        ,
        e.clear = function() {
            this._ctx && this._ctx.clear();
        }
        ,
        e.destroy = function() {
            this._ctx && this._ctx.destroy(),
            this._ctx = null,
            laya.resource.Resource.prototype.destroy.call(this);
        }
        ,
        e._setContext = function(t) {
            this._ctx = t;
        }
        ,
        e.getContext = function(t, e) {
            return this._ctx ? this._ctx : this._ctx = a._createContext(this);
        }
        ,
        e.size = function(t, e) {
            this._w == t && this._h == e || (this._w = t,
            this._h = e,
            this._ctx && this._ctx.size(t, e),
            this._canvas && (this._canvas.height = e,
            this._canvas.width = t));
        }
        ,
        e.activeResource = function(t) {
            void 0 === t && (t = !1),
            this._source || this.recreateResource();
        }
        ,
        e.recreateResource = function() {
            this.createWebGlTexture(),
            this.completeCreate();
        }
        ,
        e.disposeResource = function() {
            this._source && !this.iscpuSource && (St.mainContext.deleteTexture(this._source),
            this._source = null,
            this.memorySize = 0);
        }
        ,
        e.createWebGlTexture = function() {
            var t = St.mainContext;
            this._canvas;
            var e = this._source = t.createTexture();
            this.iscpuSource = !1;
            var i = xt.curBindTexTarget
              , n = xt.curBindTexValue;
            xt.bindTexture(t, 3553, e),
            t.pixelStorei(37440, this.flipY ? 1 : 0),
            m.isConchWebGL ? t.texImage2DEx(a.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (a.premulAlpha && t.pixelStorei(37441, !0),
            t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData),
            a.premulAlpha && t.pixelStorei(37441, !1)),
            t.texParameteri(3553, 10240, 9729),
            t.texParameteri(3553, 10241, 9729),
            t.texParameteri(3553, 10242, 33071),
            t.texParameteri(3553, 10243, 33071),
            t.pixelStorei(37440, 0),
            this.memorySize = this._w * this._h * 4,
            i && n && xt.bindTexture(t, i, n);
        }
        ,
        e.reloadCanvasData = function() {
            var t = St.mainContext;
            if (!this._source)
                throw "reloadCanvasData error, gl texture not created!";
            var e = xt.curBindTexTarget
              , i = xt.curBindTexValue;
            xt.bindTexture(t, 3553, this._source),
            m.isConchWebGL ? t.texImage2DEx(a.premulAlpha, 3553, 0, 6408, 6408, 5121, this._imgData) : (a.premulAlpha && t.pixelStorei(37441, !0),
            t.texImage2D(3553, 0, 6408, 6408, 5121, this._imgData),
            a.premulAlpha && t.pixelStorei(37441, !1)),
            t.pixelStorei(37440, 0),
            e && i && xt.bindTexture(t, e, i);
        }
        ,
        e.texSubImage2D = function(t, e, i) {
            var n = St.mainContext
              , a = xt.curBindTexTarget
              , s = xt.curBindTexValue;
            xt.bindTexture(n, 3553, this._source),
            m.isConchWebGL ? n.texSubImage2DEx(!0, 3553, 0, e, i, 6408, 5121, t._source) : (n.pixelStorei(37441, !0),
            n.texSubImage2D(3553, 0, e, i, 6408, 5121, t._source),
            n.pixelStorei(37441, !1)),
            a && s && xt.bindTexture(n, a, s);
        }
        ,
        e.toBase64 = function(t, e, i) {
            var n = null;
            this._canvas && (n = this._canvas.toDataURL(t, e)),
            i.call(this, n);
        }
        ,
        n(0, e, "context", function() {
            return this._ctx;
        }),
        n(0, e, "source", function() {
            return this.alwaysChange && this.reloadCanvasData(),
            this._source;
        }),
        n(0, e, "asBitmap", null, function(t) {
            this._ctx && (this._ctx.asBitmap = t);
        }),
        a._createContext = null,
        a.premulAlpha = !1,
        a;
    }()
      , Wt = function(t) {
        function s(t, e) {
            this.CborderSize = 12,
            s.__super.call(this),
            this.char = t,
            this.isSpace = " " === t,
            this.xs = e.scaleX,
            this.ys = e.scaleY,
            this.font = e.font.toString(),
            this.fontSize = e.font.size,
            this.fillColor = e.fillColor,
            this.borderColor = e.borderColor,
            this.lineWidth = e.lineWidth,
            this.underLine = e.underLine;
            var i, n = m.isConchApp;
            n ? ((i = ConchTextCanvas)._source = ConchTextCanvas,
            i._source.canvas = ConchTextCanvas) : i = _.canvas.source,
            this.canvas = i,
            this._enableMerageInAtlas = !0,
            this._ctx = n ? i : this.canvas.getContext("2d", void 0);
            var a = N.measureText(this.char, this.font);
            this.cw = a.width * this.xs,
            this.ch = (a.height || this.fontSize) * this.ys,
            this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize),
            this.texture = new k(this);
        }
        d(s, "laya.webgl.resource.WebGLCharImage", i);
        var e = s.prototype;
        return b.imps(e, {
            "laya.webgl.resource.IMergeAtlasBitmap": !0
        }),
        e.active = function() {
            this.texture.active();
        }
        ,
        e.recreateResource = function() {
            var t = m.isConchApp;
            if (this.onresize(this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize),
            this.canvas && (this.canvas.height = this._h,
            this.canvas.width = this._w),
            t) {
                var e = this.fontSize;
                1 == this.xs && 1 == this.ys || (e = parseInt(e * (this.xs > this.ys ? this.xs : this.ys) + ""));
                var i = "normal 100 " + this.font;
                i = i.replace(s._fontSizeReg, e),
                this.borderColor && (i += " 1 " + this.borderColor),
                this._ctx.font = i,
                this._ctx.textBaseline = "top",
                this._ctx.fillStyle = this.fillColor,
                this._ctx.fillText(this.char, this.CborderSize, this.CborderSize, null, null, null);
            } else {
                if (this._ctx.save(),
                this._ctx.lineJoin = "round",
                this._ctx.clearRect(0, 0, this.cw + 2 * this.CborderSize, this.ch + 2 * this.CborderSize),
                this._ctx.font = this.font,
                R.RightToLeft && (this._ctx.textAlign = "end"),
                this._ctx.textBaseline = "top",
                this._ctx.translate(this.CborderSize, this.CborderSize),
                1 == this.xs && 1 == this.ys || this._ctx.scale(this.xs, this.ys),
                this.fillColor && this.borderColor ? (this._ctx.strokeStyle = this.borderColor,
                this._ctx.lineWidth = this.lineWidth,
                this._ctx.strokeText(this.char, 0, 0, null, null, 0, null),
                this._ctx.fillStyle = this.fillColor,
                this._ctx.fillText(this.char, 0, 0, null, null, null)) : -1 === this.lineWidth ? (this._ctx.fillStyle = this.fillColor ? this.fillColor : "white",
                this._ctx.fillText(this.char, 0, 0, null, null, null)) : (this._ctx.strokeStyle = this.borderColor ? this.borderColor : "white",
                this._ctx.lineWidth = this.lineWidth,
                this._ctx.strokeText(this.char, 0, 0, null, null, 0, null)),
                this.underLine) {
                    this._ctx.lineWidth = 1,
                    this._ctx.strokeStyle = this.fillColor,
                    this._ctx.beginPath(),
                    this._ctx.moveTo(0, this.fontSize + 1);
                    var n = this._ctx.measureText(this.char).width + 1;
                    this._ctx.lineTo(n, this.fontSize + 1),
                    this._ctx.stroke();
                }
                this._ctx.restore();
            }
            this.borderSize = this.CborderSize,
            this.completeCreate();
        }
        ,
        e.onresize = function(t, e) {
            this._w = t,
            this._h = e,
            this._allowMerageInAtlas = !0;
        }
        ,
        e.clearAtlasSource = function() {}
        ,
        n(0, e, "allowMerageInAtlas", function() {
            return this._allowMerageInAtlas;
        }),
        n(0, e, "atlasSource", function() {
            return this.canvas;
        }),
        n(0, e, "atlasImgData", function() {
            return !s.canUseCanvas && this._ctx.getImageData ? this._ctx.getImageData(0, 0, this._w, this._h) : null;
        }),
        n(0, e, "enableMerageInAtlas", function() {
            return this._enableMerageInAtlas;
        }, function(t) {
            this._enableMerageInAtlas = t;
        }),
        s.createOneChar = function(t, e) {
            return new s(t,e);
        }
        ,
        s.canUseCanvas = !0,
        s._fontSizeReg = new RegExp("\\d+(?=px)","g"),
        s;
    }()
      , zt = function(t) {
        function l(t, e, i, n, a, s, r, o, h) {
            void 0 === i && (i = 6408),
            void 0 === n && (n = 5121),
            void 0 === a && (a = 34041),
            void 0 === s && (s = !1),
            void 0 === r && (r = !1),
            void 0 === o && (o = -1),
            void 0 === h && (h = 1),
            l.__super.call(this),
            this._w = t,
            this._h = e,
            this._surfaceFormat = i,
            this._surfaceType = n,
            this._depthStencilFormat = a,
            m.isConchWebGL && 34041 === this._depthStencilFormat && (this._depthStencilFormat = 33189),
            this._mipMap = s,
            this._repeat = r,
            this._minFifter = o,
            this._magFifter = h;
        }
        d(l, "laya.webgl.resource.WebGLRenderTarget", i);
        var e = l.prototype;
        return e.recreateResource = function() {
            var t = St.mainContext;
            this._frameBuffer || (this._frameBuffer = t.createFramebuffer()),
            this._source || (this._source = t.createTexture());
            var e = xt.curBindTexTarget
              , i = xt.curBindTexValue;
            xt.bindTexture(t, 3553, this._source),
            t.texImage2D(3553, 0, 6408, this._w, this._h, 0, this._surfaceFormat, this._surfaceType, null);
            var n = this._minFifter
              , a = this._magFifter
              , s = this._repeat ? 10497 : 33071
              , r = h.isPOT(this._w, this._h);
            if (r ? (this._mipMap ? -1 !== n || (n = 9987) : -1 !== n || (n = 9729),
            -1 !== a || (a = 9729),
            t.texParameteri(3553, 10241, n),
            t.texParameteri(3553, 10240, a),
            t.texParameteri(3553, 10242, s),
            t.texParameteri(3553, 10243, s),
            this._mipMap && t.generateMipmap(3553)) : (-1 !== n || (n = 9729),
            -1 !== a || (a = 9729),
            t.texParameteri(3553, 10241, n),
            t.texParameteri(3553, 10240, a),
            t.texParameteri(3553, 10242, 33071),
            t.texParameteri(3553, 10243, 33071)),
            t.bindFramebuffer(36160, this._frameBuffer),
            t.framebufferTexture2D(36160, 36064, 3553, this._source, 0),
            this._depthStencilFormat)
                switch (this._depthStencilBuffer || (this._depthStencilBuffer = t.createRenderbuffer()),
                t.bindRenderbuffer(36161, this._depthStencilBuffer),
                t.renderbufferStorage(36161, this._depthStencilFormat, this._w, this._h),
                this._depthStencilFormat) {
                case 33189:
                    t.framebufferRenderbuffer(36160, 36096, 36161, this._depthStencilBuffer);
                    break;

                case 36168:
                    t.framebufferRenderbuffer(36160, 36128, 36161, this._depthStencilBuffer);
                    break;

                case 34041:
                    t.framebufferRenderbuffer(36160, 33306, 36161, this._depthStencilBuffer);
                }
            t.bindFramebuffer(36160, null),
            e && i && xt.bindTexture(t, e, i),
            t.bindRenderbuffer(36161, null),
            r && this._mipMap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4,
            this.completeCreate();
        }
        ,
        e.disposeResource = function() {
            this._frameBuffer && (St.mainContext.deleteTexture(this._source),
            St.mainContext.deleteFramebuffer(this._frameBuffer),
            St.mainContext.deleteRenderbuffer(this._depthStencilBuffer),
            this._source = null,
            this._frameBuffer = null,
            this._depthStencilBuffer = null,
            this.memorySize = 0);
        }
        ,
        n(0, e, "depthStencilBuffer", function() {
            return this._depthStencilBuffer;
        }),
        n(0, e, "frameBuffer", function() {
            return this._frameBuffer;
        }),
        l;
    }()
      , Kt = function(t) {
        function o(t, e, i, n, a, s, r) {
            this.offsetX = 0,
            this.offsetY = 0,
            o.__super.call(this),
            this.repeat = !0,
            this.mipmap = !1,
            this.minFifter = -1,
            this.magFifter = -1,
            this.atlasImage = s,
            this.canvas = t,
            this._ctx = t.getContext("2d", void 0),
            this._w = n,
            this._h = a,
            this.offsetX = e,
            this.offsetY = i,
            this.src = r,
            this._enableMerageInAtlas = !0,
            U.enabled && this._w < U.atlasLimitWidth && this._h < U.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
        }
        d(o, "laya.webgl.resource.WebGLSubImage", i);
        var e = o.prototype;
        return b.imps(e, {
            "laya.webgl.resource.IMergeAtlasBitmap": !0
        }),
        e.size = function(t, e) {
            this._w = t,
            this._h = e,
            this._ctx && this._ctx.size(t, e),
            this.canvas && (this.canvas.height = e,
            this.canvas.width = t);
        }
        ,
        e.recreateResource = function() {
            this.size(this._w, this._h),
            this._ctx.drawImage(this.atlasImage, this.offsetX, this.offsetY, this._w, this._h, 0, 0, this._w, this._h),
            this._allowMerageInAtlas && this._enableMerageInAtlas ? this.memorySize = 0 : this.createWebGlTexture(),
            this.completeCreate();
        }
        ,
        e.createWebGlTexture = function() {
            var t = St.mainContext;
            if (!this.canvas)
                throw "create GLTextur err:no data:" + this.canvas;
            var e = this._source = t.createTexture()
              , i = xt.curBindTexTarget
              , n = xt.curBindTexValue;
            xt.bindTexture(t, 3553, e),
            m.isConchWebGL ? t.texImage2DEx(!0, 3553, 0, 6408, 6408, 5121, this.canvas) : (t.pixelStorei(37441, !0),
            t.texImage2D(3553, 0, 6408, 6408, 5121, this.canvas),
            t.pixelStorei(37441, !1));
            var a = this.minFifter
              , s = this.magFifter
              , r = this.repeat ? 10497 : 33071
              , o = h.isPOT(this.width, this.height);
            o ? (this.mipmap ? -1 !== a || (a = 9987) : -1 !== a || (a = 9729),
            -1 !== s || (s = 9729),
            t.texParameteri(3553, 10240, s),
            t.texParameteri(3553, 10241, a),
            t.texParameteri(3553, 10242, r),
            t.texParameteri(3553, 10243, r),
            this.mipmap && t.generateMipmap(3553)) : (-1 !== a || (a = 9729),
            -1 !== s || (s = 9729),
            t.texParameteri(3553, 10241, a),
            t.texParameteri(3553, 10240, s),
            t.texParameteri(3553, 10242, 33071),
            t.texParameteri(3553, 10243, 33071)),
            i && n && xt.bindTexture(t, i, n),
            this.canvas = null,
            o && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4;
        }
        ,
        e.disposeResource = function() {
            U.enabled && this._allowMerageInAtlas || !this._source || (St.mainContext.deleteTexture(this._source),
            this._source = null,
            this.memorySize = 0);
        }
        ,
        e.clearAtlasSource = function() {}
        ,
        n(0, e, "allowMerageInAtlas", function() {
            return this._allowMerageInAtlas;
        }),
        n(0, e, "atlasSource", function() {
            return this.canvas;
        }),
        n(0, e, "enableMerageInAtlas", function() {
            return this._allowMerageInAtlas;
        }, function(t) {
            this._allowMerageInAtlas = t;
        }),
        o;
    }()
      , jt = function(t) {
        function l(t, e, i, n) {
            if (this._curActTexIndex = 0,
            this.tag = {},
            this._program = null,
            this._params = null,
            this._paramsMap = {},
            this._offset = 0,
            l.__super.call(this),
            !t || !e)
                throw "Shader Error";
            this._id = ++l._count,
            this._vs = t,
            this._ps = e,
            this._nameMap = n || {},
            null != i && (l.sharders[i] = this);
        }
        d(l, "laya.webgl.shader.Shader", Nt);
        var e = l.prototype;
        return e.recreateResource = function() {
            this._compile(),
            this.completeCreate(),
            this.memorySize = 0;
        }
        ,
        e.disposeResource = function() {
            St.mainContext.deleteShader(this._vshader),
            St.mainContext.deleteShader(this._pshader),
            St.mainContext.deleteProgram(this._program),
            this._vshader = this._pshader = this._program = null,
            this._params = null,
            this._paramsMap = {},
            this.memorySize = 0,
            this._curActTexIndex = 0;
        }
        ,
        e._compile = function() {
            if (this._vs && this._ps && !this._params) {
                this._reCompile = !0,
                this._params = [];
                var t = [this._vs, this._ps]
                  , e = St.mainContext;
                if (this._program = e.createProgram(),
                this._vshader = l._createShader(e, t[0], 35633),
                this._pshader = l._createShader(e, t[1], 35632),
                e.attachShader(this._program, this._vshader),
                e.attachShader(this._program, this._pshader),
                e.linkProgram(this._program),
                !m.isConchApp && !e.getProgramParameter(this._program, 35714))
                    throw e.getProgramInfoLog(this._program);
                var i, n, a = 0, s = 0;
                for (s = m.isConchApp ? e.getProgramParameterEx(this._vs, this._ps, "", 35721) : e.getProgramParameter(this._program, 35721),
                a = 0; a < s; a++) {
                    var r = null;
                    i = {
                        vartype: "attribute",
                        glfun: null,
                        ivartype: 0,
                        attrib: r = m.isConchApp ? e.getActiveAttribEx(this._vs, this._ps, "", a) : e.getActiveAttrib(this._program, a),
                        location: e.getAttribLocation(this._program, r.name),
                        name: r.name,
                        type: r.type,
                        isArray: !1,
                        isSame: !1,
                        preValue: null,
                        indexOfParams: 0
                    },
                    this._params.push(i);
                }
                var o = 0;
                for (o = m.isConchApp ? e.getProgramParameterEx(this._vs, this._ps, "", 35718) : e.getProgramParameter(this._program, 35718),
                a = 0; a < o; a++) {
                    var h = null;
                    h = m.isConchApp ? e.getActiveUniformEx(this._vs, this._ps, "", a) : e.getActiveUniform(this._program, a),
                    0 < (i = {
                        vartype: "uniform",
                        glfun: null,
                        ivartype: 1,
                        attrib: r,
                        location: e.getUniformLocation(this._program, h.name),
                        name: h.name,
                        type: h.type,
                        isArray: !1,
                        isSame: !1,
                        preValue: null,
                        indexOfParams: 0
                    }).name.indexOf("[0]") && (i.name = i.name.substr(0, i.name.length - 3),
                    i.isArray = !0,
                    i.location = e.getUniformLocation(this._program, i.name)),
                    this._params.push(i);
                }
                for (a = 0,
                n = this._params.length; a < n; a++)
                    if ((i = this._params[a]).indexOfParams = a,
                    i.index = 1,
                    i.value = [i.location, null],
                    i.codename = i.name,
                    i.name = this._nameMap[i.codename] ? this._nameMap[i.codename] : i.codename,
                    (this._paramsMap[i.name] = i)._this = this,
                    i.uploadedValue = [],
                    "attribute" !== i.vartype)
                        switch (i.type) {
                        case 5124:
                            i.fun = i.isArray ? this._uniform1iv : this._uniform1i;
                            break;

                        case 5126:
                            i.fun = i.isArray ? this._uniform1fv : this._uniform1f;
                            break;

                        case 35664:
                            i.fun = i.isArray ? this._uniform_vec2v : this._uniform_vec2;
                            break;

                        case 35665:
                            i.fun = i.isArray ? this._uniform_vec3v : this._uniform_vec3;
                            break;

                        case 35666:
                            i.fun = i.isArray ? this._uniform_vec4v : this._uniform_vec4;
                            break;

                        case 35678:
                            i.fun = this._uniform_sampler2D;
                            break;

                        case 35680:
                            i.fun = this._uniform_samplerCube;
                            break;

                        case 35676:
                            i.glfun = e.uniformMatrix4fv,
                            i.fun = this._uniformMatrix4fv;
                            break;

                        case 35670:
                            i.fun = this._uniform1i;
                            break;

                        case 35674:
                        case 35675:
                        default:
                            throw new Error("compile shader err!");
                        }
                    else
                        i.fun = this._attribute;
            }
        }
        ,
        e.getUniform = function(t) {
            return this._paramsMap[t];
        }
        ,
        e._attribute = function(t, e) {
            var i = St.mainContext
              , n = Bt._enableAtributes
              , a = t.location;
            return n[a] || i.enableVertexAttribArray(a),
            i.vertexAttribPointer(a, e[0], e[1], e[2], e[3], e[4] + this._offset),
            n[a] = Bt._bindVertexBuffer,
            1;
        }
        ,
        e._uniform1f = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e ? (St.mainContext.uniform1f(t.location, i[0] = e),
            1) : 0;
        }
        ,
        e._uniform1fv = function(t, e) {
            if (e.length < 4) {
                var i = t.uploadedValue;
                return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (St.mainContext.uniform1fv(t.location, e),
                i[0] = e[0],
                i[1] = e[1],
                i[2] = e[2],
                i[3] = e[3],
                1) : 0;
            }
            return St.mainContext.uniform1fv(t.location, e),
            1;
        }
        ,
        e._uniform_vec2 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] ? (St.mainContext.uniform2f(t.location, i[0] = e[0], i[1] = e[1]),
            1) : 0;
        }
        ,
        e._uniform_vec2v = function(t, e) {
            if (e.length < 2) {
                var i = t.uploadedValue;
                return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (St.mainContext.uniform2fv(t.location, e),
                i[0] = e[0],
                i[1] = e[1],
                i[2] = e[2],
                i[3] = e[3],
                1) : 0;
            }
            return St.mainContext.uniform2fv(t.location, e),
            1;
        }
        ,
        e._uniform_vec3 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (St.mainContext.uniform3f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]),
            1) : 0;
        }
        ,
        e._uniform_vec3v = function(t, e) {
            return St.mainContext.uniform3fv(t.location, e),
            1;
        }
        ,
        e._uniform_vec4 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (St.mainContext.uniform4f(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]),
            1) : 0;
        }
        ,
        e._uniform_vec4v = function(t, e) {
            return St.mainContext.uniform4fv(t.location, e),
            1;
        }
        ,
        e._uniformMatrix2fv = function(t, e) {
            return St.mainContext.uniformMatrix2fv(t.location, !1, e),
            1;
        }
        ,
        e._uniformMatrix3fv = function(t, e) {
            return St.mainContext.uniformMatrix3fv(t.location, !1, e),
            1;
        }
        ,
        e._uniformMatrix4fv = function(t, e) {
            return St.mainContext.uniformMatrix4fv(t.location, !1, e),
            1;
        }
        ,
        e._uniform1i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e ? (St.mainContext.uniform1i(t.location, i[0] = e),
            1) : 0;
        }
        ,
        e._uniform1iv = function(t, e) {
            return St.mainContext.uniform1iv(t.location, e),
            1;
        }
        ,
        e._uniform_ivec2 = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] ? (St.mainContext.uniform2i(t.location, i[0] = e[0], i[1] = e[1]),
            1) : 0;
        }
        ,
        e._uniform_ivec2v = function(t, e) {
            return St.mainContext.uniform2iv(t.location, e),
            1;
        }
        ,
        e._uniform_vec3i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] ? (St.mainContext.uniform3i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2]),
            1) : 0;
        }
        ,
        e._uniform_vec3vi = function(t, e) {
            return St.mainContext.uniform3iv(t.location, e),
            1;
        }
        ,
        e._uniform_vec4i = function(t, e) {
            var i = t.uploadedValue;
            return i[0] !== e[0] || i[1] !== e[1] || i[2] !== e[2] || i[3] !== e[3] ? (St.mainContext.uniform4i(t.location, i[0] = e[0], i[1] = e[1], i[2] = e[2], i[3] = e[3]),
            1) : 0;
        }
        ,
        e._uniform_vec4vi = function(t, e) {
            return St.mainContext.uniform4iv(t.location, e),
            1;
        }
        ,
        e._uniform_sampler2D = function(t, e) {
            var i = St.mainContext
              , n = t.uploadedValue;
            return null == n[0] ? (n[0] = this._curActTexIndex,
            i.uniform1i(t.location, this._curActTexIndex),
            i.activeTexture(l._TEXTURES[this._curActTexIndex]),
            xt.bindTexture(i, 3553, e),
            this._curActTexIndex++,
            1) : (i.activeTexture(l._TEXTURES[n[0]]),
            xt.bindTexture(i, 3553, e),
            0);
        }
        ,
        e._uniform_samplerCube = function(t, e) {
            var i = St.mainContext
              , n = t.uploadedValue;
            return null == n[0] ? (n[0] = this._curActTexIndex,
            i.uniform1i(t.location, this._curActTexIndex),
            i.activeTexture(l._TEXTURES[this._curActTexIndex]),
            xt.bindTexture(i, 34067, e),
            this._curActTexIndex++,
            1) : (i.activeTexture(l._TEXTURES[n[0]]),
            xt.bindTexture(i, 34067, e),
            0);
        }
        ,
        e._noSetValue = function(t) {
            console.log("no....:" + t.name);
        }
        ,
        e.uploadOne = function(t, e) {
            this.activeResource(),
            xt.UseProgram(this._program);
            var i = this._paramsMap[t];
            i.fun.call(this, i, e);
        }
        ,
        e.uploadTexture2D = function(t) {
            A.shaderCall++;
            var e = St.mainContext;
            e.activeTexture(33984),
            xt.bindTexture(e, 3553, t);
        }
        ,
        e.upload = function(t, e) {
            Nt.activeShader = Nt.bindShader = this,
            this._lastUseFrameCount === A.loopCount || this.activeResource(),
            xt.UseProgram(this._program),
            this._reCompile ? (e = this._params,
            this._reCompile = !1) : e = e || this._params;
            St.mainContext;
            for (var i, n, a = e.length, s = 0, r = 0; r < a; r++)
                null !== (n = t[(i = e[r]).name]) && (s += i.fun.call(this, i, n));
            A.shaderCall += s;
        }
        ,
        e.uploadArray = function(t, e, i) {
            Nt.activeShader = this,
            (Nt.bindShader = this).activeResource(),
            xt.UseProgram(this._program);
            this._params;
            for (var n, a, s = 0, r = e - 2; 0 <= r; r -= 2)
                (a = this._paramsMap[t[r]]) && null != (n = t[r + 1]) && (i && i[a.name] && i[a.name].bind(),
                s += a.fun.call(this, a, n));
            A.shaderCall += s;
        }
        ,
        e.getParams = function() {
            return this._params;
        }
        ,
        l.getShader = function(t) {
            return l.sharders[t];
        }
        ,
        l.create = function(t, e, i, n) {
            return new l(t,e,i,n);
        }
        ,
        l.withCompile = function(t, e, i, n) {
            if (i && l.sharders[i])
                return l.sharders[i];
            var a = l._preCompileShader[2e-4 * t];
            if (!a)
                throw new Error("withCompile shader err!" + t);
            return a.createShader(e, i, n);
        }
        ,
        l.withCompile2D = function(t, e, i, n, a) {
            if (n && l.sharders[n])
                return l.sharders[n];
            var s = l._preCompileShader[2e-4 * t + e];
            if (!s)
                throw new Error("withCompile shader err!" + t + " " + e);
            return s.createShader(i, n, a);
        }
        ,
        l.addInclude = function(t, e) {
            vt.addInclude(t, e);
        }
        ,
        l.preCompile = function(t, e, i, n) {
            var a = 2e-4 * t;
            l._preCompileShader[a] = new vt(a,e,i,n);
        }
        ,
        l.preCompile2D = function(t, e, i, n, a) {
            var s = 2e-4 * t + e;
            l._preCompileShader[s] = new vt(s,i,n,a);
        }
        ,
        l._createShader = function(t, e, i) {
            var n = t.createShader(i);
            return t.shaderSource(n, e),
            t.compileShader(n),
            n;
        }
        ,
        l._TEXTURES = [33984, 33985, 33986, 33987, 33988, 33989, 33990, , 33991, 33992],
        l._count = 0,
        l._preCompileShader = {},
        l.SHADERNAME2ID = 2e-4,
        l.sharders = ((l.sharders = []).length = 32,
        l.sharders),
        r(l, ["nameKey", function() {
            return this.nameKey = new L();
        }
        ]),
        l;
    }()
      , $t = function(t) {
        function e() {
            this._maxsize = 0,
            this._upload = !0,
            this._uploadSize = 0,
            e.__super.call(this),
            this.lock = !0;
        }
        d(e, "laya.webgl.utils.Buffer2D", t);
        var i = e.prototype;
        return i.needSize = function(t) {
            var e = this._byteLength;
            if (t) {
                var i = this._byteLength + t;
                i <= this._buffer.byteLength || this._resizeBuffer(i << 1, !0),
                this._byteLength = i;
            }
            return e;
        }
        ,
        i._bufferData = function() {
            this._maxsize = Math.max(this._maxsize, this._byteLength),
            A.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength,
            this._buffer = this._buffer.slice(0, this._maxsize + 64),
            this._checkArrayUse()),
            this._maxsize = this._byteLength),
            this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength,
            Bt._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage),
            this.memorySize = this._uploadSize),
            Bt._gl.bufferSubData(this._bufferType, 0, this._buffer);
        }
        ,
        i._bufferSubData = function(t, e, i) {
            if (void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            this._maxsize = Math.max(this._maxsize, this._byteLength),
            A.loopCount % 30 == 0 && (this._buffer.byteLength > this._maxsize + 64 && (this.memorySize = this._buffer.byteLength,
            this._buffer = this._buffer.slice(0, this._maxsize + 64),
            this._checkArrayUse()),
            this._maxsize = this._byteLength),
            this._uploadSize < this._buffer.byteLength && (this._uploadSize = this._buffer.byteLength,
            Bt._gl.bufferData(this._bufferType, this._uploadSize, this._bufferUsage),
            this.memorySize = this._uploadSize),
            e || i) {
                var n = this._buffer.slice(e, i);
                Bt._gl.bufferSubData(this._bufferType, t, n);
            } else
                Bt._gl.bufferSubData(this._bufferType, t, this._buffer);
        }
        ,
        i._checkArrayUse = function() {}
        ,
        i._bind_upload = function() {
            return !!this._upload && (this._upload = !1,
            this._bind(),
            this._bufferData(),
            !0);
        }
        ,
        i._bind_subUpload = function(t, e, i) {
            return void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0),
            !!this._upload && (this._upload = !1,
            this._bind(),
            this._bufferSubData(t, e, i),
            !0);
        }
        ,
        i._resizeBuffer = function(t, e) {
            if (t < this._buffer.byteLength)
                return this;
            if (this.memorySize = t,
            e && this._buffer && 0 < this._buffer.byteLength) {
                var i = new ArrayBuffer(t);
                new Uint8Array(i).set(new Uint8Array(this._buffer), 0),
                this._buffer = i;
            } else
                this._buffer = new ArrayBuffer(t);
            return this._checkArrayUse(),
            this._upload = !0,
            this;
        }
        ,
        i.append = function(t) {
            this._upload = !0;
            var e, i;
            e = t.byteLength,
            t instanceof Uint8Array ? (this._resizeBuffer(this._byteLength + e, !0),
            i = new Uint8Array(this._buffer,this._byteLength)) : t instanceof Uint16Array ? (this._resizeBuffer(this._byteLength + e, !0),
            i = new Uint16Array(this._buffer,this._byteLength)) : t instanceof Float32Array && (this._resizeBuffer(this._byteLength + e, !0),
            i = new Float32Array(this._buffer,this._byteLength)),
            i.set(t, 0),
            this._byteLength += e,
            this._checkArrayUse();
        }
        ,
        i.appendU16Array = function(t, e) {
            this._resizeBuffer(this._byteLength + 2 * e, !0);
            for (var i = new Uint16Array(this._buffer,this._byteLength,e), n = 0; n < e; n++)
                i[n] = t[n];
            this._byteLength += 2 * e,
            this._checkArrayUse();
        }
        ,
        i.appendEx = function(t, e) {
            this._upload = !0;
            var i;
            i = t.byteLength,
            this._resizeBuffer(this._byteLength + i, !0),
            new e(this._buffer,this._byteLength).set(t, 0),
            this._byteLength += i,
            this._checkArrayUse();
        }
        ,
        i.appendEx2 = function(t, e, i, n) {
            void 0 === n && (n = 1),
            this._upload = !0;
            var a, s;
            a = i * n,
            this._resizeBuffer(this._byteLength + a, !0),
            s = new e(this._buffer,this._byteLength);
            var r = 0;
            for (r = 0; r < i; r++)
                s[r] = t[r];
            this._byteLength += a,
            this._checkArrayUse();
        }
        ,
        i.getBuffer = function() {
            return this._buffer;
        }
        ,
        i.setNeedUpload = function() {
            this._upload = !0;
        }
        ,
        i.getNeedUpload = function() {
            return this._upload;
        }
        ,
        i.upload = function() {
            var t = this._bind_upload();
            return Bt._gl.bindBuffer(this._bufferType, null),
            Bt._bindActive[this._bufferType] = null,
            Nt.activeShader = null,
            t;
        }
        ,
        i.subUpload = function(t, e, i) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            void 0 === i && (i = 0);
            var n = this._bind_subUpload();
            return Bt._gl.bindBuffer(this._bufferType, null),
            Bt._bindActive[this._bufferType] = null,
            Nt.activeShader = null,
            n;
        }
        ,
        i.disposeResource = function() {
            t.prototype.disposeResource.call(this),
            this._upload = !0,
            this._uploadSize = 0;
        }
        ,
        i.clear = function() {
            this._byteLength = 0,
            this._upload = !0;
        }
        ,
        n(0, i, "bufferLength", function() {
            return this._buffer.byteLength;
        }),
        n(0, i, "byteLength", null, function(t) {
            this._byteLength !== t && (t <= this._buffer.byteLength || this._resizeBuffer(2 * t + 256, !0),
            this._byteLength = t);
        }),
        e.__int__ = function(t) {
            Jt.QuadrangleIB = Jt.create(35044),
            gt.fillIBQuadrangle(Jt.QuadrangleIB, 16);
        }
        ,
        e.FLOAT32 = 4,
        e.SHORT = 2,
        e;
    }(Bt)
      , qt = (function(e) {
        function i(t) {
            this.u_blurX = !1,
            this.u_color = null,
            this.u_offset = null,
            this.u_strength = NaN,
            this.u_texW = 0,
            this.u_texH = 0,
            i.__super.call(this, 9);
        }
        d(i, "laya.webgl.shader.d2.value.GlowSV", e);
        var t = i.prototype;
        t.setValue = function(t) {
            e.prototype.setValue.call(this, t);
        }
        ,
        t.clear = function() {
            e.prototype.clear.call(this);
        }
        ;
    }(Ht),
    function(t) {
        function e(t) {
            e.__super.call(this, 64),
            this.defines.add(64);
        }
        d(e, "laya.webgl.shader.d2.value.TextSV", t);
        var i = e.prototype;
        return i.release = function() {
            (e.pool[e._length++] = this).clear();
        }
        ,
        i.clear = function() {
            t.prototype.clear.call(this);
        }
        ,
        e.create = function() {
            return e._length ? e.pool[--e._length] : new e(null);
        }
        ,
        e.pool = [],
        e._length = 0,
        e;
    }(Ht))
      , Qt = function(t) {
        function a(t, e, i, n) {
            this._params2dQuick1 = null,
            this._params2dQuick2 = null,
            this._shaderValueWidth = NaN,
            this._shaderValueHeight = NaN,
            a.__super.call(this, t, e, i, n);
        }
        d(a, "laya.webgl.shader.d2.Shader2X", t);
        var e = a.prototype;
        return e.upload2dQuick1 = function(t) {
            this.upload(t, this._params2dQuick1 || this._make2dQuick1());
        }
        ,
        e._make2dQuick1 = function() {
            if (!this._params2dQuick1) {
                this.activeResource(),
                this._params2dQuick1 = [];
                for (var t, e = this._params, i = 0, n = e.length; i < n; i++)
                    t = e[i],
                    (m.isFlash || "size" !== t.name && "position" !== t.name && "texcoord" !== t.name) && this._params2dQuick1.push(t);
            }
            return this._params2dQuick1;
        }
        ,
        e.disposeResource = function() {
            t.prototype.disposeResource.call(this),
            this._params2dQuick1 = null,
            this._params2dQuick2 = null;
        }
        ,
        e.upload2dQuick2 = function(t) {
            this.upload(t, this._params2dQuick2 || this._make2dQuick2());
        }
        ,
        e._make2dQuick2 = function() {
            if (!this._params2dQuick2) {
                this.activeResource(),
                this._params2dQuick2 = [];
                for (var t, e = this._params, i = 0, n = e.length; i < n; i++)
                    t = e[i],
                    (m.isFlash || "size" !== t.name) && this._params2dQuick2.push(t);
            }
            return this._params2dQuick2;
        }
        ,
        a.create = function(t, e, i, n) {
            return new a(t,e,i,n);
        }
        ,
        a;
    }(jt)
      , Jt = function(t) {
        function e(t) {
            this._uint8Array = null,
            this._uint16Array = null,
            void 0 === t && (t = 35044),
            e.__super.call(this),
            this._bufferUsage = t,
            this._bufferType = 34963,
            m.isFlash || (this._buffer = new ArrayBuffer(8));
        }
        d(e, "laya.webgl.utils.IndexBuffer2D", $t);
        var i = e.prototype;
        return i._checkArrayUse = function() {
            this._uint8Array && (this._uint8Array = new Uint8Array(this._buffer)),
            this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));
        }
        ,
        i.getUint8Array = function() {
            return this._uint8Array || (this._uint8Array = new Uint8Array(this._buffer));
        }
        ,
        i.getUint16Array = function() {
            return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));
        }
        ,
        i.destory = function() {
            this._uint16Array = null,
            this._uint8Array = null,
            this._buffer = null;
        }
        ,
        e.QuadrangleIB = null,
        e.create = function(t) {
            return void 0 === t && (t = 35044),
            new e(t);
        }
        ,
        e;
    }()
      , Zt = function(t) {
        function i(t, e) {
            this._floatArray32 = null,
            this._vertexStride = 0,
            i.__super.call(this),
            this._vertexStride = t,
            this._bufferUsage = e,
            this._bufferType = 34962,
            m.isFlash || (this._buffer = new ArrayBuffer(8)),
            this.getFloat32Array();
        }
        d(i, "laya.webgl.utils.VertexBuffer2D", t);
        var e = i.prototype;
        return e.getFloat32Array = function() {
            return this._floatArray32 || (this._floatArray32 = new Float32Array(this._buffer));
        }
        ,
        e.bind = function(t) {
            t && t._bind(),
            this._bind();
        }
        ,
        e.insertData = function(t, e) {
            this.getFloat32Array().set(t, e),
            this._upload = !0;
        }
        ,
        e.bind_upload = function(t) {
            t._bind_upload() || t._bind(),
            this._bind_upload() || this._bind();
        }
        ,
        e._checkArrayUse = function() {
            this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));
        }
        ,
        e.disposeResource = function() {
            t.prototype.disposeResource.call(this);
        }
        ,
        e.destory = function() {
            this._byteLength = 0,
            this._upload = !0,
            this._buffer = null,
            this._floatArray32 = null;
        }
        ,
        n(0, e, "vertexStride", function() {
            return this._vertexStride;
        }),
        i.create = function(t, e) {
            return void 0 === e && (e = 35048),
            new i(t,e);
        }
        ,
        i;
    }($t)
      , te = function(t) {
        function s(t, e, i, n) {
            if (this._format = 0,
            this._mipmap = !1,
            this._allowMerageInAtlas = !1,
            this._enableMerageInAtlas = !1,
            this.repeat = !1,
            this._image = null,
            this.minFifter = 0,
            void (this.magFifter = 0) === i && (i = 6408),
            void 0 === n && (n = !0),
            s.__super.call(this, t, e),
            this._format = i,
            this._mipmap = n,
            this.repeat = !1,
            this.minFifter = -1,
            this.magFifter = -1,
            "string" == typeof t)
                this._url = t,
                this._src = t,
                this._image = new _.window.Image(),
                e && (e.onload && (this.onload = e.onload),
                e.onerror && (this.onerror = e.onerror),
                e.onCreate && e.onCreate(this)),
                this._image.crossOrigin = t && 0 == t.indexOf("data:") ? null : "",
                t && (this._image.src = t);
            else if (t instanceof ArrayBuffer) {
                this._src = e,
                this._url = this._src;
                var a = new o(t);
                a.readUTFBytes(4),
                a.readUTFBytes(2),
                a.getInt16();
                a.endian = "bigEndian",
                this._w = a.getInt16(),
                this._h = a.getInt16();
                a.getInt16(),
                a.getInt16();
                this._image = new Uint8Array(t,a.pos),
                this._format = St.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL,
                U.enabled && this._w < U.atlasLimitWidth && this._h < U.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
            } else
                this._src = e,
                this._url = this._src,
                this._image = t.source || t,
                this.onresize();
            this._$5__enableMerageInAtlas = !0;
        }
        d(s, "laya.webgl.resource.WebGLImage", f);
        var e = s.prototype;
        return b.imps(e, {
            "laya.webgl.resource.IMergeAtlasBitmap": !0
        }),
        e._init_ = function(t, e) {}
        ,
        e._createWebGlTexture = function() {
            if (!this._image)
                throw "create GLTextur err:no data:" + this._image;
            var t = St.mainContext
              , e = this._source = t.createTexture()
              , i = xt.curBindTexTarget
              , n = xt.curBindTexValue;
            if (xt.bindTexture(t, 3553, e),
            m.isConchWebGL)
                switch (this._format) {
                case 6408:
                    t.texImage2DEx(!0, 3553, 0, this._format, 6408, 5121, this._image);
                    break;

                case St.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                    t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
                }
            else {
                switch (t.pixelStorei(37441, !0),
                this._format) {
                case 6408:
                    t.texImage2D(3553, 0, this._format, 6408, 5121, this._image);
                    break;

                case St.compressEtc1.COMPRESSED_RGB_ETC1_WEBGL:
                    t.compressedTexImage2D(3553, 0, this._format, this._w, this._h, 0, this._image);
                }
                t.pixelStorei(37441, !1);
            }
            var a = this.minFifter
              , s = this.magFifter
              , r = this.repeat ? 10497 : 33071
              , o = h.isPOT(this._w, this._h);
            o ? (this.mipmap ? -1 !== a || (a = 9987) : -1 !== a || (a = 9729),
            -1 !== s || (s = 9729),
            t.texParameteri(3553, 10241, a),
            t.texParameteri(3553, 10240, s),
            t.texParameteri(3553, 10242, r),
            t.texParameteri(3553, 10243, r),
            this.mipmap && t.generateMipmap(3553)) : (-1 !== a || (a = 9729),
            -1 !== s || (s = 9729),
            t.texParameteri(3553, 10241, a),
            t.texParameteri(3553, 10240, s),
            t.texParameteri(3553, 10242, 33071),
            t.texParameteri(3553, 10243, 33071)),
            i && n && xt.bindTexture(t, i, n),
            this._image.onload = null,
            this._image = null,
            o && this.mipmap ? this.memorySize = this._w * this._h * 4 * (1 + 1 / 3) : this.memorySize = this._w * this._h * 4,
            this._recreateLock = !1;
        }
        ,
        e.recreateResource = function() {
            var t = this;
            if (null != this._src && "" !== this._src)
                if (this._needReleaseAgain = !1,
                this._image) {
                    if (this._recreateLock)
                        return;
                    this._allowMerageInAtlas && this._$5__enableMerageInAtlas ? (this.memorySize = 0,
                    this._recreateLock = !1) : this._createWebGlTexture(),
                    this.completeCreate();
                } else {
                    this._recreateLock = !0;
                    var e = this;
                    this._image = new _.window.Image(),
                    this._image.crossOrigin = 0 == this._src.indexOf("data:") ? null : "",
                    this._image.onload = function() {
                        if (e._needReleaseAgain)
                            return e._needReleaseAgain = !1,
                            e._image.onload = null,
                            void (e._image = null);
                        e._allowMerageInAtlas && e._enableMerageInAtlas ? (t.memorySize = 0,
                        t._recreateLock = !1) : e._createWebGlTexture(),
                        e.completeCreate();
                    }
                    ,
                    this._image.src = this._src;
                }
        }
        ,
        e.disposeResource = function() {
            this._recreateLock && (this._needReleaseAgain = !0),
            this._source && (St.mainContext.deleteTexture(this._source),
            this._source = null,
            this._image = null,
            this.memorySize = 0);
        }
        ,
        e.onresize = function() {
            this._w = this._image.width,
            this._h = this._image.height,
            U.enabled && this._w < U.atlasLimitWidth && this._h < U.atlasLimitHeight ? this._allowMerageInAtlas = !0 : this._allowMerageInAtlas = !1;
        }
        ,
        e.clearAtlasSource = function() {
            this._image = null;
        }
        ,
        n(0, e, "format", function() {
            return this._format;
        }),
        n(0, e, "enableMerageInAtlas", function() {
            return this._$5__enableMerageInAtlas;
        }, function(t) {
            this._$5__enableMerageInAtlas = t;
        }),
        n(0, e, "mipmap", function() {
            return this._mipmap;
        }),
        n(0, e, "allowMerageInAtlas", function() {
            return this._allowMerageInAtlas;
        }),
        n(0, e, "atlasSource", function() {
            return this._image;
        }),
        n(0, e, "onload", null, function(t) {
            var e = this;
            this._onload = t,
            this._image && (this._image.onload = null != this._onload ? function() {
                e.onresize(),
                e._onload();
            }
            : null);
        }),
        n(0, e, "onerror", null, function(t) {
            var e = this;
            this._onerror = t,
            this._image && (this._image.onerror = null != this._onerror ? function() {
                e._onerror();
            }
            : null);
        }),
        s;
    }();
    b.__init([_t, F, wt, vt]);
}(window, document, Laya),
"function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
    }
}),
function(t, e, f) {
    f.un,
    f.uns;
    var n = f.static
      , s = f.class
      , a = f.getset
      , i = (f.__newvec,
    laya.display.Animation)
      , r = laya.utils.Browser
      , g = laya.utils.ClassUtils
      , o = laya.filters.ColorFilter
      , h = laya.utils.Ease
      , l = laya.events.Event
      , u = (laya.events.EventDispatcher,
    laya.display.css.Font)
      , c = laya.display.FrameAnimation
      , d = laya.display.Graphics
      , _ = laya.utils.Handler
      , p = laya.display.Input
      , m = laya.net.Loader
      , y = (laya.display.Node,
    laya.maths.Point)
      , v = laya.maths.Rectangle
      , S = laya.renders.Render
      , x = laya.display.Sprite
      , b = laya.display.Text
      , w = laya.resource.Texture
      , M = laya.utils.Tween
      , I = laya.utils.Utils
      , T = laya.utils.WeakObject;
    f.interface("laya.ui.IItem"),
    f.interface("laya.ui.ISelect"),
    f.interface("laya.ui.IRender"),
    f.interface("laya.ui.IComponent"),
    f.interface("laya.ui.IBox", "IComponent");
    var C = function() {
        function t() {
            this.enable = !1,
            this.top = NaN,
            this.bottom = NaN,
            this.left = NaN,
            this.right = NaN,
            this.centerX = NaN,
            this.centerY = NaN,
            this.anchorX = NaN,
            this.anchorY = NaN;
        }
        return s(t, "laya.ui.LayoutStyle"),
        n(t, ["EMPTY", function() {
            return this.EMPTY = new t();
        }
        ]),
        t;
    }()
      , E = function() {
        function t() {}
        return s(t, "laya.ui.Styles"),
        t.labelColor = "#000000",
        t.buttonStateNum = 3,
        t.scrollBarMinNum = 15,
        t.scrollBarDelayTime = 500,
        n(t, ["defaultSizeGrid", function() {
            return this.defaultSizeGrid = [4, 4, 4, 4, 0];
        }
        , "labelPadding", function() {
            return this.labelPadding = [2, 2, 2, 2];
        }
        , "inputLabelPadding", function() {
            return this.inputLabelPadding = [1, 1, 1, 3];
        }
        , "buttonLabelColors", function() {
            return this.buttonLabelColors = ["#32556b", "#32cc6b", "#ff0000", "#C0C0C0"];
        }
        , "comboBoxItemColors", function() {
            return this.comboBoxItemColors = ["#5e95b6", "#ffffff", "#000000", "#8fa4b1", "#ffffff"];
        }
        ]),
        t;
    }()
      , P = function() {
        function a() {}
        return s(a, "laya.ui.UIUtils"),
        a.fillArray = function(t, e, i) {
            var n = t.concat();
            if (e)
                for (var a = e.split(","), s = 0, r = Math.min(n.length, a.length); s < r; s++) {
                    var o = a[s];
                    n[s] = "true" == o || "false" != o && o,
                    null != i && (n[s] = i(o));
                }
            return n;
        }
        ,
        a.toColor = function(t) {
            return I.toHexColor(t);
        }
        ,
        a.gray = function(t, e) {
            void 0 === e && (e = !0),
            e ? a.addFilter(t, a.grayFilter) : a.clearFilter(t, o);
        }
        ,
        a.addFilter = function(t, e) {
            var i = t.filters || [];
            i.push(e),
            t.filters = i;
        }
        ,
        a.clearFilter = function(t, e) {
            var i = t.filters;
            if (null != i && 0 < i.length) {
                for (var n = i.length - 1; -1 < n; n--) {
                    var a = i[n];
                    f.__typeof(a, e) && i.splice(n, 1);
                }
                t.filters = i;
            }
        }
        ,
        a._getReplaceStr = function(t) {
            return a.escapeSequence[t];
        }
        ,
        a.adptString = function(t) {
            return t.replace(/\\(\w)/g, a._getReplaceStr);
        }
        ,
        a.getBindFun = function(t) {
            var e = a._funMap.get(t);
            if (null == e) {
                var i = '"' + t + '"'
                  , n = "(function(data){if(data==null)return;with(data){try{\nreturn " + (i = i.replace(/^"\${|}"$/g, "").replace(/\${/g, '"+').replace(/}/g, '+"')) + "\n}catch(e){}}})";
                e = f._runScript(n),
                a._funMap.set(t, e);
            }
            return e;
        }
        ,
        n(a, ["grayFilter", function() {
            return this.grayFilter = new o([.3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, .3086, .6094, .082, 0, 0, 0, 0, 0, 1, 0]);
        }
        , "escapeSequence", function() {
            return this.escapeSequence = {
                "\\n": "\n",
                "\\t": "\t"
            };
        }
        , "_funMap", function() {
            return this._funMap = new T();
        }
        ]),
        a;
    }()
      , A = function() {
        function t() {}
        return s(t, "UIConfig"),
        t.touchScrollEnable = !0,
        t.mouseWheelEnable = !0,
        t.showButtons = !0,
        t.popupBgColor = "#000000",
        t.popupBgAlpha = .5,
        t.closeDialogOnSide = !0,
        t;
    }()
      , L = function(e) {
        function p() {
            this.autoCacheCmd = !0,
            this._width = 0,
            this._height = 0,
            this._source = null,
            this._sizeGrid = null,
            this._isChanged = !1,
            this._offset = null,
            p.__super.call(this);
        }
        s(p, "laya.ui.AutoBitmap", e);
        var t = p.prototype;
        return t.destroy = function() {
            e.prototype.destroy.call(this),
            this._source = null,
            this._sizeGrid = null,
            this._offset = null;
        }
        ,
        t._setChanged = function() {
            this._isChanged || (this._isChanged = !0,
            f.timer.callLater(this, this.changeSource));
        }
        ,
        t.changeSource = function() {
            this._isChanged = !1;
            var t = this._source;
            if (t && t.bitmap) {
                var e = this.width
                  , i = this.height
                  , n = this._sizeGrid
                  , a = t.sourceWidth
                  , s = t.sourceHeight;
                if (!n || a === e && s === i)
                    this.clear(),
                    this.drawTexture(t, this._offset ? this._offset[0] : 0, this._offset ? this._offset[1] : 0, e, i);
                else {
                    t.$_GID || (t.$_GID = I.getGID());
                    var r = t.$_GID + "." + e + "." + i + "." + n.join(".");
                    if (I.isOKCmdList(T.I.get(r)))
                        return void (this.cmds = T.I.get(r));
                    this.clear();
                    var o = n[0]
                      , h = n[1]
                      , l = n[2]
                      , u = n[3]
                      , c = n[4]
                      , d = !1;
                    if (e == a && (u = h = 0),
                    i == s && (o = l = 0),
                    e < u + h) {
                        var _ = e;
                        d = !0,
                        e = u + h,
                        this.save(),
                        this.clipRect(0, 0, _, i);
                    }
                    u && o && this.drawTexture(p.getTexture(t, 0, 0, u, o), 0, 0, u, o),
                    h && o && this.drawTexture(p.getTexture(t, a - h, 0, h, o), e - h, 0, h, o),
                    u && l && this.drawTexture(p.getTexture(t, 0, s - l, u, l), 0, i - l, u, l),
                    h && l && this.drawTexture(p.getTexture(t, a - h, s - l, h, l), e - h, i - l, h, l),
                    o && this.drawBitmap(c, p.getTexture(t, u, 0, a - u - h, o), u, 0, e - u - h, o),
                    l && this.drawBitmap(c, p.getTexture(t, u, s - l, a - u - h, l), u, i - l, e - u - h, l),
                    u && this.drawBitmap(c, p.getTexture(t, 0, o, u, s - o - l), 0, o, u, i - o - l),
                    h && this.drawBitmap(c, p.getTexture(t, a - h, o, h, s - o - l), e - h, o, h, i - o - l),
                    this.drawBitmap(c, p.getTexture(t, u, o, a - u - h, s - o - l), u, o, e - u - h, i - o - l),
                    d && this.restore(),
                    this.autoCacheCmd && !S.isConchApp && T.I.set(r, this.cmds);
                }
                this._repaint();
            }
        }
        ,
        t.drawBitmap = function(t, e, i, n, a, s) {
            void 0 === a && (a = 0),
            void 0 === s && (s = 0),
            a < .1 || s < .1 || (!t || e.width == a && e.height == s ? this.drawTexture(e, i, n, a, s) : this.fillTexture(e, i, n, a, s));
        }
        ,
        t.clear = function(t) {
            void 0 === t && (t = !0),
            e.prototype.clear.call(this, !1);
        }
        ,
        a(0, t, "sizeGrid", function() {
            return this._sizeGrid;
        }, function(t) {
            this._sizeGrid = t,
            this._setChanged();
        }),
        a(0, t, "width", function() {
            return this._width ? this._width : this._source ? this._source.sourceWidth : 0;
        }, function(t) {
            this._width != t && (this._width = t,
            this._setChanged());
        }),
        a(0, t, "height", function() {
            return this._height ? this._height : this._source ? this._source.sourceHeight : 0;
        }, function(t) {
            this._height != t && (this._height = t,
            this._setChanged());
        }),
        a(0, t, "source", function() {
            return this._source;
        }, function(t) {
            t ? (this._source = t,
            this._setChanged()) : (this._source = null,
            this.clear());
        }),
        p.getTexture = function(t, e, i, n, a) {
            n <= 0 && (n = 1),
            a <= 0 && (a = 1),
            t.$_GID || (t.$_GID = I.getGID());
            var s = t.$_GID + "." + e + "." + i + "." + n + "." + a
              , r = T.I.get(s);
            return r && r.source || (r = w.createFromTexture(t, e, i, n, a),
            T.I.set(s, r)),
            r;
        }
        ,
        p;
    }(d)
      , D = (function(t) {
        function e() {
            e.__super.call(this);
        }
        s(e, "laya.ui.UIEvent", l),
        e.SHOW_TIP = "showtip",
        e.HIDE_TIP = "hidetip";
    }(),
    function(e) {
        function t() {
            this._comXml = null,
            this._dataSource = null,
            this._toolTip = null,
            this._tag = null,
            this._disabled = !1,
            this._gray = !1,
            this.layoutEnabled = !0,
            t.__super.call(this),
            this._layout = C.EMPTY,
            this.preinitialize(),
            this.createChildren(),
            this.initialize();
        }
        s(t, "laya.ui.Component", e);
        var i = t.prototype;
        return f.imps(i, {
            "laya.ui.IComponent": !0
        }),
        i.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._dataSource = this._layout = null,
            this._tag = null,
            this._toolTip = null;
        }
        ,
        i.preinitialize = function() {}
        ,
        i.createChildren = function() {}
        ,
        i.initialize = function() {}
        ,
        i.callLater = function(t, e) {
            f.timer.callLater(this, t, e);
        }
        ,
        i.runCallLater = function(t) {
            f.timer.runCallLater(this, t);
        }
        ,
        i.commitMeasure = function() {}
        ,
        i.changeSize = function() {
            this.event("resize"),
            this._layout.enable && (this.resetLayoutX(),
            this.resetLayoutY());
        }
        ,
        i.getLayout = function() {
            return this._layout === C.EMPTY && (this._layout = new C()),
            this._layout;
        }
        ,
        i._setLayoutEnabled = function(t) {
            this._layout && this._layout.enable != t && (this._layout.enable = t,
            this.on("added", this, this.onAdded),
            this.on("removed", this, this.onRemoved),
            this.parent && this.onAdded());
        }
        ,
        i.onRemoved = function() {
            this.parent.off("resize", this, this.onCompResize);
        }
        ,
        i.onAdded = function() {
            this.parent.on("resize", this, this.onCompResize),
            this.resetLayoutX(),
            this.resetLayoutY();
        }
        ,
        i.onCompResize = function() {
            this._layout && this._layout.enable && (this.resetLayoutX(),
            this.resetLayoutY());
        }
        ,
        i.resetLayoutX = function() {
            var t = this._layout;
            if (isNaN(t.anchorX) || (this.pivotX = t.anchorX * this.width),
            this.layoutEnabled) {
                var e = this.parent;
                e && (isNaN(t.centerX) ? isNaN(t.left) ? isNaN(t.right) || (this.x = Math.round(e.width - this.displayWidth - t.right + this.pivotX * this.scaleX)) : (this.x = Math.round(t.left + this.pivotX * this.scaleX),
                isNaN(t.right) || (this.width = (e._width - t.left - t.right) / (this.scaleX || .01))) : this.x = Math.round(.5 * (e.width - this.displayWidth) + t.centerX + this.pivotX * this.scaleX));
            }
        }
        ,
        i.resetLayoutY = function() {
            var t = this._layout;
            if (isNaN(t.anchorY) || (this.pivotY = t.anchorY * this.height),
            this.layoutEnabled) {
                var e = this.parent;
                e && (isNaN(t.centerY) ? isNaN(t.top) ? isNaN(t.bottom) || (this.y = Math.round(e.height - this.displayHeight - t.bottom + this.pivotY * this.scaleY)) : (this.y = Math.round(t.top + this.pivotY * this.scaleY),
                isNaN(t.bottom) || (this.height = (e._height - t.top - t.bottom) / (this.scaleY || .01))) : this.y = Math.round(.5 * (e.height - this.displayHeight) + t.centerY + this.pivotY * this.scaleY));
            }
        }
        ,
        i.onMouseOver = function(t) {
            f.stage.event("showtip", this._toolTip);
        }
        ,
        i.onMouseOut = function(t) {
            f.stage.event("hidetip", this._toolTip);
        }
        ,
        i._childChanged = function(t) {
            this.callLater(this.changeSize),
            e.prototype._childChanged.call(this, t);
        }
        ,
        a(0, i, "displayWidth", function() {
            return this.width * this.scaleX;
        }),
        a(0, i, "width", function() {
            return this._width ? this._width : this.measureWidth;
        }, function(t) {
            this._width != t && (this._width = t,
            this.conchModel && this.conchModel.size(this._width, this._height),
            this.callLater(this.changeSize),
            !this._layout.enable || isNaN(this._layout.centerX) && isNaN(this._layout.right) && isNaN(this._layout.anchorX) || this.resetLayoutX());
        }),
        a(0, i, "measureWidth", function() {
            var t = 0;
            this.commitMeasure();
            for (var e = this.numChildren - 1; -1 < e; e--) {
                var i = this.getChildAt(e);
                i.visible && (t = Math.max(i.x + i.width * i.scaleX, t));
            }
            return t;
        }),
        a(0, i, "displayHeight", function() {
            return this.height * this.scaleY;
        }),
        a(0, i, "height", function() {
            return this._height ? this._height : this.measureHeight;
        }, function(t) {
            this._height != t && (this._height = t,
            this.conchModel && this.conchModel.size(this._width, this._height),
            this.callLater(this.changeSize),
            !this._layout.enable || isNaN(this._layout.centerY) && isNaN(this._layout.bottom) && isNaN(this._layout.anchorY) || this.resetLayoutY());
        }),
        a(0, i, "dataSource", function() {
            return this._dataSource;
        }, function(t) {
            for (var e in this._dataSource = t,
            this._dataSource)
                this.hasOwnProperty(e) && "function" != typeof this[e] && (this[e] = this._dataSource[e]);
        }),
        a(0, i, "scaleY", e.prototype._$get_scaleY, function(t) {
            f.superGet(x, this, "scaleY") != t && (f.superSet(x, this, "scaleY", t),
            this.callLater(this.changeSize),
            this._layout.enable && this.resetLayoutY());
        }),
        a(0, i, "measureHeight", function() {
            var t = 0;
            this.commitMeasure();
            for (var e = this.numChildren - 1; -1 < e; e--) {
                var i = this.getChildAt(e);
                i.visible && (t = Math.max(i.y + i.height * i.scaleY, t));
            }
            return t;
        }),
        a(0, i, "scaleX", e.prototype._$get_scaleX, function(t) {
            f.superGet(x, this, "scaleX") != t && (f.superSet(x, this, "scaleX", t),
            this.callLater(this.changeSize),
            this._layout.enable && this.resetLayoutX());
        }),
        a(0, i, "top", function() {
            return this._layout.top;
        }, function(t) {
            t != this._layout.top && (this.getLayout().top = t,
            this._setLayoutEnabled(!0)),
            this.resetLayoutY();
        }),
        a(0, i, "bottom", function() {
            return this._layout.bottom;
        }, function(t) {
            t != this._layout.bottom && (this.getLayout().bottom = t,
            this._setLayoutEnabled(!0)),
            this.resetLayoutY();
        }),
        a(0, i, "left", function() {
            return this._layout.left;
        }, function(t) {
            t != this._layout.left && (this.getLayout().left = t,
            this._setLayoutEnabled(!0)),
            this.resetLayoutX();
        }),
        a(0, i, "right", function() {
            return this._layout.right;
        }, function(t) {
            t != this._layout.right && (this.getLayout().right = t,
            this._setLayoutEnabled(!0)),
            this.resetLayoutX();
        }),
        a(0, i, "centerX", function() {
            return this._layout.centerX;
        }, function(t) {
            t != this._layout.centerX && (this.getLayout().centerX = t,
            this._setLayoutEnabled(!0)),
            this.resetLayoutX();
        }),
        a(0, i, "centerY", function() {
            return this._layout.centerY;
        }, function(t) {
            t != this._layout.centerY && (this.getLayout().centerY = t,
            this._setLayoutEnabled(!0)),
            this.resetLayoutY();
        }),
        a(0, i, "anchorX", function() {
            return this._layout.anchorX;
        }, function(t) {
            t != this._layout.anchorX && (this.getLayout().anchorX = t,
            this._setLayoutEnabled(!0)),
            this.resetLayoutX();
        }),
        a(0, i, "anchorY", function() {
            return this._layout.anchorY;
        }, function(t) {
            t != this._layout.anchorY && (this.getLayout().anchorY = t,
            this._setLayoutEnabled(!0)),
            this.resetLayoutY();
        }),
        a(0, i, "tag", function() {
            return this._tag;
        }, function(t) {
            this._tag = t;
        }),
        a(0, i, "toolTip", function() {
            return this._toolTip;
        }, function(t) {
            this._toolTip != t && (null != (this._toolTip = t) ? (this.on("mouseover", this, this.onMouseOver),
            this.on("mouseout", this, this.onMouseOut)) : (this.off("mouseover", this, this.onMouseOver),
            this.off("mouseout", this, this.onMouseOut)));
        }),
        a(0, i, "comXml", function() {
            return this._comXml;
        }, function(t) {
            this._comXml = t;
        }),
        a(0, i, "gray", function() {
            return this._gray;
        }, function(t) {
            t !== this._gray && (this._gray = t,
            P.gray(this, t));
        }),
        a(0, i, "disabled", function() {
            return this._disabled;
        }, function(t) {
            t !== this._disabled && (this.gray = this._disabled = t,
            this.mouseEnabled = !t);
        }),
        t;
    }(x))
      , R = function(t) {
        function e() {
            this.lockLayer = null,
            this.popupEffect = function(t) {
                t.scale(1, 1),
                M.from(t, {
                    x: f.stage.width / 2,
                    y: f.stage.height / 2,
                    scaleX: 0,
                    scaleY: 0
                }, 300, h.backOut, _.create(this, this.doOpen, [t]));
            }
            ,
            this.closeEffect = function(t, e) {
                M.to(t, {
                    x: f.stage.width / 2,
                    y: f.stage.height / 2,
                    scaleX: 0,
                    scaleY: 0
                }, 300, h.strongOut, _.create(this, this.doClose, [t, e]));
            }
            ,
            e.__super.call(this),
            this.maskLayer = new x(),
            this.popupEffectHandler = new _(this,this.popupEffect),
            this.closeEffectHandler = new _(this,this.closeEffect),
            this.mouseEnabled = this.maskLayer.mouseEnabled = !0,
            this.zOrder = 1e3,
            f.stage.addChild(this),
            f.stage.on("resize", this, this._onResize),
            A.closeDialogOnSide && this.maskLayer.on("click", this, this._closeOnSide),
            this._onResize(null);
        }
        s(e, "laya.ui.DialogManager", x);
        var i = e.prototype;
        return i._closeOnSide = function() {
            var t = this.getChildAt(this.numChildren - 1);
            t instanceof laya.ui.Dialog && t.close("side");
        }
        ,
        i.setLockView = function(t) {
            this.lockLayer || (this.lockLayer = new N(),
            this.lockLayer.mouseEnabled = !0,
            this.lockLayer.size(f.stage.width, f.stage.height)),
            this.lockLayer.removeChildren(),
            t && (t.centerX = t.centerY = 0,
            this.lockLayer.addChild(t));
        }
        ,
        i._onResize = function(t) {
            var e = this.maskLayer.width = f.stage.width
              , i = this.maskLayer.height = f.stage.height;
            this.lockLayer && this.lockLayer.size(e, i),
            this.maskLayer.graphics.clear(),
            this.maskLayer.graphics.drawRect(0, 0, e, i, A.popupBgColor),
            this.maskLayer.alpha = A.popupBgAlpha;
            for (var n = this.numChildren - 1; -1 < n; n--) {
                var a = this.getChildAt(n);
                a.popupCenter && this._centerDialog(a);
            }
        }
        ,
        i._centerDialog = function(t) {
            t.x = Math.round((f.stage.width - t.width >> 1) + t.pivotX),
            t.y = Math.round((f.stage.height - t.height >> 1) + t.pivotY);
        }
        ,
        i.open = function(t, e, i) {
            void 0 === e && (e = !1),
            void 0 === i && (i = !1),
            e && this._closeAll(),
            t.popupCenter && this._centerDialog(t),
            this.addChild(t),
            (t.isModal || this._$P.hasZorder) && this.timer.callLater(this, this._checkMask),
            i && null != t.popupEffect ? t.popupEffect.runWith(t) : this.doOpen(t),
            this.event("open");
        }
        ,
        i.doOpen = function(t) {
            t.onOpened();
        }
        ,
        i.lock = function(t) {
            this.lockLayer && (t ? this.addChild(this.lockLayer) : this.lockLayer.removeSelf());
        }
        ,
        i.close = function(t, e, i) {
            void 0 === i && (i = !1),
            i && null != t.closeEffect ? t.closeEffect.runWith([t, e]) : this.doClose(t, e),
            this.event("close");
        }
        ,
        i.doClose = function(t, e) {
            t.removeSelf(),
            t.isModal && this._checkMask(),
            t.closeHandler && t.closeHandler.runWith(e),
            t.onClosed(e);
        }
        ,
        i.closeAll = function() {
            this._closeAll(),
            this.event("close");
        }
        ,
        i._closeAll = function() {
            for (var t = this.numChildren - 1; -1 < t; t--) {
                var e = this.getChildAt(t);
                e && null != e.close && this.doClose(e);
            }
        }
        ,
        i.getDialogsByGroup = function(t) {
            for (var e = [], i = this.numChildren - 1; -1 < i; i--) {
                var n = this.getChildAt(i);
                n && n.group === t && e.push(n);
            }
            return e;
        }
        ,
        i.closeByGroup = function(t) {
            for (var e = [], i = this.numChildren - 1; -1 < i; i--) {
                var n = this.getChildAt(i);
                n && n.group === t && (n.close(),
                e.push(n));
            }
            return e;
        }
        ,
        i._checkMask = function() {
            this.maskLayer.removeSelf();
            for (var t = this.numChildren - 1; -1 < t; t--) {
                var e = this.getChildAt(t);
                if (e && e.isModal)
                    return void this.addChildAt(this.maskLayer, t);
            }
        }
        ,
        e;
    }()
      , k = function(e) {
        function i(t) {
            this._bitmap = null,
            this._skin = null,
            this._group = null,
            i.__super.call(this),
            this.skin = t;
        }
        s(i, "laya.ui.Image", e);
        var t = i.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, !0),
            this._bitmap && this._bitmap.destroy(),
            this._bitmap = null;
        }
        ,
        t.dispose = function() {
            this.destroy(!0),
            f.loader.clearRes(this._skin);
        }
        ,
        t.createChildren = function() {
            this.graphics = this._bitmap = new L(),
            this._bitmap.autoCacheCmd = !1;
        }
        ,
        t.setSource = function(t, e) {
            t === this._skin && e && (this.source = e,
            this.onCompResize());
        }
        ,
        a(0, t, "source", function() {
            return this._bitmap.source;
        }, function(t) {
            this._bitmap && (this._bitmap.source = t,
            this.event("loaded"),
            this.repaint());
        }),
        a(0, t, "dataSource", e.prototype._$get_dataSource, function(t) {
            "string" == typeof (this._dataSource = t) ? this.skin = t : f.superSet(D, this, "dataSource", t);
        }),
        a(0, t, "measureHeight", function() {
            return this._bitmap.height;
        }),
        a(0, t, "skin", function() {
            return this._skin;
        }, function(t) {
            if (this._skin != t)
                if (this._skin = t) {
                    var e = m.getRes(t);
                    e ? (this.source = e,
                    this.onCompResize()) : f.loader.load(this._skin, _.create(this, this.setSource, [this._skin]), null, "image", 1, !0, this._group);
                } else
                    this.source = null;
        }),
        a(0, t, "group", function() {
            return this._group;
        }, function(t) {
            t && this._skin && m.setGroup(this._skin, t),
            this._group = t;
        }),
        a(0, t, "sizeGrid", function() {
            return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
        }, function(t) {
            this._bitmap.sizeGrid = P.fillArray(E.defaultSizeGrid, t, Number);
        }),
        a(0, t, "measureWidth", function() {
            return this._bitmap.width;
        }),
        a(0, t, "width", e.prototype._$get_width, function(t) {
            f.superSet(D, this, "width", t),
            this._bitmap.width = 0 == t ? 1e-7 : t;
        }),
        a(0, t, "height", e.prototype._$get_height, function(t) {
            f.superSet(D, this, "height", t),
            this._bitmap.height = 0 == t ? 1e-7 : t;
        }),
        i;
    }(D)
      , N = function(t) {
        function e() {
            e.__super.call(this);
        }
        s(e, "laya.ui.Box", t);
        var i = e.prototype;
        return f.imps(i, {
            "laya.ui.IBox": !0
        }),
        a(0, i, "dataSource", t.prototype._$get_dataSource, function(t) {
            for (var e in this._dataSource = t) {
                var i = this.getChildByName(e);
                i ? i.dataSource = t[e] : this.hasOwnProperty(e) && "function" != typeof this[e] && (this[e] = t[e]);
            }
        }),
        e;
    }(D)
      , O = function(e) {
        function i(t, e) {
            this.toggle = !1,
            this._bitmap = null,
            this._text = null,
            this._strokeColors = null,
            this._state = 0,
            this._selected = !1,
            this._skin = null,
            this._autoSize = !0,
            this._sources = null,
            this._clickHandler = null,
            this._stateChanged = !1,
            i.__super.call(this),
            this._labelColors = E.buttonLabelColors,
            this._stateNum = E.buttonStateNum,
            void 0 === e && (e = ""),
            this.skin = t,
            this.label = e;
        }
        s(i, "laya.ui.Button", e);
        var t = i.prototype;
        return f.imps(t, {
            "laya.ui.ISelect": !0
        }),
        t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._bitmap && this._bitmap.destroy(),
            this._text && this._text.destroy(t),
            this._bitmap = null,
            this._text = null,
            this._clickHandler = null,
            this._labelColors = this._sources = this._strokeColors = null;
        }
        ,
        t.createChildren = function() {
            this.graphics = this._bitmap = new L();
        }
        ,
        t.createText = function() {
            this._text || (this._text = new b(),
            this._text.overflow = b.HIDDEN,
            this._text.align = "center",
            this._text.valign = "middle",
            this._text.width = this._width,
            this._text.height = this._height);
        }
        ,
        t.initialize = function() {
            1 !== this._mouseEnableState && (this.mouseEnabled = !0,
            this._setBit(2, !0)),
            this._createListener("mouseover", this, this.onMouse, null, !1, !1),
            this._createListener("mouseout", this, this.onMouse, null, !1, !1),
            this._createListener("mousedown", this, this.onMouse, null, !1, !1),
            this._createListener("mouseup", this, this.onMouse, null, !1, !1),
            this._createListener("click", this, this.onMouse, null, !1, !1);
        }
        ,
        t.onMouse = function(t) {
            if (!1 !== this.toggle || !this._selected)
                return "click" === t.type ? (this.toggle && (this.selected = !this._selected),
                void (this._clickHandler && this._clickHandler.run())) : void (!this._selected && (this.state = i.stateMap[t.type]));
        }
        ,
        t.changeClips = function() {
            var t = m.getRes(this._skin);
            if (t) {
                var e = t.sourceWidth
                  , i = t.sourceHeight / this._stateNum;
                t.$_GID || (t.$_GID = I.getGID());
                var n = t.$_GID + "-" + this._stateNum
                  , a = T.I.get(n);
                if (I.isOkTextureList(a) || (a = null),
                a)
                    this._sources = a;
                else {
                    if (this._sources = [],
                    1 === this._stateNum)
                        this._sources.push(t);
                    else
                        for (var s = 0; s < this._stateNum; s++)
                            this._sources.push(w.createFromTexture(t, 0, i * s, e, i));
                    T.I.set(n, this._sources);
                }
                this._autoSize ? (this._bitmap.width = this._width || e,
                this._bitmap.height = this._height || i,
                this._text && (this._text.width = this._bitmap.width,
                this._text.height = this._bitmap.height)) : this._text && (this._text.x = e);
            } else
                console.log("lose skin", this._skin);
        }
        ,
        t.changeState = function() {
            this._stateChanged = !1,
            this.runCallLater(this.changeClips);
            var t = this._state < this._stateNum ? this._state : this._stateNum - 1;
            this._sources && (this._bitmap.source = this._sources[t]),
            this.label && (this._text.color = this._labelColors[t],
            this._strokeColors && (this._text.strokeColor = this._strokeColors[t]));
        }
        ,
        t._setStateChanged = function() {
            this._stateChanged || (this._stateChanged = !0,
            this.callLater(this.changeState));
        }
        ,
        a(0, t, "labelStrokeColor", function() {
            return this.createText(),
            this._text.strokeColor;
        }, function(t) {
            this.createText(),
            this._text.strokeColor = t;
        }),
        a(0, t, "measureHeight", function() {
            return this.runCallLater(this.changeClips),
            this._text ? Math.max(this._bitmap.height, this._text.height) : this._bitmap.height;
        }),
        a(0, t, "skin", function() {
            return this._skin;
        }, function(t) {
            this._skin != t && (this._skin = t,
            this.callLater(this.changeClips),
            this._setStateChanged());
        }),
        a(0, t, "state", function() {
            return this._state;
        }, function(t) {
            this._state != t && (this._state = t,
            this._setStateChanged());
        }),
        a(0, t, "text", function() {
            return this.createText(),
            this._text;
        }),
        a(0, t, "stateNum", function() {
            return this._stateNum;
        }, function(t) {
            "string" == typeof t && (t = parseInt(t)),
            this._stateNum != t && (this._stateNum = t < 1 ? 1 : 3 < t ? 3 : t,
            this.callLater(this.changeClips));
        }),
        a(0, t, "strokeColors", function() {
            return this._strokeColors ? this._strokeColors.join(",") : "";
        }, function(t) {
            this._strokeColors = P.fillArray(E.buttonLabelColors, t, String),
            this._setStateChanged();
        }),
        a(0, t, "labelColors", function() {
            return this._labelColors.join(",");
        }, function(t) {
            this._labelColors = P.fillArray(E.buttonLabelColors, t, String),
            this._setStateChanged();
        }),
        a(0, t, "measureWidth", function() {
            return this.runCallLater(this.changeClips),
            this._autoSize ? this._bitmap.width : (this.runCallLater(this.changeState),
            this._bitmap.width + (this._text ? this._text.width : 0));
        }),
        a(0, t, "label", function() {
            return this._text ? this._text.text : null;
        }, function(t) {
            (this._text || t) && (this.createText(),
            this._text.text != t && (t && !this._text.parent && this.addChild(this._text),
            this._text.text = (t + "").replace(/\\n/g, "\n"),
            this._setStateChanged()));
        }),
        a(0, t, "selected", function() {
            return this._selected;
        }, function(t) {
            this._selected != t && (this._selected = t,
            this.state = this._selected ? 2 : 0,
            this.event("change"));
        }),
        a(0, t, "labelPadding", function() {
            return this.createText(),
            this._text.padding.join(",");
        }, function(t) {
            this.createText(),
            this._text.padding = P.fillArray(E.labelPadding, t, Number);
        }),
        a(0, t, "labelSize", function() {
            return this.createText(),
            this._text.fontSize;
        }, function(t) {
            this.createText(),
            this._text.fontSize = t;
        }),
        a(0, t, "labelStroke", function() {
            return this.createText(),
            this._text.stroke;
        }, function(t) {
            this.createText(),
            this._text.stroke = t;
        }),
        a(0, t, "labelBold", function() {
            return this.createText(),
            this._text.bold;
        }, function(t) {
            this.createText(),
            this._text.bold = t;
        }),
        a(0, t, "labelFont", function() {
            return this.createText(),
            this._text.font;
        }, function(t) {
            this.createText(),
            this._text.font = t;
        }),
        a(0, t, "labelAlign", function() {
            return this.createText(),
            this._text.align;
        }, function(t) {
            this.createText(),
            this._text.align = t;
        }),
        a(0, t, "clickHandler", function() {
            return this._clickHandler;
        }, function(t) {
            this._clickHandler = t;
        }),
        a(0, t, "sizeGrid", function() {
            return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
        }, function(t) {
            this._bitmap.sizeGrid = P.fillArray(E.defaultSizeGrid, t, Number);
        }),
        a(0, t, "width", e.prototype._$get_width, function(t) {
            f.superSet(D, this, "width", t),
            this._autoSize && (this._bitmap.width = t,
            this._text && (this._text.width = t));
        }),
        a(0, t, "height", e.prototype._$get_height, function(t) {
            f.superSet(D, this, "height", t),
            this._autoSize && (this._bitmap.height = t,
            this._text && (this._text.height = t));
        }),
        a(0, t, "dataSource", e.prototype._$get_dataSource, function(t) {
            "number" == typeof (this._dataSource = t) || "string" == typeof t ? this.label = t + "" : f.superSet(D, this, "dataSource", t);
        }),
        a(0, t, "iconOffset", function() {
            return this._bitmap._offset ? this._bitmap._offset.join(",") : null;
        }, function(t) {
            this._bitmap._offset = t ? P.fillArray([1, 1], t, Number) : [];
        }),
        n(i, ["stateMap", function() {
            return this.stateMap = {
                mouseup: 0,
                mouseover: 1,
                mousedown: 2,
                mouseout: 0
            };
        }
        ]),
        i;
    }(D)
      , B = function(e) {
        function n(t, e, i) {
            this._sources = null,
            this._bitmap = null,
            this._skin = null,
            this._clipX = 1,
            this._clipY = 1,
            this._clipWidth = 0,
            this._clipHeight = 0,
            this._autoPlay = !1,
            this._interval = 50,
            this._complete = null,
            this._isPlaying = !1,
            this._index = 0,
            this._clipChanged = !1,
            this._group = null,
            this._toIndex = -1,
            n.__super.call(this),
            void 0 === e && (e = 1),
            void 0 === i && (i = 1),
            this._clipX = e,
            this._clipY = i,
            this.skin = t;
        }
        s(n, "laya.ui.Clip", e);
        var t = n.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, !0),
            this._bitmap && this._bitmap.destroy(),
            this._bitmap = null,
            this._sources = null;
        }
        ,
        t.dispose = function() {
            this.destroy(!0),
            f.loader.clearRes(this._skin);
        }
        ,
        t.createChildren = function() {
            this.graphics = this._bitmap = new L();
        }
        ,
        t._onDisplay = function(t) {
            this._isPlaying ? this._displayedInStage ? this.play() : this.stop() : this._autoPlay && this.play();
        }
        ,
        t.changeClip = function() {
            if (this._clipChanged = !1,
            this._skin) {
                var t = m.getRes(this._skin);
                t ? this.loadComplete(this._skin, t) : f.loader.load(this._skin, _.create(this, this.loadComplete, [this._skin]));
            }
        }
        ,
        t.loadComplete = function(t, e) {
            if (t === this._skin && e) {
                var i = this._clipWidth || Math.ceil(e.sourceWidth / this._clipX)
                  , n = this._clipHeight || Math.ceil(e.sourceHeight / this._clipY)
                  , a = this._skin + i + n
                  , s = T.I.get(a);
                if (I.isOkTextureList(s) || (s = null),
                s)
                    this._sources = s;
                else {
                    this._sources = [];
                    for (var r = 0; r < this._clipY; r++)
                        for (var o = 0; o < this._clipX; o++)
                            this._sources.push(w.createFromTexture(e, i * o, n * r, i, n));
                    T.I.set(a, this._sources);
                }
                this.index = this._index,
                this.event("loaded"),
                this.onCompResize();
            }
        }
        ,
        t.play = function(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = -1),
            this._isPlaying = !0,
            this.index = t,
            this._toIndex = e,
            this._index++,
            f.timer.loop(this.interval, this, this._loop),
            this.on("display", this, this._onDisplay),
            this.on("undisplay", this, this._onDisplay);
        }
        ,
        t._loop = function() {
            this._style.visible && this._sources && (this._index++,
            -1 < this._toIndex && this._index >= this._toIndex ? this.stop() : this._index >= this._sources.length && (this._index = 0),
            this.index = this._index);
        }
        ,
        t.stop = function() {
            this._isPlaying = !1,
            f.timer.clear(this, this._loop),
            this.event("complete");
        }
        ,
        t._setClipChanged = function() {
            this._clipChanged || (this._clipChanged = !0,
            this.callLater(this.changeClip));
        }
        ,
        a(0, t, "interval", function() {
            return this._interval;
        }, function(t) {
            this._interval != t && (this._interval = t,
            this._isPlaying && this.play());
        }),
        a(0, t, "skin", function() {
            return this._skin;
        }, function(t) {
            this._skin != t && ((this._skin = t) ? this._setClipChanged() : this._bitmap.source = null);
        }),
        a(0, t, "sources", function() {
            return this._sources;
        }, function(t) {
            this._sources = t,
            this.index = this._index,
            this.event("loaded");
        }),
        a(0, t, "clipX", function() {
            return this._clipX;
        }, function(t) {
            this._clipX = t || 1,
            this._setClipChanged();
        }),
        a(0, t, "clipY", function() {
            return this._clipY;
        }, function(t) {
            this._clipY = t || 1,
            this._setClipChanged();
        }),
        a(0, t, "total", function() {
            return this.runCallLater(this.changeClip),
            this._sources ? this._sources.length : 0;
        }),
        a(0, t, "clipWidth", function() {
            return this._clipWidth;
        }, function(t) {
            this._clipWidth = t,
            this._setClipChanged();
        }),
        a(0, t, "sizeGrid", function() {
            return this._bitmap.sizeGrid ? this._bitmap.sizeGrid.join(",") : null;
        }, function(t) {
            this._bitmap.sizeGrid = P.fillArray(E.defaultSizeGrid, t, Number);
        }),
        a(0, t, "group", function() {
            return this._group;
        }, function(t) {
            t && this._skin && m.setGroup(this._skin, t),
            this._group = t;
        }),
        a(0, t, "clipHeight", function() {
            return this._clipHeight;
        }, function(t) {
            this._clipHeight = t,
            this._setClipChanged();
        }),
        a(0, t, "width", e.prototype._$get_width, function(t) {
            f.superSet(D, this, "width", t),
            this._bitmap.width = t;
        }),
        a(0, t, "height", e.prototype._$get_height, function(t) {
            f.superSet(D, this, "height", t),
            this._bitmap.height = t;
        }),
        a(0, t, "measureWidth", function() {
            return this.runCallLater(this.changeClip),
            this._bitmap.width;
        }),
        a(0, t, "measureHeight", function() {
            return this.runCallLater(this.changeClip),
            this._bitmap.height;
        }),
        a(0, t, "index", function() {
            return this._index;
        }, function(t) {
            this._index = t,
            this._bitmap && this._sources && (this._bitmap.source = this._sources[t]),
            this.event("change");
        }),
        a(0, t, "autoPlay", function() {
            return this._autoPlay;
        }, function(t) {
            this._autoPlay != t && ((this._autoPlay = t) ? this.play() : this.stop());
        }),
        a(0, t, "isPlaying", function() {
            return this._isPlaying;
        }, function(t) {
            this._isPlaying = t;
        }),
        a(0, t, "dataSource", e.prototype._$get_dataSource, function(t) {
            "number" == typeof (this._dataSource = t) && Math.floor(t) == t || "string" == typeof t ? this.index = parseInt(t) : f.superSet(D, this, "dataSource", t);
        }),
        a(0, t, "bitmap", function() {
            return this._bitmap;
        }),
        n;
    }(D)
      , G = function(e) {
        function t() {
            this.changeHandler = null,
            this._gridSize = 11,
            this._bgColor = "#ffffff",
            this._borderColor = "#000000",
            this._inputColor = "#000000",
            this._inputBgColor = "#efefef",
            this._colorPanel = null,
            this._colorTiles = null,
            this._colorBlock = null,
            this._colorInput = null,
            this._colorButton = null,
            this._colors = [],
            this._selectedColor = "#000000",
            this._panelChanged = !1,
            t.__super.call(this);
        }
        s(t, "laya.ui.ColorPicker", e);
        var i = t.prototype;
        return i.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._colorPanel && this._colorPanel.destroy(t),
            this._colorButton && this._colorButton.destroy(t),
            this._colorPanel = null,
            this._colorTiles = null,
            this._colorBlock = null,
            this._colorInput = null,
            this._colorButton = null,
            this._colors = null,
            this.changeHandler = null;
        }
        ,
        i.createChildren = function() {
            this.addChild(this._colorButton = new O()),
            this._colorPanel = new N(),
            this._colorPanel.size(230, 166),
            this._colorPanel.addChild(this._colorTiles = new x()),
            this._colorPanel.addChild(this._colorBlock = new x()),
            this._colorPanel.addChild(this._colorInput = new p());
        }
        ,
        i.initialize = function() {
            this._colorButton.on("click", this, this.onColorButtonClick),
            this._colorBlock.pos(5, 5),
            this._colorInput.pos(60, 5),
            this._colorInput.size(60, 20),
            this._colorInput.on("change", this, this.onColorInputChange),
            this._colorInput.on("keydown", this, this.onColorFieldKeyDown),
            this._colorTiles.pos(5, 30),
            this._colorTiles.on("mousemove", this, this.onColorTilesMouseMove),
            this._colorTiles.on("click", this, this.onColorTilesClick),
            this._colorTiles.size(20 * this._gridSize, 12 * this._gridSize),
            this._colorPanel.on("mousedown", this, this.onPanelMouseDown),
            this.bgColor = this._bgColor;
        }
        ,
        i.onPanelMouseDown = function(t) {
            t.stopPropagation();
        }
        ,
        i.changePanel = function() {
            this._panelChanged = !1;
            var t = this._colorPanel.graphics;
            t.clear(),
            t.drawRect(0, 0, 230, 166, this._bgColor, this._borderColor),
            this.drawBlock(this._selectedColor),
            this._colorInput.borderColor = this._borderColor,
            this._colorInput.bgColor = this._inputBgColor,
            this._colorInput.color = this._inputColor,
            (t = this._colorTiles.graphics).clear();
            for (var e = [0, 3355443, 6710886, 10066329, 13421772, 16777215, 16711680, 65280, 255, 16776960, 65535, 16711935], i = 0; i < 12; i++)
                for (var n = 0; n < 20; n++) {
                    var a = 0;
                    a = 0 === n ? e[i] : 1 === n ? 0 : 51 * (((3 * i + n / 6) % 3 << 0) + 3 * (i / 6 << 0)) << 16 | n % 6 * 51 << 8 | (i << 0) % 6 * 51;
                    var s = P.toColor(a);
                    this._colors.push(s);
                    var r = n * this._gridSize
                      , o = i * this._gridSize;
                    t.drawRect(r, o, this._gridSize, this._gridSize, s, "#000000");
                }
        }
        ,
        i.onColorButtonClick = function(t) {
            this._colorPanel.parent ? this.close() : this.open();
        }
        ,
        i.open = function() {
            var t = this.localToGlobal(new y())
              , e = t.x + this._colorPanel.width <= f.stage.width ? t.x : f.stage.width - this._colorPanel.width
              , i = t.y + this._colorButton.height;
            i = i + this._colorPanel.height <= f.stage.height ? i : t.y - this._colorPanel.height,
            this._colorPanel.pos(e, i),
            this._colorPanel.zOrder = 1001,
            f._currentStage.addChild(this._colorPanel),
            f.stage.on("mousedown", this, this.removeColorBox);
        }
        ,
        i.close = function() {
            f.stage.off("mousedown", this, this.removeColorBox),
            this._colorPanel.removeSelf();
        }
        ,
        i.removeColorBox = function(t) {
            this.close();
        }
        ,
        i.onColorFieldKeyDown = function(t) {
            13 == t.keyCode && (this._colorInput.text ? this.selectedColor = this._colorInput.text : this.selectedColor = null,
            this.close(),
            t.stopPropagation());
        }
        ,
        i.onColorInputChange = function(t) {
            this._colorInput.text ? this.drawBlock(this._colorInput.text) : this.drawBlock("#FFFFFF");
        }
        ,
        i.onColorTilesClick = function(t) {
            this.selectedColor = this.getColorByMouse(),
            this.close();
        }
        ,
        i.onColorTilesMouseMove = function(t) {
            this._colorInput.focus = !1;
            var e = this.getColorByMouse();
            this._colorInput.text = e,
            this.drawBlock(e);
        }
        ,
        i.getColorByMouse = function() {
            var t = this._colorTiles.getMousePoint()
              , e = Math.floor(t.x / this._gridSize)
              , i = Math.floor(t.y / this._gridSize);
            return this._colors[20 * i + e];
        }
        ,
        i.drawBlock = function(t) {
            var e = this._colorBlock.graphics;
            e.clear();
            var i = t || "#ffffff";
            e.drawRect(0, 0, 50, 20, i, this._borderColor),
            t || e.drawLine(0, 0, 50, 20, "#ff0000");
        }
        ,
        i.changeColor = function() {
            var t = this.graphics;
            t.clear();
            var e = this._selectedColor || "#000000";
            t.drawRect(0, 0, this._colorButton.width, this._colorButton.height, e);
        }
        ,
        i._setPanelChanged = function() {
            this._panelChanged || (this._panelChanged = !0,
            this.callLater(this.changePanel));
        }
        ,
        a(0, i, "inputBgColor", function() {
            return this._inputBgColor;
        }, function(t) {
            this._inputBgColor = t,
            this._setPanelChanged();
        }),
        a(0, i, "selectedColor", function() {
            return this._selectedColor;
        }, function(t) {
            this._selectedColor != t && (this._selectedColor = this._colorInput.text = t,
            this.drawBlock(t),
            this.changeColor(),
            this.changeHandler && this.changeHandler.runWith(this._selectedColor),
            this.event("change", l.EMPTY.setTo("change", this, this)));
        }),
        a(0, i, "skin", function() {
            return this._colorButton.skin;
        }, function(t) {
            this._colorButton.skin = t,
            this.changeColor();
        }),
        a(0, i, "bgColor", function() {
            return this._bgColor;
        }, function(t) {
            this._bgColor = t,
            this._setPanelChanged();
        }),
        a(0, i, "borderColor", function() {
            return this._borderColor;
        }, function(t) {
            this._borderColor = t,
            this._setPanelChanged();
        }),
        a(0, i, "inputColor", function() {
            return this._inputColor;
        }, function(t) {
            this._inputColor = t,
            this._setPanelChanged();
        }),
        t;
    }(D)
      , F = function(e) {
        function i(t, e) {
            this._visibleNum = 6,
            this._button = null,
            this._list = null,
            this._isOpen = !1,
            this._itemSize = 12,
            this._labels = [],
            this._selectedIndex = -1,
            this._selectHandler = null,
            this._itemHeight = NaN,
            this._listHeight = NaN,
            this._listChanged = !1,
            this._itemChanged = !1,
            this._scrollBarSkin = null,
            this._isCustomList = !1,
            this.itemRender = null,
            i.__super.call(this),
            this._itemColors = E.comboBoxItemColors,
            this.skin = t,
            this.labels = e;
        }
        s(i, "laya.ui.ComboBox", e);
        var t = i.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._button && this._button.destroy(t),
            this._list && this._list.destroy(t),
            this._button = null,
            this._list = null,
            this._itemColors = null,
            this._labels = null,
            this._selectHandler = null;
        }
        ,
        t.createChildren = function() {
            this.addChild(this._button = new O()),
            this._button.text.align = "left",
            this._button.labelPadding = "0,0,0,5",
            this._button.on("mousedown", this, this.onButtonMouseDown);
        }
        ,
        t._createList = function() {
            this._list = new j(),
            this._scrollBarSkin && (this._list.vScrollBarSkin = this._scrollBarSkin),
            this._setListEvent(this._list);
        }
        ,
        t._setListEvent = function(t) {
            this._list.selectEnable = !0,
            this._list.on("mousedown", this, this.onListDown),
            this._list.mouseHandler = _.create(this, this.onlistItemMouse, null, !1),
            this._list.scrollBar && this._list.scrollBar.on("mousedown", this, this.onScrollBarDown);
        }
        ,
        t.onListDown = function(t) {
            t.stopPropagation();
        }
        ,
        t.onScrollBarDown = function(t) {
            t.stopPropagation();
        }
        ,
        t.onButtonMouseDown = function(t) {
            this.callLater(this.switchTo, [!this._isOpen]);
        }
        ,
        t.changeList = function() {
            this._listChanged = !1;
            var t = this.width - 2
              , e = this._itemColors[2];
            this._itemHeight = this._itemSize + 6,
            this._list.itemRender = this.itemRender || {
                type: "Box",
                child: [{
                    type: "Label",
                    props: {
                        name: "label",
                        x: 1,
                        padding: "3,3,3,3",
                        width: t,
                        height: this._itemHeight,
                        fontSize: this._itemSize,
                        color: e
                    }
                }]
            },
            this._list.repeatY = this._visibleNum,
            this._list.refresh();
        }
        ,
        t.onlistItemMouse = function(t, e) {
            var i = t.type;
            if ("mouseover" === i || "mouseout" === i) {
                if (this._isCustomList)
                    return;
                var n = this._list.getCell(e);
                if (!n)
                    return;
                var a = n.getChildByName("label");
                a && (a.color = "mouseover" === i ? (a.bgColor = this._itemColors[0],
                this._itemColors[1]) : (a.bgColor = null,
                this._itemColors[2]));
            } else
                "click" === i && (this.selectedIndex = e,
                this.isOpen = !1);
        }
        ,
        t.switchTo = function(t) {
            this.isOpen = t;
        }
        ,
        t.changeOpen = function() {
            this.isOpen = !this._isOpen;
        }
        ,
        t.changeItem = function() {
            if (this._itemChanged = !1,
            this._listHeight = 0 < this._labels.length ? Math.min(this._visibleNum, this._labels.length) * this._itemHeight : this._itemHeight,
            !this._isCustomList) {
                var t = this._list.graphics;
                t.clear(),
                t.drawRect(0, 0, this.width - 1, this._listHeight, this._itemColors[4], this._itemColors[3]);
            }
            for (var e = this._list.array || [], i = e.length = 0, n = this._labels.length; i < n; i++)
                e.push({
                    label: this._labels[i]
                });
            this._list.height = this._listHeight,
            this._list.array = e;
        }
        ,
        t.changeSelected = function() {
            this._button.label = this.selectedLabel;
        }
        ,
        t._onStageMouseWheel = function(t) {
            this._list && !this._list.contains(t.target) && this.removeList(null);
        }
        ,
        t.removeList = function(t) {
            f.stage.off("mousedown", this, this.removeList),
            f.stage.off("mousewheel", this, this._onStageMouseWheel),
            this.isOpen = !1;
        }
        ,
        a(0, t, "selectedIndex", function() {
            return this._selectedIndex;
        }, function(t) {
            this._selectedIndex != t && (this._selectedIndex = t,
            0 < this._labels.length ? this.changeSelected() : this.callLater(this.changeSelected),
            this.event("change", [l.EMPTY.setTo("change", this, this)]),
            this._selectHandler && this._selectHandler.runWith(this._selectedIndex));
        }),
        a(0, t, "measureHeight", function() {
            return this._button.height;
        }),
        a(0, t, "skin", function() {
            return this._button.skin;
        }, function(t) {
            this._button.skin != t && (this._button.skin = t,
            this._listChanged = !0);
        }),
        a(0, t, "measureWidth", function() {
            return this._button.width;
        }),
        a(0, t, "width", e.prototype._$get_width, function(t) {
            f.superSet(D, this, "width", t),
            this._button.width = this._width,
            this._itemChanged = !0,
            this._listChanged = !0;
        }),
        a(0, t, "selectedLabel", function() {
            return -1 < this._selectedIndex && this._selectedIndex < this._labels.length ? this._labels[this._selectedIndex] : null;
        }, function(t) {
            this.selectedIndex = this._labels.indexOf(t);
        }),
        a(0, t, "labels", function() {
            return this._labels.join(",");
        }, function(t) {
            0 < this._labels.length && (this.selectedIndex = -1),
            t ? this._labels = t.split(",") : this._labels.length = 0,
            this._itemChanged = !0;
        }),
        a(0, t, "height", e.prototype._$get_height, function(t) {
            f.superSet(D, this, "height", t),
            this._button.height = this._height;
        }),
        a(0, t, "selectHandler", function() {
            return this._selectHandler;
        }, function(t) {
            this._selectHandler = t;
        }),
        a(0, t, "visibleNum", function() {
            return this._visibleNum;
        }, function(t) {
            this._visibleNum = t,
            this._listChanged = !0;
        }),
        a(0, t, "labelBold", function() {
            return this._button.text.bold;
        }, function(t) {
            this._button.text.bold = t;
        }),
        a(0, t, "itemColors", function() {
            return String(this._itemColors);
        }, function(t) {
            this._itemColors = P.fillArray(this._itemColors, t, String),
            this._listChanged = !0;
        }),
        a(0, t, "itemSize", function() {
            return this._itemSize;
        }, function(t) {
            this._itemSize = t,
            this._listChanged = !0;
        }),
        a(0, t, "scrollBar", function() {
            return this.list.scrollBar;
        }),
        a(0, t, "isOpen", function() {
            return this._isOpen;
        }, function(t) {
            if (this._isOpen != t)
                if (this._isOpen = t,
                this._button.selected = this._isOpen,
                this._isOpen) {
                    this._list || this._createList(),
                    this._listChanged && !this._isCustomList && this.changeList(),
                    this._itemChanged && this.changeItem();
                    var e = this.localToGlobal(y.TEMP.setTo(0, 0))
                      , i = e.y + this._button.height;
                    i = i + this._listHeight <= f.stage.height ? i : e.y - this._listHeight,
                    this._list.pos(e.x, i),
                    this._list.zOrder = 1001,
                    f._currentStage.addChild(this._list),
                    f.stage.once("mousedown", this, this.removeList),
                    f.stage.on("mousewheel", this, this._onStageMouseWheel),
                    this._list.selectedIndex = this._selectedIndex;
                } else
                    this._list && this._list.removeSelf();
        }),
        a(0, t, "scrollBarSkin", function() {
            return this._scrollBarSkin;
        }, function(t) {
            this._scrollBarSkin = t;
        }),
        a(0, t, "sizeGrid", function() {
            return this._button.sizeGrid;
        }, function(t) {
            this._button.sizeGrid = t;
        }),
        a(0, t, "button", function() {
            return this._button;
        }),
        a(0, t, "list", function() {
            return this._list || this._createList(),
            this._list;
        }, function(t) {
            t && (t.removeSelf(),
            this._isCustomList = !0,
            this._list = t,
            this._setListEvent(t),
            this._itemHeight = t.getCell(0).height + t.spaceY);
        }),
        a(0, t, "dataSource", e.prototype._$get_dataSource, function(t) {
            "number" == typeof (this._dataSource = t) && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : f.superSet(D, this, "dataSource", t);
        }),
        a(0, t, "labelColors", function() {
            return this._button.labelColors;
        }, function(t) {
            this._button.labelColors != t && (this._button.labelColors = t);
        }),
        a(0, t, "labelPadding", function() {
            return this._button.text.padding.join(",");
        }, function(t) {
            this._button.text.padding = P.fillArray(E.labelPadding, t, Number);
        }),
        a(0, t, "labelSize", function() {
            return this._button.text.fontSize;
        }, function(t) {
            this._button.text.fontSize = t;
        }),
        a(0, t, "labelFont", function() {
            return this._button.text.font;
        }, function(t) {
            this._button.text.font = t;
        }),
        a(0, t, "stateNum", function() {
            return this._button.stateNum;
        }, function(t) {
            this._button.stateNum = t;
        }),
        i;
    }(D)
      , U = function(e) {
        function i(t) {
            this.rollRatio = .95,
            this.changeHandler = null,
            this.scaleBar = !0,
            this.autoHide = !1,
            this.elasticDistance = 0,
            this.elasticBackTime = 500,
            this.upButton = null,
            this.downButton = null,
            this.slider = null,
            this._scrollSize = 1,
            this._skin = null,
            this._thumbPercent = 1,
            this._target = null,
            this._lastPoint = null,
            this._lastOffset = 0,
            this._checkElastic = !1,
            this._isElastic = !1,
            this._value = NaN,
            this._hide = !1,
            this._clickOnly = !0,
            this._offsets = null,
            i.__super.call(this),
            this._showButtons = A.showButtons,
            this._touchScrollEnable = A.touchScrollEnable,
            this._mouseWheelEnable = A.mouseWheelEnable,
            this.skin = t,
            this.max = 1;
        }
        s(i, "laya.ui.ScrollBar", e);
        var t = i.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            this.stopScroll(),
            this.target = null,
            e.prototype.destroy.call(this, t),
            this.upButton && this.upButton.destroy(t),
            this.downButton && this.downButton.destroy(t),
            this.slider && this.slider.destroy(t),
            this.upButton = this.downButton = null,
            this.slider = null,
            this.changeHandler = null,
            this._offsets = null;
        }
        ,
        t.createChildren = function() {
            this.addChild(this.slider = new H()),
            this.addChild(this.upButton = new O()),
            this.addChild(this.downButton = new O());
        }
        ,
        t.initialize = function() {
            this.slider.showLabel = !1,
            this.slider.on("change", this, this.onSliderChange),
            this.slider.setSlider(0, 0, 0),
            this.upButton.on("mousedown", this, this.onButtonMouseDown),
            this.downButton.on("mousedown", this, this.onButtonMouseDown);
        }
        ,
        t.onSliderChange = function() {
            this._value != this.slider.value && (this.value = this.slider.value);
        }
        ,
        t.onButtonMouseDown = function(t) {
            var e = t.currentTarget === this.upButton;
            this.slide(e),
            f.timer.once(E.scrollBarDelayTime, this, this.startLoop, [e]),
            f.stage.once("mouseup", this, this.onStageMouseUp);
        }
        ,
        t.startLoop = function(t) {
            f.timer.frameLoop(1, this, this.slide, [t]);
        }
        ,
        t.slide = function(t) {
            t ? this.value -= this._scrollSize : this.value += this._scrollSize;
        }
        ,
        t.onStageMouseUp = function(t) {
            f.timer.clear(this, this.startLoop),
            f.timer.clear(this, this.slide);
        }
        ,
        t.changeScrollBar = function() {
            this.upButton.visible = this._showButtons,
            this.downButton.visible = this._showButtons,
            this._showButtons && (this.upButton.skin = this._skin.replace(".png", "$up.png"),
            this.downButton.skin = this._skin.replace(".png", "$down.png")),
            this.slider.isVertical ? this.slider.y = this._showButtons ? this.upButton.height : 0 : this.slider.x = this._showButtons ? this.upButton.width : 0,
            this.resetPositions(),
            this.repaint();
        }
        ,
        t.changeSize = function() {
            e.prototype.changeSize.call(this),
            this.repaint(),
            this.resetPositions(),
            this.event("change"),
            this.changeHandler && this.changeHandler.runWith(this.value);
        }
        ,
        t.resetPositions = function() {
            this.slider.isVertical ? this.slider.height = this.height - (this._showButtons ? this.upButton.height + this.downButton.height : 0) : this.slider.width = this.width - (this._showButtons ? this.upButton.width + this.downButton.width : 0),
            this.resetButtonPosition();
        }
        ,
        t.resetButtonPosition = function() {
            this.slider.isVertical ? this.downButton.y = this.slider.y + this.slider.height : this.downButton.x = this.slider.x + this.slider.width;
        }
        ,
        t.setScroll = function(t, e, i) {
            this.runCallLater(this.changeSize),
            this.slider.setSlider(t, e, i),
            this.slider.bar.visible = 0 < e,
            !this._hide && this.autoHide && (this.visible = !1);
        }
        ,
        t.onTargetMouseWheel = function(t) {
            this.value -= t.delta * this._scrollSize,
            this.target = this._target;
        }
        ,
        t.onTargetMouseDown = function(t) {
            this._clickOnly = !0,
            this._lastOffset = 0,
            this._checkElastic = !1,
            this._lastPoint || (this._lastPoint = new y()),
            this._lastPoint.setTo(f.stage.mouseX, f.stage.mouseY),
            f.timer.clear(this, this.tweenMove),
            M.clearTween(this),
            f.stage.once("mouseup", this, this.onStageMouseUp2),
            f.stage.once("mouseout", this, this.onStageMouseUp2),
            f.timer.frameLoop(1, this, this.loop);
        }
        ,
        t.loop = function() {
            var t = f.stage.mouseY
              , e = f.stage.mouseX;
            if (this._lastOffset = this.isVertical ? t - this._lastPoint.y : e - this._lastPoint.x,
            this._clickOnly) {
                if (!(1 < Math.abs(this._lastOffset * (this.isVertical ? f.stage._canvasTransform.getScaleY() : f.stage._canvasTransform.getScaleX()))))
                    return;
                this._clickOnly = !1,
                this._offsets || (this._offsets = []),
                this._offsets.length = 0,
                this._target.mouseEnabled = !1,
                !this.hide && this.autoHide && (this.alpha = 1,
                this.visible = !0),
                this.event("start");
            }
            this._offsets.push(this._lastOffset),
            this._lastPoint.x = e,
            this._lastPoint.y = t,
            0 !== this._lastOffset && (this._checkElastic || (0 < this.elasticDistance ? this._checkElastic || 0 == this._lastOffset || (0 < this._lastOffset && this._value <= this.min || this._lastOffset < 0 && this._value >= this.max ? (this._isElastic = !0,
            this._checkElastic = !0) : this._isElastic = !1) : this._checkElastic = !0),
            this._isElastic ? this._value <= this.min ? this.value -= this._lastOffset * Math.max(0, 1 - (this.min - this._value) / this.elasticDistance) : this._value >= this.max && (this.value -= this._lastOffset * Math.max(0, 1 - (this._value - this.max) / this.elasticDistance)) : this.value -= this._lastOffset);
        }
        ,
        t.onStageMouseUp2 = function(t) {
            if (f.stage.off("mouseup", this, this.onStageMouseUp2),
            f.stage.off("mouseout", this, this.onStageMouseUp2),
            f.timer.clear(this, this.loop),
            !(this._clickOnly && this._value >= this.min && this._value <= this.max))
                if (this._target.mouseEnabled = !0,
                this._isElastic)
                    this._value < this.min ? M.to(this, {
                        value: this.min
                    }, this.elasticBackTime, h.sineOut, _.create(this, this.elasticOver)) : this._value > this.max && M.to(this, {
                        value: this.max
                    }, this.elasticBackTime, h.sineOut, _.create(this, this.elasticOver));
                else {
                    if (!this._offsets)
                        return;
                    this._offsets.length < 1 && (this._offsets[0] = this.isVertical ? f.stage.mouseY - this._lastPoint.y : f.stage.mouseX - this._lastPoint.x);
                    for (var e = 0, i = Math.min(this._offsets.length, 3), n = 0; n < i; n++)
                        e += this._offsets[this._offsets.length - 1 - n];
                    if (this._lastOffset = e / i,
                    (e = Math.abs(this._lastOffset)) < 2)
                        return void this.event("end");
                    60 < e && (this._lastOffset = 0 < this._lastOffset ? 60 : -60);
                    var a = Math.round(Math.abs(this.elasticDistance * (this._lastOffset / 240)));
                    f.timer.frameLoop(1, this, this.tweenMove, [a]);
                }
        }
        ,
        t.elasticOver = function() {
            this._isElastic = !1,
            !this.hide && this.autoHide && M.to(this, {
                alpha: 0
            }, 500),
            this.event("end");
        }
        ,
        t.tweenMove = function(t) {
            this._lastOffset *= this.rollRatio;
            var e = NaN;
            if (0 < t && (0 < this._lastOffset && this.value <= this.min ? (this._isElastic = !0,
            e = .5 * -(this.min - t - this.value),
            this._lastOffset > e && (this._lastOffset = e)) : this._lastOffset < 0 && this.value >= this.max && (this._isElastic = !0,
            e = .5 * -(this.max + t - this.value),
            this._lastOffset < e && (this._lastOffset = e))),
            this.value -= this._lastOffset,
            Math.abs(this._lastOffset) < 1) {
                if (f.timer.clear(this, this.tweenMove),
                this._isElastic)
                    return void (this._value < this.min ? M.to(this, {
                        value: this.min
                    }, this.elasticBackTime, h.sineOut, _.create(this, this.elasticOver)) : this._value > this.max ? M.to(this, {
                        value: this.max
                    }, this.elasticBackTime, h.sineOut, _.create(this, this.elasticOver)) : this.elasticOver());
                this.event("end"),
                !this.hide && this.autoHide && M.to(this, {
                    alpha: 0
                }, 500);
            }
        }
        ,
        t.stopScroll = function() {
            this.onStageMouseUp2(null),
            f.timer.clear(this, this.tweenMove),
            M.clearTween(this);
        }
        ,
        a(0, t, "measureHeight", function() {
            return this.slider.isVertical ? 100 : this.slider.height;
        }),
        a(0, t, "skin", function() {
            return this._skin;
        }, function(t) {
            this._skin != t && (this._skin = t,
            this.slider.skin = this._skin,
            this.callLater(this.changeScrollBar));
        }),
        a(0, t, "max", function() {
            return this.slider.max;
        }, function(t) {
            this.slider.max = t;
        }),
        a(0, t, "showButtons", function() {
            return this._showButtons;
        }, function(t) {
            this._showButtons = t,
            this.callLater(this.changeScrollBar);
        }),
        a(0, t, "measureWidth", function() {
            return this.slider.isVertical ? this.slider.width : 100;
        }),
        a(0, t, "min", function() {
            return this.slider.min;
        }, function(t) {
            this.slider.min = t;
        }),
        a(0, t, "value", function() {
            return this._value;
        }, function(t) {
            t !== this._value && (this._value = t,
            this._isElastic || (this.slider._value != t && (this.slider._value = t,
            this.slider.changeValue()),
            this._value = this.slider._value),
            this.event("change"),
            this.changeHandler && this.changeHandler.runWith(this._value));
        }),
        a(0, t, "isVertical", function() {
            return this.slider.isVertical;
        }, function(t) {
            this.slider.isVertical = t;
        }),
        a(0, t, "sizeGrid", function() {
            return this.slider.sizeGrid;
        }, function(t) {
            this.slider.sizeGrid = t;
        }),
        a(0, t, "scrollSize", function() {
            return this._scrollSize;
        }, function(t) {
            this._scrollSize = t;
        }),
        a(0, t, "dataSource", e.prototype._$get_dataSource, function(t) {
            "number" == typeof (this._dataSource = t) || "string" == typeof t ? this.value = Number(t) : f.superSet(D, this, "dataSource", t);
        }),
        a(0, t, "thumbPercent", function() {
            return this._thumbPercent;
        }, function(t) {
            this.runCallLater(this.changeScrollBar),
            this.runCallLater(this.changeSize),
            t = 1 <= t ? .99 : t,
            this._thumbPercent = t,
            this.scaleBar && (this.slider.isVertical ? this.slider.bar.height = Math.max(this.slider.height * t, E.scrollBarMinNum) : this.slider.bar.width = Math.max(this.slider.width * t, E.scrollBarMinNum));
        }),
        a(0, t, "target", function() {
            return this._target;
        }, function(t) {
            this._target && (this._target.off("mousewheel", this, this.onTargetMouseWheel),
            this._target.off("mousedown", this, this.onTargetMouseDown)),
            (this._target = t) && (this._mouseWheelEnable && this._target.on("mousewheel", this, this.onTargetMouseWheel),
            this._touchScrollEnable && this._target.on("mousedown", this, this.onTargetMouseDown));
        }),
        a(0, t, "hide", function() {
            return this._hide;
        }, function(t) {
            this._hide = t,
            this.visible = !t;
        }),
        a(0, t, "touchScrollEnable", function() {
            return this._touchScrollEnable;
        }, function(t) {
            this._touchScrollEnable = t,
            this.target = this._target;
        }),
        a(0, t, "mouseWheelEnable", function() {
            return this._mouseWheelEnable;
        }, function(t) {
            this._mouseWheelEnable = t,
            this.target = this._target;
        }),
        a(0, t, "tick", function() {
            return this.slider.tick;
        }, function(t) {
            this.slider.tick = t;
        }),
        i;
    }(D)
      , H = function(e) {
        function i(t) {
            this.changeHandler = null,
            this.isVertical = !0,
            this.showLabel = !0,
            this._allowClickBack = !1,
            this._max = 100,
            this._min = 0,
            this._tick = 1,
            this._value = 0,
            this._skin = null,
            this._bg = null,
            this._progress = null,
            this._bar = null,
            this._tx = NaN,
            this._ty = NaN,
            this._maxMove = NaN,
            this._globalSacle = null,
            i.__super.call(this),
            this.skin = t;
        }
        s(i, "laya.ui.Slider", e);
        var t = i.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._bg && this._bg.destroy(t),
            this._bar && this._bar.destroy(t),
            this._progress && this._progress.destroy(t),
            this._bg = null,
            this._bar = null,
            this._progress = null,
            this.changeHandler = null;
        }
        ,
        t.createChildren = function() {
            this.addChild(this._bg = new k()),
            this.addChild(this._bar = new O());
        }
        ,
        t.initialize = function() {
            this._bar.on("mousedown", this, this.onBarMouseDown),
            this._bg.sizeGrid = this._bar.sizeGrid = "4,4,4,4,0",
            this._progress && (this._progress.sizeGrid = this._bar.sizeGrid),
            this.allowClickBack = !0;
        }
        ,
        t.onBarMouseDown = function(t) {
            this._globalSacle || (this._globalSacle = new y()),
            this._globalSacle.setTo(this.globalScaleX || .01, this.globalScaleY || .01),
            this._maxMove = this.isVertical ? this.height - this._bar.height : this.width - this._bar.width,
            this._tx = f.stage.mouseX,
            this._ty = f.stage.mouseY,
            f.stage.on("mousemove", this, this.mouseMove),
            f.stage.once("mouseup", this, this.mouseUp),
            f.stage.once("mouseout", this, this.mouseUp),
            this.showValueText();
        }
        ,
        t.showValueText = function() {
            if (this.showLabel) {
                var t = laya.ui.Slider.label;
                this.addChild(t),
                t.textField.changeText(this._value + ""),
                this.isVertical ? (t.x = this._bar.x + 20,
                t.y = .5 * (this._bar.height - t.height) + this._bar.y) : (t.y = this._bar.y - 20,
                t.x = .5 * (this._bar.width - t.width) + this._bar.x);
            }
        }
        ,
        t.hideValueText = function() {
            laya.ui.Slider.label && laya.ui.Slider.label.removeSelf();
        }
        ,
        t.mouseUp = function(t) {
            f.stage.off("mousemove", this, this.mouseMove),
            f.stage.off("mouseup", this, this.mouseUp),
            f.stage.off("mouseout", this, this.mouseUp),
            this.sendChangeEvent("changed"),
            this.hideValueText();
        }
        ,
        t.mouseMove = function(t) {
            var e = this._value;
            this.isVertical ? (this._bar.y += (f.stage.mouseY - this._ty) / this._globalSacle.y,
            this._bar.y > this._maxMove ? this._bar.y = this._maxMove : this._bar.y < 0 && (this._bar.y = 0),
            this._value = this._bar.y / this._maxMove * (this._max - this._min) + this._min,
            this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x += (f.stage.mouseX - this._tx) / this._globalSacle.x,
            this._bar.x > this._maxMove ? this._bar.x = this._maxMove : this._bar.x < 0 && (this._bar.x = 0),
            this._value = this._bar.x / this._maxMove * (this._max - this._min) + this._min,
            this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width)),
            this._tx = f.stage.mouseX,
            this._ty = f.stage.mouseY;
            var i = Math.pow(10, (this._tick + "").length - 1);
            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * i) / i,
            this._value != e && this.sendChangeEvent(),
            this.showValueText();
        }
        ,
        t.sendChangeEvent = function(t) {
            void 0 === t && (t = "change"),
            this.event(t),
            this.changeHandler && this.changeHandler.runWith(this._value);
        }
        ,
        t.setBarPoint = function() {
            this.isVertical ? this._bar.x = Math.round(.5 * (this._bg.width - this._bar.width)) : this._bar.y = Math.round(.5 * (this._bg.height - this._bar.height));
        }
        ,
        t.changeSize = function() {
            e.prototype.changeSize.call(this),
            this.isVertical ? this._bg.height = this.height : this._bg.width = this.width,
            this.setBarPoint(),
            this.changeValue();
        }
        ,
        t.setSlider = function(t, e, i) {
            this._value = -1,
            this._min = t,
            this._max = t < e ? e : t,
            this.value = i < t ? t : e < i ? e : i;
        }
        ,
        t.changeValue = function() {
            var t = Math.pow(10, (this._tick + "").length - 1);
            this._value = Math.round(Math.round(this._value / this._tick) * this._tick * t) / t,
            this._value = this._value > this._max ? this._max : this._value < this._min ? this._min : this._value;
            var e = this._max - this._min;
            0 === e && (e = 1),
            this.isVertical ? (this._bar.y = (this._value - this._min) / e * (this.height - this._bar.height),
            this._progress && (this._progress.height = this._bar.y + .5 * this._bar.height)) : (this._bar.x = (this._value - this._min) / e * (this.width - this._bar.width),
            this._progress && (this._progress.width = this._bar.x + .5 * this._bar.width));
        }
        ,
        t.onBgMouseDown = function(t) {
            var e = this._bg.getMousePoint();
            this.isVertical ? this.value = e.y / (this.height - this._bar.height) * (this._max - this._min) + this._min : this.value = e.x / (this.width - this._bar.width) * (this._max - this._min) + this._min;
        }
        ,
        a(0, t, "measureHeight", function() {
            return Math.max(this._bg.height, this._bar.height);
        }),
        a(0, t, "skin", function() {
            return this._skin;
        }, function(t) {
            if (this._skin != t) {
                this._skin = t,
                this._bg.skin = this._skin,
                this._bar.skin = this._skin.replace(".png", "__bar.png");
                var e = this._skin.replace(".png", "$progress.png");
                m.getRes(e) && (this._progress || (this.addChild(this._progress = new k()),
                this._progress.sizeGrid = this._bar.sizeGrid,
                this.setChildIndex(this._progress, 1)),
                this._progress.skin = e),
                this.setBarPoint(),
                this.callLater(this.changeValue);
            }
        }),
        a(0, t, "allowClickBack", function() {
            return this._allowClickBack;
        }, function(t) {
            this._allowClickBack != t && ((this._allowClickBack = t) ? this._bg.on("mousedown", this, this.onBgMouseDown) : this._bg.off("mousedown", this, this.onBgMouseDown));
        }),
        a(0, t, "max", function() {
            return this._max;
        }, function(t) {
            this._max != t && (this._max = t,
            this.callLater(this.changeValue));
        }),
        a(0, t, "measureWidth", function() {
            return Math.max(this._bg.width, this._bar.width);
        }),
        a(0, t, "tick", function() {
            return this._tick;
        }, function(t) {
            this._tick != t && (this._tick = t,
            this.callLater(this.changeValue));
        }),
        a(0, t, "sizeGrid", function() {
            return this._bg.sizeGrid;
        }, function(t) {
            this._bg.sizeGrid = t,
            this._bar.sizeGrid = t,
            this._progress && (this._progress.sizeGrid = this._bar.sizeGrid);
        }),
        a(0, t, "min", function() {
            return this._min;
        }, function(t) {
            this._min != t && (this._min = t,
            this.callLater(this.changeValue));
        }),
        a(0, t, "value", function() {
            return this._value;
        }, function(t) {
            if (this._value != t) {
                var e = this._value;
                this._value = t,
                this.changeValue(),
                this._value != e && this.sendChangeEvent();
            }
        }),
        a(0, t, "dataSource", e.prototype._$get_dataSource, function(t) {
            "number" == typeof (this._dataSource = t) || "string" == typeof t ? this.value = Number(t) : f.superSet(D, this, "dataSource", t);
        }),
        a(0, t, "bar", function() {
            return this._bar;
        }),
        n(i, ["label", function() {
            return this.label = new V();
        }
        ]),
        i;
    }(D)
      , V = function(e) {
        function i(t) {
            this._tf = null,
            i.__super.call(this),
            void 0 === t && (t = ""),
            u.defaultColor = E.labelColor,
            this.text = t;
        }
        s(i, "laya.ui.Label", e);
        var t = i.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._tf = null;
        }
        ,
        t.createChildren = function() {
            this.addChild(this._tf = new b());
        }
        ,
        t.changeText = function(t) {
            this._tf.changeText(t);
        }
        ,
        a(0, t, "padding", function() {
            return this._tf.padding.join(",");
        }, function(t) {
            this._tf.padding = P.fillArray(E.labelPadding, t, Number);
        }),
        a(0, t, "bold", function() {
            return this._tf.bold;
        }, function(t) {
            this._tf.bold = t;
        }),
        a(0, t, "align", function() {
            return this._tf.align;
        }, function(t) {
            this._tf.align = t;
        }),
        a(0, t, "text", function() {
            return this._tf.text;
        }, function(t) {
            this._tf.text != t && (t && (t = P.adptString(t + "")),
            this._tf.text = t,
            this.event("change"),
            this._width && this._height || this.onCompResize());
        }),
        a(0, t, "italic", function() {
            return this._tf.italic;
        }, function(t) {
            this._tf.italic = t;
        }),
        a(0, t, "wordWrap", function() {
            return this._tf.wordWrap;
        }, function(t) {
            this._tf.wordWrap = t;
        }),
        a(0, t, "font", function() {
            return this._tf.font;
        }, function(t) {
            this._tf.font = t;
        }),
        a(0, t, "dataSource", e.prototype._$get_dataSource, function(t) {
            "number" == typeof (this._dataSource = t) || "string" == typeof t ? this.text = t + "" : f.superSet(D, this, "dataSource", t);
        }),
        a(0, t, "color", function() {
            return this._tf.color;
        }, function(t) {
            this._tf.color = t;
        }),
        a(0, t, "valign", function() {
            return this._tf.valign;
        }, function(t) {
            this._tf.valign = t;
        }),
        a(0, t, "leading", function() {
            return this._tf.leading;
        }, function(t) {
            this._tf.leading = t;
        }),
        a(0, t, "fontSize", function() {
            return this._tf.fontSize;
        }, function(t) {
            this._tf.fontSize = t;
        }),
        a(0, t, "bgColor", function() {
            return this._tf.bgColor;
        }, function(t) {
            this._tf.bgColor = t;
        }),
        a(0, t, "borderColor", function() {
            return this._tf.borderColor;
        }, function(t) {
            this._tf.borderColor = t;
        }),
        a(0, t, "stroke", function() {
            return this._tf.stroke;
        }, function(t) {
            this._tf.stroke = t;
        }),
        a(0, t, "strokeColor", function() {
            return this._tf.strokeColor;
        }, function(t) {
            this._tf.strokeColor = t;
        }),
        a(0, t, "textField", function() {
            return this._tf;
        }),
        a(0, t, "measureWidth", function() {
            return this._tf.width;
        }),
        a(0, t, "measureHeight", function() {
            return this._tf.height;
        }),
        a(0, t, "width", function() {
            return this._width || this._tf.text ? f.superGet(D, this, "width") : 0;
        }, function(t) {
            f.superSet(D, this, "width", t),
            this._tf.width = t;
        }),
        a(0, t, "height", function() {
            return this._height || this._tf.text ? f.superGet(D, this, "height") : 0;
        }, function(t) {
            f.superSet(D, this, "height", t),
            this._tf.height = t;
        }),
        a(0, t, "overflow", function() {
            return this._tf.overflow;
        }, function(t) {
            this._tf.overflow = t;
        }),
        a(0, t, "underline", function() {
            return this._tf.underline;
        }, function(t) {
            this._tf.underline = t;
        }),
        a(0, t, "underlineColor", function() {
            return this._tf.underlineColor;
        }, function(t) {
            this._tf.underlineColor = t;
        }),
        i;
    }(D)
      , Y = function(e) {
        function i(t) {
            this.changeHandler = null,
            this._bg = null,
            this._bar = null,
            this._skin = null,
            this._value = .5,
            i.__super.call(this),
            this.skin = t;
        }
        s(i, "laya.ui.ProgressBar", e);
        var t = i.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._bg && this._bg.destroy(t),
            this._bar && this._bar.destroy(t),
            this._bg = this._bar = null,
            this.changeHandler = null;
        }
        ,
        t.createChildren = function() {
            this.addChild(this._bg = new k()),
            this.addChild(this._bar = new k()),
            this._bar._bitmap.autoCacheCmd = !1;
        }
        ,
        t.changeValue = function() {
            if (this.sizeGrid) {
                var t = this.sizeGrid.split(",")
                  , e = Number(t[3])
                  , i = Number(t[1])
                  , n = (this.width - e - i) * this._value;
                this._bar.width = e + i + n,
                this._bar.visible = this._bar.width > e + i;
            } else
                this._bar.width = this.width * this._value;
        }
        ,
        a(0, t, "measureHeight", function() {
            return this._bg.height;
        }),
        a(0, t, "skin", function() {
            return this._skin;
        }, function(t) {
            this._skin != t && (this._skin = t,
            this._bg.skin = this._skin,
            this._bar.skin = this._skin.replace(".png", "__bar.png"),
            this.callLater(this.changeValue));
        }),
        a(0, t, "measureWidth", function() {
            return this._bg.width;
        }),
        a(0, t, "height", e.prototype._$get_height, function(t) {
            f.superSet(D, this, "height", t),
            this._bg.height = this._height,
            this._bar.height = this._height;
        }),
        a(0, t, "bar", function() {
            return this._bar;
        }),
        a(0, t, "value", function() {
            return this._value;
        }, function(t) {
            this._value != t && (t = 1 < t ? 1 : t < 0 ? 0 : t,
            this._value = t,
            this.callLater(this.changeValue),
            this.event("change"),
            this.changeHandler && this.changeHandler.runWith(t));
        }),
        a(0, t, "bg", function() {
            return this._bg;
        }),
        a(0, t, "sizeGrid", function() {
            return this._bg.sizeGrid;
        }, function(t) {
            this._bg.sizeGrid = this._bar.sizeGrid = t;
        }),
        a(0, t, "width", e.prototype._$get_width, function(t) {
            f.superSet(D, this, "width", t),
            this._bg.width = this._width,
            this.callLater(this.changeValue);
        }),
        a(0, t, "dataSource", e.prototype._$get_dataSource, function(t) {
            "number" == typeof (this._dataSource = t) || "string" == typeof t ? this.value = Number(t) : f.superSet(D, this, "dataSource", t);
        }),
        i;
    }(D)
      , X = (function(t) {
        function i() {
            this._tipBox = null,
            this._tipText = null,
            this._defaultTipHandler = null,
            i.__super.call(this),
            this._tipBox = new D(),
            this._tipBox.addChild(this._tipText = new b()),
            this._tipText.x = this._tipText.y = 5,
            this._tipText.color = i.tipTextColor,
            this._defaultTipHandler = this._showDefaultTip,
            f.stage.on("showtip", this, this._onStageShowTip),
            f.stage.on("hidetip", this, this._onStageHideTip),
            this.zOrder = 1100;
        }
        s(i, "laya.ui.TipManager", D);
        var e = i.prototype;
        e._onStageHideTip = function(t) {
            f.timer.clear(this, this._showTip),
            this.closeAll(),
            this.removeSelf();
        }
        ,
        e._onStageShowTip = function(t) {
            f.timer.once(i.tipDelay, this, this._showTip, [t], !0);
        }
        ,
        e._showTip = function(t) {
            if ("string" == typeof t) {
                var e = String(t);
                Boolean(e) && this._defaultTipHandler(e);
            } else
                t instanceof laya.utils.Handler ? t.run() : "function" == typeof t && t.apply();
            f.stage.on("mousemove", this, this._onStageMouseMove),
            f.stage.on("mousedown", this, this._onStageMouseDown),
            this._onStageMouseMove(null);
        }
        ,
        e._onStageMouseDown = function(t) {
            this.closeAll();
        }
        ,
        e._onStageMouseMove = function(t) {
            this._showToStage(this, i.offsetX, i.offsetY);
        }
        ,
        e._showToStage = function(t, e, i) {
            void 0 === e && (e = 0),
            void 0 === i && (i = 0);
            var n = t.getBounds();
            t.x = f.stage.mouseX + e,
            t.y = f.stage.mouseY + i,
            t.x + n.width > f.stage.width && (t.x -= n.width + e),
            t.y + n.height > f.stage.height && (t.y -= n.height + i);
        }
        ,
        e.closeAll = function() {
            f.timer.clear(this, this._showTip),
            f.stage.off("mousemove", this, this._onStageMouseMove),
            f.stage.off("mousedown", this, this._onStageMouseDown),
            this.removeChildren();
        }
        ,
        e.showDislayTip = function(t) {
            this.addChild(t),
            this._showToStage(this),
            f._currentStage.addChild(this);
        }
        ,
        e._showDefaultTip = function(t) {
            this._tipText.text = t;
            var e = this._tipBox.graphics;
            e.clear(),
            e.drawRect(0, 0, this._tipText.width + 10, this._tipText.height + 10, i.tipBackColor),
            this.addChild(this._tipBox),
            this._showToStage(this),
            f._currentStage.addChild(this);
        }
        ,
        a(0, e, "defaultTipHandler", function() {
            return this._defaultTipHandler;
        }, function(t) {
            this._defaultTipHandler = t;
        }),
        i.offsetX = 10,
        i.offsetY = 15,
        i.tipTextColor = "#ffffff",
        i.tipBackColor = "#111111",
        i.tipDelay = 200;
    }(),
    function(e) {
        function i(t) {
            this.advsListArr = [],
            this.resUrl = "https://unioncdn.layabox.com/config/iconlist.json",
            this._data = [],
            this._resquestTime = 36e4,
            this._appid = null,
            this._appCodeImgStr = null,
            this._playIndex = 0,
            this._lunboTime = 5e3,
            i.__super.call(this),
            this._http = new r.window.XMLHttpRequest(),
            this.skin = t,
            this.init(),
            this.size(120, 120);
        }
        s(i, "laya.ui.AdvImage", e);
        var t = i.prototype;
        t.init = function() {
            r.onMiniGame && this.isSupportJump ? (f.timer.loop(this._resquestTime, this, this.onGetAdvsListData),
            this.onGetAdvsListData(),
            this.initEvent()) : this.visible = !1;
        }
        ,
        t.initEvent = function() {
            this.on("click", this, this.onAdvsImgClick);
        }
        ,
        t.onAdvsImgClick = function() {
            this.getCurrentAppidObj() && this.jumptoGame();
        }
        ,
        t.revertAdvsData = function() {
            this.advsListArr[this._playIndex] && (this.visible = !0,
            this.skin = this.advsListArr[this._playIndex]);
        }
        ,
        t.jumptoGame = function() {
            var t = this;
            r.onMiniGame && this.isSupportJump && wx.navigateToMiniProgram({
                appId: this._appid,
                path: "",
                extraData: "",
                envVersion: "release",
                success: function() {
                    console.log("-------------跳转成功--------------");
                },
                fail: function() {
                    console.log("-------------跳转失败--------------");
                },
                complete: function() {
                    console.log("-------------跳转接口调用成功--------------"),
                    t.updateAdvsInfo();
                }
                .bind(this)
            });
        }
        ,
        t.updateAdvsInfo = function() {
            this.visible = !1,
            this.onLunbo(),
            f.timer.loop(this._lunboTime, this, this.onLunbo);
        }
        ,
        t.onLunbo = function() {
            this._playIndex >= this.advsListArr.length - 1 ? this._playIndex = 0 : this._playIndex += 1,
            this.visible = !0,
            this.revertAdvsData();
        }
        ,
        t.getCurrentAppidObj = function() {
            return this.advsListArr[this._playIndex];
        }
        ,
        t.onGetAdvsListData = function() {
            var e = this
              , t = this.randRange(1e4, 1e6)
              , i = this.resUrl + "?" + t;
            this._http.open("get", i, !0),
            this._http.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"),
            this._http.responseType = "text",
            this._http.onerror = function(t) {
                e._onError(t);
            }
            ,
            this._http.onload = function(t) {
                e._onLoad(t);
            }
            ,
            this._http.send(null);
        }
        ,
        t.randRange = function(t, e) {
            return Math.floor(Math.random() * (e - t + 1)) + t;
        }
        ,
        t._onError = function(t) {
            this.error("Request failed Status:" + this._http.status + " text:" + this._http.statusText);
        }
        ,
        t._onLoad = function(t) {
            var e = this._http
              , i = void 0 !== e.status ? e.status : 200;
            200 === i || 204 === i || 0 === i ? this.complete() : this.error("[" + e.status + "]" + e.statusText + ":" + e.responseURL);
        }
        ,
        t.error = function(t) {
            this.event("error", t);
        }
        ,
        t.complete = function() {
            try {
                this._data = this._http.response || this._http.responseText,
                this._data = JSON.parse(this._data),
                this.advsListArr = this._data.list,
                this._appid = this._data.appid,
                this._appCodeImgStr = this._data.qrcode,
                this.updateAdvsInfo(),
                this.revertAdvsData();
            } catch (t) {
                !1,
                this.error(t.message);
            }
        }
        ,
        t.clear = function() {
            var t = this._http;
            t.onerror = t.onabort = t.onprogress = t.onload = null;
        }
        ,
        t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, !0),
            f.timer.clear(this, this.onLunbo),
            f.timer.clear(this, this.onGetAdvsListData),
            this.clear();
        }
        ,
        a(0, t, "isSupportJump", function() {
            return !!r.onMiniGame && "function" == typeof wx.navigateToMiniProgram;
        });
    }(k),
    function(t) {
        var _;
        function p() {
            this._idMap = null,
            this._aniList = null,
            this._watchMap = {},
            p.__super.call(this);
        }
        s(p, "laya.ui.View", N);
        var e = p.prototype;
        return e.createView = function(t) {
            if (t.animations && !this._idMap && (this._idMap = {}),
            p.createComp(t, this, this),
            t.animations) {
                var e, i, n = [], a = t.animations, s = 0, r = a.length;
                for (s = 0; s < r; s++) {
                    switch (e = new c(),
                    i = a[s],
                    e._setUp(this._idMap, i),
                    (this[i.name] = e)._setControlNode(this),
                    i.action) {
                    case 1:
                        e.play(0, !1);
                        break;

                    case 2:
                        e.play(0, !0);
                    }
                    n.push(e);
                }
                this._aniList = n;
            }
            0 < this._width && null == t.props.hitTestPrior && !this.mouseThrough && (this.hitTestPrior = !0);
        }
        ,
        e.onEvent = function(t, e) {}
        ,
        e.loadUI = function(t) {
            var e = p.uiMap[t];
            e && this.createView(e);
        }
        ,
        e.destroy = function(t) {
            void 0 === t && (t = !0),
            this._aniList && (this._aniList.length = 0),
            this._idMap = null,
            this._aniList = null,
            this._watchMap = null,
            laya.ui.Component.prototype.destroy.call(this, t);
        }
        ,
        e.changeData = function(t) {
            var e = this._watchMap[t];
            if (e) {
                console.log("change", t);
                for (var i = 0, n = e.length; i < n; i++) {
                    e[i].exe(this);
                }
            }
        }
        ,
        p._regs = function() {
            for (var t in p.uiClassMap)
                g.regClass(t, p.uiClassMap[t]);
        }
        ,
        p.createComp = function(t, e, i, n) {
            if (!(e = e || p.getCompInstance(t)))
                return console.warn("can not create:" + t.type),
                null;
            var a = t.child;
            if (a)
                for (var s = e instanceof laya.ui.List, r = 0, o = a.length; r < o; r++) {
                    var h = a[r];
                    if (!e.hasOwnProperty("itemRender") || "render" != h.props.name && "render" !== h.props.renderType)
                        if ("Graphic" == h.type)
                            g.addGraphicsToSprite(h, e);
                        else if (g.isDrawType(h.type))
                            g.addGraphicToSprite(h, e, !0);
                        else {
                            if (s) {
                                var l = []
                                  , u = p.createComp(h, null, i, l);
                                l.length && (u._$bindData = l);
                            } else
                                u = p.createComp(h, null, i, n);
                            "Script" == h.type ? "owner"in u ? u.owner = e : "target"in u && (u.target = e) : "mask" == h.props.renderType || "mask" == h.props.name ? e.mask = u : u instanceof laya.display.Sprite && e.addChild(u);
                        }
                    else
                        e.itemRender = h;
                }
            var c = t.props;
            for (var d in c) {
                var _ = c[d];
                p.eventDic[d] ? _ && i && e.on(d, i, i.onEvent, [_]) : p.setCompValue(e, d, _, i, n);
            }
            return f.__typeof(e, "laya.ui.IItem") && e.initItems(),
            t.compId && i && i._idMap && (i._idMap[t.compId] = e),
            e;
        }
        ,
        p.setCompValue = function(t, e, i, n, a) {
            if ("string" == typeof i && -1 < i.indexOf("${")) {
                if (p._sheet || (p._sheet = g.getClass("laya.data.Table")),
                !p._sheet)
                    return void console.warn("Can not find class Sheet");
                if (a)
                    a.push(t, e, i);
                else if (n) {
                    -1 == i.indexOf("].") && (i = i.replace(".", "[0]."));
                    var s, r, o = new _(t,e,i);
                    o.exe(n);
                    for (var h = i.replace(/\[.*?\]\./g, "."); null != (s = p._parseWatchData.exec(h)); ) {
                        for (var l = s[1]; null != (r = p._parseKeyWord.exec(l)); ) {
                            var u = r[0]
                              , c = n._watchMap[u] || (n._watchMap[u] = []);
                            c.push(o),
                            p._sheet.I.notifer.on(u, n, n.changeData, [u]);
                        }
                        (c = n._watchMap[l] || (n._watchMap[l] = [])).push(o),
                        p._sheet.I.notifer.on(l, n, n.changeData, [l]);
                    }
                }
            } else if ("var" === e && n)
                n[i] = t;
            else if ("onClick" == e) {
                var d = f._runScript("(function(){" + i + "})");
                t.on("click", n, d);
            } else
                t[e] = "true" === i || "false" !== i && i;
        }
        ,
        p.getCompInstance = function(t) {
            var e, i = t.props ? t.props.runtime : null;
            return e = i ? p.viewClassMap[i] || p.uiClassMap[i] || f.__classmap[i] : p.uiClassMap[t.type],
            t.props && t.props.hasOwnProperty("renderType") && "instance" == t.props.renderType ? e.instance : e ? new e() : null;
        }
        ,
        p.regComponent = function(t, e) {
            p.uiClassMap[t] = e,
            g.regClass(t, e);
        }
        ,
        p.regViewRuntime = function(t, e) {
            p.viewClassMap[t] = e;
        }
        ,
        p.uiMap = {},
        p.viewClassMap = {},
        p._sheet = null,
        n(p, ["uiClassMap", function() {
            return this.uiClassMap = {
                ViewStack: et,
                LinkButton: O,
                TextArea: ut,
                ColorPicker: G,
                Box: N,
                Button: O,
                CheckBox: W,
                Clip: B,
                ComboBox: F,
                Component: D,
                HScrollBar: $,
                HSlider: Q,
                Image: k,
                Label: V,
                List: j,
                Panel: q,
                ProgressBar: Y,
                Radio: Z,
                RadioGroup: ht,
                ScrollBar: U,
                Slider: H,
                Tab: lt,
                TextInput: nt,
                View: p,
                VScrollBar: it,
                VSlider: at,
                Tree: tt,
                HBox: rt,
                VBox: ot,
                Sprite: x,
                Animation: i,
                Text: b,
                FontClip: K
            };
        }
        , "eventDic", function() {
            return this.eventDic = {
                mousedown: !0,
                mouseup: !0,
                mousemove: !0,
                mouseover: !0,
                mouseout: !0,
                click: !0,
                doubleclick: !0,
                rightmousedown: !0,
                rightmouseup: !0,
                rightclick: !0
            };
        }
        , "_parseWatchData", function() {
            return this._parseWatchData = /\${(.*?)}/g;
        }
        , "_parseKeyWord", function() {
            return this._parseKeyWord = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;
        }
        ]),
        p.__init$ = function() {
            p._regs(),
            _ = function() {
                function t(t, e, i) {
                    this.comp = null,
                    this.prop = null,
                    this.value = null,
                    this.comp = t,
                    this.prop = e,
                    this.value = i;
                }
                return s(t, ""),
                t.prototype.exe = function(t) {
                    var e = P.getBindFun(this.value);
                    this.comp[this.prop] = e.call(this, t);
                }
                ,
                t;
            }();
        }
        ,
        p;
    }())
      , W = function(t) {
        function i(t, e) {
            void 0 === e && (e = ""),
            i.__super.call(this, t, e);
        }
        s(i, "laya.ui.CheckBox", t);
        var e = i.prototype;
        return e.preinitialize = function() {
            laya.ui.Component.prototype.preinitialize.call(this),
            this.toggle = !0,
            this._autoSize = !1;
        }
        ,
        e.initialize = function() {
            t.prototype.initialize.call(this),
            this.createText(),
            this._text.align = "left",
            this._text.valign = "top",
            this._text.width = 0;
        }
        ,
        a(0, e, "dataSource", t.prototype._$get_dataSource, function(t) {
            "boolean" == typeof (this._dataSource = t) ? this.selected = t : "string" == typeof t ? this.selected = "true" === t : f.superSet(O, this, "dataSource", t);
        }),
        i;
    }(O)
      , z = function(t) {
        function e() {
            this._space = 0,
            this._align = "none",
            this._itemChanged = !1,
            e.__super.call(this);
        }
        s(e, "laya.ui.LayoutBox", N);
        var i = e.prototype;
        return i.addChild = function(t) {
            return t.on("resize", this, this.onResize),
            this._setItemChanged(),
            laya.display.Node.prototype.addChild.call(this, t);
        }
        ,
        i.onResize = function(t) {
            this._setItemChanged();
        }
        ,
        i.addChildAt = function(t, e) {
            return t.on("resize", this, this.onResize),
            this._setItemChanged(),
            laya.display.Node.prototype.addChildAt.call(this, t, e);
        }
        ,
        i.removeChildAt = function(t) {
            return this.getChildAt(t).off("resize", this, this.onResize),
            this._setItemChanged(),
            laya.display.Node.prototype.removeChildAt.call(this, t);
        }
        ,
        i.refresh = function() {
            this._setItemChanged();
        }
        ,
        i.changeItems = function() {
            this._itemChanged = !1;
        }
        ,
        i.sortItem = function(t) {
            t && t.sort(function(t, e) {
                return t.y - e.y;
            });
        }
        ,
        i._setItemChanged = function() {
            this._itemChanged || (this._itemChanged = !0,
            this.callLater(this.changeItems));
        }
        ,
        a(0, i, "space", function() {
            return this._space;
        }, function(t) {
            this._space = t,
            this._setItemChanged();
        }),
        a(0, i, "align", function() {
            return this._align;
        }, function(t) {
            this._align = t,
            this._setItemChanged();
        }),
        e;
    }()
      , K = function(e) {
        function i(t, e) {
            this._valueArr = null,
            this._indexMap = null,
            this._sheet = null,
            this._direction = "horizontal",
            this._spaceX = 0,
            this._spaceY = 0,
            this._align = "left",
            this._wordsW = 0,
            this._wordsH = 0,
            i.__super.call(this),
            t && (this.skin = t),
            e && (this.sheet = e);
        }
        s(i, "laya.ui.FontClip", e);
        var t = i.prototype;
        return t.createChildren = function() {
            this._bitmap = new L(),
            this.on("loaded", this, this._onClipLoaded);
        }
        ,
        t._onClipLoaded = function() {
            this.callLater(this.changeValue);
        }
        ,
        t.changeValue = function() {
            var t;
            if (this._sources && (this._valueArr && (this.graphics.clear(!0),
            t = this._sources[0]))) {
                var e = "horizontal" === this._direction;
                this._wordsH = e ? (this._wordsW = this._valueArr.length * (t.sourceWidth + this.spaceX),
                t.sourceHeight) : (this._wordsW = t.sourceWidth,
                (t.sourceHeight + this.spaceY) * this._valueArr.length);
                var i = 0;
                if (this._width)
                    switch (this._align) {
                    case "center":
                        i = .5 * (this._width - this._wordsW);
                        break;

                    case "right":
                        i = this._width - this._wordsW;
                        break;

                    default:
                        i = 0;
                    }
                for (var n = 0, a = this._valueArr.length; n < a; n++) {
                    var s = this._indexMap[this._valueArr.charAt(n)];
                    this.sources[s] && (t = this.sources[s],
                    e ? this.graphics.drawTexture(t, i + n * (t.sourceWidth + this.spaceX), 0, t.sourceWidth, t.sourceHeight) : this.graphics.drawTexture(t, 0 + i, n * (t.sourceHeight + this.spaceY), t.sourceWidth, t.sourceHeight));
                }
                this._width || (this.resetLayoutX(),
                this.callLater(this.changeSize)),
                this._height || (this.resetLayoutY(),
                this.callLater(this.changeSize));
            }
        }
        ,
        t.destroy = function(t) {
            void 0 === t && (t = !0),
            this._valueArr = null,
            this._indexMap = null,
            this.graphics.clear(!0),
            this.removeSelf(),
            this.off("loaded", this, this._onClipLoaded),
            e.prototype.destroy.call(this, t);
        }
        ,
        a(0, t, "sheet", function() {
            return this._sheet;
        }, function(t) {
            t += "";
            var e = (this._sheet = t).split(" ");
            this._clipX = String(e[0]).length,
            this.clipY = e.length,
            this._indexMap = {};
            for (var i = 0; i < this._clipY; i++)
                for (var n = e[i].split(""), a = 0, s = n.length; a < s; a++)
                    this._indexMap[n[a]] = i * this._clipX + a;
        }),
        a(0, t, "height", e.prototype._$get_height, function(t) {
            f.superSet(B, this, "height", t),
            this.callLater(this.changeValue);
        }),
        a(0, t, "direction", function() {
            return this._direction;
        }, function(t) {
            this._direction = t,
            this.callLater(this.changeValue);
        }),
        a(0, t, "value", function() {
            return this._valueArr ? this._valueArr : "";
        }, function(t) {
            t += "",
            this._valueArr = t,
            this.callLater(this.changeValue);
        }),
        a(0, t, "width", e.prototype._$get_width, function(t) {
            f.superSet(B, this, "width", t),
            this.callLater(this.changeValue);
        }),
        a(0, t, "spaceX", function() {
            return this._spaceX;
        }, function(t) {
            this._spaceX = t,
            "horizontal" === this._direction && this.callLater(this.changeValue);
        }),
        a(0, t, "spaceY", function() {
            return this._spaceY;
        }, function(t) {
            this._spaceY = t,
            "horizontal" !== this._direction && this.callLater(this.changeValue);
        }),
        a(0, t, "align", function() {
            return this._align;
        }, function(t) {
            this._align = t,
            this.callLater(this.changeValue);
        }),
        a(0, t, "measureWidth", function() {
            return this._wordsW;
        }),
        a(0, t, "measureHeight", function() {
            return this._wordsH;
        }),
        i;
    }(B)
      , j = function(t) {
        function e() {
            this.selectHandler = null,
            this.renderHandler = null,
            this.mouseHandler = null,
            this.selectEnable = !1,
            this.totalPage = 0,
            this._content = null,
            this._scrollBar = null,
            this._itemRender = null,
            this._repeatX = 0,
            this._repeatY = 0,
            this._repeatX2 = 0,
            this._repeatY2 = 0,
            this._spaceX = 0,
            this._spaceY = 0,
            this._array = null,
            this._startIndex = 0,
            this._selectedIndex = -1,
            this._page = 0,
            this._isVertical = !0,
            this._cellSize = 20,
            this._cellOffset = 0,
            this._isMoved = !1,
            this.cacheContent = !1,
            this._createdLine = 0,
            this._cellChanged = !1,
            this._cells = [],
            this._offset = new y(),
            e.__super.call(this);
        }
        s(e, "laya.ui.List", t);
        var i = e.prototype;
        return f.imps(i, {
            "laya.ui.IRender": !0,
            "laya.ui.IItem": !0
        }),
        i.destroy = function(t) {
            void 0 === t && (t = !0),
            this._content && this._content.destroy(t),
            this._scrollBar && this._scrollBar.destroy(t),
            laya.ui.Component.prototype.destroy.call(this, t),
            this._content = null,
            this._scrollBar = null,
            this._itemRender = null,
            this._cells = null,
            this._array = null,
            this.selectHandler = this.renderHandler = this.mouseHandler = null;
        }
        ,
        i.createChildren = function() {
            this.addChild(this._content = new N());
        }
        ,
        i.onScrollStart = function() {
            this._$P.cacheAs || (this._$P.cacheAs = f.superGet(N, this, "cacheAs")),
            f.superSet(N, this, "cacheAs", "none"),
            this._scrollBar.once("end", this, this.onScrollEnd);
        }
        ,
        i.onScrollEnd = function() {
            f.superSet(N, this, "cacheAs", this._$P.cacheAs);
        }
        ,
        i._removePreScrollBar = function() {
            var t = this.removeChildByName("scrollBar");
            t && t.destroy(!0);
        }
        ,
        i.changeCells = function() {
            if (this._cellChanged = !1,
            this._itemRender) {
                this.scrollBar = this.getChildByName("scrollBar");
                var t = this._getOneCell()
                  , e = t.width + this._spaceX || 1
                  , i = t.height + this._spaceY || 1;
                0 < this._width && (this._repeatX2 = this._isVertical ? Math.round(this._width / e) : Math.ceil(this._width / e)),
                0 < this._height && (this._repeatY2 = this._isVertical ? Math.ceil(this._height / i) : Math.round(this._height / i));
                var n = this._width ? this._width : e * this.repeatX - this._spaceX
                  , a = this._height ? this._height : i * this.repeatY - this._spaceY;
                this._cellSize = this._isVertical ? i : e,
                this._cellOffset = this._isVertical ? i * Math.max(this._repeatY2, this._repeatY) - a - this._spaceY : e * Math.max(this._repeatX2, this._repeatX) - n - this._spaceX,
                this._isVertical && this._scrollBar ? this._scrollBar.height = a : !this._isVertical && this._scrollBar && (this._scrollBar.width = n),
                this.setContentSize(n, a);
                var s = this._isVertical ? this.repeatX : this.repeatY
                  , r = (this._isVertical ? this.repeatY : this.repeatX) + (this._scrollBar ? 1 : 0);
                this._createItems(0, s, r),
                this._createdLine = r,
                this._array && (this.array = this._array,
                this.runCallLater(this.renderItems));
            }
        }
        ,
        i._getOneCell = function() {
            if (0 === this._cells.length) {
                var t = this.createItem();
                if (this._offset.setTo(t.x, t.y),
                this.cacheContent)
                    return t;
                this._cells.push(t);
            }
            return this._cells[0];
        }
        ,
        i._createItems = function(t, e, i) {
            var n = this._content
              , a = this._getOneCell()
              , s = a.width + this._spaceX
              , r = a.height + this._spaceY;
            if (this.cacheContent) {
                var o = new N();
                o.cacheAsBitmap = !0,
                o.pos((this._isVertical ? 0 : t) * s, (this._isVertical ? t : 0) * r),
                this._content.addChild(o),
                this._content.optimizeScrollRect = !0,
                n = o;
            } else {
                for (var h = [], l = this._cells.length - 1; -1 < l; l--) {
                    var u = this._cells[l];
                    u.removeSelf(),
                    h.push(u);
                }
                this._cells.length = 0;
            }
            for (var c = t; c < i; c++)
                for (var d = 0; d < e; d++)
                    (a = h && h.length ? h.pop() : this.createItem()).x = (this._isVertical ? d : c) * s - n.x,
                    a.y = (this._isVertical ? c : d) * r - n.y,
                    a.name = "item" + (c * e + d),
                    n.addChild(a),
                    this.addCell(a);
        }
        ,
        i.createItem = function() {
            var t = [];
            if ("function" == typeof this._itemRender)
                var e = new this._itemRender();
            else
                e = X.createComp(this._itemRender, null, null, t);
            if (0 == t.length && e._watchMap) {
                var i = e._watchMap;
                for (var n in i)
                    for (var a = i[n], s = 0; s < a.length; s++) {
                        var r = a[s];
                        t.push(r.comp, r.prop, r.value);
                    }
            }
            return t.length && (e._$bindData = t),
            e;
        }
        ,
        i.addCell = function(t) {
            t.on("click", this, this.onCellMouse),
            t.on("rightclick", this, this.onCellMouse),
            t.on("mouseover", this, this.onCellMouse),
            t.on("mouseout", this, this.onCellMouse),
            t.on("mousedown", this, this.onCellMouse),
            t.on("mouseup", this, this.onCellMouse),
            this._cells.push(t);
        }
        ,
        i.initItems = function() {
            if (!this._itemRender && null != this.getChildByName("item0")) {
                this.repeatX = 1;
                for (var t = 0, e = t = 0; e < 1e4; e++) {
                    var i = this.getChildByName("item" + e);
                    if (!i)
                        break;
                    this.addCell(i),
                    t++;
                }
                this.repeatY = t;
            }
        }
        ,
        i.setContentSize = function(t, e) {
            this._content.width = t,
            this._content.height = e,
            (this._scrollBar || 0 != this._offset.x || 0 != this._offset.y) && (this._content.scrollRect || (this._content.scrollRect = new v()),
            this._content.scrollRect.setTo(-this._offset.x, -this._offset.y, t, e),
            this._content.scrollRect = this._content.scrollRect),
            this.event("resize");
        }
        ,
        i.onCellMouse = function(t) {
            "mousedown" === t.type && (this._isMoved = !1);
            var e = t.currentTarget
              , i = this._startIndex + this._cells.indexOf(e);
            i < 0 || ("click" === t.type || "rightclick" === t.type ? this.selectEnable && !this._isMoved ? this.selectedIndex = i : this.changeCellState(e, !0, 0) : "mouseover" !== t.type && "mouseout" !== t.type || this._selectedIndex === i || this.changeCellState(e, "mouseover" === t.type, 0),
            this.mouseHandler && this.mouseHandler.runWith([t, i]));
        }
        ,
        i.changeCellState = function(t, e, i) {
            var n = t.getChildByName("selectBox");
            n && (this.selectEnable = !0,
            n.visible = e,
            n.index = i);
        }
        ,
        i.changeSize = function() {
            laya.ui.Component.prototype.changeSize.call(this),
            this.setContentSize(this.width, this.height),
            this._scrollBar && this.callLater(this.onScrollBarChange);
        }
        ,
        i.onScrollBarChange = function(t) {
            this.runCallLater(this.changeCells);
            var e = this._scrollBar.value
              , i = this._isVertical ? this.repeatX : this.repeatY
              , n = this._isVertical ? this.repeatY : this.repeatX
              , a = Math.floor(e / this._cellSize);
            if (this.cacheContent)
                r = n + 1,
                this._createdLine - a < r && (this._createItems(this._createdLine, i, this._createdLine + r),
                this.renderItems(this._createdLine * i, 0),
                this._createdLine += r);
            else {
                var s = a * i
                  , r = 0;
                if (s > this._startIndex) {
                    r = s - this._startIndex;
                    var o = !0
                      , h = this._startIndex + i * (n + 1);
                    this._isMoved = !0;
                } else
                    s < this._startIndex && (r = this._startIndex - s,
                    o = !1,
                    h = this._startIndex - 1,
                    this._isMoved = !0);
                for (var l = 0; l < r; l++) {
                    if (o) {
                        var u = this._cells.shift();
                        this._cells[this._cells.length] = u;
                        var c = h + l;
                    } else
                        u = this._cells.pop(),
                        this._cells.unshift(u),
                        c = h - l;
                    var d = Math.floor(c / i) * this._cellSize;
                    this._isVertical ? u.y = d : u.x = d,
                    this.renderItem(u, c);
                }
                this._startIndex = s,
                this.changeSelectStatus();
            }
            var _ = this._content.scrollRect;
            _ && (this._isVertical ? (_.y = e - this._offset.y,
            _.x = -this._offset.x) : (_.y = -this._offset.y,
            _.x = e - this._offset.x),
            this._content.scrollRect = _);
        }
        ,
        i.posCell = function(t, e) {
            if (this._scrollBar) {
                var i = this._isVertical ? this.repeatX : this.repeatY
                  , n = (this._isVertical ? this.repeatY : this.repeatX,
                Math.floor(e / i) * this._cellSize);
                this._isVertical ? t.y = n : t.x = n;
            }
        }
        ,
        i.changeSelectStatus = function() {
            for (var t = 0, e = this._cells.length; t < e; t++)
                this.changeCellState(this._cells[t], this._selectedIndex === this._startIndex + t, 1);
        }
        ,
        i.renderItems = function(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0);
            for (var i = t, n = e || this._cells.length; i < n; i++)
                this.renderItem(this._cells[i], this._startIndex + i);
            this.changeSelectStatus();
        }
        ,
        i.renderItem = function(t, e) {
            this._array && 0 <= e && e < this._array.length ? (t.visible = !0,
            t._$bindData ? (t._dataSource = this._array[e],
            this._bindData(t, this._array[e])) : t.dataSource = this._array[e],
            this.cacheContent || this.posCell(t, e),
            this.hasListener("render") && this.event("render", [t, e]),
            this.renderHandler && this.renderHandler.runWith([t, e])) : (t.visible = !1,
            t.dataSource = null);
        }
        ,
        i._bindData = function(t, e) {
            for (var i = t._$bindData, n = 0, a = i.length; n < a; n++) {
                var s = i[n++]
                  , r = i[n++]
                  , o = i[n]
                  , h = P.getBindFun(o);
                s[r] = h.call(this, e);
            }
        }
        ,
        i.refresh = function() {
            this.array = this._array;
        }
        ,
        i.getItem = function(t) {
            return -1 < t && t < this._array.length ? this._array[t] : null;
        }
        ,
        i.changeItem = function(t, e) {
            -1 < t && t < this._array.length && (this._array[t] = e,
            t >= this._startIndex && t < this._startIndex + this._cells.length && this.renderItem(this.getCell(t), t));
        }
        ,
        i.setItem = function(t, e) {
            this.changeItem(t, e);
        }
        ,
        i.addItem = function(t) {
            this._array.push(t),
            this.array = this._array;
        }
        ,
        i.addItemAt = function(t, e) {
            this._array.splice(e, 0, t),
            this.array = this._array;
        }
        ,
        i.deleteItem = function(t) {
            this._array.splice(t, 1),
            this.array = this._array;
        }
        ,
        i.getCell = function(t) {
            return this.runCallLater(this.changeCells),
            -1 < t && this._cells ? this._cells[(t - this._startIndex) % this._cells.length] : null;
        }
        ,
        i.scrollTo = function(t) {
            if (this._scrollBar) {
                var e = this._isVertical ? this.repeatX : this.repeatY;
                this._scrollBar.value = Math.floor(t / e) * this._cellSize;
            } else
                this.startIndex = t;
        }
        ,
        i.tweenTo = function(t, e, i) {
            if (void 0 === e && (e = 200),
            this._scrollBar) {
                var n = this._isVertical ? this.repeatX : this.repeatY;
                M.to(this._scrollBar, {
                    value: Math.floor(t / n) * this._cellSize
                }, e, null, i, 0, !0);
            } else
                this.startIndex = t,
                i && i.run();
        }
        ,
        i._setCellChanged = function() {
            this._cellChanged || (this._cellChanged = !0,
            this.callLater(this.changeCells));
        }
        ,
        i.commitMeasure = function() {
            this.runCallLater(this.changeCells);
        }
        ,
        a(0, i, "cacheAs", t.prototype._$get_cacheAs, function(t) {
            f.superSet(N, this, "cacheAs", t),
            this._scrollBar && (this._$P.cacheAs = null,
            "none" !== t ? this._scrollBar.on("start", this, this.onScrollStart) : this._scrollBar.off("start", this, this.onScrollStart));
        }),
        a(0, i, "content", function() {
            return this._content;
        }),
        a(0, i, "height", t.prototype._$get_height, function(t) {
            t != this._height && (f.superSet(N, this, "height", t),
            this._setCellChanged());
        }),
        a(0, i, "itemRender", function() {
            return this._itemRender;
        }, function(t) {
            if (this._itemRender != t) {
                this._itemRender = t;
                for (var e = this._cells.length - 1; -1 < e; e--)
                    this._cells[e].destroy();
                this._cells.length = 0,
                this._setCellChanged();
            }
        }),
        a(0, i, "vScrollBarSkin", function() {
            return this._scrollBar ? this._scrollBar.skin : null;
        }, function(t) {
            this._removePreScrollBar();
            var e = new it();
            e.name = "scrollBar",
            e.right = 0,
            t && " " != t && (e.skin = t),
            this.scrollBar = e,
            this.addChild(e),
            this._setCellChanged();
        }),
        a(0, i, "page", function() {
            return this._page;
        }, function(t) {
            this._page = t,
            this._array && (this._page = 0 < t ? t : 0,
            this._page = this._page < this.totalPage ? this._page : this.totalPage - 1,
            this.startIndex = this._page * this.repeatX * this.repeatY);
        }),
        a(0, i, "hScrollBarSkin", function() {
            return this._scrollBar ? this._scrollBar.skin : null;
        }, function(t) {
            this._removePreScrollBar();
            var e = new $();
            e.name = "scrollBar",
            e.bottom = 0,
            t && " " != t && (e.skin = t),
            this.scrollBar = e,
            this.addChild(e),
            this._setCellChanged();
        }),
        a(0, i, "repeatX", function() {
            return 0 < this._repeatX ? this._repeatX : 0 < this._repeatX2 ? this._repeatX2 : 1;
        }, function(t) {
            this._repeatX = t,
            this._setCellChanged();
        }),
        a(0, i, "scrollBar", function() {
            return this._scrollBar;
        }, function(t) {
            this._scrollBar != t && (this._scrollBar = t) && (this._isVertical = this._scrollBar.isVertical,
            this.addChild(this._scrollBar),
            this._scrollBar.on("change", this, this.onScrollBarChange));
        }),
        a(0, i, "width", t.prototype._$get_width, function(t) {
            t != this._width && (f.superSet(N, this, "width", t),
            this._setCellChanged());
        }),
        a(0, i, "repeatY", function() {
            return 0 < this._repeatY ? this._repeatY : 0 < this._repeatY2 ? this._repeatY2 : 1;
        }, function(t) {
            this._repeatY = t,
            this._setCellChanged();
        }),
        a(0, i, "spaceX", function() {
            return this._spaceX;
        }, function(t) {
            this._spaceX = t,
            this._setCellChanged();
        }),
        a(0, i, "spaceY", function() {
            return this._spaceY;
        }, function(t) {
            this._spaceY = t,
            this._setCellChanged();
        }),
        a(0, i, "selectedIndex", function() {
            return this._selectedIndex;
        }, function(t) {
            this._selectedIndex != t && (this._selectedIndex = t,
            this.changeSelectStatus(),
            this.event("change"),
            this.selectHandler && this.selectHandler.runWith(t),
            this.startIndex = this._startIndex);
        }),
        a(0, i, "selectedItem", function() {
            return -1 != this._selectedIndex ? this._array[this._selectedIndex] : null;
        }, function(t) {
            this.selectedIndex = this._array.indexOf(t);
        }),
        a(0, i, "length", function() {
            return this._array ? this._array.length : 0;
        }),
        a(0, i, "selection", function() {
            return this.getCell(this._selectedIndex);
        }, function(t) {
            this.selectedIndex = this._startIndex + this._cells.indexOf(t);
        }),
        a(0, i, "startIndex", function() {
            return this._startIndex;
        }, function(t) {
            this._startIndex = 0 < t ? t : 0,
            this.callLater(this.renderItems);
        }),
        a(0, i, "array", function() {
            return this._array;
        }, function(t) {
            this.runCallLater(this.changeCells),
            this._array = t || [];
            var e = this._array.length;
            if (this.totalPage = Math.ceil(e / (this.repeatX * this.repeatY)),
            this._selectedIndex = this._selectedIndex < e ? this._selectedIndex : e - 1,
            this.startIndex = this._startIndex,
            this._scrollBar) {
                this._scrollBar.stopScroll();
                var i = this._isVertical ? this.repeatX : this.repeatY
                  , n = this._isVertical ? this.repeatY : this.repeatX
                  , a = Math.ceil(e / i)
                  , s = 0 < this._cellOffset ? this.totalPage + 1 : this.totalPage;
                this._scrollBar.target = (1 < s ? (this._scrollBar.scrollSize = this._cellSize,
                this._scrollBar.thumbPercent = n / a,
                this._scrollBar.setScroll(0, (a - n) * this._cellSize + this._cellOffset, this._scrollBar.value)) : this._scrollBar.setScroll(0, 0, 0),
                this._content);
            }
        }),
        a(0, i, "dataSource", t.prototype._$get_dataSource, function(t) {
            "number" == typeof (this._dataSource = t) && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.array = t : f.superSet(N, this, "dataSource", t);
        }),
        a(0, i, "cells", function() {
            return this.runCallLater(this.changeCells),
            this._cells;
        }),
        e;
    }(N)
      , $ = function(t) {
        function e() {
            e.__super.call(this);
        }
        return s(e, "laya.ui.HScrollBar", t),
        e.prototype.initialize = function() {
            t.prototype.initialize.call(this),
            this.slider.isVertical = !1;
        }
        ,
        e;
    }(U)
      , q = function(t) {
        function e() {
            this._content = null,
            this._vScrollBar = null,
            this._hScrollBar = null,
            this._scrollChanged = !1,
            e.__super.call(this),
            this.width = this.height = 100;
        }
        s(e, "laya.ui.Panel", t);
        var i = e.prototype;
        return i.destroy = function(t) {
            void 0 === t && (t = !0),
            laya.ui.Component.prototype.destroy.call(this, t),
            this._content && this._content.destroy(t),
            this._vScrollBar && this._vScrollBar.destroy(t),
            this._hScrollBar && this._hScrollBar.destroy(t),
            this._vScrollBar = null,
            this._hScrollBar = null,
            this._content = null;
        }
        ,
        i.destroyChildren = function() {
            this._content.destroyChildren();
        }
        ,
        i.createChildren = function() {
            laya.display.Node.prototype.addChild.call(this, this._content = new N());
        }
        ,
        i.addChild = function(t) {
            return t.on("resize", this, this.onResize),
            this._setScrollChanged(),
            this._content.addChild(t);
        }
        ,
        i.onResize = function() {
            this._setScrollChanged();
        }
        ,
        i.addChildAt = function(t, e) {
            return t.on("resize", this, this.onResize),
            this._setScrollChanged(),
            this._content.addChildAt(t, e);
        }
        ,
        i.removeChild = function(t) {
            return t.off("resize", this, this.onResize),
            this._setScrollChanged(),
            this._content.removeChild(t);
        }
        ,
        i.removeChildAt = function(t) {
            return this.getChildAt(t).off("resize", this, this.onResize),
            this._setScrollChanged(),
            this._content.removeChildAt(t);
        }
        ,
        i.removeChildren = function(t, e) {
            return void 0 === t && (t = 0),
            void 0 === e && (e = 2147483647),
            this._content.removeChildren(t, e),
            this._setScrollChanged(),
            this;
        }
        ,
        i.getChildAt = function(t) {
            return this._content.getChildAt(t);
        }
        ,
        i.getChildByName = function(t) {
            return this._content.getChildByName(t);
        }
        ,
        i.getChildIndex = function(t) {
            return this._content.getChildIndex(t);
        }
        ,
        i.changeScroll = function() {
            this._scrollChanged = !1;
            var t = this.contentWidth || 1
              , e = this.contentHeight || 1
              , i = this._vScrollBar
              , n = this._hScrollBar
              , a = i && e > this._height
              , s = n && t > this._width
              , r = a ? this._width - i.width : this._width
              , o = s ? this._height - n.height : this._height;
            i && (i.x = this._width - i.width,
            i.y = 0,
            i.height = this._height - (s ? n.height : 0),
            i.scrollSize = Math.max(.033 * this._height, 1),
            i.thumbPercent = o / e,
            i.setScroll(0, e - o, i.value)),
            n && (n.x = 0,
            n.y = this._height - n.height,
            n.width = this._width - (a ? i.width : 0),
            n.scrollSize = Math.max(.033 * this._width, 1),
            n.thumbPercent = r / t,
            n.setScroll(0, t - r, n.value));
        }
        ,
        i.changeSize = function() {
            laya.ui.Component.prototype.changeSize.call(this),
            this.setContentSize(this._width, this._height);
        }
        ,
        i.setContentSize = function(t, e) {
            var i = this._content;
            i.width = t,
            i.height = e,
            i.scrollRect || (i.scrollRect = new v()),
            i.scrollRect.setTo(0, 0, t, e),
            i.scrollRect = i.scrollRect;
        }
        ,
        i.onScrollBarChange = function(t) {
            var e = this._content.scrollRect;
            if (e) {
                var i = Math.round(t.value);
                t.isVertical ? e.y = i : e.x = i,
                this._content.scrollRect = e;
            }
        }
        ,
        i.scrollTo = function(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 0),
            this.vScrollBar && (this.vScrollBar.value = e),
            this.hScrollBar && (this.hScrollBar.value = t);
        }
        ,
        i.refresh = function() {
            this.changeScroll();
        }
        ,
        i.onScrollStart = function() {
            this._$P.cacheAs || (this._$P.cacheAs = f.superGet(N, this, "cacheAs")),
            f.superSet(N, this, "cacheAs", "none"),
            this._hScrollBar && this._hScrollBar.once("end", this, this.onScrollEnd),
            this._vScrollBar && this._vScrollBar.once("end", this, this.onScrollEnd);
        }
        ,
        i.onScrollEnd = function() {
            f.superSet(N, this, "cacheAs", this._$P.cacheAs);
        }
        ,
        i._setScrollChanged = function() {
            this._scrollChanged || (this._scrollChanged = !0,
            this.callLater(this.changeScroll));
        }
        ,
        a(0, i, "numChildren", function() {
            return this._content.numChildren;
        }),
        a(0, i, "hScrollBarSkin", function() {
            return this._hScrollBar ? this._hScrollBar.skin : null;
        }, function(t) {
            null == this._hScrollBar && (laya.display.Node.prototype.addChild.call(this, this._hScrollBar = new $()),
            this._hScrollBar.on("change", this, this.onScrollBarChange, [this._hScrollBar]),
            this._hScrollBar.target = this._content,
            this._setScrollChanged()),
            this._hScrollBar.skin = t;
        }),
        a(0, i, "contentWidth", function() {
            for (var t = 0, e = this._content.numChildren - 1; -1 < e; e--) {
                var i = this._content.getChildAt(e);
                t = Math.max(i.x + i.width * i.scaleX, t);
            }
            return t;
        }),
        a(0, i, "contentHeight", function() {
            for (var t = 0, e = this._content.numChildren - 1; -1 < e; e--) {
                var i = this._content.getChildAt(e);
                t = Math.max(i.y + i.height * i.scaleY, t);
            }
            return t;
        }),
        a(0, i, "width", t.prototype._$get_width, function(t) {
            f.superSet(N, this, "width", t),
            this._setScrollChanged();
        }),
        a(0, i, "hScrollBar", function() {
            return this._hScrollBar;
        }),
        a(0, i, "content", function() {
            return this._content;
        }),
        a(0, i, "height", t.prototype._$get_height, function(t) {
            f.superSet(N, this, "height", t),
            this._setScrollChanged();
        }),
        a(0, i, "vScrollBarSkin", function() {
            return this._vScrollBar ? this._vScrollBar.skin : null;
        }, function(t) {
            null == this._vScrollBar && (laya.display.Node.prototype.addChild.call(this, this._vScrollBar = new it()),
            this._vScrollBar.on("change", this, this.onScrollBarChange, [this._vScrollBar]),
            this._vScrollBar.target = this._content,
            this._setScrollChanged()),
            this._vScrollBar.skin = t;
        }),
        a(0, i, "vScrollBar", function() {
            return this._vScrollBar;
        }),
        a(0, i, "cacheAs", t.prototype._$get_cacheAs, function(t) {
            f.superSet(N, this, "cacheAs", t),
            this._$P.cacheAs = null,
            "none" !== t ? (this._hScrollBar && this._hScrollBar.on("start", this, this.onScrollStart),
            this._vScrollBar && this._vScrollBar.on("start", this, this.onScrollStart)) : (this._hScrollBar && this._hScrollBar.off("start", this, this.onScrollStart),
            this._vScrollBar && this._vScrollBar.off("start", this, this.onScrollStart));
        }),
        e;
    }(N)
      , Q = function(t) {
        function e(t) {
            e.__super.call(this, t),
            this.isVertical = !1;
        }
        return s(e, "laya.ui.HSlider", H),
        e;
    }()
      , J = function(t) {
        function i(t, e) {
            this.selectHandler = null,
            this._items = null,
            this._selectedIndex = -1,
            this._skin = null,
            this._direction = "horizontal",
            this._space = 0,
            this._labels = null,
            this._labelColors = null,
            this._labelFont = null,
            this._labelStrokeColor = null,
            this._strokeColors = null,
            this._labelStroke = NaN,
            this._labelSize = 0,
            this._labelBold = !1,
            this._labelPadding = null,
            this._labelAlign = null,
            this._stateNum = 0,
            this._labelChanged = !1,
            i.__super.call(this),
            this.skin = e,
            this.labels = t;
        }
        s(i, "laya.ui.UIGroup", t);
        var e = i.prototype;
        return f.imps(e, {
            "laya.ui.IItem": !0
        }),
        e.preinitialize = function() {
            this.mouseEnabled = !0;
        }
        ,
        e.destroy = function(t) {
            void 0 === t && (t = !0),
            laya.ui.Component.prototype.destroy.call(this, t),
            this._items && (this._items.length = 0),
            this._items = null,
            this.selectHandler = null;
        }
        ,
        e.addItem = function(t, e) {
            void 0 === e && (e = !0);
            var i = t
              , n = this._items.length;
            if (i.name = "item" + n,
            this.addChild(i),
            this.initItems(),
            e && 0 < n) {
                var a = this._items[n - 1];
                "horizontal" == this._direction ? i.x = a.x + a.width + this._space : i.y = a.y + a.height + this._space;
            } else
                e && (i.x = 0,
                i.y = 0);
            return n;
        }
        ,
        e.delItem = function(t, e) {
            void 0 === e && (e = !0);
            var i = this._items.indexOf(t);
            if (-1 != i) {
                var n = t;
                this.removeChild(n);
                for (var a = i + 1, s = this._items.length; a < s; a++) {
                    var r = this._items[a];
                    r.name = "item" + (a - 1),
                    e && ("horizontal" == this._direction ? r.x -= n.width + this._space : r.y -= n.height + this._space);
                }
                if (this.initItems(),
                -1 < this._selectedIndex) {
                    var o;
                    o = this._selectedIndex < this._items.length ? this._selectedIndex : this._selectedIndex - 1,
                    this._selectedIndex = -1,
                    this.selectedIndex = o;
                }
            }
        }
        ,
        e.initItems = function() {
            this._items || (this._items = []);
            for (var t = this._items.length = 0; t < 1e4; t++) {
                var e = this.getChildByName("item" + t);
                if (null == e)
                    break;
                this._items.push(e),
                e.selected = t === this._selectedIndex,
                e.clickHandler = _.create(this, this.itemClick, [t], !1);
            }
        }
        ,
        e.itemClick = function(t) {
            this.selectedIndex = t;
        }
        ,
        e.setSelect = function(t, e) {
            this._items && -1 < t && t < this._items.length && (this._items[t].selected = e);
        }
        ,
        e.createItem = function(t, e) {
            return null;
        }
        ,
        e.changeLabels = function() {
            if (this._labelChanged = !1,
            this._items)
                for (var t = 0, e = 0, i = this._items.length; e < i; e++) {
                    var n = this._items[e];
                    this._skin && (n.skin = this._skin),
                    this._labelColors && (n.labelColors = this._labelColors),
                    this._labelSize && (n.labelSize = this._labelSize),
                    this._labelStroke && (n.labelStroke = this._labelStroke),
                    this._labelStrokeColor && (n.labelStrokeColor = this._labelStrokeColor),
                    this._strokeColors && (n.strokeColors = this._strokeColors),
                    this._labelBold && (n.labelBold = this._labelBold),
                    this._labelPadding && (n.labelPadding = this._labelPadding),
                    this._labelAlign && (n.labelAlign = this._labelAlign),
                    this._stateNum && (n.stateNum = this._stateNum),
                    this._labelFont && (n.labelFont = this._labelFont),
                    "horizontal" === this._direction ? (n.y = 0,
                    n.x = t,
                    t += n.width + this._space) : (n.x = 0,
                    n.y = t,
                    t += n.height + this._space);
                }
            this.changeSize();
        }
        ,
        e.commitMeasure = function() {
            this.runCallLater(this.changeLabels);
        }
        ,
        e._setLabelChanged = function() {
            this._labelChanged || (this._labelChanged = !0,
            this.callLater(this.changeLabels));
        }
        ,
        a(0, e, "labelStrokeColor", function() {
            return this._labelStrokeColor;
        }, function(t) {
            this._labelStrokeColor != t && (this._labelStrokeColor = t,
            this._setLabelChanged());
        }),
        a(0, e, "skin", function() {
            return this._skin;
        }, function(t) {
            this._skin != t && (this._skin = t,
            this._setLabelChanged());
        }),
        a(0, e, "selectedIndex", function() {
            return this._selectedIndex;
        }, function(t) {
            this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1),
            this._selectedIndex = t,
            this.setSelect(t, !0),
            this.event("change"),
            this.selectHandler && this.selectHandler.runWith(this._selectedIndex));
        }),
        a(0, e, "labels", function() {
            return this._labels;
        }, function(t) {
            if (this._labels != t) {
                if (this._labels = t,
                this.removeChildren(),
                this._setLabelChanged(),
                this._labels)
                    for (var e = this._labels.split(","), i = 0, n = e.length; i < n; i++) {
                        var a = this.createItem(this._skin, e[i]);
                        a.name = "item" + i,
                        this.addChild(a);
                    }
                this.initItems();
            }
        }),
        a(0, e, "strokeColors", function() {
            return this._strokeColors;
        }, function(t) {
            this._strokeColors != t && (this._strokeColors = t,
            this._setLabelChanged());
        }),
        a(0, e, "labelColors", function() {
            return this._labelColors;
        }, function(t) {
            this._labelColors != t && (this._labelColors = t,
            this._setLabelChanged());
        }),
        a(0, e, "labelStroke", function() {
            return this._labelStroke;
        }, function(t) {
            this._labelStroke != t && (this._labelStroke = t,
            this._setLabelChanged());
        }),
        a(0, e, "labelSize", function() {
            return this._labelSize;
        }, function(t) {
            this._labelSize != t && (this._labelSize = t,
            this._setLabelChanged());
        }),
        a(0, e, "stateNum", function() {
            return this._stateNum;
        }, function(t) {
            this._stateNum != t && (this._stateNum = t,
            this._setLabelChanged());
        }),
        a(0, e, "labelBold", function() {
            return this._labelBold;
        }, function(t) {
            this._labelBold != t && (this._labelBold = t,
            this._setLabelChanged());
        }),
        a(0, e, "labelFont", function() {
            return this._labelFont;
        }, function(t) {
            this._labelFont != t && (this._labelFont = t,
            this._setLabelChanged());
        }),
        a(0, e, "labelPadding", function() {
            return this._labelPadding;
        }, function(t) {
            this._labelPadding != t && (this._labelPadding = t,
            this._setLabelChanged());
        }),
        a(0, e, "direction", function() {
            return this._direction;
        }, function(t) {
            this._direction = t,
            this._setLabelChanged();
        }),
        a(0, e, "space", function() {
            return this._space;
        }, function(t) {
            this._space = t,
            this._setLabelChanged();
        }),
        a(0, e, "items", function() {
            return this._items;
        }),
        a(0, e, "selection", function() {
            return -1 < this._selectedIndex && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;
        }, function(t) {
            this.selectedIndex = this._items.indexOf(t);
        }),
        a(0, e, "dataSource", t.prototype._$get_dataSource, function(t) {
            "number" == typeof (this._dataSource = t) && Math.floor(t) == t || "string" == typeof t ? this.selectedIndex = parseInt(t) : t instanceof Array ? this.labels = t.join(",") : f.superSet(N, this, "dataSource", t);
        }),
        i;
    }(N)
      , Z = function(e) {
        function i(t, e) {
            this._value = null,
            void 0 === e && (e = ""),
            i.__super.call(this, t, e);
        }
        s(i, "laya.ui.Radio", e);
        var t = i.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._value = null;
        }
        ,
        t.preinitialize = function() {
            laya.ui.Component.prototype.preinitialize.call(this),
            this.toggle = !1,
            this._autoSize = !1;
        }
        ,
        t.initialize = function() {
            e.prototype.initialize.call(this),
            this.createText(),
            this._text.align = "left",
            this._text.valign = "top",
            this._text.width = 0,
            this.on("click", this, this.onClick);
        }
        ,
        t.onClick = function(t) {
            this.selected = !0;
        }
        ,
        a(0, t, "value", function() {
            return null != this._value ? this._value : this.label;
        }, function(t) {
            this._value = t;
        }),
        i;
    }(O)
      , tt = function(t) {
        function e() {
            this._list = null,
            this._source = null,
            this._renderHandler = null,
            this._spaceLeft = 10,
            this._spaceBottom = 0,
            this._keepStatus = !0,
            e.__super.call(this),
            this.width = this.height = 200;
        }
        s(e, "laya.ui.Tree", t);
        var i = e.prototype;
        return f.imps(i, {
            "laya.ui.IRender": !0
        }),
        i.destroy = function(t) {
            void 0 === t && (t = !0),
            laya.ui.Component.prototype.destroy.call(this, t),
            this._list && this._list.destroy(t),
            this._list = null,
            this._source = null,
            this._renderHandler = null;
        }
        ,
        i.createChildren = function() {
            this.addChild(this._list = new j()),
            this._list.renderHandler = _.create(this, this.renderItem, null, !1),
            this._list.repeatX = 1,
            this._list.on("change", this, this.onListChange);
        }
        ,
        i.onListChange = function(t) {
            this.event("change");
        }
        ,
        i.getArray = function() {
            var t, e = [];
            for (var i in this._source)
                t = this._source[i],
                this.getParentOpenStatus(t) && (t.x = this._spaceLeft * this.getDepth(t),
                e.push(t));
            return e;
        }
        ,
        i.getDepth = function(t, e) {
            return void 0 === e && (e = 0),
            null == t.nodeParent ? e : this.getDepth(t.nodeParent, e + 1);
        }
        ,
        i.getParentOpenStatus = function(t) {
            var e = t.nodeParent;
            return null == e || !!e.isOpen && (null == e.nodeParent || this.getParentOpenStatus(e));
        }
        ,
        i.renderItem = function(t, e) {
            var i = t.dataSource;
            if (i) {
                t.left = i.x;
                var n = t.getChildByName("arrow");
                n && (i.hasChild ? (n.visible = !0,
                n.index = i.isOpen ? 1 : 0,
                n.tag = e,
                n.off("click", this, this.onArrowClick),
                n.on("click", this, this.onArrowClick)) : n.visible = !1);
                var a = t.getChildByName("folder");
                a && (2 == a.clipY ? a.index = i.isDirectory ? 0 : 1 : a.index = i.isDirectory ? i.isOpen ? 1 : 0 : 2),
                this._renderHandler && this._renderHandler.runWith([t, e]);
            }
        }
        ,
        i.onArrowClick = function(t) {
            var e = t.currentTarget.tag;
            this._list.array[e].isOpen = !this._list.array[e].isOpen,
            this.event("open"),
            this._list.array = this.getArray();
        }
        ,
        i.setItemState = function(t, e) {
            this._list.array[t] && (this._list.array[t].isOpen = e,
            this._list.array = this.getArray());
        }
        ,
        i.fresh = function() {
            this._list.array = this.getArray(),
            this.repaint();
        }
        ,
        i.parseXml = function(t, e, i, n) {
            var a, s = t.childNodes, r = s.length;
            if (!n) {
                a = {};
                var o, h = t.attributes;
                for (var l in h) {
                    var u = (o = h[l]).nodeName
                      , c = o.nodeValue;
                    a[u] = "true" == c || "false" != c && c;
                }
                a.nodeParent = i,
                0 < r && (a.isDirectory = !0),
                a.hasChild = 0 < r,
                e.push(a);
            }
            for (var d = 0; d < r; d++) {
                var _ = s[d];
                this.parseXml(_, e, a, !1);
            }
        }
        ,
        i.parseOpenStatus = function(t, e) {
            for (var i = 0, n = e.length; i < n; i++) {
                var a = e[i];
                if (a.isDirectory)
                    for (var s = 0, r = t.length; s < r; s++) {
                        var o = t[s];
                        if (o.isDirectory && this.isSameParent(o, a) && a.label == o.label) {
                            a.isOpen = o.isOpen;
                            break;
                        }
                    }
            }
        }
        ,
        i.isSameParent = function(t, e) {
            return null == t.nodeParent && null == e.nodeParent || null != t.nodeParent && null != e.nodeParent && (t.nodeParent.label == e.nodeParent.label && this.isSameParent(t.nodeParent, e.nodeParent));
        }
        ,
        i.filter = function(t) {
            if (Boolean(t)) {
                var e = [];
                this.getFilterSource(this._source, e, t),
                this._list.array = e;
            } else
                this._list.array = this.getArray();
        }
        ,
        i.getFilterSource = function(t, e, i) {
            var n;
            for (var a in i = i.toLocaleLowerCase(),
            t)
                !(n = t[a]).isDirectory && -1 < String(n.label).toLowerCase().indexOf(i) && (n.x = 0,
                e.push(n)),
                n.child && 0 < n.child.length && this.getFilterSource(n.child, e, i);
        }
        ,
        a(0, i, "spaceBottom", function() {
            return this._list.spaceY;
        }, function(t) {
            this._list.spaceY = t;
        }),
        a(0, i, "keepStatus", function() {
            return this._keepStatus;
        }, function(t) {
            this._keepStatus = t;
        }),
        a(0, i, "itemRender", function() {
            return this._list.itemRender;
        }, function(t) {
            this._list.itemRender = t;
        }),
        a(0, i, "array", function() {
            return this._list.array;
        }, function(t) {
            this._keepStatus && this._list.array && t && this.parseOpenStatus(this._list.array, t),
            this._source = t,
            this._list.array = this.getArray();
        }),
        a(0, i, "mouseHandler", function() {
            return this._list.mouseHandler;
        }, function(t) {
            this._list.mouseHandler = t;
        }),
        a(0, i, "dataSource", t.prototype._$get_dataSource, function(t) {
            this._dataSource = t,
            f.superSet(N, this, "dataSource", t);
        }),
        a(0, i, "source", function() {
            return this._source;
        }),
        a(0, i, "scrollBar", function() {
            return this._list.scrollBar;
        }),
        a(0, i, "list", function() {
            return this._list;
        }),
        a(0, i, "scrollBarSkin", function() {
            return this._list.vScrollBarSkin;
        }, function(t) {
            this._list.vScrollBarSkin = t;
        }),
        a(0, i, "renderHandler", function() {
            return this._renderHandler;
        }, function(t) {
            this._renderHandler = t;
        }),
        a(0, i, "selectedIndex", function() {
            return this._list.selectedIndex;
        }, function(t) {
            this._list.selectedIndex = t;
        }),
        a(0, i, "spaceLeft", function() {
            return this._spaceLeft;
        }, function(t) {
            this._spaceLeft = t;
        }),
        a(0, i, "selectedItem", function() {
            return this._list.selectedItem;
        }, function(t) {
            this._list.selectedItem = t;
        }),
        a(0, i, "width", t.prototype._$get_width, function(t) {
            f.superSet(N, this, "width", t),
            this._list.width = t;
        }),
        a(0, i, "height", t.prototype._$get_height, function(t) {
            f.superSet(N, this, "height", t),
            this._list.height = t;
        }),
        a(0, i, "xml", null, function(t) {
            var e = [];
            this.parseXml(t.childNodes[0], e, null, !0),
            this.array = e;
        }),
        a(0, i, "selectedPath", function() {
            return this._list.selectedItem ? this._list.selectedItem.path : null;
        }),
        e;
    }(N)
      , et = function(t) {
        function e() {
            this._items = null,
            this._selectedIndex = 0,
            e.__super.call(this),
            this._setIndexHandler = _.create(this, this.setIndex, null, !1);
        }
        s(e, "laya.ui.ViewStack", t);
        var i = e.prototype;
        return f.imps(i, {
            "laya.ui.IItem": !0
        }),
        i.setItems = function(t) {
            this.removeChildren();
            for (var e = 0, i = 0, n = t.length; i < n; i++) {
                var a = t[i];
                a && (a.name = "item" + e,
                this.addChild(a),
                e++);
            }
            this.initItems();
        }
        ,
        i.addItem = function(t) {
            t.name = "item" + this._items.length,
            this.addChild(t),
            this.initItems();
        }
        ,
        i.initItems = function() {
            this._items = [];
            for (var t = 0; t < 1e4; t++) {
                var e = this.getChildByName("item" + t);
                if (null == e)
                    break;
                this._items.push(e),
                e.visible = t == this._selectedIndex;
            }
        }
        ,
        i.setSelect = function(t, e) {
            this._items && -1 < t && t < this._items.length && (this._items[t].visible = e);
        }
        ,
        i.setIndex = function(t) {
            this.selectedIndex = t;
        }
        ,
        a(0, i, "dataSource", t.prototype._$get_dataSource, function(t) {
            if ("number" == typeof (this._dataSource = t) && Math.floor(t) == t || "string" == typeof t)
                this.selectedIndex = parseInt(t);
            else
                for (var e in this._dataSource)
                    this.hasOwnProperty(e) && (this[e] = this._dataSource[e]);
        }),
        a(0, i, "selectedIndex", function() {
            return this._selectedIndex;
        }, function(t) {
            this._selectedIndex != t && (this.setSelect(this._selectedIndex, !1),
            this._selectedIndex = t,
            this.setSelect(this._selectedIndex, !0));
        }),
        a(0, i, "selection", function() {
            return -1 < this._selectedIndex && this._selectedIndex < this._items.length ? this._items[this._selectedIndex] : null;
        }, function(t) {
            this.selectedIndex = this._items.indexOf(t);
        }),
        a(0, i, "items", function() {
            return this._items;
        }),
        a(0, i, "setIndexHandler", function() {
            return this._setIndexHandler;
        }, function(t) {
            this._setIndexHandler = t;
        }),
        e;
    }(N)
      , it = function(t) {
        function e() {
            e.__super.call(this);
        }
        return s(e, "laya.ui.VScrollBar", U),
        e;
    }()
      , nt = function(e) {
        function i(t) {
            this._bg = null,
            this._skin = null,
            i.__super.call(this),
            void 0 === t && (t = ""),
            this.text = t,
            this.skin = this.skin;
        }
        s(i, "laya.ui.TextInput", e);
        var t = i.prototype;
        return t.preinitialize = function() {
            this.mouseEnabled = !0;
        }
        ,
        t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._bg && this._bg.destroy(),
            this._bg = null;
        }
        ,
        t.createChildren = function() {
            this.addChild(this._tf = new p()),
            this._tf.padding = E.inputLabelPadding,
            this._tf.on("input", this, this._onInput),
            this._tf.on("enter", this, this._onEnter),
            this._tf.on("blur", this, this._onBlur),
            this._tf.on("focus", this, this._onFocus);
        }
        ,
        t._onFocus = function() {
            this.event("focus", this);
        }
        ,
        t._onBlur = function() {
            this.event("blur", this);
        }
        ,
        t._onInput = function() {
            this.event("input", this);
        }
        ,
        t._onEnter = function() {
            this.event("enter", this);
        }
        ,
        t.initialize = function() {
            this.width = 128,
            this.height = 22;
        }
        ,
        t.select = function() {
            this._tf.select();
        }
        ,
        t.setSelection = function(t, e) {
            this._tf.setSelection(t, e);
        }
        ,
        a(0, t, "text", e.prototype._$get_text, function(t) {
            this._tf.text != t && (t += "",
            this._tf.text = t,
            this.event("change"));
        }),
        a(0, t, "bg", function() {
            return this._bg;
        }, function(t) {
            this.graphics = this._bg = t;
        }),
        a(0, t, "inputElementYAdjuster", function() {
            return this._tf.inputElementYAdjuster;
        }, function(t) {
            this._tf.inputElementYAdjuster = t;
        }),
        a(0, t, "multiline", function() {
            return this._tf.multiline;
        }, function(t) {
            this._tf.multiline = t;
        }),
        a(0, t, "skin", function() {
            return this._skin;
        }, function(t) {
            this._skin != t && (this._skin = t,
            this._bg || (this.graphics = this._bg = new L()),
            this._bg.source = m.getRes(this._skin),
            this._width && (this._bg.width = this._width),
            this._height && (this._bg.height = this._height));
        }),
        a(0, t, "sizeGrid", function() {
            return this._bg && this._bg.sizeGrid ? this._bg.sizeGrid.join(",") : null;
        }, function(t) {
            this._bg || (this.graphics = this._bg = new L()),
            this._bg.sizeGrid = P.fillArray(E.defaultSizeGrid, t, Number);
        }),
        a(0, t, "inputElementXAdjuster", function() {
            return this._tf.inputElementXAdjuster;
        }, function(t) {
            this._tf.inputElementXAdjuster = t;
        }),
        a(0, t, "width", e.prototype._$get_width, function(t) {
            f.superSet(V, this, "width", t),
            this._bg && (this._bg.width = t);
        }),
        a(0, t, "height", e.prototype._$get_height, function(t) {
            f.superSet(V, this, "height", t),
            this._bg && (this._bg.height = t);
        }),
        a(0, t, "editable", function() {
            return this._tf.editable;
        }, function(t) {
            this._tf.editable = t;
        }),
        a(0, t, "restrict", function() {
            return this._tf.restrict;
        }, function(t) {
            this._tf.restrict = t;
        }),
        a(0, t, "prompt", function() {
            return this._tf.prompt;
        }, function(t) {
            this._tf.prompt = t;
        }),
        a(0, t, "promptColor", function() {
            return this._tf.promptColor;
        }, function(t) {
            this._tf.promptColor = t;
        }),
        a(0, t, "maxChars", function() {
            return this._tf.maxChars;
        }, function(t) {
            this._tf.maxChars = t;
        }),
        a(0, t, "focus", function() {
            return this._tf.focus;
        }, function(t) {
            this._tf.focus = t;
        }),
        a(0, t, "type", function() {
            return this._tf.type;
        }, function(t) {
            this._tf.type = t;
        }),
        a(0, t, "asPassword", function() {
            return this._tf.asPassword;
        }, function(t) {
            this._tf.asPassword = t;
        }),
        i;
    }(V)
      , at = function(t) {
        function e() {
            e.__super.call(this);
        }
        return s(e, "laya.ui.VSlider", H),
        e;
    }()
      , st = function(t) {
        function n() {
            this.popupCenter = !0,
            this.closeHandler = null,
            this.popupEffect = null,
            this.closeEffect = null,
            this.group = null,
            this.isModal = !1,
            this._dragArea = null,
            n.__super.call(this);
        }
        s(n, "laya.ui.Dialog", t);
        var e = n.prototype;
        return e.initialize = function() {
            this.popupEffect = n.manager.popupEffectHandler,
            this.closeEffect = n.manager.closeEffectHandler,
            this._dealDragArea(),
            this.on("click", this, this._onClick);
        }
        ,
        e._dealDragArea = function() {
            var t = this.getChildByName("drag");
            t && (this.dragArea = t.x + "," + t.y + "," + t.width + "," + t.height,
            t.removeSelf());
        }
        ,
        e._onClick = function(t) {
            var e = t.target;
            if (e)
                switch (e.name) {
                case "close":
                case "cancel":
                case "sure":
                case "no":
                case "ok":
                case "yes":
                    this.close(e.name);
                }
        }
        ,
        e.show = function(t, e) {
            void 0 === t && (t = !1),
            void 0 === e && (e = !0),
            this._open(!1, t, e);
        }
        ,
        e.popup = function(t, e) {
            void 0 === t && (t = !1),
            void 0 === e && (e = !0),
            this._open(!0, t, e);
        }
        ,
        e._open = function(t, e, i) {
            n.manager.lock(!1),
            this.isModal = t,
            n.manager.open(this, e, i);
        }
        ,
        e.onOpened = function() {}
        ,
        e.close = function(t, e) {
            void 0 === e && (e = !0),
            n.manager.close(this, t, e);
        }
        ,
        e.onClosed = function(t) {}
        ,
        e._onMouseDown = function(t) {
            var e = this.getMousePoint();
            this._dragArea.contains(e.x, e.y) ? this.startDrag() : this.stopDrag();
        }
        ,
        a(0, e, "dragArea", function() {
            return this._dragArea ? this._dragArea.toString() : null;
        }, function(t) {
            if (t) {
                var e = P.fillArray([0, 0, 0, 0], t, Number);
                this._dragArea = new v(e[0],e[1],e[2],e[3]),
                this.on("mousedown", this, this._onMouseDown);
            } else
                this._dragArea = null,
                this.off("mousedown", this, this._onMouseDown);
        }),
        a(0, e, "isPopup", function() {
            return null != this.parent;
        }),
        a(0, e, "zOrder", t.prototype._$get_zOrder, function(t) {
            f.superSet(X, this, "zOrder", t),
            n.manager._checkMask();
        }),
        a(1, n, "manager", function() {
            return n._manager = n._manager || new R();
        }, function(t) {
            n._manager = t;
        }),
        n.setLockView = function(t) {
            n.manager.setLockView(t);
        }
        ,
        n.lock = function(t) {
            n.manager.lock(t);
        }
        ,
        n.closeAll = function() {
            n.manager.closeAll();
        }
        ,
        n.getDialogsByGroup = function(t) {
            return n.manager.getDialogsByGroup(t);
        }
        ,
        n.closeByGroup = function(t) {
            return n.manager.closeByGroup(t);
        }
        ,
        n.CLOSE = "close",
        n.CANCEL = "cancel",
        n.SURE = "sure",
        n.NO = "no",
        n.OK = "ok",
        n.YES = "yes",
        n._manager = null,
        n;
    }(X)
      , rt = function(t) {
        function e() {
            e.__super.call(this);
        }
        s(e, "laya.ui.HBox", t);
        var i = e.prototype;
        return i.sortItem = function(t) {
            t && t.sort(function(t, e) {
                return t.x - e.x;
            });
        }
        ,
        i.changeItems = function() {
            this._itemChanged = !1;
            for (var t = [], e = 0, i = 0, n = this.numChildren; i < n; i++) {
                var a = this.getChildAt(i);
                a && a.layoutEnabled && (t.push(a),
                e = this._height ? this._height : Math.max(e, a.height * a.scaleY));
            }
            this.sortItem(t);
            var s = 0;
            for (i = 0,
            n = t.length; i < n; i++)
                (a = t[i]).x = s,
                s += a.width * a.scaleX + this._space,
                "top" == this._align ? a.y = 0 : "middle" == this._align ? a.y = .5 * (e - a.height * a.scaleY) : "bottom" == this._align && (a.y = e - a.height * a.scaleY);
            this.changeSize();
        }
        ,
        a(0, i, "height", t.prototype._$get_height, function(t) {
            this._height != t && (f.superSet(z, this, "height", t),
            this.callLater(this.changeItems));
        }),
        e.NONE = "none",
        e.TOP = "top",
        e.MIDDLE = "middle",
        e.BOTTOM = "bottom",
        e;
    }(z)
      , ot = function(t) {
        function e() {
            e.__super.call(this);
        }
        s(e, "laya.ui.VBox", t);
        var i = e.prototype;
        return i.changeItems = function() {
            this._itemChanged = !1;
            for (var t = [], e = 0, i = 0, n = this.numChildren; i < n; i++) {
                var a = this.getChildAt(i);
                a && a.layoutEnabled && (t.push(a),
                e = this._width ? this._width : Math.max(e, a.width * a.scaleX));
            }
            this.sortItem(t);
            var s = 0;
            for (i = 0,
            n = t.length; i < n; i++)
                (a = t[i]).y = s,
                s += a.height * a.scaleY + this._space,
                "left" == this._align ? a.x = 0 : "center" == this._align ? a.x = .5 * (e - a.width * a.scaleX) : "right" == this._align && (a.x = e - a.width * a.scaleX);
            this.changeSize();
        }
        ,
        a(0, i, "width", t.prototype._$get_width, function(t) {
            this._width != t && (f.superSet(z, this, "width", t),
            this.callLater(this.changeItems));
        }),
        e.NONE = "none",
        e.LEFT = "left",
        e.CENTER = "center",
        e.RIGHT = "right",
        e;
    }(z)
      , ht = function(t) {
        function e() {
            e.__super.call(this);
        }
        return s(e, "laya.ui.RadioGroup", J),
        e.prototype.createItem = function(t, e) {
            return new Z(t,e);
        }
        ,
        e;
    }()
      , lt = function(t) {
        function e() {
            e.__super.call(this);
        }
        return s(e, "laya.ui.Tab", J),
        e.prototype.createItem = function(t, e) {
            return new O(t,e);
        }
        ,
        e;
    }()
      , ut = function(e) {
        function i(t) {
            this._vScrollBar = null,
            this._hScrollBar = null,
            void 0 === t && (t = ""),
            i.__super.call(this, t);
        }
        s(i, "laya.ui.TextArea", e);
        var t = i.prototype;
        return t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._vScrollBar && this._vScrollBar.destroy(),
            this._hScrollBar && this._hScrollBar.destroy(),
            this._vScrollBar = null,
            this._hScrollBar = null;
        }
        ,
        t.initialize = function() {
            this.width = 180,
            this.height = 150,
            this._tf.wordWrap = !0,
            this.multiline = !0;
        }
        ,
        t.onVBarChanged = function(t) {
            this._tf.scrollY != this._vScrollBar.value && (this._tf.scrollY = this._vScrollBar.value);
        }
        ,
        t.onHBarChanged = function(t) {
            this._tf.scrollX != this._hScrollBar.value && (this._tf.scrollX = this._hScrollBar.value);
        }
        ,
        t.changeScroll = function() {
            var t = this._vScrollBar && 0 < this._tf.maxScrollY
              , e = this._hScrollBar && 0 < this._tf.maxScrollX
              , i = t ? this._width - this._vScrollBar.width : this._width
              , n = e ? this._height - this._hScrollBar.height : this._height
              , a = this._tf.padding || E.labelPadding;
            this._tf.width = i,
            this._tf.height = n,
            this._vScrollBar && (this._vScrollBar.x = this._width - this._vScrollBar.width - a[2],
            this._vScrollBar.y = a[1],
            this._vScrollBar.height = this._height - (e ? this._hScrollBar.height : 0) - a[1] - a[3],
            this._vScrollBar.scrollSize = 1,
            this._vScrollBar.thumbPercent = n / Math.max(this._tf.textHeight, n),
            this._vScrollBar.setScroll(1, this._tf.maxScrollY, this._tf.scrollY),
            this._vScrollBar.visible = t),
            this._hScrollBar && (this._hScrollBar.x = a[0],
            this._hScrollBar.y = this._height - this._hScrollBar.height - a[3],
            this._hScrollBar.width = this._width - (t ? this._vScrollBar.width : 0) - a[0] - a[2],
            this._hScrollBar.scrollSize = Math.max(.033 * i, 1),
            this._hScrollBar.thumbPercent = i / Math.max(this._tf.textWidth, i),
            this._hScrollBar.setScroll(0, this.maxScrollX, this.scrollX),
            this._hScrollBar.visible = e);
        }
        ,
        t.scrollTo = function(t) {
            this.commitMeasure(),
            this._tf.scrollY = t;
        }
        ,
        a(0, t, "scrollY", function() {
            return this._tf.scrollY;
        }),
        a(0, t, "width", e.prototype._$get_width, function(t) {
            f.superSet(nt, this, "width", t),
            this.callLater(this.changeScroll);
        }),
        a(0, t, "hScrollBar", function() {
            return this._hScrollBar;
        }),
        a(0, t, "height", e.prototype._$get_height, function(t) {
            f.superSet(nt, this, "height", t),
            this.callLater(this.changeScroll);
        }),
        a(0, t, "maxScrollX", function() {
            return this._tf.maxScrollX;
        }),
        a(0, t, "vScrollBarSkin", function() {
            return this._vScrollBar ? this._vScrollBar.skin : null;
        }, function(t) {
            null == this._vScrollBar && (this.addChild(this._vScrollBar = new it()),
            this._vScrollBar.on("change", this, this.onVBarChanged),
            this._vScrollBar.target = this._tf,
            this.callLater(this.changeScroll)),
            this._vScrollBar.skin = t;
        }),
        a(0, t, "hScrollBarSkin", function() {
            return this._hScrollBar ? this._hScrollBar.skin : null;
        }, function(t) {
            null == this._hScrollBar && (this.addChild(this._hScrollBar = new $()),
            this._hScrollBar.on("change", this, this.onHBarChanged),
            this._hScrollBar.mouseWheelEnable = !1,
            this._hScrollBar.target = this._tf,
            this.callLater(this.changeScroll)),
            this._hScrollBar.skin = t;
        }),
        a(0, t, "vScrollBar", function() {
            return this._vScrollBar;
        }),
        a(0, t, "maxScrollY", function() {
            return this._tf.maxScrollY;
        }),
        a(0, t, "scrollX", function() {
            return this._tf.scrollX;
        }),
        i;
    }(nt);
    !function(t) {
        function e() {
            this._uiView = null,
            this.isCloseOther = !1,
            e.__super.call(this);
        }
        s(e, "laya.ui.AsynDialog", st);
        var i = e.prototype;
        i.createView = function(t) {
            this._uiView = t;
        }
        ,
        i._open = function(t, e, i) {
            this.isModal = t,
            this.isCloseOther = e,
            st.manager.lock(!0),
            this._uiView ? this.onCreated() : this.onOpen();
        }
        ,
        i.onCreated = function() {
            this.createUI(),
            this.onOpen();
        }
        ,
        i.createUI = function() {
            laya.ui.View.prototype.createView.call(this, this._uiView),
            this._uiView = null,
            this._dealDragArea();
        }
        ,
        i.onOpen = function() {
            st.manager.open(this, this.isCloseOther),
            st.manager.lock(!1);
        }
        ,
        i.close = function(t, e) {
            void 0 === e && (e = !0),
            st.manager.close(this),
            this.onClose();
        }
        ,
        i.onClose = function() {}
        ,
        i.destroy = function(t) {
            void 0 === t && (t = !0),
            laya.ui.View.prototype.destroy.call(this, t),
            this._uiView = null,
            this.onDestroy();
        }
        ,
        i.onDestroy = function() {}
        ;
    }();
    f.__init([X]);
}(window, document, Laya),
"function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
    }
}),
function(t, e, at) {
    at.un,
    at.uns;
    var i = at.static
      , r = at.class
      , n = at.getset
      , f = at.__newvec
      , o = laya.maths.Bezier
      , c = laya.utils.Browser
      , Pt = laya.utils.Byte
      , a = (laya.events.Event,
    laya.events.EventDispatcher)
      , s = laya.display.Graphics
      , h = laya.resource.HTMLCanvas
      , l = laya.utils.Handler
      , u = laya.net.Loader
      , d = laya.maths.MathUtil
      , At = laya.maths.Matrix
      , _ = (laya.display.Node,
    laya.maths.Point,
    laya.maths.Rectangle)
      , g = laya.renders.Render
      , p = (laya.renders.RenderContext,
    laya.resource.Resource)
      , m = laya.utils.RunDriver
      , st = laya.display.Sprite
      , y = laya.utils.Stat
      , Lt = laya.resource.Texture
      , v = (laya.net.URL,
    laya.utils.Utils)
      , A = function() {
        function t() {
            this.nodes = null,
            this.name = null,
            this.playTime = NaN,
            this.bone3DMap = null,
            this.totalKeyframeDatasLength = 0;
        }
        return r(t, "laya.ani.AnimationContent"),
        t;
    }()
      , L = function() {
        function t() {
            this.name = null,
            this.parentIndex = 0,
            this.parent = null,
            this.keyframeWidth = 0,
            this.lerpType = 0,
            this.interpolationMethod = null,
            this.childs = null,
            this.keyFrame = null,
            this.playTime = NaN,
            this.extenData = null,
            this.dataOffset = 0;
        }
        return r(t, "laya.ani.AnimationNodeContent"),
        t;
    }()
      , S = function() {
        function t() {}
        return r(t, "laya.ani.AnimationParser01"),
        t.parse = function(t, e) {
            var i = e.__getBuffer()
              , n = 0
              , a = 0
              , s = 0
              , r = 0
              , o = 0
              , h = 0
              , l = 0
              , u = e.readUTFString();
            t._aniClassName = u;
            var c, d = e.readUTFString().split("\n"), _ = e.getUint8(), p = e.getUint32(), f = e.getUint32();
            0 < p && (c = i.slice(p, f));
            var g = new Pt(c);
            for (0 < f && (t._publicExtData = i.slice(f, i.byteLength)),
            t._useParent = !!e.getUint8(),
            t._anis.length = _,
            n = 0; n < _; n++) {
                var m = t._anis[n] = new A();
                m.nodes = new Array();
                var y = m.name = d[e.getUint16()];
                t._aniMap[y] = n,
                m.bone3DMap = {},
                m.playTime = e.getFloat32();
                var v = m.nodes.length = e.getUint8();
                for (a = m.totalKeyframeDatasLength = 0; a < v; a++) {
                    var S = m.nodes[a] = new L();
                    S.childs = [];
                    var x = e.getInt16();
                    0 <= x && (S.name = d[x],
                    m.bone3DMap[S.name] = a),
                    S.keyFrame = new Array(),
                    S.parentIndex = e.getInt16(),
                    -1 == S.parentIndex ? S.parent = null : S.parent = m.nodes[S.parentIndex],
                    S.lerpType = e.getUint8();
                    var b = e.getUint32();
                    g.pos = b;
                    var w = S.keyframeWidth = g.getUint16();
                    if (m.totalKeyframeDatasLength += w,
                    0 === S.lerpType || 1 === S.lerpType)
                        for (S.interpolationMethod = [],
                        S.interpolationMethod.length = w,
                        s = 0; s < w; s++)
                            S.interpolationMethod[s] = O.interpolation[g.getUint8()];
                    null != S.parent && S.parent.childs.push(S);
                    var M = e.getUint16();
                    0 < M && (S.extenData = i.slice(e.pos, e.pos + M),
                    e.pos += M);
                    var I, T = e.getUint16(), C = 0;
                    for (s = 0,
                    r = S.keyFrame.length = T; s < r; s++) {
                        if ((I = S.keyFrame[s] = new D()).duration = e.getFloat32(),
                        I.startTime = C,
                        2 === S.lerpType) {
                            I.interpolationData = [];
                            var E, P = e.getUint8();
                            switch (E = e.getFloat32()) {
                            case 254:
                                for (I.interpolationData.length = w,
                                l = 0; l < w; l++)
                                    I.interpolationData[l] = 0;
                                break;

                            case 255:
                                for (I.interpolationData.length = w,
                                l = 0; l < w; l++)
                                    I.interpolationData[l] = 5;
                                break;

                            default:
                                for (I.interpolationData.push(E),
                                h = 1; h < P; h++)
                                    I.interpolationData.push(e.getFloat32());
                            }
                        }
                        for (I.data = new Float32Array(w),
                        o = 0; o < w; o++)
                            I.data[o] = e.getFloat32(),
                            -1e-8 < I.data[o] && I.data[o] < 1e-8 && (I.data[o] = 0);
                        C += I.duration;
                    }
                    I.startTime = m.playTime,
                    S.playTime = m.playTime,
                    t._calculateKeyFrame(S, T, w);
                }
            }
        }
        ,
        t;
    }()
      , x = function() {
        function x() {}
        return r(x, "laya.ani.AnimationParser02"),
        x.READ_DATA = function() {
            x._DATA.offset = x._reader.getUint32(),
            x._DATA.size = x._reader.getUint32();
        }
        ,
        x.READ_BLOCK = function() {
            for (var t = x._BLOCK.count = x._reader.getUint16(), e = x._BLOCK.blockStarts = [], i = x._BLOCK.blockLengths = [], n = 0; n < t; n++)
                e.push(x._reader.getUint32()),
                i.push(x._reader.getUint32());
        }
        ,
        x.READ_STRINGS = function() {
            var t = x._reader.getUint32()
              , e = x._reader.getUint16()
              , i = x._reader.pos;
            x._reader.pos = t + x._DATA.offset;
            for (var n = 0; n < e; n++)
                x._strings[n] = x._reader.readUTFString();
            x._reader.pos = i;
        }
        ,
        x.parse = function(t, e) {
            x._templet = t;
            (x._reader = e).__getBuffer();
            x.READ_DATA(),
            x.READ_BLOCK(),
            x.READ_STRINGS();
            for (var i = 0, n = x._BLOCK.count; i < n; i++) {
                var a = e.getUint16()
                  , s = x._strings[a]
                  , r = x["READ_" + s];
                if (null == r)
                    throw new Error("model file err,no this function:" + a + " " + s);
                r.call();
            }
        }
        ,
        x.READ_ANIMATIONS = function() {
            var t = x._reader
              , e = t.__getBuffer()
              , i = 0
              , n = 0
              , a = 0
              , s = 0
              , r = t.getUint16()
              , o = [];
            for (o.length = r,
            i = 0; i < r; i++)
                o[i] = O.interpolation[t.getByte()];
            var h = t.getUint8();
            for (x._templet._anis.length = h,
            i = 0; i < h; i++) {
                var l = x._templet._anis[i] = {};
                l.nodes = new Array();
                var u = l.name = x._strings[t.getUint16()];
                x._templet._aniMap[u] = i,
                l.bone3DMap = {},
                l.playTime = t.getFloat32();
                var c = l.nodes.length = t.getInt16();
                for (n = l.totalKeyframeDatasLength = 0; n < c; n++) {
                    var d = l.nodes[n] = {};
                    d.keyframeWidth = r,
                    d.childs = [];
                    var _ = t.getUint16();
                    0 <= _ && (d.name = x._strings[_],
                    l.bone3DMap[d.name] = n),
                    d.keyFrame = new Array(),
                    d.parentIndex = t.getInt16(),
                    -1 == d.parentIndex ? d.parent = null : d.parent = l.nodes[d.parentIndex],
                    l.totalKeyframeDatasLength += r,
                    d.interpolationMethod = o,
                    null != d.parent && d.parent.childs.push(d);
                    var p = t.getUint16()
                      , f = null
                      , g = null;
                    for (a = 0,
                    s = d.keyFrame.length = p; a < s; a++) {
                        (f = d.keyFrame[a] = {}).startTime = t.getFloat32(),
                        g && (g.duration = f.startTime - g.startTime);
                        var m = x._DATA.offset
                          , y = t.getUint32()
                          , v = 4 * r
                          , S = e.slice(m + y, m + y + v);
                        f.data = new Float32Array(S),
                        g = f;
                    }
                    f.duration = 0,
                    d.playTime = l.playTime,
                    x._templet._calculateKeyFrame(d, p, r);
                }
            }
        }
        ,
        x._templet = null,
        x._reader = null,
        x._strings = [],
        i(x, ["_BLOCK", function() {
            return this._BLOCK = {
                count: 0
            };
        }
        , "_DATA", function() {
            return this._DATA = {
                offset: 0,
                size: 0
            };
        }
        ]),
        x;
    }()
      , Dt = (function() {
        function t() {}
        r(t, "laya.ani.AnimationState"),
        t.stopped = 0,
        t.paused = 1,
        t.playing = 2;
    }(),
    function() {
        function a() {
            this.name = null,
            this.root = null,
            this.parentBone = null,
            this.length = 10,
            this.transform = null,
            this.inheritScale = !0,
            this.inheritRotation = !0,
            this.rotation = NaN,
            this.resultRotation = NaN,
            this.d = -1,
            this._tempMatrix = null,
            this._sprite = null,
            this.resultTransform = new Wt(),
            this.resultMatrix = new At(),
            this._children = [];
        }
        r(a, "laya.ani.bone.Bone");
        var t = a.prototype;
        return t.setTempMatrix = function(t) {
            this._tempMatrix = t;
            var e, i = 0;
            for (i = 0,
            e = this._children.length; i < e; i++)
                this._children[i].setTempMatrix(this._tempMatrix);
        }
        ,
        t.update = function(t) {
            var e;
            if (this.rotation = this.transform.skX,
            t)
                e = this.resultTransform.getMatrix(),
                At.mul(e, t, this.resultMatrix),
                this.resultRotation = this.rotation;
            else if (this.resultRotation = this.rotation + this.parentBone.resultRotation,
            this.parentBone)
                if (this.inheritRotation && this.inheritScale)
                    e = this.resultTransform.getMatrix(),
                    At.mul(e, this.parentBone.resultMatrix, this.resultMatrix);
                else {
                    var i = this.parentBone
                      , n = NaN
                      , a = NaN
                      , s = NaN
                      , r = this.parentBone.resultMatrix;
                    e = this.resultTransform.getMatrix();
                    var o = r.a * e.tx + r.c * e.ty + r.tx
                      , h = r.b * e.tx + r.d * e.ty + r.ty
                      , l = new At();
                    this.inheritRotation ? (n = Math.atan2(i.resultMatrix.b, i.resultMatrix.a),
                    a = Math.cos(n),
                    s = Math.sin(n),
                    l.setTo(a, s, -s, a, 0, 0),
                    At.mul(this._tempMatrix, l, At.TEMP),
                    At.TEMP.copyTo(l),
                    e = this.resultTransform.getMatrix(),
                    At.mul(e, l, this.resultMatrix),
                    this.resultTransform.scX * this.resultTransform.scY < 0 && this.resultMatrix.rotate(.5 * Math.PI)) : (this.inheritScale,
                    e = this.resultTransform.getMatrix(),
                    At.TEMP.identity(),
                    At.TEMP.d = this.d,
                    At.mul(e, At.TEMP, this.resultMatrix)),
                    this.resultMatrix.tx = o,
                    this.resultMatrix.ty = h;
                }
            else
                (e = this.resultTransform.getMatrix()).copyTo(this.resultMatrix);
            var u, c = 0;
            for (c = 0,
            u = this._children.length; c < u; c++)
                this._children[c].update();
        }
        ,
        t.updateChild = function() {
            var t, e = 0;
            for (e = 0,
            t = this._children.length; e < t; e++)
                this._children[e].update();
        }
        ,
        t.setRotation = function(t) {
            this._sprite && (this._sprite.rotation = 180 * t / Math.PI);
        }
        ,
        t.updateDraw = function(t, e) {
            a.ShowBones && !a.ShowBones[this.name] || (this._sprite || (this._sprite = new st(),
            this._sprite.graphics.drawCircle(0, 0, 5, "#ff0000"),
            this._sprite.graphics.drawLine(0, 0, this.length, 0, "#00ff00"),
            this._sprite.graphics.fillText(this.name, 0, 0, "20px Arial", "#00ff00", "center"),
            at.stage.addChild(this._sprite)),
            this._sprite.x = t + this.resultMatrix.tx,
            this._sprite.y = e + this.resultMatrix.ty);
            var i, n = 0;
            for (n = 0,
            i = this._children.length; n < i; n++)
                this._children[n].updateDraw(t, e);
        }
        ,
        t.addChild = function(t) {
            this._children.push(t),
            t.parentBone = this;
        }
        ,
        t.findBone = function(t) {
            if (this.name == t)
                return this;
            var e, i, n = 0;
            for (n = 0,
            e = this._children.length; n < e; n++)
                if (i = this._children[n].findBone(t))
                    return i;
            return null;
        }
        ,
        t.localToWorld = function(t) {
            var e = t[0]
              , i = t[1];
            t[0] = e * this.resultMatrix.a + i * this.resultMatrix.c + this.resultMatrix.tx,
            t[1] = e * this.resultMatrix.b + i * this.resultMatrix.d + this.resultMatrix.ty;
        }
        ,
        a.ShowBones = {},
        a;
    }())
      , Rt = function() {
        function f() {
            this.name = null,
            this.parent = null,
            this.attachmentName = null,
            this.srcDisplayIndex = -1,
            this.type = "src",
            this.templet = null,
            this.currSlotData = null,
            this.currTexture = null,
            this.currDisplayData = null,
            this.displayIndex = -1,
            this.originalIndex = -1,
            this._diyTexture = null,
            this._parentMatrix = null,
            this._resultMatrix = null,
            this._replaceDic = {},
            this._curDiyUV = null,
            this._curDiyVS = null,
            this._skinSprite = null,
            this.deformData = null,
            this._mVerticleArr = null;
        }
        r(f, "laya.ani.bone.BoneSlot");
        var t = f.prototype;
        return t.showSlotData = function(t, e) {
            void 0 === e && (e = !0),
            this.currSlotData = t,
            e && (this.displayIndex = this.srcDisplayIndex),
            this.currDisplayData = null,
            this.currTexture = null;
        }
        ,
        t.showDisplayByName = function(t) {
            this.currSlotData && this.showDisplayByIndex(this.currSlotData.getDisplayByName(t));
        }
        ,
        t.replaceDisplayByName = function(t, e) {
            if (this.currSlotData) {
                var i;
                i = this.currSlotData.getDisplayByName(t);
                var n;
                n = this.currSlotData.getDisplayByName(e),
                this.replaceDisplayByIndex(i, n);
            }
        }
        ,
        t.replaceDisplayByIndex = function(t, e) {
            this.currSlotData && (this._replaceDic[t] = e,
            this.originalIndex == t && this.showDisplayByIndex(t));
        }
        ,
        t.showDisplayByIndex = function(t) {
            if (this.originalIndex = t,
            null != this._replaceDic[t] && (t = this._replaceDic[t]),
            this.currSlotData && -1 < t && t < this.currSlotData.displayArr.length) {
                if (this.displayIndex = t,
                this.currDisplayData = this.currSlotData.displayArr[t],
                this.currDisplayData) {
                    var e = this.currDisplayData.name;
                    this.currTexture = this.templet.getTexture(e),
                    this.currTexture && 0 == this.currDisplayData.type && this.currDisplayData.uvs && (!g.isConchApp || g.isConchApp && "0.9.15" < st.RUNTIMEVERION) && (this.currTexture = this.currDisplayData.createTexture(this.currTexture));
                }
            } else
                this.displayIndex = -1,
                this.currDisplayData = null,
                this.currTexture = null;
        }
        ,
        t.replaceSkin = function(t) {
            this._diyTexture = t,
            this._curDiyUV && (this._curDiyUV.length = 0),
            this.currDisplayData && this._diyTexture == this.currDisplayData.texture && (this._diyTexture = null);
        }
        ,
        t.setParentMatrix = function(t) {
            this._parentMatrix = t;
        }
        ,
        t.draw = function(t, e, i, n) {
            if (void 0 === i && (i = !1),
            void 0 === n && (n = 1),
            (null != this._diyTexture || null != this.currTexture) && null != this.currDisplayData || this.currDisplayData && 3 == this.currDisplayData.type) {
                var a, s = this.currTexture;
                switch (this._diyTexture && (s = this._diyTexture),
                this.currDisplayData.type) {
                case 0:
                    if (t) {
                        var r = this.getDisplayMatrix();
                        if (this._parentMatrix) {
                            var o = !1;
                            if (r) {
                                var h;
                                if (At.mul(r, this._parentMatrix, At.TEMP),
                                h = i ? (null == this._resultMatrix && (this._resultMatrix = new At()),
                                this._resultMatrix) : new At(),
                                !g.isWebGL && this.currDisplayData.uvs || g.isWebGL && this._diyTexture && this.currDisplayData.uvs) {
                                    var l = f._tempMatrix;
                                    l.identity(),
                                    this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (l.d = -1),
                                    this.currDisplayData.uvs[0] > this.currDisplayData.uvs[4] && this.currDisplayData.uvs[1] > this.currDisplayData.uvs[5] && (o = !0,
                                    l.rotate(-Math.PI / 2)),
                                    At.mul(l, At.TEMP, h);
                                } else
                                    At.TEMP.copyTo(h);
                                o ? t.drawTexture(s, -this.currDisplayData.height / 2, -this.currDisplayData.width / 2, this.currDisplayData.height, this.currDisplayData.width, h) : t.drawTexture(s, -this.currDisplayData.width / 2, -this.currDisplayData.height / 2, this.currDisplayData.width, this.currDisplayData.height, h);
                            }
                        }
                    }
                    break;

                case 1:
                    if (null == (a = i ? (null == this._skinSprite && (this._skinSprite = f.createSkinMesh()),
                    this._skinSprite) : f.createSkinMesh()))
                        return;
                    var u;
                    if (null == this.currDisplayData.bones) {
                        var c, d = this.currDisplayData.weights;
                        this.deformData && (d = this.deformData),
                        c = this._diyTexture ? (this._curDiyUV || (this._curDiyUV = []),
                        0 == this._curDiyUV.length && (this._curDiyUV = E.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV),
                        this._curDiyUV = E.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)),
                        this._curDiyUV) : this.currDisplayData.uvs,
                        this._mVerticleArr = d;
                        this.currDisplayData.triangles.length;
                        u = this.currDisplayData.triangles,
                        a.init2(s, null, u, this._mVerticleArr, c);
                        var _, p = this.getDisplayMatrix();
                        if (this._parentMatrix)
                            if (p)
                                At.mul(p, this._parentMatrix, At.TEMP),
                                _ = i ? (null == this._resultMatrix && (this._resultMatrix = new At()),
                                this._resultMatrix) : new At(),
                                At.TEMP.copyTo(_),
                                a.transform = _;
                    } else
                        this.skinMesh(e, a, n);
                    t.drawSkin(a);
                    break;

                case 2:
                    if (null == (a = i ? (null == this._skinSprite && (this._skinSprite = f.createSkinMesh()),
                    this._skinSprite) : f.createSkinMesh()))
                        return;
                    this.skinMesh(e, a, n),
                    t.drawSkin(a);
                }
            }
        }
        ,
        t.skinMesh = function(t, e, i) {
            var n, a = this.currTexture, s = this.currDisplayData.bones;
            n = this._diyTexture ? (a = this._diyTexture,
            this._curDiyUV || (this._curDiyUV = []),
            0 == this._curDiyUV.length && (this._curDiyUV = E.getRelativeUV(this.currTexture.uv, this.currDisplayData.uvs, this._curDiyUV),
            this._curDiyUV = E.getAbsoluteUV(this._diyTexture.uv, this._curDiyUV, this._curDiyUV)),
            this._curDiyUV) : this.currDisplayData.uvs;
            var r, o, h = this.currDisplayData.weights, l = this.currDisplayData.triangles, u = 0, c = 0, d = 0, _ = NaN, p = NaN, f = 0, g = 0, m = [], y = 0, v = 0;
            if (this.deformData && 0 < this.deformData.length) {
                var S = 0;
                for (y = 0,
                v = s.length; y < v; ) {
                    for (d = s[y++] + y,
                    c = u = 0; y < d; y++)
                        o = t[s[y]],
                        _ = h[f] + this.deformData[S++],
                        p = h[f + 1] + this.deformData[S++],
                        g = h[f + 2],
                        u += (_ * o.a + p * o.c + o.tx) * g,
                        c += (_ * o.b + p * o.d + o.ty) * g,
                        f += 3;
                    m.push(u, c);
                }
            } else
                for (y = 0,
                v = s.length; y < v; ) {
                    for (d = s[y++] + y,
                    c = u = 0; y < d; y++)
                        o = t[s[y]],
                        _ = h[f],
                        p = h[f + 1],
                        g = h[f + 2],
                        u += (_ * o.a + p * o.c + o.tx) * g,
                        c += (_ * o.b + p * o.d + o.ty) * g,
                        f += 3;
                    m.push(u, c);
                }
            this._mVerticleArr = m,
            r = l,
            e.init2(a, null, r, this._mVerticleArr, n);
        }
        ,
        t.drawBonePoint = function(t) {
            t && this._parentMatrix && t.drawCircle(this._parentMatrix.tx, this._parentMatrix.ty, 5, "#ff0000");
        }
        ,
        t.getDisplayMatrix = function() {
            return this.currDisplayData ? this.currDisplayData.transform.getMatrix() : null;
        }
        ,
        t.getMatrix = function() {
            return this._resultMatrix;
        }
        ,
        t.copy = function() {
            var t = new f();
            return t.type = "copy",
            t.name = this.name,
            t.attachmentName = this.attachmentName,
            t.srcDisplayIndex = this.srcDisplayIndex,
            t.parent = this.parent,
            t.displayIndex = this.displayIndex,
            t.templet = this.templet,
            t.currSlotData = this.currSlotData,
            t.currTexture = this.currTexture,
            t.currDisplayData = this.currDisplayData,
            t;
        }
        ,
        f.createSkinMesh = function() {
            return g.isWebGL || g.isConchApp ? m.skinAniSprite() : g.isWebGL ? null : G.useSimpleMeshInCanvas ? new B() : new N();
        }
        ,
        i(f, ["_tempMatrix", function() {
            return this._tempMatrix = new At();
        }
        ]),
        f;
    }()
      , b = function() {
        function t() {
            this.mesh = null,
            this.transform = null,
            this.context = null,
            this.mode = 0;
        }
        r(t, "laya.ani.bone.canvasmesh.CanvasMeshRender");
        var e = t.prototype;
        return e.renderToContext = function(t) {
            this.context = t.ctx || t,
            this.mesh && (0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh));
        }
        ,
        e._renderNoIndexes = function(t) {
            var e = 0
              , i = t.vertices.length / 2
              , n = 0;
            for (e = 0; e < i - 2; e++)
                n = 2 * e,
                this._renderDrawTriangle(t, n, n + 2, n + 4);
        }
        ,
        e._renderWithIndexes = function(t) {
            var e = t.indexes
              , i = 0
              , n = e.length;
            for (i = 0; i < n; i += 3) {
                var a = 2 * e[i]
                  , s = 2 * e[i + 1]
                  , r = 2 * e[i + 2];
                this._renderDrawTriangle(t, a, s, r);
            }
        }
        ,
        e._renderDrawTriangle = function(t, e, i, n) {
            var a = this.context
              , s = t.uvs
              , r = t.vertices
              , o = t.texture
              , h = o.bitmap
              , l = h.source
              , u = o.width
              , c = o.height
              , d = h.width
              , _ = h.height
              , p = NaN
              , f = NaN
              , g = NaN
              , m = NaN
              , y = NaN
              , v = NaN;
            if (t.useUvTransform) {
                var S = t.uvTransform;
                p = (s[e] * S.a + s[e + 1] * S.c + S.tx) * d,
                f = (s[i] * S.a + s[i + 1] * S.c + S.tx) * d,
                g = (s[n] * S.a + s[n + 1] * S.c + S.tx) * d,
                m = (s[e] * S.b + s[e + 1] * S.d + S.ty) * _,
                y = (s[i] * S.b + s[i + 1] * S.d + S.ty) * _,
                v = (s[n] * S.b + s[n + 1] * S.d + S.ty) * _;
            } else
                p = s[e] * d,
                f = s[i] * d,
                g = s[n] * d,
                m = s[e + 1] * _,
                y = s[i + 1] * _,
                v = s[n + 1] * _;
            var x = r[e]
              , b = r[i]
              , w = r[n]
              , M = r[e + 1]
              , I = r[i + 1]
              , T = r[n + 1];
            if (0 < t.canvasPadding) {
                var C = t.canvasPadding
                  , E = t.canvasPadding
                  , P = (x + b + w) / 3
                  , A = (M + I + T) / 3
                  , L = x - P
                  , D = M - A
                  , R = Math.sqrt(L * L + D * D);
                x = P + L / R * (R + C),
                M = A + D / R * (R + E),
                D = I - A,
                b = P + (L = b - P) / (R = Math.sqrt(L * L + D * D)) * (R + C),
                I = A + D / R * (R + E),
                D = T - A,
                w = P + (L = w - P) / (R = Math.sqrt(L * L + D * D)) * (R + C),
                T = A + D / R * (R + E);
            }
            if (a.save(),
            this.transform) {
                var k = this.transform;
                a.transform(k.a, k.b, k.c, k.d, k.tx, k.ty);
            }
            a.beginPath(),
            a.moveTo(x, M),
            a.lineTo(b, I),
            a.lineTo(w, T),
            a.closePath(),
            a.clip();
            var N = 1 / (p * y + m * g + f * v - y * g - m * f - p * v)
              , O = x * y + m * w + b * v - y * w - m * b - x * v
              , B = p * b + x * g + f * w - b * g - x * f - p * w
              , G = p * y * w + m * b * g + x * f * v - x * y * g - m * f * w - p * b * v
              , F = M * y + m * T + I * v - y * T - m * I - M * v
              , U = p * I + M * g + f * T - I * g - M * f - p * T
              , H = p * y * T + m * I * g + M * f * v - M * y * g - m * f * T - p * I * v;
            a.transform(O * N, F * N, B * N, U * N, G * N, H * N),
            a.drawImage(l, o.uv[0] * d, o.uv[1] * _, u, c, o.uv[0] * d, o.uv[1] * _, u, c),
            a.restore();
        }
        ,
        t;
    }()
      , w = function() {
        function t() {
            this.texture = null,
            this.uvs = [0, 0, 1, 0, 1, 1, 0, 1],
            this.vertices = [0, 0, 100, 0, 100, 100, 0, 100],
            this.indexes = [0, 1, 3, 3, 1, 2],
            this.uvTransform = null,
            this.useUvTransform = !1,
            this.canvasPadding = 1;
        }
        return r(t, "laya.ani.bone.canvasmesh.MeshData"),
        t.prototype.getBounds = function() {
            return _._getWrapRec(this.vertices);
        }
        ,
        t;
    }()
      , kt = function() {
        function t() {
            this.skinName = null,
            this.deformSlotDataList = [];
        }
        return r(t, "laya.ani.bone.DeformAniData"),
        t;
    }()
      , Nt = function() {
        function t() {
            this.deformSlotDisplayList = [];
        }
        return r(t, "laya.ani.bone.DeformSlotData"),
        t;
    }()
      , Ot = function() {
        function t() {
            this.boneSlot = null,
            this.slotIndex = -1,
            this.attachment = null,
            this.deformData = null,
            this.frameIndex = 0,
            this.timeList = [],
            this.vectices = [],
            this.tweenKeyList = [];
        }
        r(t, "laya.ani.bone.DeformSlotDisplayData");
        var e = t.prototype;
        return e.binarySearch1 = function(t, e) {
            var i = 0
              , n = t.length - 2;
            if (0 == n)
                return 1;
            for (var a = n >>> 1; ; ) {
                if (t[Math.floor(a + 1)] <= e ? i = a + 1 : n = a,
                i == n)
                    return i + 1;
                a = i + n >>> 1;
            }
            return 0;
        }
        ,
        e.apply = function(t, e, i) {
            if (void 0 === i && (i = 1),
            t += .05,
            !(this.timeList.length <= 0)) {
                var n = 0;
                if (!(t < this.timeList[0])) {
                    var a = this.vectices[0].length
                      , s = []
                      , r = this.binarySearch1(this.timeList, t);
                    if (this.frameIndex = r,
                    t >= this.timeList[this.timeList.length - 1]) {
                        var o = this.vectices[this.vectices.length - 1];
                        if (i < 1)
                            for (n = 0; n < a; n++)
                                s[n] += (o[n] - s[n]) * i;
                        else
                            for (n = 0; n < a; n++)
                                s[n] = o[n];
                        this.deformData = s;
                    } else {
                        this.tweenKeyList[this.frameIndex];
                        var h = this.vectices[this.frameIndex - 1]
                          , l = this.vectices[this.frameIndex]
                          , u = this.timeList[this.frameIndex - 1]
                          , c = this.timeList[this.frameIndex];
                        i = this.tweenKeyList[r - 1] ? (t - u) / (c - u) : 0;
                        var d = NaN;
                        for (n = 0; n < a; n++)
                            d = h[n],
                            s[n] = d + (l[n] - d) * i;
                        this.deformData = s;
                    }
                }
            }
        }
        ,
        t;
    }()
      , Bt = function() {
        function t() {
            this.time = NaN,
            this.drawOrder = [];
        }
        return r(t, "laya.ani.bone.DrawOrderData"),
        t;
    }()
      , Gt = function() {
        function t() {
            this.name = null,
            this.intValue = 0,
            this.floatValue = NaN,
            this.stringValue = null,
            this.time = NaN;
        }
        return r(t, "laya.ani.bone.EventData"),
        t;
    }()
      , M = function() {
        function nt(t, e) {
            this._targetBone = null,
            this._bones = null,
            this._data = null,
            this.name = null,
            this.mix = NaN,
            this.bendDirection = NaN,
            this.isSpine = !0,
            this._sp = null,
            this.isDebug = 1,
            this._data = t,
            this._targetBone = e[t.targetBoneIndex],
            this.isSpine = t.isSpine,
            null == this._bones && (this._bones = []);
            for (var i = this._bones.length = 0, n = t.boneIndexs.length; i < n; i++)
                this._bones.push(e[t.boneIndexs[i]]);
            this.name = t.name,
            this.mix = t.mix,
            this.bendDirection = t.bendDirection;
        }
        r(nt, "laya.ani.bone.IkConstraint");
        var t = nt.prototype;
        return t.apply = function() {
            switch (this._bones.length) {
            case 1:
                this._applyIk1(this._bones[0], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.mix);
                break;

            case 2:
                this.isSpine ? this._applyIk2(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix) : this._applyIk3(this._bones[0], this._bones[1], this._targetBone.resultMatrix.tx, this._targetBone.resultMatrix.ty, this.bendDirection, this.mix);
            }
        }
        ,
        t._applyIk1 = function(t, e, i, n) {
            var a = t.parentBone
              , s = 1 / (a.resultMatrix.a * a.resultMatrix.d - a.resultMatrix.b * a.resultMatrix.c)
              , r = e - a.resultMatrix.tx
              , o = i - a.resultMatrix.ty
              , h = (r * a.resultMatrix.d - o * a.resultMatrix.c) * s - t.transform.x
              , l = (o * a.resultMatrix.a - r * a.resultMatrix.b) * s - t.transform.y
              , u = Math.atan2(l, h) * nt.radDeg - 0 - t.transform.skX;
            t.transform.scX < 0 && (u += 180),
            180 < u ? u -= 360 : u < -180 && (u += 360),
            t.transform.skX = t.transform.skY = t.transform.skX + u * n,
            t.update();
        }
        ,
        t.updatePos = function(t, e) {
            this._sp && this._sp.pos(t, e);
        }
        ,
        t._applyIk2 = function(t, e, i, n, a, s) {
            if (0 != s) {
                var r = t.resultTransform.x
                  , o = t.resultTransform.y
                  , h = t.transform.scX
                  , l = t.transform.scY
                  , u = e.transform.scX
                  , c = 0
                  , d = 0
                  , _ = 0;
                _ = h < 0 ? (h = -h,
                c = 180,
                -1) : (c = 0,
                1),
                l < 0 && (l = -l,
                _ = -_),
                d = u < 0 ? (u = -u,
                180) : 0;
                var p = e.resultTransform.x
                  , f = NaN
                  , g = NaN
                  , m = NaN
                  , y = t.resultMatrix.a
                  , v = t.resultMatrix.c
                  , S = t.resultMatrix.b
                  , x = t.resultMatrix.d
                  , b = Math.abs(h - l) <= 1e-4;
                m = b ? (g = y * p + v * (f = e.resultTransform.y) + t.resultMatrix.tx,
                S * p + x * f + t.resultMatrix.ty) : (f = 0,
                g = y * p + t.resultMatrix.tx,
                S * p + t.resultMatrix.ty),
                this.isDebug && (this._sp || (this._sp = new st(),
                at.stage.addChild(this._sp)),
                this._sp.graphics.clear(),
                this._sp.graphics.drawCircle(i, n, 15, "#ffff00"),
                this._sp.graphics.drawCircle(g, m, 15, "#ff00ff")),
                t.setRotation(Math.atan2(m - t.resultMatrix.ty, g - t.resultMatrix.tx));
                var w = t.parentBone;
                y = w.resultMatrix.a,
                v = w.resultMatrix.c,
                S = w.resultMatrix.b;
                var M = 1 / (y * (x = w.resultMatrix.d) - v * S)
                  , I = i - w.resultMatrix.tx
                  , T = n - w.resultMatrix.ty
                  , C = (I * x - T * v) * M - r
                  , E = (T * y - I * S) * M - o
                  , P = ((I = g - w.resultMatrix.tx) * x - (T = m - w.resultMatrix.ty) * v) * M - r
                  , A = (T * y - I * S) * M - o
                  , L = Math.sqrt(P * P + A * A)
                  , D = e.length * u
                  , R = NaN
                  , k = NaN;
                if (b) {
                    var N = (C * C + E * E - L * L - (D *= h) * D) / (2 * L * D);
                    N < -1 ? N = -1 : 1 < N && (N = 1),
                    k = Math.acos(N) * a,
                    y = L + D * N,
                    v = D * Math.sin(k),
                    R = Math.atan2(E * y - C * v, C * y + E * v);
                } else {
                    var O = (y = h * D) * y
                      , B = (v = l * D) * v
                      , G = C * C + E * E
                      , F = Math.atan2(E, C)
                      , U = -2 * B * L
                      , H = B - O;
                    if (0 < (x = U * U - 4 * H * (S = B * L * L + O * G - O * B))) {
                        var V = Math.sqrt(x);
                        U < 0 && (V = -V);
                        var Y = (V = -(U + V) / 2) / H
                          , X = S / V
                          , W = Math.abs(Y) < Math.abs(X) ? Y : X;
                        W * W <= G && (T = Math.sqrt(G - W * W) * a,
                        R = F - Math.atan2(T, W),
                        k = Math.atan2(T / l, (W - L) / h));
                    }
                    var z = 0
                      , K = Number.MAX_VALUE
                      , j = 0
                      , $ = 0
                      , q = 0
                      , Q = 0
                      , J = 0
                      , Z = 0;
                    Q < (x = (I = L + y) * I) && (q = 0,
                    Q = x,
                    J = I),
                    (x = (I = L - y) * I) < K && (z = Math.PI,
                    K = x,
                    j = I);
                    var tt = Math.acos(-y * L / (O - B));
                    (x = (I = y * Math.cos(tt) + L) * I + (T = v * Math.sin(tt)) * T) < K && (z = tt,
                    K = x,
                    j = I,
                    $ = T),
                    Q < x && (q = tt,
                    Q = x,
                    J = I,
                    Z = T),
                    k = G <= (K + Q) / 2 ? (R = F - Math.atan2($ * a, j),
                    z * a) : (R = F - Math.atan2(Z * a, J),
                    q * a);
                }
                var et = Math.atan2(f, p) * _
                  , it = t.resultTransform.skX;
                180 < (R = (R - et) * nt.radDeg + c - it) ? R -= 360 : R < -180 && (R += 360),
                t.resultTransform.x = r,
                t.resultTransform.y = o,
                t.resultTransform.skX = t.resultTransform.skY = it + R * s,
                it = e.resultTransform.skX,
                180 < (k = ((k + et) * nt.radDeg - 0) * _ + d - (it %= 360)) ? k -= 360 : k < -180 && (k += 360),
                e.resultTransform.x = p,
                e.resultTransform.y = f,
                e.resultTransform.skX = e.resultTransform.skY = e.resultTransform.skY + k * s,
                t.update();
            }
        }
        ,
        t._applyIk3 = function(t, e, i, n, a, s) {
            if (0 != s) {
                var r, o, h = e.resultMatrix.a * e.length, l = e.resultMatrix.b * e.length, u = h * h + l * l, c = Math.sqrt(u), d = t.resultMatrix.tx, _ = t.resultMatrix.ty, p = e.resultMatrix.tx, f = e.resultMatrix.ty, g = p - d, m = f - _, y = g * g + m * m, v = Math.sqrt(y), S = (g = i - t.resultMatrix.tx) * g + (m = n - t.resultMatrix.ty) * m, x = Math.sqrt(S);
                if (c + v <= x || x + c <= v || x + v <= c) {
                    var b = NaN;
                    p = d + (b = c + v <= x ? 1 : -1) * (i - d) * v / x,
                    f = _ + b * (n - _) * v / x;
                } else {
                    var w = (y - u + S) / (2 * S)
                      , M = Math.sqrt(y - w * w * S) / x
                      , I = d + g * w
                      , T = _ + m * w
                      , C = -m * M
                      , E = g * M;
                    f = 0 < a ? (p = I - C,
                    T - E) : (p = I + C,
                    T + E);
                }
                r = p,
                o = f,
                this.isDebug && (this._sp || (this._sp = new st(),
                at.stage.addChild(this._sp)),
                this._sp.graphics.clear(),
                this._sp.graphics.drawCircle(d, _, 15, "#ff00ff"),
                this._sp.graphics.drawCircle(i, n, 15, "#ffff00"),
                this._sp.graphics.drawCircle(r, o, 15, "#ff00ff"));
                var P, A;
                P = Math.atan2(o - t.resultMatrix.ty, r - t.resultMatrix.tx),
                t.setRotation(P),
                (A = nt._tempMatrix).identity(),
                A.rotate(P),
                A.scale(t.resultMatrix.getScaleX(), t.resultMatrix.getScaleY()),
                A.translate(t.resultMatrix.tx, t.resultMatrix.ty),
                A.copyTo(t.resultMatrix),
                t.updateChild();
                var L, D;
                L = Math.atan2(n - o, i - r),
                e.setRotation(L),
                (D = nt._tempMatrix).identity(),
                D.rotate(L),
                D.scale(e.resultMatrix.getScaleX(), e.resultMatrix.getScaleY()),
                D.translate(r, o),
                A.copyTo(e.resultMatrix),
                e.updateChild();
            }
        }
        ,
        i(nt, ["radDeg", function() {
            return this.radDeg = 180 / Math.PI;
        }
        , "degRad", function() {
            return this.degRad = Math.PI / 180;
        }
        , "_tempMatrix", function() {
            return this._tempMatrix = new At();
        }
        ]),
        nt;
    }()
      , Ft = function() {
        function t() {
            this.name = null,
            this.targetBoneName = null,
            this.bendDirection = 1,
            this.mix = 1,
            this.isSpine = !0,
            this.targetBoneIndex = -1,
            this.boneNames = [],
            this.boneIndexs = [];
        }
        return r(t, "laya.ani.bone.IkConstraintData"),
        t;
    }()
      , I = function() {
        function _() {}
        return r(_, "laya.ani.bone.MeshTools"),
        _.findEdge = function(t, e, i) {
            void 0 === e && (e = 0),
            void 0 === i && (i = !0);
            var n, a = 0, s = 0;
            for (n = t.length,
            s = -1,
            a = 0; a < n; a += 2)
                (s < 0 || i == t[s + e] < t[a + e]) && (s = a);
            return s;
        }
        ,
        _.findBestTriangle = function(t) {
            var e;
            e = _.findEdge(t, 1, !0);
            var i;
            i = _.findEdge(t, 1, !1);
            var n;
            n = _.findEdge(t, 0, !0);
            var a, s;
            return a = _.findEdge(t, 0, !1),
            (s = _._bestTriangle).length = 0,
            s.push(n, a),
            s.indexOf(e) < 0 && s.push(e),
            s.indexOf(i) < 0 && s.push(i),
            s;
        }
        ,
        _.solveMesh = function(t, e) {
            var i, n, a, s;
            (e = e || []).length = 0,
            i = t.uvs,
            n = t.vertices;
            var r, o, h;
            return r = (s = _.findBestTriangle(i))[0],
            o = s[1],
            h = s[2],
            _._absArr.length = 0,
            _.isNormalUV(t.texture.uv) && _.adptTexture(t),
            a = _.solvePoints(t.texture.uv, i[r], i[r + 1], i[o] - i[r], i[o + 1] - i[r + 1], i[h] - i[r], i[h + 1] - i[r + 1], _._absArr),
            _.transPoints(a, n[r], n[r + 1], n[o] - n[r], n[o + 1] - n[r + 1], n[h] - n[r], n[h + 1] - n[r + 1], e);
        }
        ,
        _.findWrapRect = function(t) {
            var e;
            e = _.findEdge(t, 1, !0);
            var i;
            i = _.findEdge(t, 1, !1);
            var n;
            n = _.findEdge(t, 0, !0);
            var a;
            a = _.findEdge(t, 0, !1);
            var s;
            s = t[n];
            var r;
            r = t[a];
            var o;
            o = t[e + 1];
            var h;
            return [r, h = t[i + 1], s - r, o - h];
        }
        ,
        _.adptTexture = function(t) {
            var e, i, n;
            e = _.findWrapRect(t.uvs);
            var a = (i = t.texture).width
              , s = i.height;
            n = Lt.create(i, e[0] * a, e[1] * s, e[2] * a, e[3] * s),
            t.texture = n;
        }
        ,
        _.isNormalUV = function(t) {
            return 0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5];
        }
        ,
        _.solvePoints = function(t, e, i, n, a, s, r, o) {
            o = o || [];
            var h, l, u = 0;
            for (h = t.length,
            u = 0; u < h; u += 2)
                l = _.solve2(t[u], t[u + 1], e, i, n, a, s, r),
                o.push(l[0], l[1]);
            return o;
        }
        ,
        _.transPoints = function(t, e, i, n, a, s, r, o) {
            o = o || [];
            var h, l = 0;
            for (h = t.length,
            l = 0; l < h; l += 2)
                _.transPoint(t[l], t[l + 1], e, i, n, a, s, r, o);
            return o;
        }
        ,
        _.transPoint = function(t, e, i, n, a, s, r, o, h) {
            var l, u;
            return l = i + a * t + r * e,
            u = n + s * t + o * e,
            (h = h || []).push(l, u),
            h;
        }
        ,
        _.solve2 = function(t, e, i, n, a, s, r, o, h, l) {
            void 0 === h && (h = !1),
            l = l || [];
            var u, c;
            if (0 == a)
                return _.solve2(t, e, i, n, r, o, a, s, !0, l);
            var d;
            return u = ((d = t - i) - (c = (e - n - d * s / a) / (o - r * s / a)) * r) / a,
            h ? l.push(c, u) : l.push(u, c),
            l;
        }
        ,
        _.solve = function(t, e, i, n) {
            return _.solve2(t.x, t.y, e.x, e.y, i.x, i.y, n.x, n.y);
        }
        ,
        _._bestTriangle = [],
        _._absArr = [],
        _;
    }()
      , T = function() {
        function D(t, e) {
            this.target = null,
            this.data = null,
            this.bones = null,
            this.position = NaN,
            this.spacing = NaN,
            this.rotateMix = NaN,
            this.translateMix = NaN,
            this._debugKey = !1,
            this._spaces = null,
            this._segments = [],
            this._curves = [],
            this.data = t,
            this.position = t.position,
            this.spacing = t.spacing,
            this.rotateMix = t.rotateMix,
            this.translateMix = t.translateMix,
            this.bones = [];
            for (var i = this.data.bones, n = 0, a = i.length; n < a; n++)
                this.bones.push(e[i[n]]);
        }
        r(D, "laya.ani.bone.PathConstraint");
        var t = D.prototype;
        return t.apply = function(t, e) {
            if (this.target) {
                var i = this.translateMix
                  , n = this.translateMix
                  , a = 0 < n
                  , s = this.data.spacingMode
                  , r = "length" == s
                  , o = this.data.rotateMode
                  , h = "tangent" == o
                  , l = "chainScale" == o
                  , u = []
                  , c = this.bones.length
                  , d = h ? c : c + 1
                  , _ = [];
                (this._spaces = _)[0] = this.position;
                var p = this.spacing;
                if (l || r)
                    for (var f = 0, g = d - 1; f < g; ) {
                        var m = this.bones[f]
                          , y = m.length
                          , v = y * m.resultMatrix.a
                          , S = y * m.resultMatrix.b;
                        y = Math.sqrt(v * v + S * S),
                        l && (u[f] = y),
                        _[++f] = r ? Math.max(0, y + p) : p;
                    }
                else
                    for (f = 1; f < d; f++)
                        _[f] = p;
                var x = this.computeWorldPositions(this.target, t, e, d, h, "percent" == this.data.positionMode, "percent" == s);
                if (this._debugKey) {
                    for (f = 0; f < x.length; f++)
                        e.drawCircle(x[f++], x[f++], 5, "#00ff00");
                    var b = [];
                    for (f = 0; f < x.length; f++)
                        b.push(x[f++], x[f++]);
                    e.drawLines(0, 0, b, "#ff0000");
                }
                var w = x[0]
                  , M = x[1]
                  , I = this.data.offsetRotation
                  , T = "chain" == o && 0 == I
                  , C = NaN;
                for (f = 0,
                C = 3; f < c; f++,
                C += 3) {
                    (m = this.bones[f]).resultMatrix.tx += (w - m.resultMatrix.tx) * i,
                    m.resultMatrix.ty += (M - m.resultMatrix.ty) * i;
                    var E = (v = x[C]) - w
                      , P = (S = x[C + 1]) - M;
                    if (l && 0 != (y = u[f])) {
                        var A = (Math.sqrt(E * E + P * P) / y - 1) * n + 1;
                        m.resultMatrix.a *= A,
                        m.resultMatrix.c *= A;
                    }
                    if (w = v,
                    M = S,
                    a) {
                        var L = m.resultMatrix.a
                          , D = m.resultMatrix.c
                          , R = m.resultMatrix.b
                          , k = m.resultMatrix.d
                          , N = NaN
                          , O = NaN
                          , B = NaN;
                        N = h ? x[C - 1] : 0 == _[f + 1] ? x[C + 2] : Math.atan2(P, E),
                        N -= Math.atan2(R, L) - I / 180 * Math.PI,
                        T && (O = Math.cos(N),
                        B = Math.sin(N),
                        w += ((y = m.length) * (O * L - B * R) - E) * n,
                        M += (y * (B * L + O * R) - P) * n),
                        N > Math.PI ? N -= 2 * Math.PI : N < -Math.PI && (N += 2 * Math.PI),
                        N *= n,
                        O = Math.cos(N),
                        B = Math.sin(N),
                        m.resultMatrix.a = O * L - B * R,
                        m.resultMatrix.c = O * D - B * k,
                        m.resultMatrix.b = B * L + O * R,
                        m.resultMatrix.d = B * D + O * k;
                    }
                }
            }
        }
        ,
        t.computeWorldVertices2 = function(t, e, i, n, a, s) {
            var r, o, h = t.currDisplayData.bones, l = t.currDisplayData.weights, u = t.currDisplayData.triangles, c = 0, d = 0, _ = 0, p = 0, f = 0, g = 0, m = 0, y = 0, v = 0, S = 0, x = 0;
            if (null != h) {
                for (c = 0; c < i; c += 2)
                    d += (p = h[d]) + 1,
                    _ += p;
                var b = e;
                for (f = s,
                g = 3 * _; f < n; f += 2) {
                    for (y = m = 0,
                    p = h[d++],
                    p += d; d < p; d++,
                    g += 3) {
                        r = b[h[d]].resultMatrix,
                        v = l[g],
                        S = l[g + 1];
                        var w = l[g + 2];
                        m += (v * r.a + S * r.c + r.tx) * w,
                        y += (v * r.b + S * r.d + r.ty) * w;
                    }
                    a[f] = m,
                    a[f + 1] = y;
                }
            } else {
                var M, I;
                if (u || (u = l),
                t.deformData && (u = t.deformData),
                M = t.parent,
                e)
                    for (x = e.length,
                    c = 0; c < x; c++)
                        if (e[c].name == M) {
                            o = e[c];
                            break;
                        }
                o && (I = o.resultMatrix),
                I || (I = D._tempMt);
                var T = I.tx
                  , C = I.ty
                  , E = I.a
                  , P = I.b
                  , A = I.c
                  , L = I.d;
                for (o && (L *= o.d),
                d = i,
                f = s; f < n; d += 2,
                f += 2)
                    v = u[d],
                    S = u[d + 1],
                    a[f] = v * E + S * P + T,
                    a[f + 1] = -(v * A + S * L + C);
            }
        }
        ,
        t.computeWorldPositions = function(t, e, i, n, a, s, r) {
            t.currDisplayData.bones,
            t.currDisplayData.weights,
            t.currDisplayData.triangles;
            var o = []
              , h = 0
              , l = t.currDisplayData.verLen
              , u = this.position
              , c = this._spaces
              , d = []
              , _ = []
              , p = l / 6
              , f = -1
              , g = NaN
              , m = 0
              , y = 0
              , v = NaN
              , S = NaN
              , x = NaN
              , b = NaN;
            if (p--,
            l -= 4,
            this.computeWorldVertices2(t, e, 2, l, o, 0),
            this._debugKey)
                for (h = 0; h < o.length; )
                    i.drawCircle(o[h++], o[h++], 10, "#ff0000");
            d = o,
            this._curves.length = p;
            var w = this._curves
              , M = d[g = 0]
              , I = d[1]
              , T = 0
              , C = 0
              , E = 0
              , P = 0
              , A = 0
              , L = 0
              , D = NaN
              , R = NaN
              , k = NaN
              , N = NaN
              , O = NaN
              , B = NaN
              , G = NaN
              , F = NaN
              , U = 0;
            for (h = 0,
            U = 2; h < p; h++,
            U += 6)
                T = d[U],
                C = d[U + 1],
                E = d[U + 2],
                P = d[U + 3],
                O = 2 * (D = .1875 * (M - 2 * T + E)) + (k = .09375 * (3 * (T - E) - M + (A = d[U + 4]))),
                B = 2 * (R = .1875 * (I - 2 * C + P)) + (N = .09375 * (3 * (C - P) - I + (L = d[U + 5]))),
                G = .75 * (T - M) + D + .16666667 * k,
                F = .75 * (C - I) + R + .16666667 * N,
                g += Math.sqrt(G * G + F * F),
                G += O,
                F += B,
                O += k,
                B += N,
                g += Math.sqrt(G * G + F * F),
                G += O,
                F += B,
                g += Math.sqrt(G * G + F * F),
                G += O + k,
                F += B + N,
                g += Math.sqrt(G * G + F * F),
                w[h] = g,
                M = A,
                I = L;
            if (s && (u *= g),
            r)
                for (h = 0; h < n; h++)
                    c[h] *= g;
            var H = this._segments
              , V = 0
              , Y = 0;
            for (Y = y = m = h = 0; h < n; h++,
            m += 3)
                if ((v = u += S = c[h]) < 0)
                    this.addBeforePosition(v, d, 0, _, m);
                else if (g < v)
                    this.addAfterPosition(v - g, d, l - 4, _, m);
                else {
                    for (; ; y++)
                        if (!((b = w[y]) < v)) {
                            0 == y ? v /= b : v = (v - (x = w[y - 1])) / (b - x);
                            break;
                        }
                    if (y != f) {
                        var X = 6 * (f = y);
                        for (M = d[X],
                        I = d[X + 1],
                        T = d[X + 2],
                        C = d[X + 3],
                        E = d[X + 4],
                        P = d[X + 5],
                        O = 2 * (D = .03 * (M - 2 * T + E)) + (k = .006 * (3 * (T - E) - M + (A = d[X + 6]))),
                        B = 2 * (R = .03 * (I - 2 * C + P)) + (N = .006 * (3 * (C - P) - I + (L = d[X + 7]))),
                        G = .3 * (T - M) + D + .16666667 * k,
                        F = .3 * (C - I) + R + .16666667 * N,
                        V = Math.sqrt(G * G + F * F),
                        H[0] = V,
                        X = 1; X < 8; X++)
                            G += O,
                            F += B,
                            O += k,
                            B += N,
                            V += Math.sqrt(G * G + F * F),
                            H[X] = V;
                        G += O,
                        F += B,
                        V += Math.sqrt(G * G + F * F),
                        H[8] = V,
                        G += O + k,
                        F += B + N,
                        V += Math.sqrt(G * G + F * F),
                        H[9] = V,
                        Y = 0;
                    }
                    for (v *= V; ; Y++)
                        if (!((b = H[Y]) < v)) {
                            0 == Y ? v /= b : v = Y + (v - (x = H[Y - 1])) / (b - x);
                            break;
                        }
                    this.addCurvePosition(.1 * v, M, I, T, C, E, P, A, L, _, m, a || 0 < h && 0 == S);
                }
            return _;
        }
        ,
        t.addBeforePosition = function(t, e, i, n, a) {
            var s = e[i]
              , r = e[i + 1]
              , o = e[i + 2] - s
              , h = e[i + 3] - r
              , l = Math.atan2(h, o);
            n[a] = s + t * Math.cos(l),
            n[a + 1] = r + t * Math.sin(l),
            n[a + 2] = l;
        }
        ,
        t.addAfterPosition = function(t, e, i, n, a) {
            var s = e[i + 2]
              , r = e[i + 3]
              , o = s - e[i]
              , h = r - e[i + 1]
              , l = Math.atan2(h, o);
            n[a] = s + t * Math.cos(l),
            n[a + 1] = r + t * Math.sin(l),
            n[a + 2] = l;
        }
        ,
        t.addCurvePosition = function(t, e, i, n, a, s, r, o, h, l, u, c) {
            0 == t && (t = 1e-4);
            var d = t * t
              , _ = d * t
              , p = 1 - t
              , f = p * p
              , g = f * p
              , m = p * t
              , y = 3 * m
              , v = p * y
              , S = y * t
              , x = e * g + n * v + s * S + o * _
              , b = i * g + a * v + r * S + h * _;
            l[u] = x,
            l[u + 1] = b,
            l[u + 2] = c ? Math.atan2(b - (i * f + a * m * 2 + r * d), x - (e * f + n * m * 2 + s * d)) : 0;
        }
        ,
        D.NONE = -1,
        D.BEFORE = -2,
        D.AFTER = -3,
        i(D, ["_tempMt", function() {
            return this._tempMt = new At();
        }
        ]),
        D;
    }()
      , Ut = function() {
        function t() {
            this.name = null,
            this.target = null,
            this.positionMode = null,
            this.spacingMode = null,
            this.rotateMode = null,
            this.offsetRotation = NaN,
            this.position = NaN,
            this.spacing = NaN,
            this.rotateMix = NaN,
            this.translateMix = NaN,
            this.bones = [];
        }
        return r(t, "laya.ani.bone.PathConstraintData"),
        t;
    }()
      , Ht = function() {
        function t() {
            this.name = null,
            this.slotArr = [];
        }
        return r(t, "laya.ani.bone.SkinData"),
        t;
    }()
      , Vt = function() {
        function t() {
            this.name = null,
            this.attachmentName = null,
            this.type = 0,
            this.transform = null,
            this.width = NaN,
            this.height = NaN,
            this.texture = null,
            this.bones = null,
            this.uvs = null,
            this.weights = null,
            this.triangles = null,
            this.vertices = null,
            this.lengths = null,
            this.verLen = 0;
        }
        r(t, "laya.ani.bone.SkinSlotDisplayData");
        var e = t.prototype;
        return e.createTexture = function(t) {
            return this.texture || (this.texture = new Lt(t.bitmap,this.uvs),
            this.uvs[0] > this.uvs[4] && this.uvs[1] > this.uvs[5] ? (this.texture.width = t.height,
            this.texture.height = t.width,
            this.texture.offsetX = -t.offsetX,
            this.texture.offsetY = -t.offsetY,
            this.texture.sourceWidth = t.sourceHeight,
            this.texture.sourceHeight = t.sourceWidth) : (this.texture.width = t.width,
            this.texture.height = t.height,
            this.texture.offsetX = -t.offsetX,
            this.texture.offsetY = -t.offsetY,
            this.texture.sourceWidth = t.sourceWidth,
            this.texture.sourceHeight = t.sourceHeight),
            g.isWebGL || this.uvs[1] > this.uvs[5] && (this.texture.offsetY = this.texture.sourceHeight - this.texture.height - this.texture.offsetY)),
            this.texture;
        }
        ,
        e.destory = function() {
            this.texture && this.texture.destroy();
        }
        ,
        t;
    }()
      , Yt = function() {
        function t() {
            this.name = null,
            this.displayArr = [];
        }
        return r(t, "laya.ani.bone.SlotData"),
        t.prototype.getDisplayByName = function(t) {
            for (var e = 0, i = this.displayArr.length; e < i; e++)
                if (this.displayArr[e].attachmentName == t)
                    return e;
            return -1;
        }
        ,
        t;
    }()
      , C = function() {
        function t(t, e) {
            this._data = null,
            this._bones = null,
            this.target = null,
            this.rotateMix = NaN,
            this.translateMix = NaN,
            this.scaleMix = NaN,
            this.shearMix = NaN,
            this._temp = f(2, 0),
            this._data = t,
            null == this._bones && (this._bones = []),
            this.target = e[t.targetIndex];
            var i, n = 0;
            for (n = 0,
            i = t.boneIndexs.length; n < i; n++)
                this._bones.push(e[t.boneIndexs[n]]);
            this.rotateMix = t.rotateMix,
            this.translateMix = t.translateMix,
            this.scaleMix = t.scaleMix,
            this.shearMix = t.shearMix;
        }
        return r(t, "laya.ani.bone.TfConstraint"),
        t.prototype.apply = function() {
            for (var t, e = this.target.resultMatrix.a, i = this.target.resultMatrix.b, n = this.target.resultMatrix.c, a = this.target.resultMatrix.d, s = 0, r = this._bones.length; s < r; s++) {
                if (t = this._bones[s],
                0 < this.rotateMix) {
                    var o = t.resultMatrix.a
                      , h = t.resultMatrix.b
                      , l = t.resultMatrix.c
                      , u = t.resultMatrix.d
                      , c = Math.atan2(n, e) - Math.atan2(l, o) + this._data.offsetRotation * Math.PI / 180;
                    c > Math.PI ? c -= 2 * Math.PI : c < -Math.PI && (c += 2 * Math.PI),
                    c *= this.rotateMix;
                    var d = Math.cos(c)
                      , _ = Math.sin(c);
                    t.resultMatrix.a = d * o - _ * l,
                    t.resultMatrix.b = d * h - _ * u,
                    t.resultMatrix.c = _ * o + d * l,
                    t.resultMatrix.d = _ * h + d * u;
                }
                if (this.translateMix && (this._temp[0] = this._data.offsetX,
                this._temp[1] = this._data.offsetY,
                this.target.localToWorld(this._temp),
                t.resultMatrix.tx += (this._temp[0] - t.resultMatrix.tx) * this.translateMix,
                t.resultMatrix.ty += (this._temp[1] - t.resultMatrix.ty) * this.translateMix,
                t.updateChild()),
                0 < this.scaleMix) {
                    var p = Math.sqrt(t.resultMatrix.a * t.resultMatrix.a + t.resultMatrix.c * t.resultMatrix.c)
                      , f = Math.sqrt(e * e + n * n)
                      , g = 1e-5 < p ? (p + (f - p + this._data.offsetScaleX) * this.scaleMix) / p : 0;
                    t.resultMatrix.a *= g,
                    t.resultMatrix.c *= g,
                    p = Math.sqrt(t.resultMatrix.b * t.resultMatrix.b + t.resultMatrix.d * t.resultMatrix.d),
                    f = Math.sqrt(i * i + a * a),
                    g = 1e-5 < p ? (p + (f - p + this._data.offsetScaleY) * this.scaleMix) / p : 0,
                    t.resultMatrix.b *= g,
                    t.resultMatrix.d *= g;
                }
                if (0 < this.shearMix) {
                    h = t.resultMatrix.b,
                    u = t.resultMatrix.d;
                    var m = Math.atan2(u, h);
                    (c = Math.atan2(a, i) - Math.atan2(n, e) - (m - Math.atan2(t.resultMatrix.c, t.resultMatrix.a))) > Math.PI ? c -= 2 * Math.PI : c < -Math.PI && (c += 2 * Math.PI),
                    c = m + (c + this._data.offsetShearY * Math.PI / 180) * this.shearMix,
                    g = Math.sqrt(h * h + u * u),
                    t.resultMatrix.b = Math.cos(c) * g,
                    t.resultMatrix.d = Math.sin(c) * g;
                }
            }
        }
        ,
        t;
    }()
      , Xt = function() {
        function t() {
            this.name = null,
            this.targetIndex = 0,
            this.rotateMix = NaN,
            this.translateMix = NaN,
            this.scaleMix = NaN,
            this.shearMix = NaN,
            this.offsetRotation = NaN,
            this.offsetX = NaN,
            this.offsetY = NaN,
            this.offsetScaleX = NaN,
            this.offsetScaleY = NaN,
            this.offsetShearY = NaN,
            this.boneIndexs = [];
        }
        return r(t, "laya.ani.bone.TfConstraintData"),
        t;
    }()
      , Wt = function() {
        function t() {
            this.skX = 0,
            this.skY = 0,
            this.scX = 1,
            this.scY = 1,
            this.x = 0,
            this.y = 0,
            this.skewX = 0,
            this.skewY = 0,
            this.mMatrix = null;
        }
        r(t, "laya.ani.bone.Transform");
        var e = t.prototype;
        return e.initData = function(t) {
            null != t.x && (this.x = t.x),
            null != t.y && (this.y = t.y),
            null != t.skX && (this.skX = t.skX),
            null != t.skY && (this.skY = t.skY),
            null != t.scX && (this.scX = t.scX),
            null != t.scY && (this.scY = t.scY);
        }
        ,
        e.getMatrix = function() {
            var t;
            return (t = this.mMatrix ? this.mMatrix : this.mMatrix = new At()).identity(),
            t.scale(this.scX, this.scY),
            (this.skewX || this.skewY) && this.skew(t, this.skewX * Math.PI / 180, this.skewY * Math.PI / 180),
            t.rotate(this.skX * Math.PI / 180),
            t.translate(this.x, this.y),
            t;
        }
        ,
        e.skew = function(t, e, i) {
            var n = Math.sin(i)
              , a = Math.cos(i)
              , s = Math.sin(e)
              , r = Math.cos(e);
            return t.setTo(t.a * r - t.b * n, t.a * s + t.b * a, t.c * r - t.d * n, t.c * s + t.d * a, t.tx * r - t.ty * n, t.tx * s + t.ty * a),
            t;
        }
        ,
        t;
    }()
      , E = function() {
        function t() {}
        return r(t, "laya.ani.bone.UVTools"),
        t.getRelativeUV = function(t, e, i) {
            var n = t[0]
              , a = t[2] - t[0]
              , s = t[1]
              , r = t[5] - t[1];
            i || (i = []),
            i.length = e.length;
            var o, h = 0;
            o = i.length;
            var l = 1 / a
              , u = 1 / r;
            for (h = 0; h < o; h += 2)
                i[h] = (e[h] - n) * l,
                i[h + 1] = (e[h + 1] - s) * u;
            return i;
        }
        ,
        t.getAbsoluteUV = function(t, e, i) {
            if (0 == t[0] && 0 == t[1] && 1 == t[4] && 1 == t[5])
                return i ? (v.copyArray(i, e),
                i) : e;
            var n = t[0]
              , a = t[2] - t[0]
              , s = t[1]
              , r = t[5] - t[1];
            i || (i = []),
            i.length = e.length;
            var o, h = 0;
            for (o = i.length,
            h = 0; h < o; h += 2)
                i[h] = e[h] * a + n,
                i[h + 1] = e[h + 1] * r + s;
            return i;
        }
        ,
        t;
    }()
      , D = function() {
        function t() {
            this.startTime = NaN,
            this.duration = NaN,
            this.interpolationData = null,
            this.data = null,
            this.nextData = null;
        }
        return r(t, "laya.ani.KeyFramesContent"),
        t;
    }()
      , P = function() {
        function u() {}
        return r(u, "laya.ani.math.BezierLerp"),
        u.getBezierRate = function(t, e, i, n, a) {
            var s = u._getBezierParamKey(e, i, n, a)
              , r = 100 * s + t;
            if (u._bezierResultCache[r])
                return u._bezierResultCache[r];
            var o, h = u._getBezierPoints(e, i, n, a, s), l = 0;
            for (o = h.length,
            l = 0; l < o; l += 2)
                if (t <= h[l])
                    return u._bezierResultCache[r] = h[l + 1],
                    h[l + 1];
            return u._bezierResultCache[r] = 1;
        }
        ,
        u._getBezierParamKey = function(t, e, i, n) {
            return 100 * (100 * (100 * (100 * t + e) + i) + n);
        }
        ,
        u._getBezierPoints = function(t, e, i, n, a) {
            return u._bezierPointsCache[a] ? u._bezierPointsCache[a] : (s = [0, 0, t, e, i, n, 1, 1],
            r = new o().getBezierPoints(s, 100, 3),
            u._bezierPointsCache[a] = r);
            var s, r;
        }
        ,
        u._bezierResultCache = {},
        u._bezierPointsCache = {},
        u;
    }()
      , R = function(t) {
        function e() {
            this._destroyed = !1,
            this._templet = null,
            this._currentTime = NaN,
            this._currentFrameTime = NaN,
            this._playStart = NaN,
            this._playEnd = NaN,
            this._playDuration = NaN,
            this._overallDuration = NaN,
            this._stopWhenCircleFinish = !1,
            this._elapsedPlaybackTime = NaN,
            this._startUpdateLoopCount = NaN,
            this._currentAnimationClipIndex = 0,
            this._currentKeyframeIndex = 0,
            this._paused = !1,
            this._cacheFrameRate = 0,
            this._cacheFrameRateInterval = NaN,
            this._cachePlayRate = NaN,
            this._fullFrames = null,
            this.isCache = !0,
            this.playbackRate = 1,
            this.returnToZeroStopped = !1,
            e.__super.call(this),
            this._destroyed = !1,
            this._currentAnimationClipIndex = -1,
            this._currentKeyframeIndex = -1,
            this._currentTime = 0,
            this._overallDuration = Number.MAX_VALUE,
            this._stopWhenCircleFinish = !1,
            this._elapsedPlaybackTime = 0,
            this._startUpdateLoopCount = -1,
            this._cachePlayRate = 1,
            this.cacheFrameRate = 60,
            this.returnToZeroStopped = !1;
        }
        r(e, "laya.ani.AnimationPlayer", a);
        var i = e.prototype;
        return at.imps(i, {
            "laya.resource.IDestroy": !0
        }),
        i._onTempletLoadedComputeFullKeyframeIndices = function(t, e, i) {
            this._templet === i && this._cachePlayRate === t && this._cacheFrameRate === e && this._computeFullKeyframeIndices();
        }
        ,
        i._computeFullKeyframeIndices = function() {
            for (var t = this._fullFrames = [], e = this._templet, i = this._cacheFrameRateInterval * this._cachePlayRate, n = 0, a = e.getAnimationCount(); n < a; n++) {
                for (var s = [], r = 0, o = e.getAnimation(n).nodes.length; r < o; r++) {
                    for (var h = e.getAnimation(n).nodes[r], l = Math.floor(h.playTime / i + .01), u = new Uint16Array(l + 1), c = -1, d = 0, _ = h.keyFrame.length; d < _; d++) {
                        var p = h.keyFrame[d]
                          , f = p.startTime
                          , g = f + p.duration + i;
                        do {
                            for (var m = Math.floor(f / i + .5), y = c + 1; y < m; y++)
                                u[y] = d;
                            u[c = m] = d,
                            f += i;
                        } while (f <= g);
                    }
                    s.push(u);
                }
                t.push(s);
            }
        }
        ,
        i._onAnimationTempletLoaded = function() {
            this.destroyed || this._calculatePlayDuration();
        }
        ,
        i._calculatePlayDuration = function() {
            if (0 !== this.state) {
                var t = this._templet.getAniDuration(this._currentAnimationClipIndex);
                0 === this._playEnd && (this._playEnd = t),
                this._playEnd > t && (this._playEnd = t),
                this._playDuration = this._playEnd - this._playStart;
            }
        }
        ,
        i._setPlayParams = function(t, e) {
            this._currentTime = t,
            this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e + .01), 0),
            this._currentFrameTime = this._currentKeyframeIndex * e;
        }
        ,
        i._setPlayParamsWhenStop = function(t, e) {
            this._currentTime = t,
            this._currentKeyframeIndex = Math.max(Math.floor(t / e + .01), 0),
            this._currentFrameTime = this._currentKeyframeIndex * e,
            this._currentAnimationClipIndex = -1;
        }
        ,
        i._update = function(t) {
            if (-1 !== this._currentAnimationClipIndex && !this._paused && this._templet && this._templet.loaded) {
                var e = this._cacheFrameRateInterval * this._cachePlayRate
                  , i = 0;
                this._startUpdateLoopCount !== y.loopCount && (i = t * this.playbackRate,
                this._elapsedPlaybackTime += i);
                var n = this.playDuration;
                if (0 !== this._overallDuration && this._elapsedPlaybackTime >= this._overallDuration || 0 === this._overallDuration && this._elapsedPlaybackTime >= n)
                    return this._setPlayParamsWhenStop(n, e),
                    void this.event("stopped");
                if (i += this._currentTime,
                0 < n)
                    if (n <= i)
                        do {
                            if (i -= n,
                            this._stopWhenCircleFinish)
                                return this._setPlayParamsWhenStop(n, e),
                                this._stopWhenCircleFinish = !1,
                                void this.event("stopped");
                            i < n && (this._setPlayParams(i, e),
                            this.event("complete"));
                        } while (n <= i);
                    else
                        this._setPlayParams(i, e);
                else {
                    if (this._stopWhenCircleFinish)
                        return this._setPlayParamsWhenStop(n, e),
                        this._stopWhenCircleFinish = !1,
                        void this.event("stopped");
                    this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0,
                    this.event("complete");
                }
            }
        }
        ,
        i._destroy = function() {
            this.offAll(),
            this._templet = null,
            this._fullFrames = null,
            this._destroyed = !0;
        }
        ,
        i.play = function(t, e, i, n, a) {
            if (void 0 === t && (t = 0),
            void 0 === e && (e = 1),
            void 0 === i && (i = 2147483647),
            void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            !this._templet)
                throw new Error("AnimationPlayer:templet must not be null,maybe you need to set url.");
            if (i < 0 || n < 0 || a < 0)
                throw new Error("AnimationPlayer:overallDuration,playStart and playEnd must large than zero.");
            if (0 !== a && a < n)
                throw new Error("AnimationPlayer:start must less than end.");
            this._currentTime = 0,
            this._currentFrameTime = 0,
            this._elapsedPlaybackTime = 0,
            this.playbackRate = e,
            this._overallDuration = i,
            this._playStart = n,
            this._playEnd = a,
            this._paused = !1,
            this._currentAnimationClipIndex = t,
            this._currentKeyframeIndex = 0,
            this._startUpdateLoopCount = y.loopCount,
            this.event("played"),
            this._templet.loaded ? this._calculatePlayDuration() : this._templet.once("loaded", this, this._onAnimationTempletLoaded),
            this._update(0);
        }
        ,
        i.playByFrame = function(t, e, i, n, a, s) {
            void 0 === t && (t = 0),
            void 0 === e && (e = 1),
            void 0 === i && (i = 2147483647),
            void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            void 0 === s && (s = 30);
            var r = 1e3 / s;
            this.play(t, e, i, n * r, a * r);
        }
        ,
        i.stop = function(t) {
            void 0 === t && (t = !0),
            t ? (this._currentTime = this._currentFrameTime = this._currentKeyframeIndex = 0,
            this._currentAnimationClipIndex = -1,
            this.event("stopped")) : this._stopWhenCircleFinish = !0;
        }
        ,
        n(0, i, "playEnd", function() {
            return this._playEnd;
        }),
        n(0, i, "templet", function() {
            return this._templet;
        }, function(t) {
            0 === !this.state && this.stop(!0),
            this._templet !== t && ((this._templet = t).loaded ? this._computeFullKeyframeIndices() : t.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, this._cacheFrameRate]));
        }),
        n(0, i, "playStart", function() {
            return this._playStart;
        }),
        n(0, i, "playDuration", function() {
            return this._playDuration;
        }),
        n(0, i, "state", function() {
            return -1 === this._currentAnimationClipIndex ? 0 : this._paused ? 1 : 2;
        }),
        n(0, i, "currentKeyframeIndex", function() {
            return this._currentKeyframeIndex;
        }),
        n(0, i, "overallDuration", function() {
            return this._overallDuration;
        }),
        n(0, i, "currentFrameTime", function() {
            return this._currentFrameTime;
        }),
        n(0, i, "currentAnimationClipIndex", function() {
            return this._currentAnimationClipIndex;
        }),
        n(0, i, "currentPlayTime", function() {
            return this._currentTime + this._playStart;
        }),
        n(0, i, "cachePlayRate", function() {
            return this._cachePlayRate;
        }, function(t) {
            this._cachePlayRate !== t && (this._cachePlayRate = t,
            this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [t, this._cacheFrameRate])));
        }),
        n(0, i, "cacheFrameRate", function() {
            return this._cacheFrameRate;
        }, function(t) {
            this._cacheFrameRate !== t && (this._cacheFrameRate = t,
            this._cacheFrameRateInterval = 1e3 / this._cacheFrameRate,
            this._templet && (this._templet.loaded ? this._computeFullKeyframeIndices() : this._templet.once("loaded", this, this._onTempletLoadedComputeFullKeyframeIndices, [this._cachePlayRate, t])));
        }),
        n(0, i, "currentTime", null, function(t) {
            if (-1 !== this._currentAnimationClipIndex && this._templet && this._templet.loaded) {
                if (t < this._playStart || t > this._playEnd)
                    throw new Error("AnimationPlayer:value must large than playStartTime,small than playEndTime.");
                this._startUpdateLoopCount = y.loopCount;
                var e = this._cacheFrameRateInterval * this._cachePlayRate;
                this._currentTime = t,
                this._currentKeyframeIndex = Math.max(Math.floor(this.currentPlayTime / e), 0),
                this._currentFrameTime = this._currentKeyframeIndex * e;
            }
        }),
        n(0, i, "paused", function() {
            return this._paused;
        }, function(t) {
            (this._paused = t) && this.event("paused");
        }),
        n(0, i, "cacheFrameRateInterval", function() {
            return this._cacheFrameRateInterval;
        }),
        n(0, i, "destroyed", function() {
            return this._destroyed;
        }),
        e;
    }()
      , k = function(t) {
        function e() {
            e.__super.call(this),
            g.isConchNode && (this.drawSkin = function(t) {
                t.transform || (t.transform = At.EMPTY),
                this._addCmd([t]),
                this.setSkinMesh && this.setSkinMesh(t._ps, t.mVBData, t.mEleNum, 0, t.mTexture, t.transform);
            }
            );
        }
        return r(e, "laya.ani.GraphicsAni", s),
        e.prototype.drawSkin = function(t) {
            var e = [t];
            this._saveToCmd(g._context._drawSkin, e);
        }
        ,
        e.create = function() {
            return e._caches.pop() || new e();
        }
        ,
        e.recycle = function(t) {
            t.clear(),
            e._caches.push(t);
        }
        ,
        e._caches = [],
        e;
    }()
      , N = function(t) {
        function n() {
            n.__super.call(this),
            this.mesh = new w();
        }
        r(n, "laya.ani.bone.canvasmesh.SkinMeshCanvas", b);
        var e = n.prototype;
        return e.init2 = function(t, e, i, n, a) {
            var s;
            this.transform && (this.transform = null),
            i ? s = i : (s = []).push(0, 1, 3, 3, 1, 2),
            this.mesh.texture = t,
            this.mesh.indexes = s,
            this.mesh.vertices = n,
            this.mesh.uvs = a;
        }
        ,
        e.render = function(t, e, i) {
            this.mesh.texture && (this.transform ? (this.transform.translate(e, i),
            this.renderToContext(t),
            this.transform.translate(-e, -i)) : (this.transform = n._tempMatrix,
            this.transform.identity(),
            this.transform.translate(e, i),
            this.renderToContext(t),
            this.transform.translate(-e, -i),
            this.transform = null));
        }
        ,
        i(n, ["_tempMatrix", function() {
            return this._tempMatrix = new At();
        }
        ]),
        n;
    }()
      , O = function(t) {
        function y() {
            this._aniMap = {},
            this.unfixedLastAniIndex = -1,
            y.__super.call(this),
            this._anis = new Array();
        }
        r(y, "laya.ani.AnimationTemplet", p);
        var e = y.prototype;
        return e.parse = function(t) {
            var e = new Pt(t);
            this._aniVersion = e.readUTFString(),
            S.parse(this, e);
        }
        ,
        e._calculateKeyFrame = function(t, e, i) {
            var n = t.keyFrame;
            n[e] = n[0];
            for (var a = 0; a < e; a++) {
                var s = n[a];
                s.nextData = 0 === s.duration ? s.data : n[a + 1].data;
            }
            n.length--;
        }
        ,
        e.onAsynLoaded = function(t, e, i) {
            var n = new Pt(e);
            switch (this._aniVersion = n.readUTFString(),
            this._aniVersion) {
            case "LAYAANIMATION:02":
                x.parse(this, n);
                break;

            default:
                S.parse(this, n);
            }
            this._endLoaded();
        }
        ,
        e.disposeResource = function() {
            this._aniVersion = null,
            this._anis = null,
            this._aniMap = null,
            this._publicExtData = null,
            this.unfixedCurrentFrameIndexes = null,
            this.unfixedCurrentTimes = null,
            this.unfixedKeyframes = null,
            this._aniClassName = null,
            this._animationDatasCache = null;
        }
        ,
        e.getAnimationCount = function() {
            return this._anis.length;
        }
        ,
        e.getAnimation = function(t) {
            return this._anis[t];
        }
        ,
        e.getAniDuration = function(t) {
            return this._anis[t].playTime;
        }
        ,
        e.getNodes = function(t) {
            return this._anis[t].nodes;
        }
        ,
        e.getNodeIndexWithName = function(t, e) {
            return this._anis[t].bone3DMap[e];
        }
        ,
        e.getNodeCount = function(t) {
            return this._anis[t].nodes.length;
        }
        ,
        e.getTotalkeyframesLength = function(t) {
            return this._anis[t].totalKeyframeDatasLength;
        }
        ,
        e.getPublicExtData = function() {
            return this._publicExtData;
        }
        ,
        e.getAnimationDataWithCache = function(t, e, i, n) {
            var a = e[i];
            if (a) {
                var s = a[t];
                return s ? s[n] : null;
            }
            return null;
        }
        ,
        e.setAnimationDataWithCache = function(t, e, i, n, a) {
            var s = e[i] || (e[i] = {});
            (s[t] || (s[t] = []))[n] = a;
        }
        ,
        e.getOriginalData = function(t, e, i, n, a) {
            for (var s = this._anis[t].nodes, r = 0, o = 0, h = s.length, l = 0; o < h; o++) {
                var u, c = s[o];
                u = c.keyFrame[i[o][n]],
                c.dataOffset = l;
                var d = a - u.startTime
                  , _ = c.lerpType;
                if (_)
                    switch (_) {
                    case 0:
                    case 1:
                        for (r = 0; r < c.keyframeWidth; )
                            r += c.interpolationMethod[r](c, r, e, l + r, u.data, d, null, u.duration, u.nextData);
                        break;

                    case 2:
                        var p = u.interpolationData
                          , f = p.length
                          , g = 0;
                        for (r = 0; r < f; ) {
                            var m = p[r];
                            switch (m) {
                            case 6:
                            case 7:
                                r += y.interpolation[m](c, g, e, l + g, u.data, d, null, u.duration, u.nextData, p, r + 1);
                                break;

                            default:
                                r += y.interpolation[m](c, g, e, l + g, u.data, d, null, u.duration, u.nextData);
                            }
                            g++;
                        }
                    }
                else
                    for (r = 0; r < c.keyframeWidth; )
                        r += c.interpolationMethod[r](c, r, e, l + r, u.data, d, null, u.duration, u.nextData);
                l += c.keyframeWidth;
            }
        }
        ,
        e.getNodesCurrentFrameIndex = function(t, e) {
            var i = this._anis[t].nodes;
            t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(i.length),
            this.unfixedCurrentTimes = new Float32Array(i.length),
            this.unfixedLastAniIndex = t);
            for (var n = 0, a = i.length; n < a; n++) {
                var s = i[n];
                for (e < this.unfixedCurrentTimes[n] && (this.unfixedCurrentFrameIndexes[n] = 0),
                this.unfixedCurrentTimes[n] = e; this.unfixedCurrentFrameIndexes[n] < s.keyFrame.length && !(s.keyFrame[this.unfixedCurrentFrameIndexes[n]].startTime > this.unfixedCurrentTimes[n]); )
                    this.unfixedCurrentFrameIndexes[n]++;
                this.unfixedCurrentFrameIndexes[n]--;
            }
            return this.unfixedCurrentFrameIndexes;
        }
        ,
        e.getOriginalDataUnfixedRate = function(t, e, i) {
            var n = this._anis[t].nodes;
            t !== this.unfixedLastAniIndex && (this.unfixedCurrentFrameIndexes = new Uint32Array(n.length),
            this.unfixedCurrentTimes = new Float32Array(n.length),
            this.unfixedKeyframes = f(n.length),
            this.unfixedLastAniIndex = t);
            for (var a = 0, s = 0, r = n.length, o = 0; s < r; s++) {
                var h = n[s];
                for (i < this.unfixedCurrentTimes[s] && (this.unfixedCurrentFrameIndexes[s] = 0),
                this.unfixedCurrentTimes[s] = i; this.unfixedCurrentFrameIndexes[s] < h.keyFrame.length && !(h.keyFrame[this.unfixedCurrentFrameIndexes[s]].startTime > this.unfixedCurrentTimes[s]); )
                    this.unfixedKeyframes[s] = h.keyFrame[this.unfixedCurrentFrameIndexes[s]],
                    this.unfixedCurrentFrameIndexes[s]++;
                var l = this.unfixedKeyframes[s];
                h.dataOffset = o;
                var u = i - l.startTime;
                if (h.lerpType)
                    switch (h.lerpType) {
                    case 0:
                    case 1:
                        for (a = 0; a < h.keyframeWidth; )
                            a += h.interpolationMethod[a](h, a, e, o + a, l.data, u, null, l.duration, l.nextData);
                        break;

                    case 2:
                        var c = l.interpolationData
                          , d = c.length
                          , _ = 0;
                        for (a = 0; a < d; ) {
                            var p = c[a];
                            switch (p) {
                            case 6:
                            case 7:
                                a += y.interpolation[p](h, _, e, o + _, l.data, u, null, l.duration, l.nextData, c, a + 1);
                                break;

                            default:
                                a += y.interpolation[p](h, _, e, o + _, l.data, u, null, l.duration, l.nextData);
                            }
                            _++;
                        }
                    }
                else
                    for (a = 0; a < h.keyframeWidth; )
                        a += h.interpolationMethod[a](h, a, e, o + a, l.data, u, null, l.duration, l.nextData);
                o += h.keyframeWidth;
            }
        }
        ,
        y._LinearInterpolation_0 = function(t, e, i, n, a, s, r, o, h, l) {
            var u = 0 === o ? 0 : s / o;
            return i[n] = (1 - u) * a[e] + u * h[e],
            1;
        }
        ,
        y._QuaternionInterpolation_1 = function(t, e, i, n, a, s, r, o, h, l) {
            var u = 0 === o ? 0 : s / o;
            return d.slerpQuaternionArray(a, e, h, e, u, i, n),
            4;
        }
        ,
        y._AngleInterpolation_2 = function(t, e, i, n, a, s, r, o, h, l) {
            return 0;
        }
        ,
        y._RadiansInterpolation_3 = function(t, e, i, n, a, s, r, o, h, l) {
            return 0;
        }
        ,
        y._Matrix4x4Interpolation_4 = function(t, e, i, n, a, s, r, o, h, l) {
            for (var u = 0; u < 16; u++,
            e++)
                i[n + u] = a[e] + s * r[e];
            return 16;
        }
        ,
        y._NoInterpolation_5 = function(t, e, i, n, a, s, r, o, h, l) {
            return i[n] = a[e],
            1;
        }
        ,
        y._BezierInterpolation_6 = function(t, e, i, n, a, s, r, o, h, l, u) {
            return void 0 === u && (u = 0),
            i[n] = a[e] + (h[e] - a[e]) * P.getBezierRate(s / o, l[u], l[u + 1], l[u + 2], l[u + 3]),
            5;
        }
        ,
        y._BezierInterpolation_7 = function(t, e, i, n, a, s, r, o, h, l, u) {
            return void 0 === u && (u = 0),
            i[n] = l[u + 4] + l[u + 5] * P.getBezierRate((.001 * s + l[u + 6]) / l[u + 7], l[u], l[u + 1], l[u + 2], l[u + 3]),
            9;
        }
        ,
        y.load = function(t) {
            return at.loader.create(t, null, null, y);
        }
        ,
        y.interpolation = [y._LinearInterpolation_0, y._QuaternionInterpolation_1, y._AngleInterpolation_2, y._RadiansInterpolation_3, y._Matrix4x4Interpolation_4, y._NoInterpolation_5, y._BezierInterpolation_6, y._BezierInterpolation_7],
        y;
    }()
      , B = (function(t) {
        function n() {
            this.isCached = !1,
            this.canvas = null,
            this.tex = null,
            this.rec = null,
            n.__super.call(this);
        }
        r(n, "laya.ani.bone.canvasmesh.CacheAbleSkinMesh", N);
        var e = n.prototype;
        e.getCanvasPic = function() {
            var t, e = new h("2D"), i = e.getContext("2d");
            return this.rec = this.mesh.getBounds(),
            e.size(this.rec.width, this.rec.height),
            t = this.transform,
            this.transform = n.tempMt,
            this.transform.identity(),
            this.transform.translate(-this.rec.x, -this.rec.y),
            this.renderToContext(i),
            this.transform.translate(+this.rec.x, +this.rec.y),
            this.transform = t,
            new Lt(e);
        }
        ,
        e.render = function(t, e, i) {
            this.mesh.texture && (this.isCached || (this.isCached = !0,
            this.tex = this.getCanvasPic()),
            this.transform ? (this.transform.translate(e, i),
            this._renderTextureToContext(t),
            this.transform.translate(-e, -i)) : (this.transform = N._tempMatrix,
            this.transform.identity(),
            this.transform.translate(e, i),
            this._renderTextureToContext(t),
            this.transform.translate(-e, -i),
            this.transform = null));
        }
        ,
        e._renderTextureToContext = function(t) {
            var e;
            if (this.context = t.ctx || t,
            t.save(),
            e = this.tex,
            this.transform) {
                var i = this.transform;
                t.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
            }
            this.rec = this.mesh.getBounds(),
            t.translate(this.rec.x, this.rec.y),
            t.drawTexture(e, 0, 0, e.width, e.height, 0, 0),
            t.restore();
        }
        ,
        i(n, ["tempMt", function() {
            return this.tempMt = new At();
        }
        ]);
    }(),
    function(s) {
        function t() {
            this.cacheOK = !1,
            this.cacheCmdOK = !1,
            this.transformCmds = [],
            this.drawCmds = [],
            t.__super.call(this),
            this.tempMesh = new w();
        }
        r(t, "laya.ani.bone.canvasmesh.SimpleSkinMeshCanvas", s);
        var e = t.prototype;
        return e.init2 = function(t, e, i, n, a) {
            s.prototype.init2.call(this, t, e, i, n, a),
            this.cacheOK = !1,
            this.cacheCmdOK = !1,
            this.transformCmds.length = 6,
            this.drawCmds.length = 9;
        }
        ,
        e.renderToContext = function(t) {
            if (this.context = t.ctx || t,
            this.mesh) {
                if (this.mesh.uvs.length <= 8)
                    return void (0 == this.mode ? this._renderWithIndexes(this.mesh) : this._renderNoIndexes(this.mesh));
                this.cacheOK || (this.tempMesh.texture = this.mesh.texture,
                this.tempMesh.uvs = this.mesh.texture.uv,
                this.tempMesh.vertices = I.solveMesh(this.mesh, this.tempMesh.vertices),
                this.cacheOK = !0),
                0 == this.mode ? this._renderWithIndexes(this.tempMesh) : this._renderNoIndexes(this.tempMesh);
            }
        }
        ,
        e._renderWithIndexes = function(t) {
            if (this.cacheCmdOK)
                this.renderByCache(t);
            else {
                var e = t.indexes
                  , i = 0
                  , n = e.length;
                for (1 < n && (n = 1),
                i = 0; i < n; i += 3) {
                    var a = 2 * e[i]
                      , s = 2 * e[i + 1]
                      , r = 2 * e[i + 2];
                    this._renderDrawTriangle(t, a, s, r);
                }
                this.cacheCmdOK = !0;
            }
        }
        ,
        e._renderDrawTriangle = function(t, e, i, n) {
            var a = this.context
              , s = t.uvs
              , r = t.vertices
              , o = t.texture
              , h = o.bitmap
              , l = h.source
              , u = o.width
              , c = o.height
              , d = h.width
              , _ = h.height
              , p = NaN
              , f = NaN
              , g = NaN
              , m = NaN
              , y = NaN
              , v = NaN;
            if (t.useUvTransform) {
                var S = t.uvTransform;
                p = (s[e] * S.a + s[e + 1] * S.c + S.tx) * d,
                f = (s[i] * S.a + s[i + 1] * S.c + S.tx) * d,
                g = (s[n] * S.a + s[n + 1] * S.c + S.tx) * d,
                m = (s[e] * S.b + s[e + 1] * S.d + S.ty) * _,
                y = (s[i] * S.b + s[i + 1] * S.d + S.ty) * _,
                v = (s[n] * S.b + s[n + 1] * S.d + S.ty) * _;
            } else
                p = s[e] * d,
                f = s[i] * d,
                g = s[n] * d,
                m = s[e + 1] * _,
                y = s[i + 1] * _,
                v = s[n + 1] * _;
            var x = r[e]
              , b = r[i]
              , w = r[n]
              , M = r[e + 1]
              , I = r[i + 1]
              , T = r[n + 1]
              , C = 1 / (p * y + m * g + f * v - y * g - m * f - p * v)
              , E = x * y + m * w + b * v - y * w - m * b - x * v
              , P = p * b + x * g + f * w - b * g - x * f - p * w
              , A = p * y * w + m * b * g + x * f * v - x * y * g - m * f * w - p * b * v
              , L = M * y + m * T + I * v - y * T - m * I - M * v
              , D = p * I + M * g + f * T - I * g - M * f - p * T
              , R = p * y * T + m * I * g + M * f * v - M * y * g - m * f * T - p * I * v;
            if (this.transformCmds[0] = E * C,
            this.transformCmds[1] = L * C,
            this.transformCmds[2] = P * C,
            this.transformCmds[3] = D * C,
            this.transformCmds[4] = A * C,
            this.transformCmds[5] = R * C,
            this.drawCmds[0] = l,
            this.drawCmds[1] = o.uv[0] * d,
            this.drawCmds[2] = o.uv[1] * _,
            this.drawCmds[3] = u,
            this.drawCmds[4] = c,
            this.drawCmds[5] = o.uv[0] * d,
            this.drawCmds[6] = o.uv[1] * _,
            this.drawCmds[7] = u,
            this.drawCmds[8] = c,
            a.save(),
            this.transform) {
                var k = this.transform;
                a.transform(k.a, k.b, k.c, k.d, k.tx, k.ty);
            }
            a.transform.apply(a, this.transformCmds),
            a.drawImage.apply(a, this.drawCmds),
            a.restore();
        }
        ,
        e.renderByCache = function(t) {
            var e = this.context;
            if (e.save(),
            this.transform) {
                var i = this.transform;
                e.transform(i.a, i.b, i.c, i.d, i.tx, i.ty);
            }
            e.transform.apply(e, this.transformCmds),
            e.drawImage.apply(e, this.drawCmds),
            e.restore();
        }
        ,
        t;
    }(N))
      , G = function(e) {
        function i(t, e) {
            this._templet = null,
            this._player = null,
            this._curOriginalData = null,
            this._boneMatrixArray = [],
            this._lastTime = 0,
            this._currAniName = null,
            this._currAniIndex = -1,
            this._pause = !0,
            this._aniClipIndex = -1,
            this._clipIndex = -1,
            this._skinIndex = 0,
            this._skinName = "default",
            this._aniMode = 0,
            this._graphicsCache = null,
            this._boneSlotDic = null,
            this._bindBoneBoneSlotDic = null,
            this._boneSlotArray = null,
            this._index = -1,
            this._total = -1,
            this._indexControl = !1,
            this._aniPath = null,
            this._texturePath = null,
            this._complete = null,
            this._loadAniMode = 0,
            this._yReverseMatrix = null,
            this._ikArr = null,
            this._tfArr = null,
            this._pathDic = null,
            this._rootBone = null,
            this._boneList = null,
            this._aniSectionDic = null,
            this._eventIndex = 0,
            this._drawOrderIndex = 0,
            this._drawOrder = null,
            this._lastAniClipIndex = -1,
            this._lastUpdateAniClipIndex = -1,
            i.__super.call(this),
            void 0 === e && (e = 0),
            t && this.init(t, e);
        }
        r(i, "laya.ani.bone.Skeleton", e);
        var t = i.prototype;
        return t.init = function(t, e) {
            void 0 === e && (e = 0);
            var i, n, a, s = 0, r = 0;
            if (1 == e)
                for (this._graphicsCache = [],
                s = 0,
                r = t.getAnimationCount(); s < r; s++)
                    this._graphicsCache.push([]);
            if (this._yReverseMatrix = t.yReverseMatrix,
            this._aniMode = e,
            this._templet = t,
            this._player = new R(),
            this._player.cacheFrameRate = t.rate,
            this._player.templet = t,
            this._player.play(),
            this._parseSrcBoneMatrix(),
            this._boneList = t.mBoneArr,
            this._rootBone = t.mRootBone,
            this._aniSectionDic = t.aniSectionDic,
            0 < t.ikArr.length)
                for (this._ikArr = [],
                s = 0,
                r = t.ikArr.length; s < r; s++)
                    this._ikArr.push(new M(t.ikArr[s],this._boneList));
            if (0 < t.pathArr.length)
                for (null == this._pathDic && (this._pathDic = {}),
                s = 0,
                r = t.pathArr.length; s < r; s++)
                    i = t.pathArr[s],
                    n = new T(i,this._boneList),
                    (a = this._boneSlotDic[i.name]) && ((n = new T(i,this._boneList)).target = a),
                    this._pathDic[i.name] = n;
            if (0 < t.tfArr.length)
                for (this._tfArr = [],
                s = 0,
                r = t.tfArr.length; s < r; s++)
                    this._tfArr.push(new C(t.tfArr[s],this._boneList));
            if (0 < t.skinDataArray.length) {
                var o = this._templet.skinDataArray[this._skinIndex];
                this._skinName = o.name;
            }
            this._player.on("played", this, this._onPlay),
            this._player.on("stopped", this, this._onStop),
            this._player.on("paused", this, this._onPause);
        }
        ,
        t.load = function(t, e, i) {
            void 0 === i && (i = 0),
            this._aniPath = t,
            this._complete = e,
            this._loadAniMode = i,
            at.loader.load([{
                url: t,
                type: "arraybuffer"
            }], l.create(this, this._onLoaded));
        }
        ,
        t._onLoaded = function() {
            var t, e = u.getRes(this._aniPath);
            null != e && (null == F.TEMPLET_DICTIONARY && (F.TEMPLET_DICTIONARY = {}),
            (t = F.TEMPLET_DICTIONARY[this._aniPath]) ? t.isParseFail ? this._parseFail() : t.isParserComplete ? this._parseComplete() : (t.on("complete", this, this._parseComplete),
            t.on("error", this, this._parseFail)) : ((t = new F())._setUrl(this._aniPath),
            (F.TEMPLET_DICTIONARY[this._aniPath] = t).on("complete", this, this._parseComplete),
            t.on("error", this, this._parseFail),
            t.isParserComplete = !1,
            t.parseData(null, e)));
        }
        ,
        t._parseComplete = function() {
            var t = F.TEMPLET_DICTIONARY[this._aniPath];
            t && (this.init(t, this._loadAniMode),
            this.play(0, !0)),
            this._complete && this._complete.runWith(this);
        }
        ,
        t._parseFail = function() {
            console.log("[Error]:" + this._aniPath + "解析失败");
        }
        ,
        t._onPlay = function() {
            this.event("played");
        }
        ,
        t._onStop = function() {
            var t, e = this._templet.eventAniArr[this._aniClipIndex];
            if (e && this._eventIndex < e.length)
                for (; this._eventIndex < e.length; this._eventIndex++)
                    (t = e[this._eventIndex]).time >= this._player.playStart && t.time <= this._player.playEnd && this.event("label", t);
            this._drawOrder = null,
            this.event("stopped");
        }
        ,
        t._onPause = function() {
            this.event("paused");
        }
        ,
        t._parseSrcBoneMatrix = function() {
            var t = 0
              , e = 0;
            for (e = this._templet.srcBoneMatrixArr.length,
            t = 0; t < e; t++)
                this._boneMatrixArray.push(new At());
            if (0 == this._aniMode)
                this._boneSlotDic = this._templet.boneSlotDic,
                this._bindBoneBoneSlotDic = this._templet.bindBoneBoneSlotDic,
                this._boneSlotArray = this._templet.boneSlotArray;
            else {
                null == this._boneSlotDic && (this._boneSlotDic = {}),
                null == this._bindBoneBoneSlotDic && (this._bindBoneBoneSlotDic = {}),
                null == this._boneSlotArray && (this._boneSlotArray = []);
                var i, n, a = this._templet.boneSlotArray;
                for (t = 0,
                e = a.length; t < e; t++)
                    i = a[t],
                    null == (n = this._bindBoneBoneSlotDic[i.parent]) && (this._bindBoneBoneSlotDic[i.parent] = n = []),
                    this._boneSlotDic[i.name] = i = i.copy(),
                    n.push(i),
                    this._boneSlotArray.push(i);
            }
        }
        ,
        t._emitMissedEvents = function(t, e, i) {
            void 0 === i && (i = 0);
            var n = this._templet.eventAniArr[this._player.currentAnimationClipIndex];
            if (n) {
                var a, s, r = 0;
                for (a = n.length,
                r = i; r < a; r++)
                    (s = n[r]).time >= this._player.playStart && s.time <= this._player.playEnd && this.event("label", s);
            }
        }
        ,
        t._update = function(t) {
            if (void 0 === t && (t = !0),
            !(this._pause || t && this._indexControl)) {
                var e = this.timer.currTimer
                  , i = this._player.currentKeyframeIndex
                  , n = e - this._lastTime;
                if (t ? this._player._update(n) : i = -1,
                this._lastTime = e,
                this._player && (this._index = this._clipIndex = this._player.currentKeyframeIndex,
                !(this._index < 0 || 0 < n && this._clipIndex == i && this._lastUpdateAniClipIndex == this._aniClipIndex))) {
                    var a;
                    this._lastUpdateAniClipIndex = this._aniClipIndex,
                    i > this._clipIndex && 0 != this._eventIndex && (this._emitMissedEvents(this._player.playStart, this._player.playEnd, this._eventIndex),
                    this._eventIndex = 0);
                    var s, r = this._templet.eventAniArr[this._aniClipIndex];
                    if (r && this._eventIndex < r.length && ((a = r[this._eventIndex]).time >= this._player.playStart && a.time <= this._player.playEnd ? this._player.currentPlayTime >= a.time && (this.event("label", a),
                    this._eventIndex++) : this._eventIndex++),
                    0 == this._aniMode) {
                        if (s = this._templet.getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex))
                            return void (this.graphics != s && (this.graphics = s));
                        var o = 0
                          , h = 0;
                        for (h = this._clipIndex; !this._templet.getGrahicsDataWithCache(this._aniClipIndex, h - 1) && 0 < h; )
                            h--;
                        if (h < this._clipIndex)
                            for (o = h; o < this._clipIndex; o++)
                                this._createGraphics(o);
                    } else if (1 == this._aniMode) {
                        if (s = this._getGrahicsDataWithCache(this._aniClipIndex, this._clipIndex))
                            return void (this.graphics != s && (this.graphics = s));
                        for (h = this._clipIndex; !this._getGrahicsDataWithCache(this._aniClipIndex, h - 1) && 0 < h; )
                            h--;
                        if (h < this._clipIndex)
                            for (o = h; o < this._clipIndex; o++)
                                this._createGraphics(o);
                    }
                    this._createGraphics();
                }
            }
        }
        ,
        t._createGraphics = function(t) {
            void 0 === t && (t = -1),
            -1 == t && (t = this._clipIndex);
            var e, i, n = t * this._player.cacheFrameRateInterval, a = this._templet.drawOrderAniArr[this._aniClipIndex];
            if (a && 0 < a.length)
                for (this._drawOrderIndex = 0,
                e = a[this._drawOrderIndex]; n >= e.time && (this._drawOrder = e.drawOrder,
                this._drawOrderIndex++,
                !(this._drawOrderIndex >= a.length)); )
                    e = a[this._drawOrderIndex];
            0 == this._aniMode || 1 == this._aniMode ? this.graphics = k.create() : this.graphics instanceof laya.ani.GraphicsAni ? this.graphics.clear() : this.graphics = k.create(),
            i = this.graphics;
            var s = this._templet.getNodes(this._aniClipIndex);
            this._templet.getOriginalData(this._aniClipIndex, this._curOriginalData, this._player._fullFrames[this._aniClipIndex], t, n);
            var r, o, h, l, u = this._aniSectionDic[this._aniClipIndex], c = 0, d = 0, _ = 0, p = 0, f = 0, g = this._templet.srcBoneMatrixArr.length;
            for (f = u[d = 0]; d < g; d++)
                l = this._boneList[d],
                h = this._templet.srcBoneMatrixArr[d],
                l.resultTransform.scX = h.scX * this._curOriginalData[c++],
                l.resultTransform.skX = h.skX + this._curOriginalData[c++],
                l.resultTransform.skY = h.skY + this._curOriginalData[c++],
                l.resultTransform.scY = h.scY * this._curOriginalData[c++],
                l.resultTransform.x = h.x + this._curOriginalData[c++],
                l.resultTransform.y = h.y + this._curOriginalData[c++],
                8 === this._templet.tMatrixDataLen && (l.resultTransform.skewX = h.skewX + this._curOriginalData[c++],
                l.resultTransform.skewY = h.skewY + this._curOriginalData[c++]);
            var m, y = {}, v = {};
            for (f += u[1]; d < f; d++)
                y[(m = s[d]).name] = this._curOriginalData[c++],
                v[m.name] = this._curOriginalData[c++],
                this._curOriginalData[c++],
                this._curOriginalData[c++],
                this._curOriginalData[c++],
                this._curOriginalData[c++];
            var S, x, b = {}, w = {};
            for (f += u[2]; d < f; d++)
                b[(m = s[d]).name] = this._curOriginalData[c++],
                w[m.name] = this._curOriginalData[c++],
                this._curOriginalData[c++],
                this._curOriginalData[c++],
                this._curOriginalData[c++],
                this._curOriginalData[c++];
            if (this._pathDic)
                for (f += u[3]; d < f; d++) {
                    if (m = s[d],
                    S = this._pathDic[m.name])
                        switch (new Pt(m.extenData).getByte()) {
                        case 1:
                            S.position = this._curOriginalData[c++];
                            break;

                        case 2:
                            S.spacing = this._curOriginalData[c++];
                            break;

                        case 3:
                            S.rotateMix = this._curOriginalData[c++],
                            S.translateMix = this._curOriginalData[c++];
                        }
                }
            if (this._yReverseMatrix ? this._rootBone.update(this._yReverseMatrix) : this._rootBone.update(At.TEMP.identity()),
            this._ikArr)
                for (d = 0,
                f = this._ikArr.length; d < f; d++)
                    x = this._ikArr[d],
                    b.hasOwnProperty(x.name) && (x.bendDirection = b[x.name]),
                    w.hasOwnProperty(x.name) && (x.mix = w[x.name]),
                    x.apply();
            if (this._pathDic)
                for (var M in this._pathDic)
                    (S = this._pathDic[M]).apply(this._boneList, i);
            if (this._tfArr)
                for (d = 0,
                p = this._tfArr.length; d < p; d++)
                    this._tfArr[d].apply();
            for (d = 0,
            p = this._boneList.length; d < p; d++)
                if (l = this._boneList[d],
                o = this._bindBoneBoneSlotDic[l.name],
                l.resultMatrix.copyTo(this._boneMatrixArray[d]),
                o)
                    for (_ = 0,
                    f = o.length; _ < f; _++)
                        (r = o[_]) && r.setParentMatrix(l.resultMatrix);
            var I, T, C, E, P = {}, A = this._templet.deformAniArr;
            if (A && 0 < A.length) {
                if (this._lastAniClipIndex != this._aniClipIndex)
                    for (this._lastAniClipIndex = this._aniClipIndex,
                    d = 0,
                    f = this._boneSlotArray.length; d < f; d++)
                        (r = this._boneSlotArray[d]).deformData = null;
                var L, D = A[this._aniClipIndex];
                for (L in I = D.default,
                this._setDeform(I, P, this._boneSlotArray, n),
                D)
                    "default" != L && L != this._skinName && (I = D[L],
                    this._setDeform(I, P, this._boneSlotArray, n));
                I = D[this._skinName],
                this._setDeform(I, P, this._boneSlotArray, n);
            }
            if (this._drawOrder)
                for (d = 0,
                f = this._drawOrder.length; d < f; d++)
                    T = y[(r = this._boneSlotArray[this._drawOrder[d]]).name],
                    C = v[r.name],
                    isNaN(C) || (i.save(),
                    i.alpha(C)),
                    isNaN(T) || -2 == T || (this._templet.attachmentNames ? r.showDisplayByName(this._templet.attachmentNames[T]) : r.showDisplayByIndex(T)),
                    P[this._drawOrder[d]] ? (E = P[this._drawOrder[d]],
                    r.currDisplayData && E[r.currDisplayData.attachmentName] ? r.deformData = E[r.currDisplayData.attachmentName] : r.deformData = null) : r.deformData = null,
                    isNaN(C) ? r.draw(i, this._boneMatrixArray, 2 == this._aniMode) : r.draw(i, this._boneMatrixArray, 2 == this._aniMode, C),
                    isNaN(C) || i.restore();
            else
                for (d = 0,
                f = this._boneSlotArray.length; d < f; d++)
                    T = y[(r = this._boneSlotArray[d]).name],
                    C = v[r.name],
                    isNaN(C) || (i.save(),
                    i.alpha(C)),
                    isNaN(T) || -2 == T || (this._templet.attachmentNames ? r.showDisplayByName(this._templet.attachmentNames[T]) : r.showDisplayByIndex(T)),
                    P[d] ? (E = P[d],
                    r.currDisplayData && E[r.currDisplayData.attachmentName] ? r.deformData = E[r.currDisplayData.attachmentName] : r.deformData = null) : r.deformData = null,
                    isNaN(C) ? r.draw(i, this._boneMatrixArray, 2 == this._aniMode) : r.draw(i, this._boneMatrixArray, 2 == this._aniMode, C),
                    isNaN(C) || i.restore();
            0 == this._aniMode ? this._templet.setGrahicsDataWithCache(this._aniClipIndex, t, i) : 1 == this._aniMode && this._setGrahicsDataWithCache(this._aniClipIndex, t, i);
        }
        ,
        t._setDeform = function(t, e, i, n) {
            if (t) {
                var a, s, r, o = 0, h = 0, l = 0;
                if (t)
                    for (o = 0,
                    h = t.deformSlotDataList.length; o < h; o++)
                        for (a = t.deformSlotDataList[o],
                        l = 0; l < a.deformSlotDisplayList.length; l++)
                            r = i[(s = a.deformSlotDisplayList[l]).slotIndex],
                            s.apply(n, r),
                            e[s.slotIndex] || (e[s.slotIndex] = {}),
                            e[s.slotIndex][s.attachment] = s.deformData;
            }
        }
        ,
        t.getAnimNum = function() {
            return this._templet.getAnimationCount();
        }
        ,
        t.getAniNameByIndex = function(t) {
            return this._templet.getAniNameByIndex(t);
        }
        ,
        t.getSlotByName = function(t) {
            return this._boneSlotDic[t];
        }
        ,
        t.showSkinByName = function(t, e) {
            void 0 === e && (e = !0),
            this.showSkinByIndex(this._templet.getSkinIndexByName(t), e);
        }
        ,
        t.showSkinByIndex = function(t, e) {
            void 0 === e && (e = !0);
            for (var i = 0; i < this._boneSlotArray.length; i++)
                this._boneSlotArray[i].showSlotData(null, e);
            if (this._templet.showSkinByIndex(this._boneSlotDic, t, e)) {
                var n = this._templet.skinDataArray[t];
                this._skinIndex = t,
                this._skinName = n.name;
            }
            this._clearCache();
        }
        ,
        t.showSlotSkinByIndex = function(t, e) {
            if (0 != this._aniMode) {
                var i = this.getSlotByName(t);
                i && i.showDisplayByIndex(e),
                this._clearCache();
            }
        }
        ,
        t.showSlotSkinByName = function(t, e) {
            if (0 != this._aniMode) {
                var i = this.getSlotByName(t);
                i && i.showDisplayByName(e),
                this._clearCache();
            }
        }
        ,
        t.replaceSlotSkinName = function(t, e, i) {
            if (0 != this._aniMode) {
                var n = this.getSlotByName(t);
                n && n.replaceDisplayByName(e, i),
                this._clearCache();
            }
        }
        ,
        t.replaceSlotSkinByIndex = function(t, e, i) {
            if (0 != this._aniMode) {
                var n = this.getSlotByName(t);
                n && n.replaceDisplayByIndex(e, i),
                this._clearCache();
            }
        }
        ,
        t.setSlotSkin = function(t, e) {
            if (0 != this._aniMode) {
                var i = this.getSlotByName(t);
                i && i.replaceSkin(e),
                this._clearCache();
            }
        }
        ,
        t._clearCache = function() {
            if (1 == this._aniMode)
                for (var t = 0, e = this._graphicsCache.length; t < e; t++) {
                    for (var i = 0, n = this._graphicsCache[t].length; i < n; i++) {
                        var a = this._graphicsCache[t][i];
                        a != this.graphics && k.recycle(a);
                    }
                    this._graphicsCache[t].length = 0;
                }
        }
        ,
        t.play = function(t, e, i, n, a, s) {
            void 0 === i && (i = !0),
            void 0 === n && (n = 0),
            void 0 === a && (a = 0),
            void 0 === s && (s = !0),
            this._indexControl = !1;
            var r = -1
              , o = NaN;
            if (o = e ? 2147483647 : 0,
            "string" == typeof t)
                for (var h = 0, l = this._templet.getAnimationCount(); h < l; h++) {
                    var u = this._templet.getAnimation(h);
                    if (u && t == u.name) {
                        r = h;
                        break;
                    }
                }
            else
                r = t;
            -1 < r && r < this.getAnimNum() && (this._aniClipIndex = r,
            (i || this._pause || this._currAniIndex != r) && (this._currAniIndex = r,
            this._curOriginalData = new Float32Array(this._templet.getTotalkeyframesLength(r)),
            this._drawOrder = null,
            this._eventIndex = 0,
            this._player.play(r, this._player.playbackRate, o, n, a),
            s && this._templet.showSkinByIndex(this._boneSlotDic, this._skinIndex),
            this._pause && (this._pause = !1,
            this._lastTime = c.now(),
            this.timer.frameLoop(1, this, this._update, null, !0)),
            this._update()));
        }
        ,
        t.stop = function() {
            this._pause || (this._pause = !0,
            this._player && this._player.stop(!0),
            this.timer.clear(this, this._update));
        }
        ,
        t.playbackRate = function(t) {
            this._player && (this._player.playbackRate = t);
        }
        ,
        t.paused = function() {
            this._pause || (this._pause = !0,
            this._player && (this._player.paused = !0),
            this.timer.clear(this, this._update));
        }
        ,
        t.resume = function() {
            this._indexControl = !1,
            this._pause && (this._pause = !1,
            this._player && (this._player.paused = !1),
            this._lastTime = c.now(),
            this.timer.frameLoop(1, this, this._update, null, !0));
        }
        ,
        t._getGrahicsDataWithCache = function(t, e) {
            return this._graphicsCache[t][e];
        }
        ,
        t._setGrahicsDataWithCache = function(t, e, i) {
            this._graphicsCache[t][e] = i;
        }
        ,
        t.destroy = function(t) {
            void 0 === t && (t = !0),
            e.prototype.destroy.call(this, t),
            this._templet = null,
            this._player && this._player.offAll(),
            this._player = null,
            this._curOriginalData = null,
            this._boneMatrixArray.length = 0,
            this._lastTime = 0,
            this.timer.clear(this, this._update);
        }
        ,
        n(0, t, "url", function() {
            return this._aniPath;
        }, function(t) {
            this.load(t);
        }),
        n(0, t, "index", function() {
            return this._index;
        }, function(t) {
            this.player && (this._index = t,
            this._player.currentTime = 1e3 * this._index / this._player.cacheFrameRate,
            this._indexControl = !0,
            this._update(!1));
        }),
        n(0, t, "total", function() {
            return this._templet && this._player ? this._total = Math.floor(this._templet.getAniDuration(this._player.currentAnimationClipIndex) / 1e3 * this._player.cacheFrameRate) : this._total = -1,
            this._total;
        }),
        n(0, t, "templet", function() {
            return this._templet;
        }),
        n(0, t, "player", function() {
            return this._player;
        }),
        i.useSimpleMeshInCanvas = !1,
        i;
    }(st)
      , F = (function(e) {
        function f(t) {
            this._start = 0,
            this._Pos = 0,
            this._data = null,
            this._curIndex = 0,
            this._preIndex = 0,
            this._playIndex = 0,
            this._playing = !1,
            this._ended = !0,
            this._count = 0,
            this._ids = null,
            this._loadedImage = {},
            this._idOfSprite = null,
            this._parentMovieClip = null,
            this._movieClipList = null,
            this._labels = null,
            this.basePath = null,
            this._atlasPath = null,
            this._url = null,
            this._isRoot = !1,
            this._completeHandler = null,
            this._endFrame = -1,
            this.interval = 30,
            this.loop = !1,
            f.__super.call(this),
            this._ids = {},
            this._idOfSprite = [],
            this._reset(),
            this._playing = !1,
            (this._parentMovieClip = t) ? (this._isRoot = !1,
            this._movieClipList = t._movieClipList,
            this._movieClipList.push(this)) : (this._movieClipList = [this],
            this._isRoot = !0,
            this._setUpNoticeType(1));
        }
        r(f, "laya.ani.swf.MovieClip", e);
        var t = f.prototype;
        t.destroy = function(t) {
            void 0 === t && (t = !0),
            this._clear(),
            e.prototype.destroy.call(this, t);
        }
        ,
        t._setDisplay = function(t) {
            e.prototype._setDisplay.call(this, t),
            this._isRoot && this._$3__onDisplay(t);
        }
        ,
        t._$3__onDisplay = function(t) {
            t ? this.timer.loop(this.interval, this, this.updates, null, !0) : this.timer.clear(this, this.updates);
        }
        ,
        t.updates = function() {
            if (!this._parentMovieClip) {
                var t, e = 0;
                for (t = this._movieClipList.length,
                e = 0; e < t; e++)
                    this._movieClipList[e] && this._movieClipList[e]._update();
            }
        }
        ,
        t.addLabel = function(t, e) {
            this._labels || (this._labels = {}),
            this._labels[e] = t;
        }
        ,
        t.removeLabel = function(t) {
            if (t) {
                if (!this._labels)
                    for (var e in this._labels)
                        if (this._labels[e] === t) {
                            delete this._labels[e];
                            break;
                        }
            } else
                this._labels = null;
        }
        ,
        t._update = function() {
            if (this._data && this._playing) {
                if (this._playIndex++,
                this._playIndex >= this._count) {
                    if (!this.loop)
                        return this._playIndex--,
                        void this.stop();
                    this._playIndex = 0;
                }
                if (this._parse(this._playIndex),
                this._labels && this._labels[this._playIndex] && this.event("label", this._labels[this._playIndex]),
                -1 != this._endFrame && this._endFrame == this._playIndex) {
                    if (this._endFrame = -1,
                    null != this._completeHandler) {
                        var t = this._completeHandler;
                        this._completeHandler = null,
                        t.run();
                    }
                    this.stop();
                }
            }
        }
        ,
        t.stop = function() {
            this._playing = !1;
        }
        ,
        t.gotoAndStop = function(t) {
            this.index = t,
            this.stop();
        }
        ,
        t._clear = function() {
            if (this.stop(),
            this._idOfSprite.length = 0,
            !this._parentMovieClip) {
                this.timer.clear(this, this.updates);
                var t, e = 0;
                for (t = this._movieClipList.length,
                e = 0; e < t; e++)
                    this._movieClipList[e] != this && this._movieClipList[e]._clear();
                this._movieClipList.length = 0;
            }
            var i;
            for (i in this._atlasPath && u.clearRes(this._atlasPath),
            this._loadedImage)
                this._loadedImage[i] && (u.clearRes(i),
                this._loadedImage[i] = !1);
            this.removeChildren(),
            this.graphics = null,
            this._parentMovieClip = null;
        }
        ,
        t.play = function(t, e) {
            void 0 === t && (t = 0),
            void 0 === e && (e = !0),
            this.loop = e,
            this._playing = !0,
            this._data && this._displayFrame(t);
        }
        ,
        t._displayFrame = function(t) {
            void 0 === t && (t = -1),
            -1 != t && (this._curIndex > t && this._reset(),
            this._parse(t));
        }
        ,
        t._reset = function(t) {
            void 0 === t && (t = !0),
            t && 1 != this._curIndex && this.removeChildren(),
            this._preIndex = this._curIndex = -1,
            this._Pos = this._start;
        }
        ,
        t._parse = function(t) {
            var e, i, n, a = 0, s = 0, r = 0, o = !1, h = this._idOfSprite, l = this._data;
            for (this._ended && this._reset(),
            l.pos = this._Pos,
            this._ended = !1,
            this._playIndex = t,
            this._curIndex > t && t < this._preIndex && (this._reset(!0),
            l.pos = this._Pos); this._curIndex <= t && !this._ended; )
                switch (l.getUint16()) {
                case 12:
                    if (a = l.getUint16(),
                    s = this._ids[l.getUint16()],
                    this._Pos = l.pos,
                    l.pos = s,
                    0 == (r = l.getUint8())) {
                        var u = l.getUint16();
                        if (!(i = h[a])) {
                            i = h[a] = new st();
                            var c = new st();
                            c.loadImage(this.basePath + u + ".png"),
                            this._loadedImage[this.basePath + u + ".png"] = !0,
                            i.addChild(c),
                            c.size(l.getFloat32(), l.getFloat32());
                            var d = l._getMatrix();
                            c.transform = d;
                        }
                        i.alpha = 1;
                    } else
                        1 == r && ((e = h[a]) || (h[a] = e = new f(this),
                        e.interval = this.interval,
                        e._ids = this._ids,
                        e.basePath = this.basePath,
                        e._setData(l, s),
                        e._initState(),
                        e.play(0)),
                        e.alpha = 1);
                    l.pos = this._Pos;
                    break;

                case 3:
                    var _ = h[l.getUint16()];
                    _ && (this.addChild(_),
                    _.zOrder = l.getUint16(),
                    o = !0);
                    break;

                case 4:
                    (_ = h[l.getUint16()]) && _.removeSelf();
                    break;

                case 5:
                    h[l.getUint16()][f._ValueList[l.getUint16()]] = l.getFloat32();
                    break;

                case 6:
                    h[l.getUint16()].visible = 0 < l.getUint8();
                    break;

                case 7:
                    var p = (i = h[l.getUint16()]).transform || At.create();
                    p.setTo(l.getFloat32(), l.getFloat32(), l.getFloat32(), l.getFloat32(), l.getFloat32(), l.getFloat32()),
                    i.transform = p;
                    break;

                case 8:
                    h[l.getUint16()].setPos(l.getFloat32(), l.getFloat32());
                    break;

                case 9:
                    h[l.getUint16()].setSize(l.getFloat32(), l.getFloat32());
                    break;

                case 10:
                    h[l.getUint16()].alpha = l.getFloat32();
                    break;

                case 11:
                    h[l.getUint16()].setScale(l.getFloat32(), l.getFloat32());
                    break;

                case 98:
                    n = l.getString(),
                    this.event(n),
                    "stop" == n && this.stop();
                    break;

                case 99:
                    this._curIndex = l.getUint16(),
                    o && this.updateZOrder();
                    break;

                case 100:
                    this._count = this._curIndex + 1,
                    this._ended = !0,
                    this._playing && (this.event("enterframe"),
                    this.event("end"),
                    this.event("complete")),
                    this._reset(!1);
                }
            this._playing && !this._ended && this.event("enterframe"),
            this._Pos = l.pos;
        }
        ,
        t._setData = function(t, e) {
            this._data = t,
            this._start = e + 3;
        }
        ,
        t.load = function(t, e, i) {
            var n;
            void 0 === e && (e = !1),
            this._url = t,
            e && (this._atlasPath = i || t.split(".swf")[0] + ".json"),
            this.stop(),
            this._clear(),
            this._movieClipList = [this],
            n = [{
                url: t,
                type: "arraybuffer"
            }],
            this._atlasPath && n.push({
                url: this._atlasPath,
                type: "atlas"
            }),
            at.loader.load(n, l.create(this, this._onLoaded));
        }
        ,
        t._onLoaded = function() {
            var t;
            (t = u.getRes(this._url)) ? !this._atlasPath || u.getAtlas(this._atlasPath) ? (this.basePath = this._atlasPath ? u.getAtlas(this._atlasPath).dir : this._url.split(".swf")[0] + "/image/",
            this._initData(t)) : this.event("error", "Atlas not find") : this.event("error", "file not find");
        }
        ,
        t._initState = function() {
            this._reset(),
            this._ended = !1;
            var t = this._playing;
            for (this._playing = !1,
            this._curIndex = 0; !this._ended; )
                this._parse(++this._curIndex);
            this._playing = t;
        }
        ,
        t._initData = function(t) {
            this._data = new Pt(t);
            var e = 0
              , i = this._data.getUint16();
            for (e = 0; e < i; e++)
                this._ids[this._data.getInt16()] = this._data.getInt32();
            this.interval = 1e3 / this._data.getUint16(),
            this._setData(this._data, this._ids[32767]),
            this._initState(),
            this.play(0),
            this.event("loaded"),
            this._parentMovieClip || this.timer.loop(this.interval, this, this.updates, null, !0);
        }
        ,
        t.playTo = function(t, e, i) {
            this._completeHandler = i,
            this._endFrame = e,
            this.play(t, !1);
        }
        ,
        n(0, t, "index", function() {
            return this._playIndex;
        }, function(t) {
            this._playIndex = t,
            this._data && this._displayFrame(this._playIndex),
            this._labels && this._labels[t] && this.event("label", this._labels[t]);
        }),
        n(0, t, "count", function() {
            return this._count;
        }),
        n(0, t, "playing", function() {
            return this._playing;
        }),
        n(0, t, "url", null, function(t) {
            this.load(t);
        }),
        f._ValueList = ["x", "y", "width", "height", "scaleX", "scaleY", "rotation", "alpha"];
    }(st),
    function(e) {
        function a() {
            this._mainTexture = null,
            this._textureJson = null,
            this._graphicsCache = [],
            this.srcBoneMatrixArr = [],
            this.ikArr = [],
            this.tfArr = [],
            this.pathArr = [],
            this.boneSlotDic = {},
            this.bindBoneBoneSlotDic = {},
            this.boneSlotArray = [],
            this.skinDataArray = [],
            this.skinDic = {},
            this.subTextureDic = {},
            this.isParseFail = !1,
            this.yReverseMatrix = null,
            this.drawOrderAniArr = [],
            this.eventAniArr = [],
            this.attachmentNames = null,
            this.deformAniArr = [],
            this._isDestroyed = !1,
            this._rate = 30,
            this.isParserComplete = !1,
            this.aniSectionDic = {},
            this._skBufferUrl = null,
            this._textureDic = {},
            this._loadList = null,
            this._path = null,
            this.tMatrixDataLen = 0,
            this.mRootBone = null,
            a.__super.call(this),
            this.skinSlotDisplayDataArr = [],
            this.mBoneArr = [];
        }
        r(a, "laya.ani.bone.Templet", e);
        var t = a.prototype;
        return t.loadAni = function(t) {
            this._skBufferUrl = t,
            at.loader.load(t, l.create(this, this.onComplete), null, "arraybuffer");
        }
        ,
        t.onComplete = function(t) {
            if (this._isDestroyed)
                this.destroy();
            else {
                var e = u.getRes(this._skBufferUrl);
                e ? (this._path = this._skBufferUrl.slice(0, this._skBufferUrl.lastIndexOf("/")) + "/",
                this.parseData(null, e)) : this.event("error", "load failed:" + this._skBufferUrl);
            }
        }
        ,
        t.parseData = function(t, e, i) {
            void 0 === i && (i = 30),
            !this._path && this.url && (this._path = this.url.slice(0, this.url.lastIndexOf("/")) + "/"),
            this._mainTexture = t,
            this._mainTexture && g.isWebGL && t.bitmap && (t.bitmap.enableMerageInAtlas = !1),
            this._rate = i,
            this.parse(e);
        }
        ,
        t.buildArmature = function(t) {
            return void 0 === t && (t = 0),
            new G(this,t);
        }
        ,
        t.parse = function(t) {
            e.prototype.parse.call(this, t),
            this._endLoaded(),
            this._aniVersion != a.LAYA_ANIMATION_VISION && (console.log("[Error] 版本不一致，请使用IDE版本配套的重新导出" + this._aniVersion + "->" + a.LAYA_ANIMATION_VISION),
            this._loaded = !1),
            this.loaded ? this._mainTexture ? this._parsePublicExtData() : this._parseTexturePath() : (this.event("error", this),
            this.isParseFail = !0);
        }
        ,
        t._parseTexturePath = function() {
            if (this._isDestroyed)
                this.destroy();
            else {
                var t = 0;
                this._loadList = [];
                var e, i = new Pt(this.getPublicExtData()), n = 0, a = 0, s = 0, r = i.getInt32(), o = i.readUTFString(), h = o.split("\n");
                for (t = 0; t < r; t++)
                    e = this._path + h[2 * t],
                    o = h[2 * t + 1],
                    i.getFloat32(),
                    i.getFloat32(),
                    n = i.getFloat32(),
                    a = i.getFloat32(),
                    s = i.getFloat32(),
                    isNaN(s) ? 0 : s,
                    s = i.getFloat32(),
                    isNaN(s) ? 0 : s,
                    s = i.getFloat32(),
                    isNaN(s) ? n : s,
                    s = i.getFloat32(),
                    isNaN(s) ? a : s,
                    -1 == this._loadList.indexOf(e) && this._loadList.push(e);
                at.loader.load(this._loadList, l.create(this, this._textureComplete));
            }
        }
        ,
        t._textureComplete = function() {
            for (var t, e, i = 0, n = this._loadList.length; i < n; i++)
                e = this._loadList[i],
                t = this._textureDic[e] = u.getRes(e),
                g.isWebGL && t && t.bitmap && (t.bitmap.enableMerageInAtlas = !1);
            this._parsePublicExtData();
        }
        ,
        t._parsePublicExtData = function() {
            var t = 0
              , e = 0
              , i = 0
              , n = 0
              , a = 0;
            for (t = 0,
            a = this.getAnimationCount(); t < a; t++)
                this._graphicsCache.push([]);
            var s;
            s = "Dragon" != this._aniClassName;
            var r, o, h = new Pt(this.getPublicExtData()), l = 0, u = 0, c = 0, d = 0, _ = 0, p = 0, f = 0, g = 0, m = 0, y = h.getInt32(), v = h.readUTFString(), S = v.split("\n");
            for (t = 0; t < y; t++) {
                if (r = this._mainTexture,
                o = this._path + S[2 * t],
                v = S[2 * t + 1],
                null == this._mainTexture && (r = this._textureDic[o]),
                !r)
                    return this.event("error", this),
                    void (this.isParseFail = !0);
                l = h.getFloat32(),
                u = h.getFloat32(),
                c = h.getFloat32(),
                d = h.getFloat32(),
                m = h.getFloat32(),
                _ = isNaN(m) ? 0 : m,
                m = h.getFloat32(),
                p = isNaN(m) ? 0 : m,
                m = h.getFloat32(),
                f = isNaN(m) ? c : m,
                m = h.getFloat32(),
                g = isNaN(m) ? d : m,
                this.subTextureDic[v] = Lt.create(r, l, u, c, d, -_, -p, f, g);
            }
            this._mainTexture = r;
            var x, b, w, M, I, T = h.getUint16();
            for (t = 0; t < T; t++)
                (x = []).push(h.getUint16()),
                x.push(h.getUint16()),
                x.push(h.getUint16()),
                x.push(h.getUint16()),
                this.aniSectionDic[t] = x;
            var C, E = h.getInt16(), P = {};
            for (t = 0; t < E; t++)
                b = new Dt(),
                0 == t ? C = b : b.root = C,
                b.d = s ? -1 : 1,
                M = h.readUTFString(),
                I = h.readUTFString(),
                b.length = h.getFloat32(),
                1 == h.getByte() && (b.inheritRotation = !1),
                1 == h.getByte() && (b.inheritScale = !1),
                b.name = M,
                I && ((w = P[I]) ? w.addChild(b) : this.mRootBone = b),
                P[M] = b,
                this.mBoneArr.push(b);
            this.tMatrixDataLen = h.getUint16();
            var A, L, D = h.getUint16(), R = Math.floor(D / this.tMatrixDataLen), k = this.srcBoneMatrixArr;
            for (t = 0; t < R; t++)
                (A = new Wt()).scX = h.getFloat32(),
                A.skX = h.getFloat32(),
                A.skY = h.getFloat32(),
                A.scY = h.getFloat32(),
                A.x = h.getFloat32(),
                A.y = h.getFloat32(),
                8 === this.tMatrixDataLen && (A.skewX = h.getFloat32(),
                A.skewY = h.getFloat32()),
                k.push(A),
                (b = this.mBoneArr[t]).transform = A;
            var N, O = h.getUint16(), B = 0;
            for (t = 0; t < O; t++) {
                for (L = new Ft(),
                B = h.getUint16(),
                e = 0; e < B; e++)
                    L.boneNames.push(h.readUTFString()),
                    L.boneIndexs.push(h.getInt16());
                L.name = h.readUTFString(),
                L.targetBoneName = h.readUTFString(),
                L.targetBoneIndex = h.getInt16(),
                L.bendDirection = h.getFloat32(),
                L.mix = h.getFloat32(),
                L.isSpine = s,
                this.ikArr.push(L);
            }
            var G, F = h.getUint16(), U = 0;
            for (t = 0; t < F; t++) {
                for (N = new Xt(),
                U = h.getUint16(),
                e = 0; e < U; e++)
                    N.boneIndexs.push(h.getInt16());
                N.name = h.getUTFString(),
                N.targetIndex = h.getInt16(),
                N.rotateMix = h.getFloat32(),
                N.translateMix = h.getFloat32(),
                N.scaleMix = h.getFloat32(),
                N.shearMix = h.getFloat32(),
                N.offsetRotation = h.getFloat32(),
                N.offsetX = h.getFloat32(),
                N.offsetY = h.getFloat32(),
                N.offsetScaleX = h.getFloat32(),
                N.offsetScaleY = h.getFloat32(),
                N.offsetShearY = h.getFloat32(),
                this.tfArr.push(N);
            }
            var H = h.getUint16()
              , V = 0;
            for (t = 0; t < H; t++) {
                for ((G = new Ut()).name = h.readUTFString(),
                V = h.getUint16(),
                e = 0; e < V; e++)
                    G.bones.push(h.getInt16());
                G.target = h.readUTFString(),
                G.positionMode = h.readUTFString(),
                G.spacingMode = h.readUTFString(),
                G.rotateMode = h.readUTFString(),
                G.offsetRotation = h.getFloat32(),
                G.position = h.getFloat32(),
                G.spacing = h.getFloat32(),
                G.rotateMix = h.getFloat32(),
                G.translateMix = h.getFloat32(),
                this.pathArr.push(G);
            }
            var Y, X, W, z, K, j = 0, $ = 0, q = 0, Q = NaN, J = 0, Z = h.getInt16();
            for (t = 0; t < Z; t++) {
                var tt = h.getUint8()
                  , et = {};
                this.deformAniArr.push(et);
                for (var it = 0; it < tt; it++)
                    for ((Y = new kt()).skinName = h.getUTFString(),
                    et[Y.skinName] = Y,
                    j = h.getInt16(),
                    e = 0; e < j; e++)
                        for (X = new Nt(),
                        Y.deformSlotDataList.push(X),
                        $ = h.getInt16(),
                        i = 0; i < $; i++)
                            for (W = new Ot(),
                            X.deformSlotDisplayList.push(W),
                            W.slotIndex = h.getInt16(),
                            W.attachment = h.getUTFString(),
                            q = h.getInt16(),
                            n = 0; n < q; n++)
                                for (1 == h.getByte() ? W.tweenKeyList.push(!0) : W.tweenKeyList.push(!1),
                                Q = h.getFloat32(),
                                W.timeList.push(Q),
                                z = [],
                                W.vectices.push(z),
                                J = h.getInt16(),
                                a = 0; a < J; a++)
                                    z.push(h.getFloat32());
            }
            var nt, at, st = h.getInt16(), rt = 0, ot = 0;
            for (t = 0; t < st; t++) {
                for (rt = h.getInt16(),
                K = [],
                e = 0; e < rt; e++) {
                    for ((nt = new Bt()).time = h.getFloat32(),
                    ot = h.getInt16(),
                    i = 0; i < ot; i++)
                        nt.drawOrder.push(h.getInt16());
                    K.push(nt);
                }
                this.drawOrderAniArr.push(K);
            }
            var ht, lt = h.getInt16(), ut = 0;
            for (t = 0; t < lt; t++) {
                for (ut = h.getInt16(),
                at = [],
                e = 0; e < ut; e++)
                    (ht = new Gt()).name = h.getUTFString(),
                    ht.intValue = h.getInt32(),
                    ht.floatValue = h.getFloat32(),
                    ht.stringValue = h.getUTFString(),
                    ht.time = h.getFloat32(),
                    at.push(ht);
                this.eventAniArr.push(at);
            }
            var ct = h.getInt16();
            if (0 < ct)
                for (this.attachmentNames = [],
                t = 0; t < ct; t++)
                    this.attachmentNames.push(h.getUTFString());
            var dt, _t, pt = h.getInt16();
            for (t = 0; t < pt; t++)
                (dt = new Rt()).name = h.readUTFString(),
                dt.parent = h.readUTFString(),
                dt.attachmentName = h.readUTFString(),
                dt.srcDisplayIndex = dt.displayIndex = h.getInt16(),
                (dt.templet = this).boneSlotDic[dt.name] = dt,
                null == (_t = this.bindBoneBoneSlotDic[dt.parent]) && (this.bindBoneBoneSlotDic[dt.parent] = _t = []),
                _t.push(dt),
                this.boneSlotArray.push(dt);
            var ft, gt, mt, yt = h.readUTFString().split("\n"), vt = 0, St = h.getUint8(), xt = 0, bt = 0, wt = 0, Mt = 0, It = 0, Tt = 0, Ct = 0;
            for (t = 0; t < St; t++) {
                for ((ft = new Ht()).name = yt[vt++],
                xt = h.getUint8(),
                e = 0; e < xt; e++) {
                    for ((gt = new Yt()).name = yt[vt++],
                    dt = this.boneSlotDic[gt.name],
                    bt = h.getUint8(),
                    i = 0; i < bt; i++) {
                        if (mt = new Vt(),
                        this.skinSlotDisplayDataArr.push(mt),
                        mt.name = yt[vt++],
                        mt.attachmentName = yt[vt++],
                        mt.transform = new Wt(),
                        mt.transform.scX = h.getFloat32(),
                        mt.transform.skX = h.getFloat32(),
                        mt.transform.skY = h.getFloat32(),
                        mt.transform.scY = h.getFloat32(),
                        mt.transform.x = h.getFloat32(),
                        mt.transform.y = h.getFloat32(),
                        gt.displayArr.push(mt),
                        mt.width = h.getFloat32(),
                        mt.height = h.getFloat32(),
                        mt.type = h.getUint8(),
                        mt.verLen = h.getUint16(),
                        0 < (E = h.getUint16()))
                            for (mt.bones = [],
                            n = 0; n < E; n++) {
                                var Et = h.getUint16();
                                mt.bones.push(Et);
                            }
                        if (0 < (wt = h.getUint16()))
                            for (mt.uvs = [],
                            n = 0; n < wt; n++)
                                mt.uvs.push(h.getFloat32());
                        if (0 < (Mt = h.getUint16()))
                            for (mt.weights = [],
                            n = 0; n < Mt; n++)
                                mt.weights.push(h.getFloat32());
                        if (0 < (It = h.getUint16()))
                            for (mt.triangles = [],
                            n = 0; n < It; n++)
                                mt.triangles.push(h.getUint16());
                        if (0 < (Tt = h.getUint16()))
                            for (mt.vertices = [],
                            n = 0; n < Tt; n++)
                                mt.vertices.push(h.getFloat32());
                        if (0 < (Ct = h.getUint16()))
                            for (mt.lengths = [],
                            n = 0; n < Ct; n++)
                                mt.lengths.push(h.getFloat32());
                    }
                    ft.slotArr.push(gt);
                }
                this.skinDic[ft.name] = ft,
                this.skinDataArray.push(ft);
            }
            1 == h.getUint8() ? (this.yReverseMatrix = new At(1,0,0,-1,0,0),
            C && C.setTempMatrix(this.yReverseMatrix)) : C && C.setTempMatrix(new At()),
            this.showSkinByIndex(this.boneSlotDic, 0),
            this.isParserComplete = !0,
            this.event("complete", this);
        }
        ,
        t.getTexture = function(t) {
            var e = this.subTextureDic[t];
            return e || (e = this.subTextureDic[t.substr(0, t.length - 1)]),
            null == e ? this._mainTexture : e;
        }
        ,
        t.showSkinByIndex = function(t, e, i) {
            if (void 0 === i && (i = !0),
            e < 0 && e >= this.skinDataArray.length)
                return !1;
            var n, a, s = 0, r = 0, o = this.skinDataArray[e];
            if (o) {
                for (s = 0,
                r = o.slotArr.length; s < r; s++)
                    (a = o.slotArr[s]) && (n = t[a.name]) && (n.showSlotData(a, i),
                    i && "undefined" != n.attachmentName && "null" != n.attachmentName ? n.showDisplayByName(n.attachmentName) : n.showDisplayByIndex(n.displayIndex));
                return !0;
            }
            return !1;
        }
        ,
        t.getSkinIndexByName = function(t) {
            for (var e = 0, i = this.skinDataArray.length; e < i; e++)
                if (this.skinDataArray[e].name == t)
                    return e;
            return -1;
        }
        ,
        t.getGrahicsDataWithCache = function(t, e) {
            return this._graphicsCache[t] && this._graphicsCache[t][e] ? this._graphicsCache[t][e] : null;
        }
        ,
        t.setGrahicsDataWithCache = function(t, e, i) {
            this._graphicsCache[t][e] = i;
        }
        ,
        t.destroy = function() {
            var t;
            for (var e in this._isDestroyed = !0,
            this.subTextureDic)
                (t = this.subTextureDic[e]) && t.destroy();
            for (e in this._textureDic)
                (t = this._textureDic[e]) && t.destroy();
            for (var i = 0, n = this.skinSlotDisplayDataArr.length; i < n; i++)
                this.skinSlotDisplayDataArr[i].destory();
            this.skinSlotDisplayDataArr.length = 0,
            this.url && delete a.TEMPLET_DICTIONARY[this.url],
            laya.resource.Resource.prototype.destroy.call(this);
        }
        ,
        t.getAniNameByIndex = function(t) {
            var e = this.getAnimation(t);
            return e ? e.name : null;
        }
        ,
        n(0, t, "rate", function() {
            return this._rate;
        }, function(t) {
            this._rate = t;
        }),
        a.LAYA_ANIMATION_VISION = "LAYAANIMATION:1.6.0",
        a.TEMPLET_DICTIONARY = null,
        a;
    }(O));
}(window, document, Laya),
"function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
    }
}),
function(t, e, n) {
    n.un,
    n.uns,
    n.static;
    var s = n.class
      , r = n.getset
      , o = (n.__newvec,
    laya.utils.Browser,
    laya.utils.Color)
      , i = laya.filters.ColorFilterAction
      , a = laya.filters.webgl.ColorFilterActionGL
      , h = laya.filters.Filter
      , l = laya.filters.webgl.FilterActionGL
      , u = laya.maths.Matrix
      , c = (laya.maths.Rectangle,
    laya.renders.Render)
      , d = (laya.renders.RenderContext,
    laya.webgl.resource.RenderTarget2D)
      , _ = laya.utils.RunDriver
      , p = (laya.webgl.shader.d2.ShaderDefines2D,
    laya.display.Sprite,
    laya.resource.Texture,
    laya.webgl.shader.d2.value.Value2D)
      , f = function() {
        function t() {
            this.data = null;
        }
        s(t, "laya.filters.FilterAction");
        var e = t.prototype;
        return n.imps(e, {
            "laya.filters.IFilterAction": !0
        }),
        e.apply = function(t) {
            return null;
        }
        ,
        t;
    }()
      , g = function() {
        function t() {}
        return s(t, "laya.filters.WebGLFilter"),
        t.enable = function() {
            t.isInit || (t.isInit = !0,
            c.isWebGL && (_.createFilterAction = function(t) {
                var e;
                switch (t) {
                case 32:
                    e = new a();
                    break;

                case 16:
                    e = new m();
                    break;

                case 8:
                    e = new y();
                }
                return e;
            }
            ));
        }
        ,
        t.isInit = !1,
        t.__init$ = function() {
            _.createFilterAction = function(t) {
                var e;
                switch (t) {
                case 16:
                case 8:
                    e = new f();
                    break;

                case 32:
                    e = new i();
                }
                return e;
            }
            ;
        }
        ,
        t;
    }()
      , m = (function(t) {
        function e(t) {
            this.strength = NaN,
            this.strength_sig2_2sig2_gauss1 = [],
            e.__super.call(this),
            void 0 === t && (t = 4),
            c.isWebGL && g.enable(),
            this.strength = t,
            this._action = _.createFilterAction(16),
            this._action.data = this;
        }
        s(e, "laya.filters.BlurFilter", h);
        var i = e.prototype;
        i.callNative = function(t) {
            t.conchModel && t.conchModel.blurFilter && t.conchModel.blurFilter(this.strength);
        }
        ,
        r(0, i, "action", function() {
            return this._action;
        }),
        r(0, i, "type", function() {
            return 16;
        });
    }(),
    function(t) {
        function a(t, e, i, n) {
            this._color = null,
            a.__super.call(this),
            this._elements = new Float32Array(9),
            void 0 === e && (e = 4),
            void 0 === i && (i = 6),
            void 0 === n && (n = 6),
            c.isWebGL && g.enable(),
            this._color = new o(t),
            this.blur = Math.min(e, 20),
            this.offX = i,
            this.offY = n,
            this._action = _.createFilterAction(8),
            this._action.data = this;
        }
        s(a, "laya.filters.GlowFilter", h);
        var e = a.prototype;
        e.getColor = function() {
            return this._color._color;
        }
        ,
        e.callNative = function(t) {
            t.conchModel && t.conchModel.glowFilter && t.conchModel.glowFilter(this._color.strColor, this._elements[4], this._elements[5], this._elements[6]);
        }
        ,
        r(0, e, "type", function() {
            return 8;
        }),
        r(0, e, "action", function() {
            return this._action;
        }),
        r(0, e, "offY", function() {
            return this._elements[6];
        }, function(t) {
            this._elements[6] = t;
        }),
        r(0, e, "offX", function() {
            return this._elements[5];
        }, function(t) {
            this._elements[5] = t;
        }),
        r(0, e, "blur", function() {
            return this._elements[4];
        }, function(t) {
            this._elements[4] = t;
        });
    }(),
    function(t) {
        function e() {
            this.data = null,
            e.__super.call(this);
        }
        s(e, "laya.filters.webgl.BlurFilterActionGL", l);
        var i = e.prototype;
        return i.setValueMix = function(t) {
            t.defines.add(this.data.type);
        }
        ,
        i.apply3d = function(t, e, i, n, a) {
            var s = t.getValue("bounds")
              , r = p.create(1, 0);
            r.setFilters([this.data]),
            u.EMPTY.identity(),
            i.ctx.drawTarget(t, 0, 0, s.width, s.height, u.EMPTY, "src", r),
            r.setFilters(null);
        }
        ,
        i.setValue = function(t) {
            t.strength = this.data.strength;
            var e = this.data.strength / 3
              , i = e * e;
            this.data.strength_sig2_2sig2_gauss1[0] = this.data.strength,
            this.data.strength_sig2_2sig2_gauss1[1] = i,
            this.data.strength_sig2_2sig2_gauss1[2] = 2 * i,
            this.data.strength_sig2_2sig2_gauss1[3] = 1 / (2 * Math.PI * i),
            t.strength_sig2_2sig2_gauss1 = this.data.strength_sig2_2sig2_gauss1;
        }
        ,
        r(0, i, "typeMix", function() {
            return 16;
        }),
        e;
    }())
      , y = function(t) {
        function e() {
            this.data = null,
            this._initKey = !1,
            this._textureWidth = 0,
            this._textureHeight = 0,
            e.__super.call(this);
        }
        s(e, "laya.filters.webgl.GlowFilterActionGL", l);
        var i = e.prototype;
        return n.imps(i, {
            "laya.filters.IFilterActionGL": !0
        }),
        i.setValueMix = function(t) {}
        ,
        i.apply3d = function(t, e, i, n, a) {
            var s = t.getValue("bounds");
            t.addValue("color", this.data.getColor());
            var r, o = s.width, h = s.height;
            this._textureWidth = o,
            this._textureHeight = h;
            var l = u.TEMP;
            return l.identity(),
            (r = p.create(1, 0)).setFilters([this.data]),
            i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, l, "src", r, null),
            r = p.create(1, 0),
            i.ctx.drawTarget(t, 0, 0, this._textureWidth, this._textureHeight, l, "src", r),
            null;
        }
        ,
        i.setSpriteWH = function(t) {
            this._textureWidth = t.width,
            this._textureHeight = t.height;
        }
        ,
        i.setValue = function(t) {
            t.u_offsetX = this.data.offX,
            t.u_offsetY = -this.data.offY,
            t.u_strength = 1,
            t.u_blurX = this.data.blur,
            t.u_blurY = this.data.blur,
            t.u_textW = this._textureWidth,
            t.u_textH = this._textureHeight,
            t.u_color = this.data.getColor();
        }
        ,
        r(0, i, "typeMix", function() {
            return 8;
        }),
        e.tmpTarget = function(t, e, i, n, a) {
            var s = t.getValue("bounds");
            t.getValue("out").end();
            var r = d.create(s.width, s.height);
            r.start();
            var o = t.getValue("color");
            o && r.clear(o[0], o[1], o[2], 0),
            t.addValue("tmpTarget", r);
        }
        ,
        e.startOut = function(t, e, i, n, a) {
            t.getValue("tmpTarget").end();
            var s = t.getValue("out");
            s.start();
            var r = t.getValue("color");
            r && s.clear(r[0], r[1], r[2], 0);
        }
        ,
        e.recycleTarget = function(t, e, i, n, a) {
            t.getValue("src");
            t.getValue("tmpTarget").recycle();
        }
        ,
        e;
    }();
    n.__init([g]);
}(window, document, Laya),
"function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
    }
}),
function(a, t, s) {
    s.un,
    s.uns;
    var n = s.static
      , r = s.class
      , o = s.getset
      , h = (s.__newvec,
    laya.webgl.canvas.BlendMode)
      , c = (laya.events.Event,
    laya.resource.HTMLCanvas)
      , l = laya.utils.Handler
      , u = laya.webgl.utils.IndexBuffer2D
      , d = (laya.net.Loader,
    laya.maths.MathUtil)
      , _ = laya.maths.Matrix
      , p = laya.renders.Render
      , i = (laya.renders.RenderContext,
    laya.renders.RenderSprite,
    laya.webgl.shader.Shader)
      , e = laya.display.Sprite
      , f = laya.utils.Stat
      , g = laya.resource.Texture
      , m = laya.utils.Utils
      , y = laya.webgl.shader.d2.value.Value2D
      , v = laya.webgl.utils.VertexBuffer2D
      , S = laya.webgl.WebGL
      , x = (laya.webgl.WebGLContext,
    function() {
        function t() {
            this._frameTime = 0,
            this._emissionRate = 60,
            this._emissionTime = 0,
            this.minEmissionTime = 1 / 60,
            this._particleTemplate = null;
        }
        r(t, "laya.particle.emitter.EmitterBase");
        var e = t.prototype;
        return e.start = function(t) {
            void 0 === t && (t = 2147483647),
            0 != this._emissionRate && (this._emissionTime = t);
        }
        ,
        e.stop = function() {
            this._emissionTime = 0;
        }
        ,
        e.clear = function() {
            this._emissionTime = 0;
        }
        ,
        e.emit = function() {}
        ,
        e.advanceTime = function(t) {
            if (void 0 === t && (t = 1),
            this._emissionTime -= t,
            !(this._emissionTime < 0 || (this._frameTime += t,
            this._frameTime < this.minEmissionTime)))
                for (; this._frameTime > this.minEmissionTime; )
                    this._frameTime -= this.minEmissionTime,
                    this.emit();
        }
        ,
        o(0, e, "particleTemplate", null, function(t) {
            this._particleTemplate = t;
        }),
        o(0, e, "emissionRate", function() {
            return this._emissionRate;
        }, function(t) {
            t <= 0 || 0 < (this._emissionRate = t) && (this.minEmissionTime = 1 / t);
        }),
        t;
    }())
      , b = function() {
        function c() {
            this.position = null,
            this.velocity = null,
            this.startColor = null,
            this.endColor = null,
            this.sizeRotation = null,
            this.radius = null,
            this.radian = null,
            this.durationAddScale = NaN,
            this.time = NaN;
        }
        return r(c, "laya.particle.ParticleData"),
        c.Create = function(t, e, i, n) {
            var a = new c();
            a.position = e,
            d.scaleVector3(i, t.emitterVelocitySensitivity, c._tempVelocity);
            var s = d.lerp(t.minHorizontalVelocity, t.maxHorizontalVelocity, Math.random())
              , r = Math.random() * Math.PI * 2;
            c._tempVelocity[0] += s * Math.cos(r),
            c._tempVelocity[2] += s * Math.sin(r),
            c._tempVelocity[1] += d.lerp(t.minVerticalVelocity, t.maxVerticalVelocity, Math.random()),
            a.velocity = c._tempVelocity,
            a.startColor = c._tempStartColor,
            a.endColor = c._tempEndColor;
            var o = 0;
            if (t.disableColor)
                for (o = 0; o < 4; o++)
                    a.startColor[o] = 1,
                    a.endColor[o] = 1;
            else if (t.colorComponentInter)
                for (o = 0; o < 4; o++)
                    a.startColor[o] = d.lerp(t.minStartColor[o], t.maxStartColor[o], Math.random()),
                    a.endColor[o] = d.lerp(t.minEndColor[o], t.maxEndColor[o], Math.random());
            else
                d.lerpVector4(t.minStartColor, t.maxStartColor, Math.random(), a.startColor),
                d.lerpVector4(t.minEndColor, t.maxEndColor, Math.random(), a.endColor);
            a.sizeRotation = c._tempSizeRotation;
            var h = Math.random();
            a.sizeRotation[0] = d.lerp(t.minStartSize, t.maxStartSize, h),
            a.sizeRotation[1] = d.lerp(t.minEndSize, t.maxEndSize, h),
            a.sizeRotation[2] = d.lerp(t.minRotateSpeed, t.maxRotateSpeed, Math.random()),
            a.radius = c._tempRadius;
            var l = Math.random();
            a.radius[0] = d.lerp(t.minStartRadius, t.maxStartRadius, l),
            a.radius[1] = d.lerp(t.minEndRadius, t.maxEndRadius, l),
            a.radian = c._tempRadian,
            a.radian[0] = d.lerp(t.minHorizontalStartRadian, t.maxHorizontalStartRadian, Math.random()),
            a.radian[1] = d.lerp(t.minVerticalStartRadian, t.maxVerticalStartRadian, Math.random());
            var u = t.useEndRadian;
            return a.radian[2] = u ? d.lerp(t.minHorizontalEndRadian, t.maxHorizontalEndRadian, Math.random()) : a.radian[0],
            a.radian[3] = u ? d.lerp(t.minVerticalEndRadian, t.maxVerticalEndRadian, Math.random()) : a.radian[1],
            a.durationAddScale = t.ageAddScale * Math.random(),
            a.time = n,
            a;
        }
        ,
        n(c, ["_tempVelocity", function() {
            return this._tempVelocity = new Float32Array(3);
        }
        , "_tempStartColor", function() {
            return this._tempStartColor = new Float32Array(4);
        }
        , "_tempEndColor", function() {
            return this._tempEndColor = new Float32Array(4);
        }
        , "_tempSizeRotation", function() {
            return this._tempSizeRotation = new Float32Array(3);
        }
        , "_tempRadius", function() {
            return this._tempRadius = new Float32Array(2);
        }
        , "_tempRadian", function() {
            return this._tempRadian = new Float32Array(4);
        }
        ]),
        c;
    }()
      , w = (function() {
        function t(t, e, i) {
            this._templet = null,
            this._timeBetweenParticles = NaN,
            this._previousPosition = null,
            this._timeLeftOver = 0,
            this._tempVelocity = new Float32Array([0, 0, 0]),
            this._tempPosition = new Float32Array([0, 0, 0]),
            this._templet = t,
            this._timeBetweenParticles = 1 / e,
            this._previousPosition = i;
        }
        r(t, "laya.particle.ParticleEmitter"),
        t.prototype.update = function(t, e) {
            if (0 < (t /= 1e3)) {
                d.subtractVector3(e, this._previousPosition, this._tempVelocity),
                d.scaleVector3(this._tempVelocity, 1 / t, this._tempVelocity);
                for (var i = this._timeLeftOver + t, n = -this._timeLeftOver; i > this._timeBetweenParticles; )
                    n += this._timeBetweenParticles,
                    i -= this._timeBetweenParticles,
                    d.lerpVector3(this._previousPosition, e, n / t, this._tempPosition),
                    this._templet.addParticleArray(this._tempPosition, this._tempVelocity);
                this._timeLeftOver = i;
            }
            this._previousPosition[0] = e[0],
            this._previousPosition[1] = e[1],
            this._previousPosition[2] = e[2];
        }
        ;
    }(),
    function() {
        function i() {
            this.textureName = null,
            this.textureCount = 1,
            this.maxPartices = 100,
            this.duration = 1,
            this.ageAddScale = 0,
            this.emitterVelocitySensitivity = 1,
            this.minStartSize = 100,
            this.maxStartSize = 100,
            this.minEndSize = 100,
            this.maxEndSize = 100,
            this.minHorizontalVelocity = 0,
            this.maxHorizontalVelocity = 0,
            this.minVerticalVelocity = 0,
            this.maxVerticalVelocity = 0,
            this.endVelocity = 1,
            this.minRotateSpeed = 0,
            this.maxRotateSpeed = 0,
            this.minStartRadius = 0,
            this.maxStartRadius = 0,
            this.minEndRadius = 0,
            this.maxEndRadius = 0,
            this.minHorizontalStartRadian = 0,
            this.maxHorizontalStartRadian = 0,
            this.minVerticalStartRadian = 0,
            this.maxVerticalStartRadian = 0,
            this.useEndRadian = !0,
            this.minHorizontalEndRadian = 0,
            this.maxHorizontalEndRadian = 0,
            this.minVerticalEndRadian = 0,
            this.maxVerticalEndRadian = 0,
            this.colorComponentInter = !1,
            this.disableColor = !1,
            this.blendState = 0,
            this.emitterType = "null",
            this.emissionRate = 0,
            this.sphereEmitterRadius = 1,
            this.sphereEmitterVelocity = 0,
            this.sphereEmitterVelocityAddVariance = 0,
            this.ringEmitterRadius = 30,
            this.ringEmitterVelocity = 0,
            this.ringEmitterVelocityAddVariance = 0,
            this.ringEmitterUp = 2,
            this.gravity = new Float32Array([0, 0, 0]),
            this.minStartColor = new Float32Array([1, 1, 1, 1]),
            this.maxStartColor = new Float32Array([1, 1, 1, 1]),
            this.minEndColor = new Float32Array([1, 1, 1, 1]),
            this.maxEndColor = new Float32Array([1, 1, 1, 1]),
            this.pointEmitterPosition = new Float32Array([0, 0, 0]),
            this.pointEmitterPositionVariance = new Float32Array([0, 0, 0]),
            this.pointEmitterVelocity = new Float32Array([0, 0, 0]),
            this.pointEmitterVelocityAddVariance = new Float32Array([0, 0, 0]),
            this.boxEmitterCenterPosition = new Float32Array([0, 0, 0]),
            this.boxEmitterSize = new Float32Array([0, 0, 0]),
            this.boxEmitterVelocity = new Float32Array([0, 0, 0]),
            this.boxEmitterVelocityAddVariance = new Float32Array([0, 0, 0]),
            this.sphereEmitterCenterPosition = new Float32Array([0, 0, 0]),
            this.ringEmitterCenterPosition = new Float32Array([0, 0, 0]),
            this.positionVariance = new Float32Array([0, 0, 0]);
        }
        return r(i, "laya.particle.ParticleSetting"),
        i.checkSetting = function(t) {
            var e;
            for (e in i._defaultSetting)
                t.hasOwnProperty(e) || (t[e] = i._defaultSetting[e]);
            t.endVelocity = +t.endVelocity,
            t.gravity[0] = +t.gravity[0],
            t.gravity[1] = +t.gravity[1],
            t.gravity[2] = +t.gravity[2];
        }
        ,
        n(i, ["_defaultSetting", function() {
            return this._defaultSetting = new i();
        }
        ]),
        i;
    }())
      , M = function() {
        function t() {
            this.settings = null,
            this.texture = null;
        }
        return r(t, "laya.particle.ParticleTemplateBase"),
        t.prototype.addParticleArray = function(t, e) {}
        ,
        t;
    }()
      , I = function() {
        function t() {
            this.u_Duration = NaN,
            this.u_EndVelocity = NaN,
            this.u_Gravity = null,
            this.a_Position = null,
            this.a_Velocity = null,
            this.a_StartColor = null,
            this.a_EndColor = null,
            this.a_SizeRotation = null,
            this.a_Radius = null,
            this.a_Radian = null,
            this.a_AgeAddScale = NaN,
            this.gl_Position = null,
            this.v_Color = null,
            this.oSize = NaN,
            this._color = new Float32Array(4),
            this._position = new Float32Array(3);
        }
        r(t, "laya.particle.particleUtils.CanvasShader");
        var e = t.prototype;
        return e.getLen = function(t) {
            return Math.sqrt(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]);
        }
        ,
        e.ComputeParticlePosition = function(t, e, i, n) {
            this._position[0] = t[0],
            this._position[1] = t[1],
            this._position[2] = t[2];
            var a, s = this.getLen(e), r = s * n + (s * this.u_EndVelocity - s) * n * n / 2;
            a = this.getLen(e);
            var o = 0;
            for (3,
            o = 0; o < 3; o++)
                this._position[o] = this._position[o] + e[o] / a * r * this.u_Duration,
                this._position[o] += this.u_Gravity[o] * i * n;
            var h = d.lerp(this.a_Radius[0], this.a_Radius[1], n)
              , l = d.lerp(this.a_Radian[0], this.a_Radian[2], n)
              , u = d.lerp(this.a_Radian[1], this.a_Radian[3], n)
              , c = Math.cos(u) * h;
            return this._position[1] += Math.sin(u) * h,
            this._position[0] += Math.cos(l) * c,
            this._position[2] += Math.sin(l) * c,
            new Float32Array([this._position[0], this._position[1], 0, 1]);
        }
        ,
        e.ComputeParticleSize = function(t, e, i) {
            return d.lerp(t, e, i);
        }
        ,
        e.ComputeParticleRotation = function(t, e) {
            return t * e;
        }
        ,
        e.ComputeParticleColor = function(t, e, i) {
            var n = this._color;
            return d.lerpVector4(t, e, i, n),
            n[3] = n[3] * i * (1 - i) * (1 - i) * 6.7,
            n;
        }
        ,
        e.clamp = function(t, e, i) {
            return t < e ? e : i < t ? i : t;
        }
        ,
        e.getData = function(t) {
            t *= 1 + this.a_AgeAddScale;
            var e = this.clamp(t / this.u_Duration, 0, 1);
            this.gl_Position = this.ComputeParticlePosition(this.a_Position, this.a_Velocity, t, e);
            var i = this.ComputeParticleSize(this.a_SizeRotation[0], this.a_SizeRotation[1], e)
              , n = this.ComputeParticleRotation(this.a_SizeRotation[2], t);
            this.v_Color = this.ComputeParticleColor(this.a_StartColor, this.a_EndColor, e);
            var a, s = new _();
            a = i / this.oSize * 2,
            s.scale(a, a),
            s.rotate(n),
            s.setTranslate(this.gl_Position[0], -this.gl_Position[1]);
            var r;
            return r = this.v_Color[3],
            [this.v_Color, r, s, this.v_Color[0] * r, this.v_Color[1] * r, this.v_Color[2] * r];
        }
        ,
        t;
    }()
      , T = function() {
        function t() {
            this.maxIndex = 0,
            this.cmds = null,
            this.id = 0;
        }
        return r(t, "laya.particle.particleUtils.CMDParticle"),
        t.prototype.setCmds = function(t) {
            this.cmds = t,
            this.maxIndex = t.length - 1;
        }
        ,
        t;
    }()
      , C = function() {
        function e() {}
        return r(e, "laya.particle.particleUtils.PicTool"),
        e.getCanvasPic = function(t, e) {
            t = t.bitmap;
            var i = new c("2D")
              , n = i.getContext("2d");
            i.size(t.width, t.height);
            var a = e >> 16 & 255
              , s = e >> 8 & 255
              , r = 255 & e;
            if (p.isConchApp && n.setFilter(a / 255, s / 255, r / 255, 0),
            n.drawImage(t.source, 0, 0),
            !p.isConchApp) {
                for (var o = n.getImageData(0, 0, i.width, i.height), h = o.data, l = 0, u = h.length; l < u; l += 4)
                    0 != h[l + 3] && (h[l] *= a / 255,
                    h[l + 1] *= s / 255,
                    h[l + 2] *= r / 255);
                n.putImageData(o, 0, 0);
            }
            return i;
        }
        ,
        e.getRGBPic = function(t) {
            return [new g(e.getCanvasPic(t, 16711680)), new g(e.getCanvasPic(t, 65280)), new g(e.getCanvasPic(t, 255))];
        }
        ,
        e;
    }()
      , E = function(t) {
        function e(t) {
            this.setting = null,
            this._posRange = null,
            this._canvasTemplate = null,
            this._emitFun = null,
            e.__super.call(this),
            this.template = t;
        }
        r(e, "laya.particle.emitter.Emitter2D", t);
        var i = e.prototype;
        return i.emit = function() {
            t.prototype.emit.call(this),
            null != this._emitFun && this._emitFun();
        }
        ,
        i.getRandom = function(t) {
            return (2 * Math.random() - 1) * t;
        }
        ,
        i.webGLEmit = function() {
            var t = new Float32Array(3);
            t[0] = this.getRandom(this._posRange[0]),
            t[1] = this.getRandom(this._posRange[1]),
            t[2] = this.getRandom(this._posRange[2]);
            var e = new Float32Array(3);
            e[0] = 0,
            e[1] = 0,
            e[2] = 0,
            this._particleTemplate.addParticleArray(t, e);
        }
        ,
        i.canvasEmit = function() {
            var t = new Float32Array(3);
            t[0] = this.getRandom(this._posRange[0]),
            t[1] = this.getRandom(this._posRange[1]),
            t[2] = this.getRandom(this._posRange[2]);
            var e = new Float32Array(3);
            e[0] = 0,
            e[1] = 0,
            e[2] = 0,
            this._particleTemplate.addParticleArray(t, e);
        }
        ,
        o(0, i, "template", function() {
            return this._particleTemplate;
        }, function(t) {
            (this._particleTemplate = t) || (this._emitFun = null,
            this.setting = null,
            this._posRange = null),
            this.setting = t.settings,
            this._posRange = this.setting.positionVariance,
            this._particleTemplate instanceof laya.particle.ParticleTemplate2D ? this._emitFun = this.webGLEmit : this._particleTemplate instanceof laya.particle.ParticleTemplateCanvas && (this._canvasTemplate = t,
            this._emitFun = this.canvasEmit);
        }),
        e;
    }(x)
      , P = function(t) {
        function e(t) {
            this._vertices = null,
            this._vertexBuffer = null,
            this._indexBuffer = null,
            this._floatCountPerVertex = 29,
            this._firstActiveElement = 0,
            this._firstNewElement = 0,
            this._firstFreeElement = 0,
            this._firstRetiredElement = 0,
            this._currentTime = 0,
            this._drawCounter = 0,
            e.__super.call(this),
            this.settings = t;
        }
        r(e, "laya.particle.ParticleTemplateWebGL", M);
        var i = e.prototype;
        return i.initialize = function() {
            this._vertices = new Float32Array(this.settings.maxPartices * this._floatCountPerVertex * 4);
            for (var t = 0, e = 0; e < this.settings.maxPartices; e++) {
                var i = Math.random()
                  , n = this.settings.textureCount ? 1 / this.settings.textureCount : 1
                  , a = NaN;
                for (a = 0; a < this.settings.textureCount && !(i < a + n); a += n)
                    ;
                t = e * this._floatCountPerVertex * 4,
                this._vertices[t + 0 * this._floatCountPerVertex + 0] = -1,
                this._vertices[t + 0 * this._floatCountPerVertex + 1] = -1,
                this._vertices[t + 0 * this._floatCountPerVertex + 2] = 0,
                this._vertices[t + 0 * this._floatCountPerVertex + 3] = a,
                this._vertices[t + 1 * this._floatCountPerVertex + 0] = 1,
                this._vertices[t + 1 * this._floatCountPerVertex + 1] = -1,
                this._vertices[t + 1 * this._floatCountPerVertex + 2] = 1,
                this._vertices[t + 1 * this._floatCountPerVertex + 3] = a,
                this._vertices[t + 2 * this._floatCountPerVertex + 0] = 1,
                this._vertices[t + 2 * this._floatCountPerVertex + 1] = 1,
                this._vertices[t + 2 * this._floatCountPerVertex + 2] = 1,
                this._vertices[t + 2 * this._floatCountPerVertex + 3] = a + n,
                this._vertices[t + 3 * this._floatCountPerVertex + 0] = -1,
                this._vertices[t + 3 * this._floatCountPerVertex + 1] = 1,
                this._vertices[t + 3 * this._floatCountPerVertex + 2] = 0,
                this._vertices[t + 3 * this._floatCountPerVertex + 3] = a + n;
            }
        }
        ,
        i.loadContent = function() {}
        ,
        i.update = function(t) {
            this._currentTime += t / 1e3,
            this.retireActiveParticles(),
            this.freeRetiredParticles(),
            this._firstActiveElement == this._firstFreeElement && (this._currentTime = 0),
            this._firstRetiredElement == this._firstActiveElement && (this._drawCounter = 0);
        }
        ,
        i.retireActiveParticles = function() {
            for (var t = this.settings.duration; this._firstActiveElement != this._firstNewElement; ) {
                var e = this._firstActiveElement * this._floatCountPerVertex * 4
                  , i = e + 28
                  , n = this._currentTime - this._vertices[i];
                if ((n *= 1 + this._vertices[e + 27]) + 1e-4 < t)
                    break;
                this._vertices[i] = this._drawCounter,
                this._firstActiveElement++,
                this._firstActiveElement >= this.settings.maxPartices && (this._firstActiveElement = 0);
            }
        }
        ,
        i.freeRetiredParticles = function() {
            for (; this._firstRetiredElement != this._firstActiveElement; ) {
                if (this._drawCounter - this._vertices[this._firstRetiredElement * this._floatCountPerVertex * 4 + 28] < 3)
                    break;
                this._firstRetiredElement++,
                this._firstRetiredElement >= this.settings.maxPartices && (this._firstRetiredElement = 0);
            }
        }
        ,
        i.addNewParticlesToVertexBuffer = function() {}
        ,
        i.addParticleArray = function(t, e) {
            var i = this._firstFreeElement + 1;
            if (i >= this.settings.maxPartices && (i = 0),
            i !== this._firstRetiredElement) {
                for (var n = b.Create(this.settings, t, e, this._currentTime), a = this._firstFreeElement * this._floatCountPerVertex * 4, s = 0; s < 4; s++) {
                    var r = 0
                      , o = 0;
                    for (r = 0,
                    o = 4; r < 3; r++)
                        this._vertices[a + s * this._floatCountPerVertex + o + r] = n.position[r];
                    for (r = 0,
                    o = 7; r < 3; r++)
                        this._vertices[a + s * this._floatCountPerVertex + o + r] = n.velocity[r];
                    for (r = 0,
                    o = 10; r < 4; r++)
                        this._vertices[a + s * this._floatCountPerVertex + o + r] = n.startColor[r];
                    for (r = 0,
                    o = 14; r < 4; r++)
                        this._vertices[a + s * this._floatCountPerVertex + o + r] = n.endColor[r];
                    for (r = 0,
                    o = 18; r < 3; r++)
                        this._vertices[a + s * this._floatCountPerVertex + o + r] = n.sizeRotation[r];
                    for (r = 0,
                    o = 21; r < 2; r++)
                        this._vertices[a + s * this._floatCountPerVertex + o + r] = n.radius[r];
                    for (r = 0,
                    o = 23; r < 4; r++)
                        this._vertices[a + s * this._floatCountPerVertex + o + r] = n.radian[r];
                    this._vertices[a + s * this._floatCountPerVertex + 27] = n.durationAddScale,
                    this._vertices[a + s * this._floatCountPerVertex + 28] = n.time;
                }
                this._firstFreeElement = i;
            }
        }
        ,
        e;
    }()
      , A = function(t) {
        function e(t) {
            this._ready = !1,
            this.textureList = [],
            this.particleList = [],
            this.pX = 0,
            this.pY = 0,
            this.activeParticles = [],
            this.deadParticles = [],
            this.iList = [],
            this._maxNumParticles = 0,
            this.textureWidth = NaN,
            this.dTextureWidth = NaN,
            this.colorChange = !0,
            this.step = 1 / 60,
            this.canvasShader = new I(),
            e.__super.call(this),
            this.settings = t,
            this._maxNumParticles = t.maxPartices,
            this.texture = new g(),
            this.texture.on("loaded", this, this._textureLoaded),
            this.texture.load(t.textureName);
        }
        r(e, "laya.particle.ParticleTemplateCanvas", M);
        var i = e.prototype;
        return i._textureLoaded = function(t) {
            this.setTexture(this.texture),
            this._ready = !0;
        }
        ,
        i.clear = function(t) {
            void 0 === t && (t = !0),
            this.deadParticles.length = 0,
            this.activeParticles.length = 0,
            this.textureList.length = 0;
        }
        ,
        i.setTexture = function(t) {
            this.texture = t,
            this.textureWidth = t.width,
            this.dTextureWidth = 1 / this.textureWidth,
            this.pX = .5 * -t.width,
            this.pY = .5 * -t.height,
            this.textureList = e.changeTexture(t, this.textureList),
            this.particleList.length = 0,
            this.deadParticles.length = 0,
            this.activeParticles.length = 0;
        }
        ,
        i._createAParticleData = function(t, e) {
            var i;
            this.canvasShader.u_EndVelocity = this.settings.endVelocity,
            this.canvasShader.u_Gravity = this.settings.gravity,
            this.canvasShader.u_Duration = this.settings.duration,
            i = b.Create(this.settings, t, e, 0),
            this.canvasShader.a_Position = i.position,
            this.canvasShader.a_Velocity = i.velocity,
            this.canvasShader.a_StartColor = i.startColor,
            this.canvasShader.a_EndColor = i.endColor,
            this.canvasShader.a_SizeRotation = i.sizeRotation,
            this.canvasShader.a_Radius = i.radius,
            this.canvasShader.a_Radian = i.radian,
            this.canvasShader.a_AgeAddScale = i.durationAddScale,
            this.canvasShader.oSize = this.textureWidth;
            var n = new T()
              , a = 0
              , s = this.settings.duration / (1 + i.durationAddScale)
              , r = [];
            for (a = 0; a < s; a += this.step)
                r.push(this.canvasShader.getData(a));
            return n.id = this.particleList.length,
            this.particleList.push(n),
            n.setCmds(r),
            n;
        }
        ,
        i.addParticleArray = function(t, e) {
            var i;
            this._ready && (this.particleList.length < this._maxNumParticles ? (i = this._createAParticleData(t, e),
            this.iList[i.id] = 0,
            this.activeParticles.push(i)) : 0 < this.deadParticles.length && (i = this.deadParticles.pop(),
            this.iList[i.id] = 0,
            this.activeParticles.push(i)));
        }
        ,
        i.advanceTime = function(t) {
            if (void 0 === t && (t = 1),
            this._ready) {
                var e, i = this.activeParticles, n = this.deadParticles, a = 0, s = i.length, r = 0, o = this.iList;
                for (a = s - 1; -1 < a; a--)
                    (r = o[(e = i[a]).id]) >= e.maxIndex ? (r = 0,
                    i.splice(a, 1),
                    n.push(e)) : r += 1,
                    o[e.id] = r;
            }
        }
        ,
        i.render = function(t, e, i) {
            this._ready && (this.activeParticles.length < 1 || this.textureList.length < 2 || (this.settings.disableColor ? this.noColorRender(t, e, i) : this.canvasRender(t, e, i)));
        }
        ,
        i.noColorRender = function(t, e, i) {
            var n, a, s, r = this.activeParticles, o = 0, h = r.length, l = NaN, u = this.pX, c = this.pY, d = 2 * -u, _ = 2 * -c, p = 0, f = (this.textureList,
            this.iList);
            for (t.translate(e, i),
            s = t.ctx.globalAlpha,
            o = 0; o < h; o++)
                p = f[(n = r[o]).id],
                (a = n.cmds[p]) && ((l = a[1]) <= .01 || (t.setAlpha(s * l),
                t.drawTextureWithTransform(this.texture, u, c, d, _, a[2], 1)));
            t.setAlpha(s),
            t.translate(-e, -i);
        }
        ,
        i.canvasRender = function(t, e, i) {
            var n, a, s, r, o = this.activeParticles, h = 0, l = o.length, u = this.pX, c = this.pY, d = 2 * -u, _ = 2 * -c, p = 0, f = this.textureList, g = this.iList;
            for (t.translate(e, i),
            s = t.ctx.globalAlpha,
            r = t.ctx.globalCompositeOperation,
            t.blendMode("lighter"),
            h = 0; h < l; h++)
                p = g[(n = o[h]).id],
                (a = n.cmds[p]) && (a[1] <= .01 || (t.save(),
                t.transformByMatrix(a[2]),
                .01 < a[3] && (t.setAlpha(s * a[3]),
                t.drawTexture(f[0], u, c, d, _)),
                .01 < a[4] && (t.setAlpha(s * a[4]),
                t.drawTexture(f[1], u, c, d, _)),
                .01 < a[5] && (t.setAlpha(s * a[5]),
                t.drawTexture(f[2], u, c, d, _)),
                t.restore()));
            t.setAlpha(s),
            t.translate(-e, -i),
            t.blendMode(r);
        }
        ,
        e.changeTexture = function(t, e, i) {
            return e || (e = []),
            e.length = 0,
            i && i.disableColor ? e.push(t, t, t) : m.copyArray(e, C.getRGBPic(t)),
            e;
        }
        ,
        e;
    }()
      , L = function(i) {
        function n(t) {
            this._vertexBuffer2D = null,
            this._indexBuffer2D = null,
            this.x = 0,
            this.y = 0,
            this._blendFn = null,
            this._startTime = 0,
            this.sv = new D(),
            n.__super.call(this, t);
            var e = this;
            s.loader.load(this.settings.textureName, l.create(null, function(t) {
                t.bitmap.enableMerageInAtlas = !1,
                e.texture = t;
            })),
            this.sv.u_Duration = this.settings.duration,
            this.sv.u_Gravity = this.settings.gravity,
            this.sv.u_EndVelocity = this.settings.endVelocity,
            this._blendFn = h.fns[t.blendState],
            this.initialize(),
            this._vertexBuffer = this._vertexBuffer2D = v.create(-1, 35048),
            this._indexBuffer = this._indexBuffer2D = u.create(35044),
            this.loadContent();
        }
        r(n, "laya.particle.ParticleTemplate2D", i);
        var t = n.prototype;
        return s.imps(t, {
            "laya.webgl.submit.ISubmit": !0
        }),
        t.getRenderType = function() {
            return -111;
        }
        ,
        t.releaseRender = function() {}
        ,
        t.addParticleArray = function(t, e) {
            t[0] += this.x,
            t[1] += this.y,
            i.prototype.addParticleArray.call(this, t, e);
        }
        ,
        t.loadContent = function() {
            for (var t = new Uint16Array(6 * this.settings.maxPartices), e = 0; e < this.settings.maxPartices; e++)
                t[6 * e + 0] = 4 * e + 0,
                t[6 * e + 1] = 4 * e + 1,
                t[6 * e + 2] = 4 * e + 2,
                t[6 * e + 3] = 4 * e + 0,
                t[6 * e + 4] = 4 * e + 2,
                t[6 * e + 5] = 4 * e + 3;
            this._indexBuffer2D.clear(),
            this._indexBuffer2D.append(t),
            this._indexBuffer2D.upload();
        }
        ,
        t.addNewParticlesToVertexBuffer = function() {
            this._vertexBuffer2D.clear(),
            this._vertexBuffer2D.append(this._vertices);
            var t = 0;
            this._firstNewElement < this._firstFreeElement ? (t = 4 * this._firstNewElement * this._floatCountPerVertex * 4,
            this._vertexBuffer2D.subUpload(t, t, t + 4 * (this._firstFreeElement - this._firstNewElement) * this._floatCountPerVertex * 4)) : (t = 4 * this._firstNewElement * this._floatCountPerVertex * 4,
            this._vertexBuffer2D.subUpload(t, t, t + 4 * (this.settings.maxPartices - this._firstNewElement) * this._floatCountPerVertex * 4),
            0 < this._firstFreeElement && (this._vertexBuffer2D.setNeedUpload(),
            this._vertexBuffer2D.subUpload(0, 0, 4 * this._firstFreeElement * this._floatCountPerVertex * 4))),
            this._firstNewElement = this._firstFreeElement;
        }
        ,
        t.renderSubmit = function() {
            if (this.texture && this.texture.loaded) {
                if (this.update(s.timer.delta),
                this.sv.u_CurrentTime = this._currentTime,
                this._firstNewElement != this._firstFreeElement && this.addNewParticlesToVertexBuffer(),
                this.blend(),
                this._firstActiveElement != this._firstFreeElement) {
                    S.mainContext;
                    this._vertexBuffer2D.bind(this._indexBuffer2D),
                    this.sv.u_texture = this.texture.source,
                    this.sv.upload(),
                    this._firstActiveElement < this._firstFreeElement ? S.mainContext.drawElements(4, 6 * (this._firstFreeElement - this._firstActiveElement), 5123, 6 * this._firstActiveElement * 2) : (S.mainContext.drawElements(4, 6 * (this.settings.maxPartices - this._firstActiveElement), 5123, 6 * this._firstActiveElement * 2),
                    0 < this._firstFreeElement && S.mainContext.drawElements(4, 6 * this._firstFreeElement, 5123, 0)),
                    f.drawCall++;
                }
                this._drawCounter++;
            }
            return 1;
        }
        ,
        t.blend = function() {
            if (h.activeBlendFunction !== this._blendFn) {
                var t = S.mainContext;
                t.enable(3042),
                this._blendFn(t),
                h.activeBlendFunction = this._blendFn;
            }
        }
        ,
        t.dispose = function() {
            this._vertexBuffer2D.dispose(),
            this._indexBuffer2D.dispose();
        }
        ,
        n.activeBlendType = -1,
        n;
    }(P)
      , D = function(t) {
        function e() {
            this.a_CornerTextureCoordinate = [4, 5126, !1, 116, 0],
            this.a_Position = [3, 5126, !1, 116, 16],
            this.a_Velocity = [3, 5126, !1, 116, 28],
            this.a_StartColor = [4, 5126, !1, 116, 40],
            this.a_EndColor = [4, 5126, !1, 116, 56],
            this.a_SizeRotation = [3, 5126, !1, 116, 72],
            this.a_Radius = [2, 5126, !1, 116, 84],
            this.a_Radian = [4, 5126, !1, 116, 92],
            this.a_AgeAddScale = [1, 5126, !1, 116, 108],
            this.a_Time = [1, 5126, !1, 116, 112],
            this.u_CurrentTime = NaN,
            this.u_Duration = NaN,
            this.u_Gravity = null,
            this.u_EndVelocity = NaN,
            this.u_texture = null,
            e.__super.call(this, 0, 0);
        }
        return r(e, "laya.particle.shader.value.ParticleShaderValue", y),
        e.prototype.upload = function() {
            this.refresh(),
            e.pShader.upload(this);
        }
        ,
        n(e, ["pShader", function() {
            return this.pShader = new R();
        }
        ]),
        e;
    }()
      , R = (function(e) {
        function i(t) {
            this._matrix4 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],
            this._particleTemplate = null,
            this._canvasTemplate = null,
            this._emitter = null,
            this.autoPlay = !0,
            i.__super.call(this),
            t && this.setParticleSetting(t);
        }
        r(i, "laya.particle.Particle2D", e);
        var t = i.prototype;
        t.load = function(t) {
            s.loader.load(t, l.create(this, this.setParticleSetting), null, "json");
        }
        ,
        t.setParticleSetting = function(e) {
            var i = this;
            if (!e)
                return this.stop();
            if (w.checkSetting(e),
            a.ConchParticleTemplate2D && !p.isWebGL || (this.customRenderEnable = !0),
            p.isWebGL)
                this._particleTemplate = new L(e),
                this.graphics._saveToCmd(p.context._drawParticle, [this._particleTemplate]);
            else {
                if (p.isConchApp && a.ConchParticleTemplate2D) {
                    this._particleTemplate = new ConchParticleTemplate2D();
                    var n = this;
                    return s.loader.load(e.textureName, l.create(null, function(t) {
                        n._particleTemplate.texture = t,
                        n._particleTemplate.settings = e,
                        p.isConchNode ? n.graphics.drawParticle(n._particleTemplate) : n.graphics._saveToCmd(p.context._drawParticle, [i._particleTemplate]);
                    })),
                    this._emitter = {
                        start: function() {}
                    },
                    this.play = this._particleTemplate.play.bind(this._particleTemplate),
                    this.stop = this._particleTemplate.stop.bind(this._particleTemplate),
                    void (this.autoPlay && this.play());
                }
                this._particleTemplate = this._canvasTemplate = new A(e);
            }
            this._emitter ? this._emitter.template = this._particleTemplate : this._emitter = new E(this._particleTemplate),
            this.autoPlay && (this.emitter.start(),
            this.play());
        }
        ,
        t.play = function() {
            this.timer.frameLoop(1, this, this._loop);
        }
        ,
        t.stop = function() {
            this.timer.clear(this, this._loop);
        }
        ,
        t._loop = function() {
            this.advanceTime(1 / 60);
        }
        ,
        t.advanceTime = function(t) {
            void 0 === t && (t = 1),
            this._canvasTemplate && this._canvasTemplate.advanceTime(t),
            this._emitter && this._emitter.advanceTime(t);
        }
        ,
        t.customRender = function(t, e, i) {
            p.isWebGL && (this._matrix4[0] = t.ctx._curMat.a,
            this._matrix4[1] = t.ctx._curMat.b,
            this._matrix4[4] = t.ctx._curMat.c,
            this._matrix4[5] = t.ctx._curMat.d,
            this._matrix4[12] = t.ctx._curMat.tx,
            this._matrix4[13] = t.ctx._curMat.ty,
            this._particleTemplate.sv.u_mmat = this._matrix4);
            this._canvasTemplate && this._canvasTemplate.render(t, e, i);
        }
        ,
        t.destroy = function(t) {
            void 0 === t && (t = !0),
            this._particleTemplate instanceof laya.particle.ParticleTemplate2D && this._particleTemplate.dispose(),
            e.prototype.destroy.call(this, t);
        }
        ,
        o(0, t, "url", null, function(t) {
            this.load(t);
        }),
        o(0, t, "emitter", function() {
            return this._emitter;
        });
    }(e),
    function(t) {
        function e() {
            e.__super.call(this, e.vs, e.ps, "ParticleShader");
        }
        return r(e, "laya.particle.shader.ParticleShader", i),
        n(e, ["vs", function() {
            return this.vs = "attribute vec4 a_CornerTextureCoordinate;\nattribute vec3 a_Position;\nattribute vec3 a_Velocity;\nattribute vec4 a_StartColor;\nattribute vec4 a_EndColor;\nattribute vec3 a_SizeRotation;\nattribute vec2 a_Radius;\nattribute vec4 a_Radian;\nattribute float a_AgeAddScale;\nattribute float a_Time;\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\n\nuniform float u_CurrentTime;\nuniform float u_Duration;\nuniform float u_EndVelocity;\nuniform vec3 u_Gravity;\n\n#ifdef PARTICLE3D\n uniform mat4 u_WorldMat;\n uniform mat4 u_View;\n uniform mat4 u_Projection;\n uniform vec2 u_ViewportScale;\n#else\n uniform vec2 size;\n uniform mat4 mmat;\n uniform mat4 u_mmat;\n#endif\n\nvec4 ComputeParticlePosition(in vec3 position, in vec3 velocity,in float age,in float normalizedAge)\n{\n\n   float startVelocity = length(velocity);//起始标量速度\n   float endVelocity = startVelocity * u_EndVelocity;//结束标量速度\n\n   float velocityIntegral = startVelocity * normalizedAge +(endVelocity - startVelocity) * normalizedAge *normalizedAge/2.0;//计算当前速度的标量（单位空间），vt=v0*t+(1/2)*a*(t^2)\n   \n   vec3 addPosition = normalize(velocity) * velocityIntegral * u_Duration;//计算受自身速度影响的位置，转换标量到矢量    \n   addPosition += u_Gravity * age * normalizedAge;//计算受重力影响的位置\n   \n   float radius=mix(a_Radius.x, a_Radius.y, normalizedAge); //计算粒子受半径和角度影响（无需计算角度和半径时，可用宏定义优化屏蔽此计算）\n   float radianHorizontal =mix(a_Radian.x,a_Radian.z,normalizedAge);\n   float radianVertical =mix(a_Radian.y,a_Radian.w,normalizedAge);\n   \n   float r =cos(radianVertical)* radius;\n   addPosition.y += sin(radianVertical) * radius;\n\t\n   addPosition.x += cos(radianHorizontal) *r;\n   addPosition.z += sin(radianHorizontal) *r;\n  \n   #ifdef PARTICLE3D\n   position+=addPosition;\n    return  u_Projection*u_View*u_WorldMat*(vec4(position, 1.0));\n   #else\n   addPosition.y=-addPosition.y;//2D粒子位置更新需要取负，2D粒子坐标系Y轴正向朝上\n   position+=addPosition;\n    return  vec4(position,1.0);\n   #endif\n}\n\nfloat ComputeParticleSize(in float startSize,in float endSize, in float normalizedAge)\n{    \n    float size = mix(startSize, endSize, normalizedAge);\n    \n\t#ifdef PARTICLE3D\n    //Project the size into screen coordinates.\n     return size * u_Projection[1][1];\n\t#else\n\t return size;\n\t#endif\n}\n\nmat2 ComputeParticleRotation(in float rot,in float age)\n{    \n    float rotation =rot * age;\n    //计算2x2旋转矩阵.\n    float c = cos(rotation);\n    float s = sin(rotation);\n    return mat2(c, -s, s, c);\n}\n\nvec4 ComputeParticleColor(in vec4 startColor,in vec4 endColor,in float normalizedAge)\n{\n\tvec4 color=mix(startColor,endColor,normalizedAge);\n    //硬编码设置，使粒子淡入很快，淡出很慢,6.7的缩放因子把置归一在0到1之间，可以谷歌x*(1-x)*(1-x)*6.7的制图表\n    color.a *= normalizedAge * (1.0-normalizedAge) * (1.0-normalizedAge) * 6.7;\n   \n    return color;\n}\n\nvoid main()\n{\n   float age = u_CurrentTime - a_Time;\n   age *= 1.0 + a_AgeAddScale;\n   float normalizedAge = clamp(age / u_Duration,0.0,1.0);\n   gl_Position = ComputeParticlePosition(a_Position, a_Velocity, age, normalizedAge);//计算粒子位置\n   float pSize = ComputeParticleSize(a_SizeRotation.x,a_SizeRotation.y, normalizedAge);\n   mat2 rotation = ComputeParticleRotation(a_SizeRotation.z, age);\n\t\n   #ifdef PARTICLE3D\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize * u_ViewportScale;\n   #else\n    mat4 mat=u_mmat*mmat;\n    gl_Position=vec4((mat*gl_Position).xy,0.0,1.0);\n\tgl_Position.xy += (rotation*a_CornerTextureCoordinate.xy) * pSize*vec2(mat[0][0],mat[1][1]);\n    gl_Position=vec4((gl_Position.x/size.x-0.5)*2.0,(0.5-gl_Position.y/size.y)*2.0,0.0,1.0);\n   #endif\n   \n   v_Color = ComputeParticleColor(a_StartColor,a_EndColor, normalizedAge);\n   v_TextureCoordinate =a_CornerTextureCoordinate.zw;\n}\n\n";
        }
        , "ps", function() {
            return this.ps = "#ifdef FSHIGHPRECISION\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec4 v_Color;\nvarying vec2 v_TextureCoordinate;\nuniform sampler2D u_texture;\n\nvoid main()\n{\t\n\tgl_FragColor=texture2D(u_texture,v_TextureCoordinate)*v_Color;\n\tgl_FragColor.xyz *= v_Color.w;\n}";
        }
        ]),
        e;
    }());
}(window, document, Laya),
"function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
    }
}),
function(t, e, m) {
    m.un,
    m.uns,
    m.static;
    var r = m.class
      , i = m.getset
      , s = (m.__newvec,
    laya.utils.Browser)
      , o = laya.resource.HTMLCanvas
      , f = (laya.utils.Handler,
    laya.net.Loader)
      , u = laya.maths.Point
      , n = laya.maths.Rectangle
      , g = laya.renders.Render
      , h = laya.renders.RenderContext
      , a = laya.display.Sprite
      , y = laya.resource.Texture
      , l = function() {
        var t, _, p;
        function s() {
            this._jsonData = null,
            this._tileTexSetArr = [],
            this._texArray = [],
            this._x = 0,
            this._y = 0,
            this._width = 0,
            this._height = 0,
            this._mapW = 0,
            this._mapH = 0,
            this._mapTileW = 0,
            this._mapTileH = 0,
            this._mapSprite = null,
            this._layerArray = [],
            this._renderLayerArray = [],
            this._gridArray = [],
            this._showGridKey = !1,
            this._totalGridNum = 0,
            this._gridW = 0,
            this._gridH = 0,
            this._gridWidth = 450,
            this._gridHeight = 450,
            this._jsonLoader = null,
            this._loader = null,
            this._tileSetArray = [],
            this._currTileSet = null,
            this._completeHandler = null,
            this._index = 0,
            this._animationDic = {},
            this._properties = null,
            this._tileProperties = {},
            this._tileProperties2 = {},
            this._orientation = "orthogonal",
            this._renderOrder = "right-down",
            this._colorArray = ["FF", "00", "33", "66"],
            this._scale = 1,
            this._pivotScaleX = .5,
            this._pivotScaleY = .5,
            this._centerX = 0,
            this._centerY = 0,
            this._viewPortX = 0,
            this._viewPortY = 0,
            this._viewPortWidth = 0,
            this._viewPortHeight = 0,
            this._enableLinear = !0,
            this._resPath = null,
            this._pathArray = null,
            this._limitRange = !1,
            this._fastDirty = !0,
            this.autoCache = !0,
            this.autoCacheType = "normal",
            this.enableMergeLayer = !1,
            this.removeCoveredTile = !1,
            this.showGridTextureCount = !1,
            this.antiCrack = !0,
            this.cacheAllAfterInit = !1,
            this._texutreStartDic = {},
            this._rect = new n(),
            this._paddingRect = new n(),
            this._mapRect = new t(),
            this._mapLogicRect = new t(),
            this._mapLastRect = new t(),
            this._mapSprite = new a();
        }
        r(s, "laya.map.TiledMap");
        var e = s.prototype;
        return e.createMap = function(t, e, i, n, a, s, r) {
            void 0 === s && (s = !0),
            void 0 === r && (r = !1),
            this._enableLinear = s,
            this._limitRange = r,
            this._rect.x = e.x,
            this._rect.y = e.y,
            this._rect.width = e.width,
            this._rect.height = e.height,
            this._viewPortWidth = e.width / this._scale,
            this._viewPortHeight = e.height / this._scale,
            this._completeHandler = i,
            n ? this._paddingRect.copyFrom(n) : this._paddingRect.setTo(0, 0, 0, 0),
            a && (this._gridWidth = a.x,
            this._gridHeight = a.y);
            var o = t.lastIndexOf("/");
            this._pathArray = -1 < o ? (this._resPath = t.substr(0, o),
            this._resPath.split("/")) : (this._resPath = "",
            []),
            this._jsonLoader = new f(),
            this._jsonLoader.once("complete", this, this.onJsonComplete),
            this._jsonLoader.load(t, "json", !1);
        }
        ,
        e.onJsonComplete = function(t) {
            var e = this._jsonData = t;
            this._properties = e.properties,
            this._orientation = e.orientation,
            this._renderOrder = e.renderorder,
            this._mapW = e.width,
            this._mapH = e.height,
            this._mapTileW = e.tilewidth,
            this._mapTileH = e.tileheight,
            this._width = this._mapTileW * this._mapW,
            this._height = this._mapTileH * this._mapH,
            "staggered" == this._orientation && (this._height = (.5 + .5 * this._mapH) * this._mapTileH),
            this._mapLastRect.top = this._mapLastRect.bottom = this._mapLastRect.left = this._mapLastRect.right = -1;
            var i, n, a = e.tilesets, s = 0;
            for (s = 0; s < a.length; s++)
                if (i = a[s],
                (n = new p()).init(i),
                !n.properties || !n.properties.ignore) {
                    this._tileProperties[s] = n.tileproperties,
                    this.addTileProperties(n.tileproperties),
                    this._tileSetArray.push(n);
                    var r = i.tiles;
                    if (r)
                        for (var o in r) {
                            var h = r[o].animation;
                            if (h) {
                                var l = new _();
                                (this._animationDic[o] = l).image = i.image;
                                for (var u = 0; u < h.length; u++) {
                                    var c = h[u];
                                    l.mAniIdArray.push(c.tileid),
                                    l.mDurationTimeArray.push(c.duration);
                                }
                            }
                        }
                }
            if (this._tileTexSetArr.push(null),
            0 < this._tileSetArray.length) {
                n = this._currTileSet = this._tileSetArray.shift(),
                this._loader = new f(),
                this._loader.once("complete", this, this.onTextureComplete);
                var d = this.mergePath(this._resPath, n.image);
                this._loader.load(d, "image", !1);
            }
        }
        ,
        e.mergePath = function(t, e) {
            var i = ""
              , n = e.split("/")
              , a = 0
              , s = 0;
            for (s = n.length - 1; 0 <= s; s--)
                ".." == n[s] && a++;
            if (0 == a)
                return i = 0 < this._pathArray.length ? t + "/" + e : e;
            var r = this._pathArray.length - a;
            for (r < 0 && console.log("[error]path does not exist", this._pathArray, n, t, e),
            s = 0; s < r; s++)
                0 == s ? i += this._pathArray[s] : i = i + "/" + this._pathArray[s];
            for (s = a; s < n.length; s++)
                i = i + "/" + n[s];
            return i;
        }
        ,
        e.onTextureComplete = function(t) {
            this._jsonData;
            var e = t;
            g.isWebGL && !this._enableLinear && (e.bitmap.minFifter = 9728,
            e.bitmap.magFifter = 9728,
            e.bitmap.enableMerageInAtlas = !1),
            this._texArray.push(e);
            var i = this._currTileSet
              , n = i.tilewidth
              , a = i.tileheight
              , s = i.imagewidth
              , r = i.imageheight
              , o = (i.firstgid,
            Math.floor((s - i.margin - n) / (n + i.spacing)) + 1)
              , h = Math.floor((r - i.margin - a) / (a + i.spacing)) + 1
              , l = null;
            this._texutreStartDic[i.image] = this._tileTexSetArr.length;
            for (var u = 0; u < h; u++)
                for (var c = 0; c < o; c++)
                    (l = new v()).offX = i.titleoffsetX,
                    l.offY = i.titleoffsetY - (a - this._mapTileH),
                    l.texture = y.createFromTexture(e, i.margin + (n + i.spacing) * c, i.margin + (a + i.spacing) * u, n, a),
                    this.antiCrack && this.adptTexture(l.texture),
                    this._tileTexSetArr.push(l),
                    l.gid = this._tileTexSetArr.length;
            if (0 < this._tileSetArray.length) {
                i = this._currTileSet = this._tileSetArray.shift(),
                this._loader.once("complete", this, this.onTextureComplete);
                var d = this.mergePath(this._resPath, i.image);
                this._loader.load(d, "image", !1);
            } else
                this._currTileSet = null,
                this.initMap();
        }
        ,
        e.adptTexture = function(t) {
            if (t) {
                var e = t.uv[0]
                  , i = t.uv[2]
                  , n = t.uv[1]
                  , a = t.uv[7]
                  , s = 1 / t.bitmap.width
                  , r = 1 / t.bitmap.height;
                t.uv[0] = t.uv[6] = e + s,
                t.uv[2] = t.uv[4] = i - s,
                t.uv[1] = t.uv[3] = n + r,
                t.uv[5] = t.uv[7] = a - r;
            }
        }
        ,
        e.initMap = function() {
            var t = 0
              , e = 0;
            for (var i in this._animationDic) {
                var n, a = this._animationDic[i];
                n = this._texutreStartDic[a.image];
                var s = this.getTexture(parseInt(i) + n);
                if (0 < a.mAniIdArray.length) {
                    for (s.textureArray = [],
                    s.durationTimeArray = a.mDurationTimeArray,
                    s.isAnimation = !0,
                    t = s.animationTotalTime = 0,
                    e = s.durationTimeArray.length; t < e; t++)
                        s.animationTotalTime += s.durationTimeArray[t];
                    for (t = 0,
                    e = a.mAniIdArray.length; t < e; t++) {
                        var r = this.getTexture(a.mAniIdArray[t] + n);
                        s.textureArray.push(r);
                    }
                }
            }
            for (this._gridWidth = Math.floor(this._gridWidth / this._mapTileW) * this._mapTileW,
            this._gridHeight = Math.floor(this._gridHeight / this._mapTileH) * this._mapTileH,
            this._gridWidth < this._mapTileW && (this._gridWidth = this._mapTileW),
            this._gridHeight < this._mapTileH && (this._gridHeight = this._mapTileH),
            this._gridW = Math.ceil(this._width / this._gridWidth),
            this._gridH = Math.ceil(this._height / this._gridHeight),
            this._totalGridNum = this._gridW * this._gridH,
            t = 0; t < this._gridH; t++) {
                var o = [];
                this._gridArray.push(o);
                for (var h = 0; h < this._gridW; h++)
                    o.push(null);
            }
            for (var l, u, c, d = this._jsonData.layers, _ = !0, p = 0; p < d.length; p++) {
                var f = d[p];
                if (1 == f.visible) {
                    var g = new S();
                    g.init(f, this),
                    this.enableMergeLayer ? (l = g.getLayerProperties("layer"),
                    (_ = _ || !c || l != u) ? (_ = !1,
                    c = g.tarLayer = g,
                    this._mapSprite.addChild(g),
                    this._renderLayerArray.push(g)) : g.tarLayer = c,
                    u = l) : (this._mapSprite.addChild(g),
                    this._renderLayerArray.push(g)),
                    this._layerArray.push(g);
                }
            }
            this.removeCoveredTile && this.adptTiledMapData(),
            this.cacheAllAfterInit && this.cacheAllGrid(),
            this.moveViewPort(this._rect.x, this._rect.y),
            m.stage.addChild(this.mapSprite()),
            null != this._completeHandler && this._completeHandler.run();
        }
        ,
        e.addTileProperties = function(t) {
            var e;
            for (e in t)
                this._tileProperties2[e] = t[e];
        }
        ,
        e.getTileUserData = function(t, e, i) {
            return this._tileProperties2 && this._tileProperties2[t] && e in this._tileProperties2[t] ? this._tileProperties2[t][e] : i;
        }
        ,
        e.adptTiledMapData = function() {
            var t, e = 0, i = {};
            for (e = this._layerArray.length - 1; 0 <= e; e--)
                (t = this._layerArray[e]._mapData) && (this.removeCoverd(t, i),
                this.collectCovers(t, i, e));
        }
        ,
        e.removeCoverd = function(t, e) {
            var i, n = 0;
            for (i = t.length,
            n = 0; n < i; n++)
                e[n] && (t[n] = 0);
        }
        ,
        e.collectCovers = function(t, e, i) {
            var n, a = 0;
            n = t.length;
            var s = 0;
            for (a = 0; a < n; a++)
                0 < (s = t[a]) && 0 < this.getTileUserData(s - 1, "type", 0) && (e[a] = s);
        }
        ,
        e.getTexture = function(t) {
            return t < this._tileTexSetArr.length ? this._tileTexSetArr[t] : null;
        }
        ,
        e.getMapProperties = function(t) {
            return this._properties ? this._properties[t] : null;
        }
        ,
        e.getTileProperties = function(t, e, i) {
            return this._tileProperties[t] && this._tileProperties[t][e] ? this._tileProperties[t][e][i] : null;
        }
        ,
        e.getSprite = function(t, e, i) {
            if (0 < this._tileTexSetArr.length) {
                var n = new c();
                n.initData(this, !0),
                n.size(e, i);
                var a = this._tileTexSetArr[t];
                if (null != a && null != a.texture) {
                    if (a.isAnimation) {
                        var s = new d();
                        this._index++,
                        s.setTileTextureSet(this._index.toString(), a),
                        n.addAniSprite(s),
                        n.addChild(s);
                    } else
                        n.graphics.drawTexture(a.texture, 0, 0, e, i);
                    n.drawImageNum++;
                }
                return n;
            }
            return null;
        }
        ,
        e.setViewPortPivotByScale = function(t, e) {
            this._pivotScaleX = t,
            this._pivotScaleY = e,
            this._fastDirty = !0;
        }
        ,
        e.moveViewPort = function(t, e) {
            if (this._x = -t,
            this._y = -e,
            this._fastDirty)
                this._rect.x = t,
                this._rect.y = e,
                this.updateViewPort();
            else {
                var i, n;
                i = t - this._rect.x,
                n = e - this._rect.y,
                this._rect.x = t,
                this._rect.y = e,
                this.updateViewPortFast(i, n);
            }
        }
        ,
        e.changeViewPort = function(t, e, i, n) {
            t == this._rect.x && e == this._rect.y && i == this._rect.width && n == this._rect.height || (i != this._rect.width || n != this._rect.height ? (this._fastDirty = !0,
            this._x = -t,
            this._y = -e,
            this._rect.x = t,
            this._rect.y = e,
            this._rect.width = i,
            this._rect.height = n,
            this._viewPortWidth = i / this._scale,
            this._viewPortHeight = n / this._scale,
            this.updateViewPort()) : this.moveViewPort(t, e));
        }
        ,
        e.changeViewPortBySize = function(t, e, i) {
            return null == i && (i = new n()),
            this._centerX = this._rect.x + this._rect.width * this._pivotScaleX,
            this._centerY = this._rect.y + this._rect.height * this._pivotScaleY,
            i.x = this._centerX - t * this._pivotScaleX,
            i.y = this._centerY - e * this._pivotScaleY,
            i.width = t,
            i.height = e,
            this.changeViewPort(i.x, i.y, i.width, i.height),
            i;
        }
        ,
        e.updateViewPortFast = function(t, e) {
            this._centerX += t,
            this._centerY += e,
            this._viewPortX += t,
            this._viewPortY += e;
            var i = !1
              , n = e / this._gridHeight
              , a = t / this._gridWidth;
            this._mapLogicRect.top += n,
            this._mapLogicRect.bottom += n,
            this._mapLogicRect.left += a,
            this._mapLogicRect.right += a,
            this._mapRect.top = 0 | this._mapLogicRect.top,
            this._mapRect.bottom = 0 | this._mapLogicRect.bottom,
            this._mapRect.left = 0 | this._mapLogicRect.left,
            this._mapRect.right = 0 | this._mapLogicRect.right,
            this._mapRect.top == this._mapLastRect.top && this._mapRect.bottom == this._mapLastRect.bottom && this._mapRect.left == this._mapLastRect.left && this._mapRect.right == this._mapLastRect.right || (this.clipViewPort(),
            this._mapLastRect.top = this._mapRect.top,
            this._mapLastRect.bottom = this._mapRect.bottom,
            this._mapLastRect.left = this._mapRect.left,
            this._mapLastRect.right = this._mapRect.right,
            i = !0),
            (i = i || 0 != t || 0 != e) && this.updateMapLayersPos();
        }
        ,
        e.updateMapLayersPos = function() {
            for (var t, e = this._renderLayerArray.length, i = 0; i < e; i++)
                0 < (t = this._renderLayerArray[i])._gridSpriteArray.length && (t.updateAloneObject(),
                t.pos(-this._viewPortX, -this._viewPortY));
        }
        ,
        e.updateViewPort = function() {
            this._fastDirty = !1;
            var t = this._rect.width * this._pivotScaleX
              , e = this._rect.height * this._pivotScaleY;
            this._centerX = this._rect.x + t,
            this._centerY = this._rect.y + e;
            var i = !1
              , n = this._viewPortX;
            (this._viewPortX = this._centerX - t / this._scale,
            n != this._viewPortX ? i = !0 : n = this._viewPortY,
            this._viewPortY = this._centerY - e / this._scale,
            i || n == this._viewPortY || (i = !0),
            this._limitRange) && (this._viewPortX + this._viewPortWidth > this._width && (this._viewPortX = this._width - this._viewPortWidth),
            this._viewPortY + this._viewPortHeight > this._height && (this._viewPortY = this._height - this._viewPortHeight),
            this._viewPortX < 0 && (this._viewPortX = 0),
            this._viewPortY < 0 && (this._viewPortY = 0));
            var a = this._paddingRect;
            this._mapLogicRect.top = (this._viewPortY - a.y) / this._gridHeight,
            this._mapLogicRect.bottom = (this._viewPortY + this._viewPortHeight + a.height + a.y) / this._gridHeight,
            this._mapLogicRect.left = (this._viewPortX - a.x) / this._gridWidth,
            this._mapLogicRect.right = (this._viewPortX + this._viewPortWidth + a.width + a.x) / this._gridWidth,
            this._mapRect.top = 0 | this._mapLogicRect.top,
            this._mapRect.bottom = 0 | this._mapLogicRect.bottom,
            this._mapRect.left = 0 | this._mapLogicRect.left,
            this._mapRect.right = 0 | this._mapLogicRect.right,
            this._mapRect.top == this._mapLastRect.top && this._mapRect.bottom == this._mapLastRect.bottom && this._mapRect.left == this._mapLastRect.left && this._mapRect.right == this._mapLastRect.right || (this.clipViewPort(),
            this._mapLastRect.top = this._mapRect.top,
            this._mapLastRect.bottom = this._mapRect.bottom,
            this._mapLastRect.left = this._mapRect.left,
            this._mapLastRect.right = this._mapRect.right,
            i = !0),
            i && this.updateMapLayersPos();
        }
        ,
        e.clipViewPort = function() {
            var t = 0
              , e = 0
              , i = 0
              , n = 0;
            if (this._mapRect.left > this._mapLastRect.left) {
                if (0 < (t = this._mapRect.left - this._mapLastRect.left))
                    for (n = this._mapLastRect.left; n < this._mapLastRect.left + t; n++)
                        for (i = this._mapLastRect.top; i <= this._mapLastRect.bottom; i++)
                            this.hideGrid(n, i);
            } else if (0 < (e = Math.min(this._mapLastRect.left, this._mapRect.right + 1) - this._mapRect.left))
                for (n = this._mapRect.left; n < this._mapRect.left + e; n++)
                    for (i = this._mapRect.top; i <= this._mapRect.bottom; i++)
                        this.showGrid(n, i);
            if (this._mapRect.right > this._mapLastRect.right) {
                if (0 < (e = this._mapRect.right - this._mapLastRect.right))
                    for (n = Math.max(this._mapLastRect.right + 1, this._mapRect.left); n <= this._mapLastRect.right + e; n++)
                        for (i = this._mapRect.top; i <= this._mapRect.bottom; i++)
                            this.showGrid(n, i);
            } else if (0 < (t = this._mapLastRect.right - this._mapRect.right))
                for (n = this._mapRect.right + 1; n <= this._mapRect.right + t; n++)
                    for (i = this._mapLastRect.top; i <= this._mapLastRect.bottom; i++)
                        this.hideGrid(n, i);
            if (this._mapRect.top > this._mapLastRect.top) {
                if (0 < (t = this._mapRect.top - this._mapLastRect.top))
                    for (i = this._mapLastRect.top; i < this._mapLastRect.top + t; i++)
                        for (n = this._mapLastRect.left; n <= this._mapLastRect.right; n++)
                            this.hideGrid(n, i);
            } else if (0 < (e = Math.min(this._mapLastRect.top, this._mapRect.bottom + 1) - this._mapRect.top))
                for (i = this._mapRect.top; i < this._mapRect.top + e; i++)
                    for (n = this._mapRect.left; n <= this._mapRect.right; n++)
                        this.showGrid(n, i);
            if (this._mapRect.bottom > this._mapLastRect.bottom) {
                if (0 < (e = this._mapRect.bottom - this._mapLastRect.bottom))
                    for (i = Math.max(this._mapLastRect.bottom + 1, this._mapRect.top); i <= this._mapLastRect.bottom + e; i++)
                        for (n = this._mapRect.left; n <= this._mapRect.right; n++)
                            this.showGrid(n, i);
            } else if (0 < (t = this._mapLastRect.bottom - this._mapRect.bottom))
                for (i = this._mapRect.bottom + 1; i <= this._mapRect.bottom + t; i++)
                    for (n = this._mapLastRect.left; n <= this._mapLastRect.right; n++)
                        this.hideGrid(n, i);
        }
        ,
        e.showGrid = function(t, e) {
            if (!(t < 0 || t >= this._gridW || e < 0 || e >= this._gridH)) {
                var i, n = 0, a = this._gridArray[e][t];
                if (null == a)
                    a = this.getGridArray(t, e);
                else
                    for (n = 0; n < a.length && n < this._layerArray.length; n++) {
                        this._layerArray[n] && a[n] && 0 == (i = a[n]).visible && 0 < i.drawImageNum && i.show();
                    }
            }
        }
        ,
        e.cacheAllGrid = function() {
            var t, e = 0, i = 0;
            for (e = 0; e < this._gridW; e++)
                for (i = 0; i < this._gridH; i++)
                    t = this.getGridArray(e, i),
                    this.cacheGridsArray(t);
        }
        ,
        e.cacheGridsArray = function(t) {
            var e;
            s._tempContext || (s._tempContext = new h(1,1,o.create("AUTO"))),
            (e = s._tempContext.canvas).context.asBitmap = !1;
            var i, n, a = 0;
            for (i = t.length,
            a = 0; a < i; a++)
                n = t[a],
                e.clear(),
                e.size(1, 1),
                n.render(s._tempContext, 0, 0),
                n.hide();
            e.clear(),
            e.size(1, 1);
        }
        ,
        e.getGridArray = function(t, e) {
            var i, n = 0, a = 0, s = this._gridArray[e][t];
            if (null == s) {
                s = this._gridArray[e][t] = [];
                var r = 0
                  , o = 0
                  , h = 0
                  , l = 0
                  , u = this._gridWidth
                  , c = this._gridHeight;
                switch (this.orientation) {
                case "isometric":
                    r = Math.floor(t * u),
                    o = Math.floor(t * u + u),
                    h = Math.floor(e * c),
                    l = Math.floor(e * c + c);
                    var d = 0
                      , _ = 0
                      , p = 0
                      , f = 0;
                    break;

                case "staggered":
                    r = Math.floor(t * u / this._mapTileW),
                    o = Math.floor((t * u + u) / this._mapTileW),
                    h = Math.floor(e * c / (this._mapTileH / 2)),
                    l = Math.floor((e * c + c) / (this._mapTileH / 2));
                    break;

                case "orthogonal":
                    r = Math.floor(t * u / this._mapTileW),
                    o = Math.floor((t * u + u) / this._mapTileW),
                    h = Math.floor(e * c / this._mapTileH),
                    l = Math.floor((e * c + c) / this._mapTileH);
                    break;

                case "hexagonal":
                    var g = 2 * this._mapTileH / 3;
                    r = Math.floor(t * u / this._mapTileW),
                    o = Math.ceil((t * u + u) / this._mapTileW),
                    h = Math.floor(e * c / g),
                    l = Math.ceil((e * c + c) / g);
                }
                for (var m, y, v = null, S = 0; S < this._layerArray.length; S++) {
                    var x;
                    switch (v = this._layerArray[S],
                    this.enableMergeLayer ? (v.tarLayer != y && (m = null,
                    y = v.tarLayer),
                    m || (m = y.getDrawSprite(t, e),
                    s.push(m)),
                    i = m) : (i = v.getDrawSprite(t, e),
                    s.push(i)),
                    this._showGridKey && (x = "#",
                    x += this._colorArray[Math.floor(Math.random() * this._colorArray.length)],
                    x += this._colorArray[Math.floor(Math.random() * this._colorArray.length)],
                    x += this._colorArray[Math.floor(Math.random() * this._colorArray.length)]),
                    this.orientation) {
                    case "isometric":
                        var b = this.tileHeight / 2
                          , w = this.tileWidth / 2
                          , M = this._width / 2;
                        p = Math.floor(h / b),
                        f = Math.floor(l / b),
                        d = this._mapW + Math.floor((r - M) / w),
                        _ = this._mapW + Math.floor((o - M) / w);
                        this._mapW;
                        var I = 2 * this._mapH;
                        for (p < 0 && (p = 0),
                        I <= p && (p = I - 1),
                        f < 0 && (l = 0),
                        I <= f && (f = I - 1),
                        i.zOrder = this._totalGridNum * S + e * this._gridW + t,
                        n = p; n < f; n++)
                            for (a = 0; a <= n; a++) {
                                var T = n - a
                                  , C = a
                                  , E = T - C + this._mapW;
                                d < E && E <= _ && v.drawTileTexture(i, T, C) && i.drawImageNum++;
                            }
                        break;

                    case "staggered":
                        for (i.zOrder = S * this._totalGridNum + e * this._gridW + t,
                        n = h; n < l; n++)
                            for (a = r; a < o; a++)
                                v.drawTileTexture(i, a, n) && i.drawImageNum++;
                        break;

                    case "orthogonal":
                    case "hexagonal":
                        switch (this._renderOrder) {
                        case "right-down":
                            for (i.zOrder = S * this._totalGridNum + e * this._gridW + t,
                            n = h; n < l; n++)
                                for (a = r; a < o; a++)
                                    v.drawTileTexture(i, a, n) && i.drawImageNum++;
                            break;

                        case "right-up":
                            for (i.zOrder = S * this._totalGridNum + (this._gridH - 1 - e) * this._gridW + t,
                            n = l - 1; h <= n; n--)
                                for (a = r; a < o; a++)
                                    v.drawTileTexture(i, a, n) && i.drawImageNum++;
                            break;

                        case "left-down":
                            for (i.zOrder = S * this._totalGridNum + e * this._gridW + (this._gridW - 1 - t),
                            n = h; n < l; n++)
                                for (a = o - 1; r <= a; a--)
                                    v.drawTileTexture(i, a, n) && i.drawImageNum++;
                            break;

                        case "left-up":
                            for (i.zOrder = S * this._totalGridNum + (this._gridH - 1 - e) * this._gridW + (this._gridW - 1 - t),
                            n = l - 1; h <= n; n--)
                                for (a = o - 1; r <= a; a--)
                                    v.drawTileTexture(i, a, n) && i.drawImageNum++;
                        }
                    }
                    i.isHaveAnimation || (i.autoSize = !0,
                    this.autoCache && (i.cacheAs = this.autoCacheType),
                    i.autoSize = !1),
                    this.enableMergeLayer ? m && 0 < m.drawImageNum && y && (y.addChild(m),
                    m.visible = !1,
                    m.show()) : (0 < i.drawImageNum && (v.addChild(i),
                    i.visible = !1,
                    i.show()),
                    this._showGridKey && i.graphics.drawRect(0, 0, u, c, null, x));
                }
                this.enableMergeLayer && this.showGridTextureCount && m && m.graphics.fillText(m.drawImageNum + "", 20, 20, null, "#ff0000", "left");
            }
            return s;
        }
        ,
        e.hideGrid = function(t, e) {
            if (!(t < 0 || t >= this._gridW || e < 0 || e >= this._gridH)) {
                var i = this._gridArray[e][t];
                if (i)
                    for (var n, a = 0; a < i.length; a++)
                        0 < (n = i[a]).drawImageNum && null != n && n.hide();
            }
        }
        ,
        e.getLayerObject = function(t, e) {
            for (var i = null, n = 0; n < this._layerArray.length && (i = this._layerArray[n]).layerName != t; n++)
                ;
            return i ? i.getObjectByName(e) : null;
        }
        ,
        e.destroy = function() {
            this._orientation = "orthogonal",
            this._jsonData = null;
            var t, e = 0;
            for (this._gridArray = [],
            e = 0; e < this._tileTexSetArr.length; e++)
                (t = this._tileTexSetArr[e]) && t.clearAll();
            for (this._tileTexSetArr = [],
            e = 0; e < this._texArray.length; e++)
                this._texArray[e].destroy();
            for (this._texArray = [],
            this._width = 0,
            this._height = 0,
            this._mapW = 0,
            this._mapH = 0,
            this._mapTileW = 0,
            this._mapTileH = 0,
            this._rect.setTo(0, 0, 0, 0),
            e = 0; e < this._layerArray.length; e++)
                this._layerArray[e].clearAll();
            this._layerArray = [],
            this._renderLayerArray = [],
            this._mapSprite && (this._mapSprite.destroy(),
            this._mapSprite = null),
            this._jsonLoader = null,
            this._loader = null;
            var i = this._animationDic;
            for (var n in i)
                delete i[n];
            for (n in this._properties = null,
            i = this._tileProperties)
                delete i[n];
            this._currTileSet = null,
            this._completeHandler = null,
            this._mapRect.clearAll(),
            this._mapLastRect.clearAll(),
            this._tileSetArray = [],
            this._gridWidth = 450,
            this._gridHeight = 450,
            this._gridW = 0,
            this._gridH = 0,
            this._x = 0,
            this._y = 0,
            this._index = 0,
            this._enableLinear = !0,
            this._resPath = null,
            this._pathArray = null;
        }
        ,
        e.mapSprite = function() {
            return this._mapSprite;
        }
        ,
        e.getLayerByName = function(t) {
            for (var e, i = 0; i < this._layerArray.length; i++)
                if (t == (e = this._layerArray[i]).layerName)
                    return e;
            return null;
        }
        ,
        e.getLayerByIndex = function(t) {
            return t < this._layerArray.length ? this._layerArray[t] : null;
        }
        ,
        i(0, e, "orientation", function() {
            return this._orientation;
        }),
        i(0, e, "viewPortX", function() {
            return -this._viewPortX;
        }),
        i(0, e, "scale", function() {
            return this._scale;
        }, function(t) {
            t <= 0 || (this._scale = t,
            this._viewPortWidth = this._rect.width / t,
            this._viewPortHeight = this._rect.height / t,
            this._mapSprite.scale(this._scale, this._scale),
            this.updateViewPort());
        }),
        i(0, e, "tileWidth", function() {
            return this._mapTileW;
        }),
        i(0, e, "viewPortY", function() {
            return -this._viewPortY;
        }),
        i(0, e, "tileHeight", function() {
            return this._mapTileH;
        }),
        i(0, e, "width", function() {
            return this._width;
        }),
        i(0, e, "numRowsTile", function() {
            return this._mapH;
        }),
        i(0, e, "numColumnsTile", function() {
            return this._mapW;
        }),
        i(0, e, "height", function() {
            return this._height;
        }),
        i(0, e, "viewPortWidth", function() {
            return this._viewPortWidth;
        }),
        i(0, e, "viewPortHeight", function() {
            return this._viewPortHeight;
        }),
        i(0, e, "x", function() {
            return this._x;
        }),
        i(0, e, "y", function() {
            return this._y;
        }),
        i(0, e, "gridWidth", function() {
            return this._gridWidth;
        }),
        i(0, e, "gridHeight", function() {
            return this._gridHeight;
        }),
        i(0, e, "numColumnsGrid", function() {
            return this._gridW;
        }),
        i(0, e, "numRowsGrid", function() {
            return this._gridH;
        }),
        i(0, e, "renderOrder", function() {
            return this._renderOrder;
        }),
        s.ORIENTATION_ORTHOGONAL = "orthogonal",
        s.ORIENTATION_ISOMETRIC = "isometric",
        s.ORIENTATION_STAGGERED = "staggered",
        s.ORIENTATION_HEXAGONAL = "hexagonal",
        s.RENDERORDER_RIGHTDOWN = "right-down",
        s.RENDERORDER_RIGHTUP = "right-up",
        s.RENDERORDER_LEFTDOWN = "left-down",
        s.RENDERORDER_LEFTUP = "left-up",
        s._tempContext = null,
        s.__init$ = function() {
            t = function() {
                function t() {
                    this.left = 0,
                    this.top = 0,
                    this.right = 0,
                    this.bottom = 0;
                }
                return r(t, ""),
                t.prototype.clearAll = function() {
                    this.left = this.top = this.right = this.bottom = 0;
                }
                ,
                t;
            }(),
            _ = function() {
                function t() {
                    this.mAniIdArray = [],
                    this.mDurationTimeArray = [],
                    this.mTileTexSetArr = [],
                    this.image = null;
                }
                return r(t, ""),
                t;
            }(),
            p = function() {
                function t() {
                    this.firstgid = 0,
                    this.image = "",
                    this.imageheight = 0,
                    this.imagewidth = 0,
                    this.margin = 0,
                    this.name = 0,
                    this.properties = null,
                    this.spacing = 0,
                    this.tileheight = 0,
                    this.tilewidth = 0,
                    this.titleoffsetX = 0,
                    this.titleoffsetY = 0,
                    this.tileproperties = null;
                }
                return r(t, ""),
                t.prototype.init = function(t) {
                    this.firstgid = t.firstgid,
                    this.image = t.image,
                    this.imageheight = t.imageheight,
                    this.imagewidth = t.imagewidth,
                    this.margin = t.margin,
                    this.name = t.name,
                    this.properties = t.properties,
                    this.spacing = t.spacing,
                    this.tileheight = t.tileheight,
                    this.tilewidth = t.tilewidth,
                    this.tileproperties = t.tileproperties;
                    var e = t.tileoffset;
                    e && (this.titleoffsetX = e.x,
                    this.titleoffsetY = e.y);
                }
                ,
                t;
            }();
        }
        ,
        s;
    }()
      , v = function() {
        function t() {
            this.gid = -1,
            this.texture = null,
            this.offX = 0,
            this.offY = 0,
            this.textureArray = null,
            this.durationTimeArray = null,
            this.animationTotalTime = 0,
            this.isAnimation = !1,
            this._spriteNum = 0,
            this._aniDic = null,
            this._frameIndex = 0,
            this._time = 0,
            this._interval = 0,
            this._preFrameTime = 0;
        }
        r(t, "laya.map.TileTexSet");
        var e = t.prototype;
        return e.addAniSprite = function(t, e) {
            if (0 != this.animationTotalTime && (null == this._aniDic && (this._aniDic = {}),
            0 == this._spriteNum && (m.timer.frameLoop(3, this, this.animate),
            this._preFrameTime = s.now(),
            this._frameIndex = 0,
            this._time = 0,
            this._interval = 0),
            this._spriteNum++,
            this._aniDic[t] = e,
            this.textureArray && this._frameIndex < this.textureArray.length)) {
                var i = this.textureArray[this._frameIndex];
                this.drawTexture(e, i);
            }
        }
        ,
        e.animate = function() {
            if (this.textureArray && 0 < this.textureArray.length && this.durationTimeArray && 0 < this.durationTimeArray.length) {
                var t = s.now();
                this._interval = t - this._preFrameTime,
                this._preFrameTime = t,
                this._interval > this.animationTotalTime && (this._interval = this._interval % this.animationTotalTime),
                this._time += this._interval;
                for (var e = this.durationTimeArray[this._frameIndex]; this._time > e; ) {
                    this._time -= e,
                    this._frameIndex++,
                    (this._frameIndex >= this.durationTimeArray.length || this._frameIndex >= this.textureArray.length) && (this._frameIndex = 0);
                    var i, n = this.textureArray[this._frameIndex];
                    for (var a in this._aniDic)
                        i = this._aniDic[a],
                        this.drawTexture(i, n);
                    e = this.durationTimeArray[this._frameIndex];
                }
            }
        }
        ,
        e.drawTexture = function(t, e) {
            t.graphics.clear(),
            t.graphics.drawTexture(e.texture, e.offX, e.offY);
        }
        ,
        e.removeAniSprite = function(t) {
            this._aniDic && this._aniDic[t] && (delete this._aniDic[t],
            this._spriteNum--,
            0 == this._spriteNum && m.timer.clear(this, this.animate));
        }
        ,
        e.showDebugInfo = function() {
            var t = null;
            return 0 < this._spriteNum && (t = "TileTextureSet::gid:" + this.gid.toString() + " 动画数:" + this._spriteNum.toString()),
            t;
        }
        ,
        e.clearAll = function() {
            this.gid = -1,
            this.texture && (this.texture.destroy(),
            this.texture = null),
            this.offX = 0,
            this.offY = 0,
            this.textureArray = null,
            this.durationTimeArray = null,
            this.isAnimation = !1,
            this._spriteNum = 0,
            this._aniDic = null,
            this._frameIndex = 0,
            this._preFrameTime = 0,
            this._time = 0,
            this._interval = 0;
        }
        ,
        t;
    }()
      , c = function(n) {
        function t() {
            this.relativeX = 0,
            this.relativeY = 0,
            this.isAloneObject = !1,
            this.isHaveAnimation = !1,
            this.aniSpriteArray = null,
            this.drawImageNum = 0,
            this._map = null,
            t.__super.call(this);
        }
        r(t, "laya.map.GridSprite", n);
        var e = t.prototype;
        return e.initData = function(t, e) {
            void 0 === e && (e = !1),
            this._map = t,
            this.isAloneObject = e;
        }
        ,
        e._setDisplay = function(t) {
            if (!t) {
                var e = this._$P.cacheCanvas;
                e && e.ctx && (e.ctx.canvas.destroy(),
                e.ctx = null);
                var i = this._$P._filterCache;
                i && (i.destroy(),
                i.recycle(),
                this._set$P("_filterCache", null)),
                this._$P._isHaveGlowFilter && this._set$P("_isHaveGlowFilter", !1);
            }
            n.prototype._setDisplay.call(this, t);
        }
        ,
        e.addAniSprite = function(t) {
            null == this.aniSpriteArray && (this.aniSpriteArray = []),
            this.aniSpriteArray.push(t);
        }
        ,
        e.show = function() {
            if (!this.visible) {
                var t;
                if (this.visible = !0,
                !this.isAloneObject)
                    (t = this.parent) && t.showGridSprite(this);
                if (!g.isWebGL && this._map.autoCache && (this.cacheAs = this._map.autoCacheType),
                null == this.aniSpriteArray)
                    return;
                for (var e = 0; e < this.aniSpriteArray.length; e++)
                    this.aniSpriteArray[e].show();
            }
        }
        ,
        e.hide = function() {
            if (this.visible) {
                var t;
                if (this.visible = !1,
                !this.isAloneObject)
                    (t = this.parent) && t.hideGridSprite(this);
                if (!g.isWebGL && this._map.autoCache && (this.cacheAs = "none"),
                null == this.aniSpriteArray)
                    return;
                for (var e = 0; e < this.aniSpriteArray.length; e++)
                    this.aniSpriteArray[e].hide();
            }
        }
        ,
        e.updatePos = function() {
            this.isAloneObject ? (this._map && (this.x = this.relativeX,
            this.y = this.relativeY),
            this.x < 0 || this.x > this._map.viewPortWidth || this.y < 0 || this.y > this._map.viewPortHeight ? this.hide() : this.show()) : this._map && (this.x = this.relativeX,
            this.y = this.relativeY);
        }
        ,
        e.clearAll = function() {
            if (this._map && (this._map = null),
            this.visible = !1,
            null != this.aniSpriteArray)
                for (var t = 0; t < this.aniSpriteArray.length; t++)
                    this.aniSpriteArray[t].clearAll();
            this.destroy(),
            this.relativeX = 0,
            this.relativeY = 0,
            this.isHaveAnimation = !1,
            this.aniSpriteArray = null,
            this.drawImageNum = 0;
        }
        ,
        t;
    }(a)
      , S = function(a) {
        function t() {
            this._map = null,
            this._mapData = null,
            this._tileWidthHalf = 0,
            this._tileHeightHalf = 0,
            this._mapWidthHalf = 0,
            this._mapHeightHalf = 0,
            this._gridSpriteArray = [],
            this._objDic = null,
            this._dataDic = null,
            this._properties = null,
            this.tarLayer = null,
            this.layerName = null,
            this._showGridList = [],
            this._aloneObjs = [],
            t.__super.call(this),
            this._tempMapPos = new u();
        }
        r(t, "laya.map.MapLayer", a);
        var e = t.prototype;
        return e.init = function(t, e) {
            this._map = e,
            this._mapData = t.data;
            t.height,
            t.width;
            var i = e.tileWidth
              , n = e.tileHeight;
            switch (this.layerName = t.name,
            this._properties = t.properties,
            this.alpha = t.opacity,
            this._tileWidthHalf = i / 2,
            this._tileHeightHalf = n / 2,
            this._mapWidthHalf = this._map.width / 2 - this._tileWidthHalf,
            this._mapHeightHalf = this._map.height / 2,
            t.type) {
            case "tilelayer":
                break;

            case "objectgroup":
                var a, s = t.objects;
                0 < s.length && (this._objDic = {},
                this._dataDic = {});
                for (var r = NaN, o = NaN, h = 0; h < s.length; h++)
                    if (a = s[h],
                    1 == (this._dataDic[a.name] = a).visible) {
                        r = a.width,
                        o = a.height;
                        var l = e.getSprite(a.gid, r, o);
                        if (null != l) {
                            switch (this._map.orientation) {
                            case "isometric":
                                this.getScreenPositionByTilePos(a.x / n, a.y / n, u.TEMP),
                                l.pivot(r / 2, o / 2),
                                l.rotation = a.rotation,
                                l.x = l.relativeX = u.TEMP.x + this._map.viewPortX,
                                l.y = l.relativeY = u.TEMP.y + this._map.viewPortY - o / 2;
                                break;

                            case "staggered":
                            case "orthogonal":
                                l.pivot(r / 2, o / 2),
                                l.rotation = a.rotation,
                                l.x = l.relativeX = a.x + r / 2,
                                l.y = l.relativeY = a.y - o / 2;
                                break;

                            case "hexagonal":
                                l.x = l.relativeX = a.x,
                                l.y = l.relativeY = a.y;
                            }
                            this.addChild(l),
                            this._gridSpriteArray.push(l),
                            l.isAloneObject && (this._showGridList.push(l),
                            this._aloneObjs.push(l)),
                            this._objDic[a.name] = l;
                        }
                    }
            }
        }
        ,
        e.getObjectByName = function(t) {
            return this._objDic ? this._objDic[t] : null;
        }
        ,
        e.getObjectDataByName = function(t) {
            return this._dataDic ? this._dataDic[t] : null;
        }
        ,
        e.getLayerProperties = function(t) {
            return this._properties ? this._properties[t] : null;
        }
        ,
        e.getTileData = function(t, e) {
            if (0 <= e && e < this._map.numRowsTile && 0 <= t && t < this._map.numColumnsTile) {
                var i = e * this._map.numColumnsTile + t
                  , n = this._mapData;
                if (null != n && i < n.length)
                    return n[i];
            }
            return 0;
        }
        ,
        e.getScreenPositionByTilePos = function(t, e, i) {
            if (i) {
                switch (this._map.orientation) {
                case "isometric":
                    i.x = this._map.width / 2 - (e - t) * this._tileWidthHalf,
                    i.y = (e + t) * this._tileHeightHalf;
                    break;

                case "staggered":
                    t = Math.floor(t),
                    e = Math.floor(e),
                    i.x = t * this._map.tileWidth + (1 & e) * this._tileWidthHalf,
                    i.y = e * this._tileHeightHalf;
                    break;

                case "orthogonal":
                    i.x = t * this._map.tileWidth,
                    i.y = e * this._map.tileHeight;
                    break;

                case "hexagonal":
                    t = Math.floor(t),
                    e = Math.floor(e);
                    var n = 2 * this._map.tileHeight / 3;
                    i.x = (t * this._map.tileWidth + e % 2 * this._tileWidthHalf) % this._map.gridWidth,
                    i.y = e * n % this._map.gridHeight;
                }
                i.x = (i.x + this._map.viewPortX) * this._map.scale,
                i.y = (i.y + this._map.viewPortY) * this._map.scale;
            }
        }
        ,
        e.getTileDataByScreenPos = function(t, e) {
            var i = 0;
            return this.getTilePositionByScreenPos(t, e, this._tempMapPos) && (i = this.getTileData(Math.floor(this._tempMapPos.x), Math.floor(this._tempMapPos.y))),
            i;
        }
        ,
        e.getTilePositionByScreenPos = function(t, e, i) {
            t = t / this._map.scale - this._map.viewPortX,
            e = e / this._map.scale - this._map.viewPortY;
            var n = this._map.tileWidth
              , a = this._map.tileHeight
              , s = 0
              , r = 0;
            switch (this._map.orientation) {
            case "isometric":
                var o = t - this._map.width / 2;
                return s = -(o / n - e / a),
                r = o / n + e / a,
                i && (i.x = r,
                i.y = s),
                !0;

            case "staggered":
                if (i) {
                    var h, l;
                    h = (t - (Math.floor(t / n) * n + n / 2)) * a / 2,
                    l = (e - (Math.floor(e / a) * a + a / 2)) * n / 2,
                    s = Math.abs(h) + Math.abs(l) <= n * a / 4 ? (r = Math.floor(t / n),
                    2 * Math.floor(e / a)) : (t -= n / 2,
                    r = Math.floor(t / n) + 1,
                    e -= a / 2,
                    2 * Math.floor(e / a) + 1),
                    i.x = r - (1 & s),
                    i.y = s;
                }
                return !0;

            case "orthogonal":
                return r = t / n,
                s = e / a,
                i && (i.x = r,
                i.y = s),
                !0;

            case "hexagonal":
                r = (t - (s = e / (2 * a / 3)) % 2 * this._tileWidthHalf) / n,
                i && (i.x = r,
                i.y = s);
            }
            return !1;
        }
        ,
        e.getDrawSprite = function(t, e) {
            var i = new c();
            return i.relativeX = t * this._map.gridWidth,
            i.relativeY = e * this._map.gridHeight,
            i.initData(this._map),
            i.updatePos(),
            this._gridSpriteArray.push(i),
            i;
        }
        ,
        e.showGridSprite = function(t) {
            var e, i = this._showGridList, n = 0;
            e = i.length;
            var a, s = -1;
            for (n = 0; n < e; n++) {
                if ((a = i[n]) == t)
                    return;
                a.isAloneObject || a.visible || (s = n);
            }
            0 <= s ? i[s] = t : i.push(t);
        }
        ,
        e.hideGridSprite = function(t) {
            t.visible = !1;
        }
        ,
        e.updateGridPos = function() {
            var t, e, i;
            i = (e = this._showGridList).length;
            for (var n = 0; n < i; n++)
                ((t = e[n])._style.visible || t.isAloneObject) && 0 < t.drawImageNum && t.updatePos();
        }
        ,
        e.updateAloneObject = function() {
            var t, e, i;
            i = (e = this._aloneObjs).length;
            for (var n = 0; n < i; n++)
                0 < (t = e[n]).drawImageNum && t.updatePos();
        }
        ,
        e.render = function(t, e, i) {
            var n = this._childs;
            this._childs = this._showGridList,
            a.prototype.render.call(this, t, e, i),
            this._childs = n;
        }
        ,
        e.drawTileTexture = function(t, e, i) {
            if (0 <= i && i < this._map.numRowsTile && 0 <= e && e < this._map.numColumnsTile) {
                var n = i * this._map.numColumnsTile + e
                  , a = this._mapData;
                if (null != a && n < a.length && 0 != a[n]) {
                    var s = this._map.getTexture(a[n]);
                    if (s) {
                        var r = 0
                          , o = 0;
                        s.texture;
                        switch (this._map.orientation) {
                        case "staggered":
                            r = e * this._map.tileWidth % this._map.gridWidth + (1 & i) * this._tileWidthHalf,
                            o = i * this._tileHeightHalf % this._map.gridHeight;
                            break;

                        case "orthogonal":
                            r = e * this._map.tileWidth % this._map.gridWidth,
                            o = i * this._map.tileHeight % this._map.gridHeight;
                            break;

                        case "isometric":
                            r = (this._mapWidthHalf + (e - i) * this._tileWidthHalf) % this._map.gridWidth,
                            o = (e + i) * this._tileHeightHalf % this._map.gridHeight;
                            break;

                        case "hexagonal":
                            var h = 2 * this._map.tileHeight / 3;
                            r = (e * this._map.tileWidth + i % 2 * this._tileWidthHalf) % this._map.gridWidth,
                            o = i * h % this._map.gridHeight;
                        }
                        if (s.isAnimation) {
                            var l = new d();
                            l.x = r,
                            l.y = o,
                            l.setTileTextureSet(n.toString(), s),
                            t.addAniSprite(l),
                            t.addChild(l),
                            t.isHaveAnimation = !0;
                        } else
                            t.graphics.drawTexture(s.texture, r + s.offX, o + s.offY);
                        return !0;
                    }
                }
            }
            return !1;
        }
        ,
        e.clearAll = function() {
            this._map = null,
            this._mapData = null,
            this._tileWidthHalf = 0,
            this._tileHeightHalf = 0,
            this._mapWidthHalf = 0,
            this._mapHeightHalf = 0,
            this.layerName = null;
            var t = 0;
            if (this._objDic) {
                for (var e in this._objDic)
                    delete this._objDic[e];
                this._objDic = null;
            }
            if (this._dataDic) {
                for (e in this._dataDic)
                    delete this._dataDic[e];
                this._dataDic = null;
            }
            for (t = 0; t < this._gridSpriteArray.length; t++)
                this._gridSpriteArray[t].clearAll();
            this._properties = null,
            this._tempMapPos = null,
            this.tarLayer = null;
        }
        ,
        t;
    }(a)
      , d = function(t) {
        function e() {
            this._tileTextureSet = null,
            this._aniName = null,
            e.__super.call(this);
        }
        r(e, "laya.map.TileAniSprite", a);
        var i = e.prototype;
        return i.setTileTextureSet = function(t, e) {
            this._aniName = t,
            (this._tileTextureSet = e).addAniSprite(this._aniName, this);
        }
        ,
        i.show = function() {
            this._tileTextureSet.addAniSprite(this._aniName, this);
        }
        ,
        i.hide = function() {
            this._tileTextureSet.removeAniSprite(this._aniName);
        }
        ,
        i.clearAll = function() {
            this._tileTextureSet.removeAniSprite(this._aniName),
            this.destroy(),
            this._tileTextureSet = null,
            this._aniName = null;
        }
        ,
        e;
    }();
    m.__init([l]);
}(window, document, Laya),
"function" == typeof define && define.amd && define("laya.core", ["require", "exports"], function(t, e) {
    "use strict";
    for (var i in Object.defineProperty(e, "__esModule", {
        value: !0
    }),
    Laya) {
        var n = Laya[i];
        n && n.__isclass && (e[i] = n);
    }
}),
function(t) {
    !function(t) {
        var i = function() {
            function t(t) {
                this.Id = t,
                this.Rank = 0,
                this.Parent = this;
            }
            return t.prototype.equal = function(t) {
                return t && t.Id == this.Id;
            }
            ,
            t;
        }();
        t.UnionFindNode = i;
        var e = function() {
            function t() {
                this._nodes = new laya.utils.Dictionary();
            }
            return t.prototype.findNode = function(t) {
                var e = this._nodes.get(t);
                if (e) {
                    for (; e.Id != e.Parent.Id; )
                        e = e.Parent;
                    return e;
                }
                return e = new i(t),
                this._nodes.set(t, e),
                e;
            }
            ,
            t.prototype.find = function(t) {
                return this.findNode(t).Id;
            }
            ,
            t.prototype.union = function(t, e) {
                var i = this.findNode(t)
                  , n = this.findNode(e);
                i.Id != n.Id && (i.Rank < n.Rank ? i.Parent = n : i.Rank > n.Rank ? n.Parent = i : (i.Parent = n,
                i.Rank++));
            }
            ,
            t;
        }();
        t.UnionFind = e;
    }(t.phys || (t.phys = {}));
}(asgard || (asgard = {})),
function(e) {
    var a, t;
    a = e.phys || (e.phys = {}),
    t = function() {
        function t() {
            this.RESTITUTION = 1,
            this.LATERAL_FRICTION = 1,
            this.ROTATIONAL_FRICTION = 3,
            this.movableBodies = new e.utils.SimpleList(),
            this.fixedBodies = new e.utils.SimpleList(),
            this.collisions = new e.utils.SimpleList(),
            this._moveableCursor = new e.utils.SimpleCursor(),
            this._moveableCursor2 = new e.utils.SimpleCursor(),
            this._fixedCursor = new e.utils.SimpleCursor(),
            this._collisionCursor = new e.utils.SimpleCursor(),
            this.RESTITUTION = 1,
            this.LATERAL_FRICTION = 1,
            this.ROTATIONAL_FRICTION = 3;
        }
        return t.prototype.appendMoveableBody = function(t) {
            t && this.movableBodies.add(t);
        }
        ,
        t.prototype.appendFixedBody = function(t) {
            t && this.fixedBodies.add(t);
        }
        ,
        t.prototype.clear = function() {}
        ,
        t.prototype.onFrame = function(t, e) {
            for (this.doCollide(e),
            this.movableBodies.createCursor(this._moveableCursor); this._moveableCursor.Available; )
                this._moveableCursor.Data.applyForces(e),
                this._moveableCursor.next();
            for (this.collisions.createCursor(this._collisionCursor); this._collisionCursor.Available; )
                this._collisionCursor.Data.apply(),
                this._collisionCursor.next();
            for (this.movableBodies.createCursor(this._moveableCursor); this._moveableCursor.Available; )
                this._moveableCursor.Data.advance(e),
                this._moveableCursor.next();
        }
        ,
        t.prototype.doCollide = function(t) {
            if (this.collisions.clear(),
            1 < this.movableBodies.Count) {
                var e = void 0
                  , i = void 0;
                for (this.movableBodies.createCursor(this._moveableCursor); this._moveableCursor.Available; ) {
                    for (e = this._moveableCursor.Data,
                    this._moveableCursor.clone(this._moveableCursor2),
                    this._moveableCursor2.next(); this._moveableCursor2.Available; ) {
                        i = this._moveableCursor2.Data,
                        null !== (n = a.Body.collide(this, e, i, t)) && this.collisions.add(n),
                        this._moveableCursor2.next();
                    }
                    this._moveableCursor.next();
                }
                for (this.movableBodies.createCursor(this._moveableCursor); this._moveableCursor.Available; ) {
                    for (e = this._moveableCursor.Data,
                    this.fixedBodies.createCursor(this._fixedCursor); this._fixedCursor.Available; ) {
                        var n;
                        i = this._fixedCursor.Data,
                        null !== (n = a.Body.collide(this, e, i, t)) && this.collisions.add(n),
                        this._fixedCursor.next();
                    }
                    this._moveableCursor.next();
                }
            }
            a.Collision.mergeCollisions(this.collisions);
        }
        ,
        t;
    }(),
    a.PlainPhysics = t;
}(asgard || (asgard = {})),
function(h) {
    var t, e;
    t = h.phys || (h.phys = {}),
    e = function() {
        function t(t, e, i, n, a, s, r) {
            this.collidingEntity = t,
            this.impactedEntity = e,
            this.normal_x = i,
            this.normal_y = n,
            this.contactPoint_x = a,
            this.contactPoint_y = s,
            this.separation = r,
            this.accumulatedImpulse = 0,
            this.nv1 = new h.math.Vector2(0,0),
            this.nw1 = 0,
            this.nv2 = new h.math.Vector2(0,0),
            this.nw2 = 0;
        }
        return t.prototype.getNormalMass = function() {
            var t = this.collidingEntity.origin
              , e = t.x - this.contactPoint_x
              , i = t.y - this.contactPoint_y
              , n = this.impactedEntity.origin
              , a = n.x - this.contactPoint_x
              , s = n.y - this.contactPoint_y
              , r = h.math.Vector2.cross(e, i, this.normal_x, this.normal_y);
            r *= r;
            var o = h.math.Vector2.cross(a, s, this.normal_x, this.normal_y);
            return o *= o,
            1 / (this.collidingEntity.invertedMass() + this.impactedEntity.invertedMass() + r * this.collidingEntity.invertedInertia() + o * this.impactedEntity.invertedInertia());
        }
        ,
        t.prototype.addTempVelocities = function(t, e, i, n, a, s) {
            this.nv1.x += t,
            this.nv1.y += e,
            this.nw1 += i,
            this.nv2.x += n,
            this.nv2.y += a,
            this.nw2 += s;
        }
        ,
        t.prototype.applyTempVelocities = function() {
            this.collidingEntity.addVelocity(this.nv1),
            this.collidingEntity.addAngularVelocity(this.nw1),
            this.impactedEntity.addVelocity(this.nv2),
            this.impactedEntity.addAngularVelocity(this.nw2),
            this.nv1.clear(),
            this.nw1 = 0,
            this.nv2.clear(),
            this.nw2 = 0;
        }
        ,
        t;
    }(),
    t.CollisionPoint = e;
}(asgard || (asgard = {})),
function(k) {
    var l, t;
    l = k.phys || (k.phys = {}),
    t = function() {
        function t(t) {
            this.state = t,
            this.collisionPoints = new Array();
        }
        return t.prototype.merge = function(t) {
            this.collisionPoints.concat(t.collisionPoints);
        }
        ,
        t.prototype.apply = function() {
            var t = this.collisionPoints.length
              , e = new Array()
              , i = new Array()
              , n = 0
              , a = 0
              , s = Number.MAX_VALUE;
            do {
                0 < a && (s = a);
                for (var r = a = 0; r < t; r++) {
                    var o = this.collisionPoints[r]
                      , h = o.collidingEntity.velocity
                      , l = o.collidingEntity.angularVelocity
                      , u = o.impactedEntity.velocity
                      , c = o.impactedEntity.angularVelocity
                      , d = o.collidingEntity.origin
                      , _ = o.contactPoint_x - d.x
                      , p = o.contactPoint_y - d.y
                      , f = o.impactedEntity.origin
                      , g = o.contactPoint_x - f.x
                      , m = o.contactPoint_y - f.y
                      , y = o.getNormalMass()
                      , v = -l * p
                      , S = l * _;
                    v -= -c * m,
                    S -= c * g,
                    v -= u.x,
                    S -= u.y,
                    v += h.x,
                    S += h.y,
                    0 === n && (e[r] = v * this.state.RESTITUTION,
                    i[r] = S * this.state.RESTITUTION);
                    var x = -(k.math.Vector2.dot(e[r], i[r], o.normal_x, o.normal_y) + k.math.Vector2.dot(v, S, o.normal_x, o.normal_y)) * y
                      , b = o.accumulatedImpulse;
                    o.accumulatedImpulse = Math.max(o.accumulatedImpulse + x, 0),
                    x = o.accumulatedImpulse - b,
                    a += Math.abs(x);
                    var w = o.normal_x * x
                      , M = o.normal_y * x
                      , I = o.collidingEntity.invertedMass()
                      , T = w * I
                      , C = M * I
                      , E = o.collidingEntity.invertedInertia() * k.math.Vector2.cross(_, p, w, M)
                      , P = o.impactedEntity.invertedMass()
                      , A = w * P
                      , L = M * P;
                    A = -A,
                    L = -L;
                    var D = -o.impactedEntity.invertedInertia() * k.math.Vector2.cross(g, m, w, M);
                    o.addTempVelocities(T, C, E, A, L, D);
                }
                for (var R = 0; R < t; R++)
                    this.collisionPoints[R].applyTempVelocities();
                n++;
            } while (1 < t && .001 < a && n < 50 && a <= s);
        }
        ,
        t.mergeCollisions = function(e) {
            if (e && !(e.Count <= 1)) {
                var t, i, n, a = new l.UnionFind(), s = new k.utils.SimpleCursor();
                for (e.createCursor(s); s.Available; )
                    n = (t = s.Data).collisionPoints[0],
                    a.union(n.collidingEntity.id, n.impactedEntity.id),
                    s.next();
                var r = new laya.utils.Dictionary();
                for (e.createCursor(s); s.Available; ) {
                    var o = (t = s.Data).collisionPoints[0]
                      , h = a.find(o.collidingEntity.id);
                    (i = r.get(h)) ? i.merge(t) : r.set(h, t),
                    s.next();
                }
                e.clear(),
                r.values.forEach(function(t) {
                    e.add(t);
                });
            }
        }
        ,
        t;
    }(),
    l.Collision = t;
}(asgard || (asgard = {})),
function(m) {
    !function(t) {
        var e = function() {
            function t() {}
            return t.readBoolean = function(t) {
                return .1 < t.getByte();
            }
            ,
            t.readByte = function(t) {
                return t.getByte();
            }
            ,
            t.readShort = function(t) {
                return t.getInt16();
            }
            ,
            t.readInt = function(t) {
                return t.getInt32();
            }
            ,
            t.readInt64 = function(t) {
                var e = t.getInt32()
                  , i = t.getInt32();
                return new m.utils.Int64(e,i);
            }
            ,
            t.readFloat = function(t) {
                return t.getFloat32();
            }
            ,
            t.readDouble = function(t) {
                return t.getFloat64();
            }
            ,
            t.readString = function(t) {
                return t.getUTFString();
            }
            ,
            t;
        }();
        t.DataUtil = e;
        var r, i, n = function() {
            function r() {}
            return r.findChildNodeByName = function(t, e, i) {
                if (void 0 === i && (i = !1),
                !t || !e)
                    return null;
                if (i) {
                    for (var n = null, a = 0; !n && a < e.numChildren; a++) {
                        var s = e.getChildAt(a);
                        n = s.name == t ? s : r.findChildNodeByName(t, s, i);
                    }
                    return n;
                }
                return e.getChildByName(t);
            }
            ,
            r.fineNumber = function(t) {
                return !t || t < 0 ? "0" : t < 900 ? Math.floor(t).toFixed(0) : t < 1e5 ? (t *= .001).toFixed(2) + "K" : t < 9e5 ? (t *= .001).toFixed(1) + "k" : t < 1e8 ? (t *= 1e-6).toFixed(2) + "M" : t < 9e8 ? (t *= 1e-6).toFixed(1) + "M" : (t *= 1e-9).toFixed(2) + "G";
            }
            ,
            r.fixedFormat = function(t, e) {
                for (var i = t ? t.toString() : ""; i.length < e; )
                    i = "0" + i;
                return i;
            }
            ,
            r.catchUrlImage = function(t, e, i, n) {
                var a = new Laya.Sprite();
                a.loadImage(t, 0, 0, e, i);
                new Laya.Handler();
                a.drawToCanvas(e, i, 0, 0).toBase64("image/png", .92, n);
            }
            ,
            r.dateOfDay = function(t) {
                return Math.floor(t.getTime() / 864e5);
            }
            ,
            r.weekdayOfDay = function(t) {
                return Math.floor(t.getTime() / 6048e5);
            }
            ,
            r.dateOfDay2 = function(t) {
                return Math.floor(t.getTime() / 864e5) - r._zeroDate;
            }
            ,
            r.dayOfDate = function(t) {
                var e = new Date();
                return e.setTime(864e5 * (t + r._zeroDate + 1)),
                e;
            }
            ,
            r.dateStrOfDate = function(t) {
                var e = m.utils.GameUtil.dayOfDate(t);
                return e.getFullYear() + "/" + (e.getMonth() + 1) + "/" + e.getDate();
            }
            ,
            r.formatTime = function(t) {
                if (36e5 < t) {
                    var e = Math.floor(t / 36e5)
                      , i = Math.floor((t - 36e5 * e) / 6e4)
                      , n = Math.floor((t - 36e5 * e - 6e4 * i) / 1e3);
                    return m.utils.GameUtil.fixedFormat(e, 2) + ":" + m.utils.GameUtil.fixedFormat(i, 2) + ":" + m.utils.GameUtil.fixedFormat(n, 2);
                }
                if (6e4 < t) {
                    i = Math.floor(t / 6e4),
                    n = Math.floor((t - 6e4 * i) / 1e3);
                    return m.utils.GameUtil.fixedFormat(i, 2) + ":" + m.utils.GameUtil.fixedFormat(n, 2);
                }
                n = Math.floor(t / 1e3);
                return "00:" + m.utils.GameUtil.fixedFormat(n, 2);
            }
            ,
            r._zeroDate = Math.floor(new Date(2018,0,1,0,0,0).getTime() / 864e5),
            r;
        }();
        t.GameUtil = n,
        (i = r || (r = {}))[i.First = 0] = "First",
        i[i.Data = 1] = "Data",
        i[i.Last = 2] = "Last";
        var a = function() {
            function t(t) {
                this._nodeType = t,
                this.Data = null,
                this.PreNode = null,
                this.NextNode = null;
            }
            return Object.defineProperty(t.prototype, "NodeType", {
                get: function() {
                    return this._nodeType;
                },
                enumerable: !0,
                configurable: !0
            }),
            t;
        }()
          , s = function() {
            function e() {
                this._node = null;
            }
            return e.prototype.attachNode = function(t) {
                t && (this._node = t);
            }
            ,
            Object.defineProperty(e.prototype, "Data", {
                get: function() {
                    return this._node && this._node.NodeType == r.Data ? this._node.Data : null;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(e.prototype, "Available", {
                get: function() {
                    return this._node && this._node.NodeType == r.Data;
                },
                enumerable: !0,
                configurable: !0
            }),
            e.prototype.next = function() {
                return !!this._node && (this._node = this._node.NextNode,
                !0);
            }
            ,
            e.prototype.previous = function() {
                return !!this._node && (this._node = this._node.PreNode,
                !0);
            }
            ,
            e.prototype.clone = function(t) {
                return t || (t = new e()),
                t._node = this._node,
                t;
            }
            ,
            e;
        }();
        t.SimpleCursor = s;
        var o = function() {
            function i() {
                this._firstNode = new a(r.First),
                this._lastNode = new a(r.Last),
                this._firstNode.NextNode = this._lastNode,
                this._lastNode.PreNode = this._firstNode,
                this._count = 0,
                this._pool = new Array(i._POOL_SIZE),
                this._poolCount = 0;
            }
            return Object.defineProperty(i.prototype, "Count", {
                get: function() {
                    return this._count;
                },
                enumerable: !0,
                configurable: !0
            }),
            i.prototype._applyFreeNode = function() {
                for (var t = null, e = 0; !t && e < i._POOL_SIZE; e++)
                    this._pool[e] && (t = this._pool[e],
                    this._pool[e] = null,
                    this._poolCount--);
                return t || (t = new a(r.Data)),
                t;
            }
            ,
            i.prototype._reclaimNode = function(t) {
                if (t && !(this._poolCount >= i._POOL_SIZE)) {
                    t.Data = null,
                    t.NextNode = null,
                    t.PreNode = null;
                    for (var e = 0; t && e < i._POOL_SIZE; e++)
                        this._pool[e] || (this._pool[e] = t,
                        this._poolCount++,
                        t = null);
                }
            }
            ,
            i.prototype.clear = function() {
                for (var t, e = this._firstNode.NextNode; e.NodeType != r.Last; )
                    (t = e.NextNode).PreNode = e.PreNode,
                    e.PreNode.NextNode = t,
                    this._reclaimNode(e),
                    this._count--,
                    e = t;
            }
            ,
            Object.defineProperty(i.prototype, "Peak", {
                get: function() {
                    return this._count <= 0 ? null : this._firstNode.NextNode.Data;
                },
                enumerable: !0,
                configurable: !0
            }),
            i.prototype.createCursor = function(t) {
                return t || (t = new s()),
                0 < this._count && t.attachNode(this._firstNode.NextNode),
                t;
            }
            ,
            i.prototype.enqueue = function(t) {
                if (t) {
                    var e = this._applyFreeNode();
                    e.Data = t,
                    e.PreNode = this._lastNode.PreNode,
                    e.NextNode = this._lastNode,
                    this._lastNode.PreNode.NextNode = e,
                    this._lastNode.PreNode = e,
                    this._count++;
                }
            }
            ,
            i.prototype.dequeue = function() {
                if (!(this._count <= 0)) {
                    var t = this._firstNode.NextNode
                      , e = t.Data;
                    return t.NextNode.PreNode = this._firstNode,
                    this._firstNode.NextNode = t.NextNode,
                    this._count--,
                    this._reclaimNode(t),
                    e;
                }
            }
            ,
            i._POOL_SIZE = 4,
            i;
        }();
        t.SimpleQueue = o;
        var h = function() {
            function i() {
                this._firstNode = new a(r.First),
                this._lastNode = new a(r.Last),
                this._firstNode.NextNode = this._lastNode,
                this._lastNode.PreNode = this._firstNode,
                this._count = 0,
                this._pool = new Array(i._POOL_SIZE),
                this._poolCount = 0;
            }
            return i.prototype.clear = function() {
                for (var t, e = this._firstNode.NextNode; e.NodeType != r.Last; )
                    (t = e.NextNode).PreNode = e.PreNode,
                    e.PreNode.NextNode = t,
                    this._reclaimNode(e),
                    this._count--,
                    e = t;
            }
            ,
            i.prototype.exportArray = function() {
                if (this._count <= 0)
                    return [];
                for (var t = new Array(this._count), e = 0, i = this._firstNode.NextNode; i.NodeType == r.Data; )
                    e < this._count && (t[e] = i.Data),
                    i = i.NextNode,
                    e++;
                return t;
            }
            ,
            Object.defineProperty(i.prototype, "Count", {
                get: function() {
                    return this._count;
                },
                enumerable: !0,
                configurable: !0
            }),
            i.prototype._applyFreeNode = function() {
                for (var t = null, e = 0; !t && e < i._POOL_SIZE; e++)
                    this._pool[e] && (t = this._pool[e],
                    this._pool[e] = null,
                    this._poolCount--);
                return t || (t = new a(r.Data)),
                t;
            }
            ,
            i.prototype._reclaimNode = function(t) {
                if (t && !(this._poolCount >= i._POOL_SIZE)) {
                    t.Data = null,
                    t.NextNode = null,
                    t.PreNode = null;
                    for (var e = 0; t && e < i._POOL_SIZE; e++)
                        this._pool[e] || (this._pool[e] = t,
                        this._poolCount++,
                        t = null);
                }
            }
            ,
            i.prototype.sort = function(t) {
                if (!(this._count < 2))
                    for (var e, i, n, a, s = this._count - 1; 0 <= s; )
                        for (a = s,
                        s--,
                        e = this._firstNode.NextNode,
                        a = this._count - 1; 0 < a; )
                            a--,
                            i = e.NextNode,
                            0 < t(e.Data, i.Data) && (n = e.Data,
                            e.Data = i.Data,
                            i.Data = n),
                            e = i;
            }
            ,
            i.prototype.add = function(t) {
                if (t) {
                    var e = this._applyFreeNode();
                    e.Data = t,
                    e.PreNode = this._lastNode.PreNode,
                    e.NextNode = this._lastNode,
                    this._lastNode.PreNode.NextNode = e,
                    this._lastNode.PreNode = e,
                    this._count++;
                }
            }
            ,
            i.prototype.addFirst = function(t) {
                if (t) {
                    var e = this._applyFreeNode();
                    e.Data = t,
                    e.PreNode = this._firstNode,
                    e.NextNode = this._firstNode.NextNode,
                    this._firstNode.NextNode.PreNode = e,
                    this._firstNode.NextNode = e,
                    this._count++;
                }
            }
            ,
            i.prototype.createCursor = function(t) {
                return t || (t = new s()),
                0 < this._count && t.attachNode(this._firstNode.NextNode),
                t;
            }
            ,
            i.prototype.createReverseCursor = function(t) {
                return t || (t = new s()),
                0 < this._count && t.attachNode(this._lastNode.PreNode),
                t;
            }
            ,
            i.prototype.getFirstData = function() {
                return 0 < this._count ? this._firstNode.NextNode.Data : null;
            }
            ,
            i.prototype.getLastData = function() {
                return 0 < this._count ? this._lastNode.PreNode.Data : null;
            }
            ,
            i.prototype.getDataAt = function(t) {
                if (t < 0 || t >= this._count)
                    return null;
                for (var e = this._firstNode.NextNode; 0 < t; )
                    e = e.NextNode,
                    t--;
                return e.Data;
            }
            ,
            i.prototype.removeAt = function(t) {
                if (t < 0 || t >= this._count)
                    return null;
                for (var e = this._firstNode.NextNode; 0 < t; )
                    e = e.NextNode,
                    t--;
                var i = e.Data;
                return e.NextNode.PreNode = e.PreNode,
                e.PreNode.NextNode = e.NextNode,
                this._count--,
                this._reclaimNode(e),
                i;
            }
            ,
            i.prototype.removeLast = function() {
                if (this._count <= 0)
                    return null;
                var t = this._lastNode.PreNode
                  , e = t.Data;
                return t.NextNode.PreNode = t.PreNode,
                t.PreNode.NextNode = t.NextNode,
                this._count--,
                this._reclaimNode(t),
                e;
            }
            ,
            i.prototype.removeFirst = function() {
                if (this._count <= 0)
                    return null;
                var t = this._firstNode.NextNode
                  , e = t.Data;
                return t.NextNode.PreNode = t.PreNode,
                t.PreNode.NextNode = t.NextNode,
                this._count--,
                this._reclaimNode(t),
                e;
            }
            ,
            i.prototype.scan = function(t, e) {
                if (!(this._count <= 0))
                    for (var i, n = new Array(1), a = this._firstNode.NextNode; a.NodeType == r.Data; )
                        n[0] = a.Data,
                        e.apply(t, n) ? i = a : (i = a.PreNode,
                        a.NextNode.PreNode = a.PreNode,
                        a.PreNode.NextNode = a.NextNode,
                        this._count--,
                        this._reclaimNode(a)),
                        a = i.NextNode;
            }
            ,
            i.prototype.checkAll = function(t, e, i) {
                if (!(this._count <= 0)) {
                    var n = new Array(2);
                    n[0] = t;
                    for (var a = this._firstNode.NextNode; a.NextNode; )
                        n[1] = a.Data,
                        i.apply(e, n),
                        a = a.NextNode;
                }
            }
            ,
            i.prototype.search = function(t, e, i) {
                if (this._count <= 0)
                    return null;
                for (var n = null, a = new Array(2), s = this._firstNode.NextNode; !n && s.NodeType == r.Data; )
                    a[0] = s.Data,
                    a[1] = i,
                    e.apply(t, a) && (n = s.Data),
                    s = s.NextNode;
                return n;
            }
            ,
            i.prototype.reverseSearch = function(t, e) {
                if (this._count <= 0)
                    return null;
                for (var i = null, n = new Array(1), a = this._lastNode.PreNode; !i && a.NodeType == r.Data; )
                    n[0] = a.Data,
                    e.apply(t, n) && (i = a.Data),
                    a = a.PreNode;
                return i;
            }
            ,
            i._POOL_SIZE = 4,
            i;
        }();
        t.SimpleList = h;
        var l = function() {
            function a() {}
            return a.shuffle = function(t, e) {
                var i, n, a, s = t.length;
                -1 == e && (e = s);
                for (var r = 0; r < e; r++)
                    (i = Math.random() * s) != (n = Math.random() * s) && (a = t[i],
                    t[i] = t[n],
                    t[n] = a);
                return t;
            }
            ,
            a.sqrt = function(t) {
                for (var e, i, n = .25 * t; (e = (n = .5 * (n + (i = t / n))) - i) < 0 && (e = -e),
                1e-5 < e; )
                    ;
                return n;
            }
            ,
            a.inScope = function(t, e, i, n, a, s) {
                return Math.abs(t - i) < a && Math.abs(e - n) < s;
            }
            ,
            a.fastApproxDistance = function(t, e, i, n) {
                return (e = n < e ? e - n : n - e) < (t = i < t ? t - i : i - t) ? t + .43 * e : e + .43 * t;
            }
            ,
            a.fastApproxDeltaDistance = function(t, e) {
                return (e = 0 < e ? e : -e) < (t = 0 < t ? t : -t) ? t + .43 * e : e + .43 * t;
            }
            ,
            a.atan2 = function(t, e) {
                return Math.abs(t) > a.EPSILON ? Math.atan2(e, t) : 0 < e ? a.HALF_PI : -a.HALF_PI;
            }
            ,
            a.LerpFloat = function(t, e, i) {
                return i < 0 ? t : 1 <= i ? e : t + (e - t) * i;
            }
            ,
            a.lerp = function(t, e, i, n) {
                return (a.EPSILON < t - e || a.EPSILON < e - t) && (n *= i,
                t < e ? (0 < n ? t += n : t -= n,
                e - t < a.EPSILON && (t = e)) : (0 < n ? t -= n : t += n,
                t - e < a.EPSILON && (t = e))),
                t;
            }
            ,
            a.lerpDelta = function(t, e, i) {
                return (a.EPSILON < t - e || a.EPSILON < e - t) && (t < e ? (0 < i ? t += i : t -= i,
                e - t < a.EPSILON && (t = e)) : (0 < i ? t -= i : t += i,
                t - e < a.EPSILON && (t = e))),
                t;
            }
            ,
            a.regularDirection = function(t) {
                if (a.TWO_PI <= t)
                    for (; a.TWO_PI <= t; )
                        t -= a.TWO_PI;
                else if (t < 0)
                    for (; t < 0; )
                        t += a.TWO_PI;
                return t;
            }
            ,
            a.approximately = function(t, e) {
                return Math.abs(t - e) < a.EPSILON;
            }
            ,
            a.approximatelyVector3 = function(t, e, i, n) {
                return Math.abs(t.x - e) < a.EPSILON && Math.abs(t.y - i) < a.EPSILON && Math.abs(t.z - n) < a.EPSILON;
            }
            ,
            a.copyVector3 = function(t, e) {
                t && e && (e.x = t.x,
                e.y = t.y,
                e.z = t.z);
            }
            ,
            a.exportVector3Log = function(t) {
                console.log("vector3 x=" + t.x + ",y=" + t.y + ",z=" + t.z);
            }
            ,
            a.approaching = function(t, e, i) {
                return i < 0 && (i = -i),
                t < e ? (t += i,
                Math.abs(t - e) < a.EPSILON && (t = e)) : e < t && (t -= i,
                Math.abs(t - e) < a.EPSILON && (t = e)),
                t;
            }
            ,
            a.EPSILON = 1e-5,
            a.Rad2Deg = 180 / Math.PI,
            a.Deg2Rad = Math.PI / 180,
            a.PI = Math.PI,
            a.TWO_PI = 2 * Math.PI,
            a.HALF_PI = .5 * Math.PI,
            a.ONE_HALF_PI = 1.5 * Math.PI,
            a;
        }();
        t.MathUtils = l;
        var u = function() {
            function t(t, e) {
                this._caller = t,
                this._method = e;
            }
            return t.prototype.setMethod = function(t, e) {
                this._caller = t,
                this._method = e;
            }
            ,
            t.prototype.isSameMethod = function(t, e) {
                return this._caller && this._caller == t && this._method && this._method == e;
            }
            ,
            t.prototype.apply = function(t) {
                this._method && this._method.apply(this._caller, t);
            }
            ,
            t;
        }();
        t.SimpleDelegate = u;
        var c = function() {
            function t() {
                this._delegates = new Array();
            }
            return t.prototype.getCount = function() {
                return this._delegates.length;
            }
            ,
            t.prototype.getItem = function(t) {
                return 0 <= t && t < this._delegates.length ? this._delegates[t] : null;
            }
            ,
            t.prototype.tryAddDelegate = function(t, e) {
                if (!t || !e)
                    return !1;
                for (var i, n = this._delegates.length, a = 0; a < n; a++)
                    if ((i = this._delegates[a]) && i.isSameMethod(t, e))
                        return !1;
                i = new u(t,e),
                this._delegates.push(i);
            }
            ,
            t.prototype.removeDelegate = function(t, e) {
                if (t && e) {
                    for (var i, n = -1, a = this._delegates.length, s = 0; s < a && n < 0; s++)
                        (i = this._delegates[s]) && i.isSameMethod(t, e) && (n = s);
                    0 <= n && this._delegates.splice(n, 1);
                }
            }
            ,
            t.prototype.invokeDelegate = function(t) {
                for (var e, i = this._delegates.length, n = 0; n < i; n++)
                    (e = this._delegates[n]) && (t ? e.apply(t) : e.apply());
            }
            ,
            t;
        }();
        t.SimpleDelegates = c;
        var d = function() {
            function t() {}
            return t.fineToString = function(t) {
                return t ? t.toString() : "";
            }
            ,
            t;
        }();
        t.StrUtils = d;
        var _ = function() {
            function t(t, e) {
                void 0 === t && (t = 0),
                void 0 === e && (e = 0),
                this.low = 0,
                this.high = 0,
                this.low = t,
                this.high = e;
            }
            return t.prototype.equal = function(t) {
                return !!t && (t.low == this.low && t.high == this.high);
            }
            ,
            t.prototype.isZero = function() {
                return 0 == this.low && 0 == this.high;
            }
            ,
            t.prototype.toString = function() {
                return "high:0x" + this.high.toString(16) + " low:0x" + this.low.toString(16);
            }
            ,
            t;
        }();
        t.Int64 = _;
        var p = function() {
            function t() {}
            return t.BYTE_ORDER = Laya.Byte.BIG_ENDIAN,
            t;
        }();
        t.SystemOption = p;
        var f = function() {};
        t.VariantInfo = f;
        var g = function() {
            function t() {
                this.ADD = "add",
                this.DIVIDE = "div",
                this.MAX = "max",
                this.MIN = "min",
                this.MULTIPLY = "mul",
                this.SUBTRACT = "sub",
                this.LESS_THAN = "lt",
                this.LESS_THAN_EQUAL = "le",
                this.EQUAL = "eq",
                this.NOT_EQUAL = "ne",
                this.GREATER_THAN = "gt",
                this.GREATER_THAN_EQUAL = "ge",
                this.AND = "and",
                this.OR = "or",
                this.CONTAINS = "contains",
                this.NEGATE = "negate",
                this.CHARACTERS = "abcdefghijklmnopqrstuwvxzyABCDEFGHIJKLMNOPQRSTUVWXYZ",
                this.NUMBERS = "0123456789.",
                this.MATH_OPERATORS = "+-/^*",
                this.OPERATORS = this.MATH_OPERATORS + "(),|&<>=~!",
                this.BOOLEAN = ["&&", "||"],
                this.COMPARE = ["<", ">", "<=", ">=", "=", "!="],
                this.TWO_CHAR_OPS = ["&&", "||", "<=", ">=", "!="],
                this.UNARY = "+-*/^,(",
                this.OP_LIST_1 = "^*+,/)",
                this.OP_LIST_2 = "^*+-,/)",
                this.OP_LIST_3 = "^*+-,/(",
                this.OP_LIST_4 = "^*+,/(",
                this.ONE_ARG_FUNCTIONS = ["abs", "ceil", "floor", "round", this.NEGATE],
                this.TWO_ARG_FUNCTIONS = [this.ADD, this.DIVIDE, this.MAX, this.MIN, this.MULTIPLY, this.SUBTRACT, this.LESS_THAN, this.LESS_THAN_EQUAL, this.EQUAL, this.NOT_EQUAL, this.GREATER_THAN, this.GREATER_THAN_EQUAL, this.AND, this.OR, this.CONTAINS],
                this.NONE = "none",
                this.IS_ONE_ARG_FUNCTION = "fun1",
                this.IS_TWO_ARG_FUNCTION = "fun2",
                this.IS_LETTER = "let",
                this.IS_NUMBER = "num",
                this.IS_VARIABLE = "var",
                this.IS_OPERATOR = "op",
                this.IS_CONSTANT = "c",
                this.IS_COMPARE = "comp",
                this.IS_BOOLEAN = "bool",
                this.IS_QUOTE = "quote",
                this.IS_STR_LITERAL = "str",
                this.IS_ARRAY = "arr",
                this.IS_BRACKET = "bracket",
                this.IS_NONE = "n",
                this.LEFT_PAREN = "(",
                this.RIGHT_PAREN = ")",
                this.LEFT_BRACKET = "[",
                this.RIGHT_BRACKET = "]",
                this.COMMA = ",",
                this.MINUS = "-",
                this.PLUS = "+",
                this.MULTIPLICATION = "*",
                this.DIVISION = "/",
                this.QUOTE = "'",
                this.BOOLEAN_AND = "&&",
                this.BOOLEAN_OR = "||",
                this.COMPARE_LT = "<",
                this.COMPARE_GT = ">",
                this.COMPARE_LE = "<=",
                this.COMPARE_GE = ">=",
                this.COMPARE_EQ = "=",
                this.COMPARE_NE = "!=",
                this.CONTAINED_IN = "~",
                this.NEGATION = "!",
                this._depVariables = [],
                this._variableMap = [],
                this._tokenValue = this.NONE,
                this._tokenType = this.NONE,
                this._tokenLength = 0,
                this._expressionStack = new Array();
            }
            return t.prototype.initVariants = function(t, e) {
                t && 0 < t.length ? this._variableMap = t.split(";") : this._variableMap.length = 0,
                this._depLoadFunc = e;
            }
            ,
            t.prototype.abs = function(t) {
                return "number" == typeof t && Math.abs(t);
            }
            ,
            t.prototype.add = function(t, e) {
                return "number" == typeof t && "number" == typeof e ? t + e : "string" == typeof t && "string" == typeof e ? t + e : "string" == typeof t && "number" == typeof e ? t + e.toString() : "number" == typeof t && "string" == typeof e && t.toString() + e;
            }
            ,
            t.prototype.ceil = function(t) {
                return "number" == typeof t && Math.ceil(t);
            }
            ,
            t.prototype.div = function(t, e) {
                return "number" == typeof t && "number" == typeof e && t / e;
            }
            ,
            t.prototype.floor = function(t) {
                return "number" == typeof t && Math.floor(t);
            }
            ,
            t.prototype.max = function(t, e) {
                return "number" == typeof t && "number" == typeof e ? Math.max(t, e) : "string" == typeof t && "string" == typeof e && (t < e ? e : t);
            }
            ,
            t.prototype.min = function(t, e) {
                return "number" == typeof t && "number" == typeof e ? Math.min(t, e) : "string" == typeof t && "string" == typeof e && (t < e ? t : e);
            }
            ,
            t.prototype.mul = function(t, e) {
                return "number" == typeof t && "number" == typeof e && t * e;
            }
            ,
            t.prototype.round = function(t) {
                return "number" == typeof t && Math.round(t);
            }
            ,
            t.prototype.sub = function(t, e) {
                return "number" == typeof t && "number" == typeof e && t - e;
            }
            ,
            t.prototype.lt = function(t, e) {
                return "number" == typeof t && "number" == typeof e ? t < e : "string" == typeof t && "string" == typeof e && t < e;
            }
            ,
            t.prototype.le = function(t, e) {
                return "number" == typeof t && "number" == typeof e ? t <= e : "string" == typeof t && "string" == typeof e && t <= e;
            }
            ,
            t.prototype.eq = function(t, e) {
                return "number" == typeof t && "number" == typeof e ? t == e : "string" == typeof t && "string" == typeof e && t == e;
            }
            ,
            t.prototype.ne = function(t, e) {
                return "number" == typeof t && "number" == typeof e ? t != e : "string" == typeof t && "string" == typeof e && t != e;
            }
            ,
            t.prototype.gt = function(t, e) {
                return "number" == typeof t && "number" == typeof e ? e < t : "string" == typeof t && "string" == typeof e && e < t;
            }
            ,
            t.prototype.ge = function(t, e) {
                return "number" == typeof t && "number" == typeof e ? e <= t : "string" == typeof t && "string" == typeof e && e <= t;
            }
            ,
            t.prototype.and = function(t, e) {
                return "boolean" == typeof t && "boolean" == typeof e && (t && e);
            }
            ,
            t.prototype.or = function(t, e) {
                return "boolean" == typeof t && "boolean" == typeof e && (t || e);
            }
            ,
            t.prototype.contains = function(t, e) {
                return -1 != e.indexOf(t);
            }
            ,
            t.prototype.negate = function(t) {
                return "number" == typeof t ? 0 == t : "string" == typeof t ? "" == t : !t;
            }
            ,
            t.prototype.clear = function() {
                this._depVariables.length = 0,
                this._expressionStack.length = 0;
            }
            ,
            t.prototype.parse = function(t) {
                var e = this.__trim(t);
                if ("" == e)
                    return !1;
                if (!this.__validateChars(e))
                    return !1;
                if (!this.__validateParentheses(e))
                    return !1;
                if (!this.__validateTokens(e))
                    return !1;
                var i = this.__processTokens(e);
                return "" != i && (this._depVariables.length = 0,
                this._expressionStack.length = 0,
                this.__createExpressionStack(i),
                !0);
            }
            ,
            Object.defineProperty(t.prototype, "DepVairants", {
                get: function() {
                    return this._depVariables;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "Stack", {
                get: function() {
                    return this._expressionStack.slice();
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.evaluate = function() {
                if (0 == this._expressionStack.length)
                    return !1;
                var t, e, i = this._depVariables.length;
                if (0 < i) {
                    if (!this._depLoadFunc)
                        return !1;
                    for (t = 0; t < i; t++)
                        if (e = this._depVariables[t],
                        this._depLoadFunc(e),
                        !this.__isValidOperand(e.Value))
                            return !1;
                }
                var n, a, s, r = "", o = "", h = new Array();
                for (t = 0; t < this._expressionStack.length; ) {
                    switch (o = this._expressionStack[t],
                    r = this._expressionStack[t + 1],
                    o) {
                    case this.IS_NUMBER:
                        h.push(parseFloat(r));
                        break;

                    case this.IS_ONE_ARG_FUNCTION:
                        if (n = h.pop(),
                        null == (s = this[r]))
                            return !1;
                        h.push(s(n));
                        break;

                    case this.IS_TWO_ARG_FUNCTION:
                        if (n = h.pop(),
                        a = h.pop(),
                        null == (s = this[r]))
                            return !1;
                        h.push(s(n, a));
                        break;

                    case this.IS_VARIABLE:
                        (e = this._findDepVariant(r)) && h.push(e.Value);
                        break;

                    case this.IS_STR_LITERAL:
                    case this.IS_ARRAY:
                        h.push(r.toString());
                        break;

                    default:
                        return !1;
                    }
                    t += 2;
                }
                return h[0];
            }
            ,
            t.prototype.__isValidOperand = function(t) {
                return null != t && null != t && ("number" == typeof t ? !isNaN(t) && isFinite(t) : "string" == typeof t || "boolean" == typeof t);
            }
            ,
            t.prototype._findDepVariant = function(t) {
                for (var e = null, i = 0; i < this._depVariables.length; )
                    this._depVariables[i].VarSymbol == t ? (e = this._depVariables[i],
                    i = this._depVariables.length) : i++;
                return e;
            }
            ,
            t.prototype.__createExpressionStack = function(t) {
                var e, i, n = t.length, a = 0, s = "", r = "", o = 0;
                for (this._expressionStack.length = 0; a < n; ) {
                    if (s = this.__nextToken(t, a),
                    r = this.__getTokenType(s),
                    o = s.length,
                    r == this.IS_NONE)
                        return;
                    if (r == this.IS_CONSTANT || r == this.IS_NUMBER || r == this.IS_VARIABLE || r == this.IS_STR_LITERAL || r == this.IS_ONE_ARG_FUNCTION || r == this.IS_TWO_ARG_FUNCTION) {
                        if (this._expressionStack.push(s),
                        this._expressionStack.push(r),
                        r == this.IS_VARIABLE) {
                            var h = this._findDepVariant(s);
                            h || ((h = new f()).VarSymbol = s,
                            h.Value = 0,
                            this._depVariables.push(h));
                        }
                        if (s == this.CONTAINS) {
                            e = t.indexOf(this.LEFT_PAREN, a),
                            i = t.indexOf(this.RIGHT_PAREN, e);
                            var l = t.substring(e + 1, i)
                              , u = l.indexOf(",");
                            this._expressionStack.push(l.substring(0, u)),
                            this._expressionStack.push(this.IS_VARIABLE),
                            this._expressionStack.push(l.substr(u + 1, l.length)),
                            this._expressionStack.push(this.IS_ARRAY);
                        }
                    }
                    s == this.CONTAINS ? a = i + 1 : a += o;
                }
                this._expressionStack = this._expressionStack.reverse();
            }
            ,
            t.prototype.__processTokens = function(t) {
                var e = t;
                return e = e.replace("/+-/g", this.MINUS),
                e = this.__processUnaryMinus(e),
                e = this.__processOperator(e, this.DIVISION),
                e = this.__processOperator(e, this.MULTIPLICATION),
                e = this.__processOperator(e, this.MINUS),
                e = this.__processOperator(e, this.PLUS),
                e = this.__processOperator(e, this.BOOLEAN_AND),
                e = this.__processOperator(e, this.BOOLEAN_OR),
                e = this.__processOperator(e, this.COMPARE_NE),
                e = this.__processOperator(e, this.COMPARE_LE),
                e = this.__processOperator(e, this.COMPARE_GE),
                e = this.__processOperator(e, this.COMPARE_EQ),
                e = this.__processOperator(e, this.COMPARE_GT),
                e = this.__processOperator(e, this.COMPARE_LT),
                e = this.__processOperator(e, this.CONTAINED_IN),
                e = this.__processOperator(e, this.NEGATION),
                this.__validateParentheses(e) ? e : "";
            }
            ,
            t.prototype.__processUnaryMinus = function(t) {
                var e = t;
                if (-1 == e.indexOf(this.MINUS))
                    return e;
                if (e.charAt(t.length - 1) == this.MINUS)
                    return "";
                var i = 0
                  , n = 0
                  , a = e.length;
                for (i = 0; i < a; ++i)
                    if (e.charAt(i) == this.MINUS && this.__isUnary(e.charAt(i - 1))) {
                        if (-1 == (n = this.__getForwardArgument(e, i)))
                            return "";
                        e = e.substring(0, i) + this.SUBTRACT + "(0," + e.substring(i + 1, n) + this.RIGHT_PAREN + e.substring(n, e.length);
                    }
                return e;
            }
            ,
            t.prototype.__processOperator = function(t, e) {
                var i = t
                  , n = 0
                  , a = 0
                  , s = ""
                  , r = 0
                  , o = "";
                if (-1 == i.indexOf(e))
                    return i;
                if (0 == i.indexOf(e) && e != this.MINUS && e != this.NEGATION)
                    return "";
                if (i.charAt(i.length - 1) == e)
                    return "";
                for (; -1 != i.indexOf(e); ) {
                    if (n = i.indexOf(e),
                    -1 == (a = this.__getBackwardArgument(i, n)))
                        return "";
                    if (s = i.substring(a, n),
                    -1 != this.TWO_CHAR_OPS.indexOf(e) && n++,
                    -1 == (r = this.__getForwardArgument(i, n)))
                        return "";
                    switch (-1 != (o = i.substring(n + 1, r)).indexOf(this.QUOTE) && (o = o.replace(/\'/g, "")),
                    -1 != o.indexOf(this.LEFT_BRACKET) && (o = (o = o.replace(this.LEFT_BRACKET, "")).replace(this.RIGHT_BRACKET, "")),
                    e) {
                    case this.PLUS:
                        i = i.substring(0, a) + this.ADD + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.MINUS:
                        i = i.substring(0, a) + this.SUBTRACT + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.MULTIPLICATION:
                        i = i.substring(0, a) + this.MULTIPLY + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.DIVISION:
                        i = i.substring(0, a) + this.DIVIDE + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.BOOLEAN_AND:
                        i = i.substring(0, a) + this.AND + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.BOOLEAN_OR:
                        i = i.substring(0, a) + this.OR + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.COMPARE_EQ:
                        i = i.substring(0, a) + this.EQUAL + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.COMPARE_NE:
                        i = i.substring(0, a) + this.NOT_EQUAL + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.COMPARE_GE:
                        i = i.substring(0, a) + this.GREATER_THAN_EQUAL + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.COMPARE_GT:
                        i = i.substring(0, a) + this.GREATER_THAN + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.COMPARE_LE:
                        i = i.substring(0, a) + this.LESS_THAN_EQUAL + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.COMPARE_LT:
                        i = i.substring(0, a) + this.LESS_THAN + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.CONTAINED_IN:
                        i = i.substring(0, a) + this.CONTAINS + this.LEFT_PAREN + s + "," + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                        break;

                    case this.NEGATION:
                        i = i.substring(0, a) + this.NEGATE + this.LEFT_PAREN + o + this.RIGHT_PAREN + i.substring(r, i.length + 1);
                    }
                }
                return i;
            }
            ,
            t.prototype.__getForwardArgument = function(t, e) {
                var i = e + 1
                  , n = t.length
                  , a = t.charAt(e + 1);
                if (a == this.MINUS) {
                    if (n <= ++i)
                        return -1;
                    a = t.charAt(i);
                }
                if (a == this.LEFT_BRACKET)
                    return t.indexOf(this.RIGHT_BRACKET, i + 1) + 1;
                if (a == this.QUOTE)
                    return t.indexOf(this.QUOTE, i + 1) + 1;
                if (this.__isNumber(a))
                    return this.__getNextNonNumber(t, i + 1);
                if (this.__isCharacter(a)) {
                    if ((i = this.__getNextNonChar(t, i + 1)) == n - 1)
                        return i;
                    if (this.__isMathOperator(t.charAt(i)))
                        return i;
                    t.charAt(i) == this.LEFT_PAREN && (i = this.__matchLeftParen(t, i));
                } else {
                    if (a != this.LEFT_PAREN)
                        return -1;
                    i = this.__matchLeftParen(t, i);
                }
                return i + 1;
            }
            ,
            t.prototype.__getBackwardArgument = function(t, e) {
                var i = t.charAt(e - 1)
                  , n = e - 1;
                if (this.__isNumber(i))
                    for (; (this.__isNumber(t.charAt(n)) || "." == t.charAt(n)) && 0 <= n; )
                        n--;
                else if (this.__isCharacter(i))
                    for (; this.__isCharacter(t.charAt(n)) && 0 <= n; )
                        n--;
                else {
                    if (i != this.RIGHT_PAREN)
                        return -1;
                    if (0 <= (n = this.__matchRightParen(t, n)) && this.__isNumber(t.charAt(n)))
                        return -1;
                    if (0 == n && t.charAt(n) != this.MINUS && t.charAt(n) != this.LEFT_PAREN)
                        return -1;
                    if (0 < n && this.__isCharacter(t.charAt(n - 1)))
                        for (n--; this.__isCharacter(t.charAt(n)) && 0 <= n; )
                            n--;
                }
                return n + 1;
            }
            ,
            t.prototype.__validateTokens = function(t) {
                var e = 0
                  , i = t.length
                  , n = t.charAt(0);
                if (n != this.MINUS && n != this.LEFT_PAREN && n != this.NEGATION && this.__isValidBeforeOrAfter(n))
                    return !1;
                for (var a, s, r, o, h, l, u, c = !1, d = !1; e < i; ) {
                    if (a = this.__nextToken(t, e),
                    s = this.__getTokenType(a),
                    r = a.length,
                    s == this.NONE)
                        return !1;
                    if (o = e - 1,
                    h = 0 == e ? "" : t.charAt(o),
                    l = e + r,
                    u = t.charAt(l),
                    s == this.IS_ONE_ARG_FUNCTION) {
                        if (u != this.LEFT_PAREN)
                            return !1;
                        if (0 < e && !this.__isValidBeforeOrAfter(h))
                            return !1;
                        if (0 < e && ")" == h)
                            return !1;
                    }
                    if (s == this.IS_VARIABLE) {
                        if (0 < e && !this.__isValidBeforeOrAfter(h))
                            return !1;
                        if (0 < e && ")" == h)
                            return !1;
                        if (l < i && !this.__isValidBeforeOrAfter(u))
                            return !1;
                        if (l < i && "(" == u)
                            return !1;
                    }
                    if (s == this.IS_NUMBER) {
                        if (0 < e && !this.__isValidBeforeOrAfter(h))
                            return !1;
                        if (0 < e && ")" == h)
                            return !1;
                        if (l < i && !this.__isValidBeforeOrAfter(u))
                            return !1;
                        if (l < i && u == this.LEFT_PAREN)
                            return !1;
                    }
                    if (a == this.LEFT_PAREN && l < i && -1 != this.OP_LIST_1.indexOf(u))
                        return !1;
                    if (a == this.RIGHT_PAREN && e < i - 1) {
                        if (l < i && -1 == this.OP_LIST_2.indexOf(u) && "|" != u && "&" != u && -1 == this.COMPARE.indexOf(u))
                            return !1;
                        if (0 <= o && -1 != this.OP_LIST_3.indexOf(h))
                            return !1;
                    }
                    if (a == this.COMMA) {
                        if (0 == e || e == i - 1)
                            return !1;
                        if (l < i && 0 <= this.OP_LIST_2.indexOf(u))
                            return !1;
                        if (0 <= o && 0 <= this.OP_LIST_3.indexOf(h))
                            return !1;
                    }
                    if (-1 != this.MATH_OPERATORS.indexOf(a)) {
                        if (-1 != this.OP_LIST_1.indexOf(u))
                            return !1;
                        if (0 <= this.OP_LIST_4.indexOf(h) && "-" != a)
                            return !1;
                    }
                    if (a == this.QUOTE && (c = !c) && -1 == t.indexOf(this.QUOTE, o))
                        return !1;
                    if (a == this.LEFT_BRACKET && (d = !d) && -1 == t.indexOf(this.RIGHT_BRACKET))
                        return !1;
                    if (a == this.NEGATION && -1 == this.CHARACTERS.indexOf(u) && u != this.LEFT_PAREN)
                        return !1;
                    a == this.LEFT_BRACKET ? e = t.indexOf(this.RIGHT_BRACKET) + 1 : e += r,
                    0;
                }
                return !0;
            }
            ,
            t.prototype.__getTokenType = function(t) {
                return this.__isOneArgFunction(t) ? this.IS_ONE_ARG_FUNCTION : this.__isValidBeforeOrAfter(t) ? this.IS_OPERATOR : this.__isVariable(t) ? this.IS_VARIABLE : this.__isNumber(t) ? this.IS_NUMBER : this.__isTwoArgFunction(t) ? this.IS_TWO_ARG_FUNCTION : -1 != this.COMPARE.indexOf(t) ? this.IS_COMPARE : -1 != this.BOOLEAN.indexOf(t) ? this.IS_BOOLEAN : t == this.QUOTE ? this.IS_QUOTE : t == this.LEFT_BRACKET || t == this.RIGHT_BRACKET ? this.IS_BRACKET : -1 != this.CHARACTERS.indexOf(t.charAt(0)) ? this.IS_STR_LITERAL : this.NONE;
            }
            ,
            t.prototype.__validateChars = function(t) {
                var e, i, n, a = t.length;
                for (e = 0; e < a; ++e)
                    if (i = t.charAt(e),
                    n = this.NUMBERS.indexOf(i),
                    n += this.CHARACTERS.indexOf(i),
                    -3 == (n += this.OPERATORS.indexOf(i)) && "'" != i && "[" != i && "]" != i)
                        return !1;
                return !0;
            }
            ,
            t.prototype.__validateParentheses = function(t) {
                var e, i, n = 0, a = 0, s = t.length;
                for (e = 0; e < s; ++e)
                    (i = t.charAt(e)) == this.LEFT_PAREN ? n++ : i == this.RIGHT_PAREN && a++;
                return n == a;
            }
            ,
            t.prototype.__nextToken = function(t, e) {
                var i;
                if (t.length <= e)
                    return this.NONE;
                var n = t.charAt(e);
                if (n == this.LEFT_BRACKET)
                    return n;
                var a = t.substr(e, 2);
                return -1 != this.COMPARE.indexOf(a) ? a : -1 != this.BOOLEAN.indexOf(a) ? a : n == this.QUOTE ? n : this.__isCharacter(n) ? (i = this.__getNextNonChar(t, e + 1),
                t.substring(e, i)) : this.__isNumber(n) ? (i = this.__getNextNonNumber(t, e + 1),
                t.substring(e, i)) : this.__isValidBeforeOrAfter(n) ? n : this.NONE;
            }
            ,
            t.prototype.__isOneArgFunction = function(t) {
                var e, i = this.ONE_ARG_FUNCTIONS.length;
                for (e = 0; e < i; ++e)
                    if (t == this.ONE_ARG_FUNCTIONS[e])
                        return !0;
                return !1;
            }
            ,
            t.prototype.__isTwoArgFunction = function(t) {
                var e, i = this.TWO_ARG_FUNCTIONS.length;
                for (e = 0; e < i; ++e)
                    if (t == this.TWO_ARG_FUNCTIONS[e])
                        return !0;
                return !1;
            }
            ,
            t.prototype.__isVariable = function(t) {
                return 0 <= this._variableMap.indexOf(t);
            }
            ,
            t.prototype.__isCharacter = function(t) {
                return -1 != this.CHARACTERS.indexOf(t);
            }
            ,
            t.prototype.__isNumber = function(t) {
                var e = parseFloat(t);
                return !isNaN(e) && isFinite(e);
            }
            ,
            t.prototype.__isValidBeforeOrAfter = function(t) {
                return -1 != this.OPERATORS.indexOf(t);
            }
            ,
            t.prototype.__isMathOperator = function(t) {
                return -1 != this.MATH_OPERATORS.indexOf(t);
            }
            ,
            t.prototype.__trim = function(t) {
                var e, i = "", n = t.length;
                for (e = 0; e < n; ++e)
                    32 < t.charCodeAt(e) && (i += t.charAt(e));
                return i;
            }
            ,
            t.prototype.__getNextNonChar = function(t, e) {
                for (var i = t.charAt(e), n = e, a = t.length; -1 != this.CHARACTERS.indexOf(i) && n < a; )
                    n++,
                    i = t.charAt(n);
                return n;
            }
            ,
            t.prototype.__getNextNonNumber = function(t, e, i) {
                void 0 === i && (i = 1);
                var n = t.charAt(e)
                  , a = e
                  , s = t.length;
                if (1 == i)
                    for (; -1 != this.NUMBERS.indexOf(n) && a < s; )
                        a++,
                        n = t.charAt(a);
                else
                    for (; -1 != this.NUMBERS.indexOf(n) && 0 <= a; )
                        a--,
                        n = t.charAt(a);
                return a;
            }
            ,
            t.prototype.__getNextNonOperator = function(t, e) {
                for (var i = t.charAt(e), n = e, a = t.length; -1 != this.OPERATORS.indexOf(i) && n < a; )
                    n++,
                    i = t.charAt(n);
                return n;
            }
            ,
            t.prototype.__isUnary = function(t) {
                return -1 != this.UNARY.indexOf(t);
            }
            ,
            t.prototype.__matchLeftParen = function(t, e) {
                var i, n, a = 1, s = 0, r = t.length, o = -1;
                for (i = e + 1; i < r; ++i)
                    if ((n = t.charAt(i)) == this.LEFT_PAREN && a++,
                    n == this.RIGHT_PAREN && ++s == a) {
                        o = i;
                        break;
                    }
                return o;
            }
            ,
            t.prototype.__matchRightParen = function(t, e) {
                var i, n, a = 0, s = 1, r = -1;
                for (i = e - 1; 0 <= i; i--)
                    if ((n = t.charAt(i)) == this.RIGHT_PAREN && s++,
                    n == this.LEFT_PAREN && s == ++a) {
                        r = i;
                        break;
                    }
                return r;
            }
            ,
            t;
        }();
        t.SimpleExpression = g;
    }(m.utils || (m.utils = {}));
}(asgard || (asgard = {})),
function(n) {
    !function(t) {
        var e = function() {
            function t(t) {
                this._name = t,
                this._isBackground = !1,
                this._resReady = !1,
                this._isTip = !1;
            }
            return t.prototype.getName = function() {
                return this._name;
            }
            ,
            t.prototype.getView = function() {
                return this._uiView || (this._uiView = this.createView(),
                this._uiView && (this._uiView.name = this._name,
                this.onInit(),
                i.addUIView(this._uiView))),
                this._uiView;
            }
            ,
            t.prototype.showCenter = function(t, e) {
                this._uiView.x = .5 * (t - this._uiView.width),
                this._uiView.y = .5 * (e - this._uiView.height);
            }
            ,
            t.prototype.isVisible = function() {
                return this._visible;
            }
            ,
            t.prototype.isResReady = function() {
                return this._resReady;
            }
            ,
            t.prototype.getDependenceRes = function() {
                return null;
            }
            ,
            t.prototype.createView = function() {
                return null;
            }
            ,
            t.prototype._prepareRes = function() {
                if (this._resReady)
                    this._doShow();
                else {
                    var t = this.getDependenceRes();
                    t ? Laya.loader.load(t, Laya.Handler.create(this, this.onResLoaded)) : this.onResLoaded();
                }
            }
            ,
            t.prototype.prepareView = function() {
                this._visible = !1,
                this._prepareRes();
            }
            ,
            t.prototype.openView = function() {
                this._visible = !0,
                this._prepareRes();
            }
            ,
            t.prototype.closeView = function(t) {
                this._visible = !1,
                this.onHide(),
                t && this._uiView && this._uiView.removeSelf();
            }
            ,
            t.prototype.onResLoaded = function() {
                this._resReady = !0,
                this.onPrepared(),
                this._visible && this._doShow();
            }
            ,
            t.prototype._doShow = function() {
                var t = this.getView();
                this._visible && t && (this.onShow(),
                this._isBackground ? i.addBkgView(t) : this._isTip ? i.addTipView(t) : i.addUIView(t));
            }
            ,
            t.prototype.onFrame = function(t, e) {}
            ,
            t.prototype.onInit = function() {}
            ,
            t.prototype.onPrepared = function() {}
            ,
            t.prototype.onShow = function() {}
            ,
            t.prototype.onHide = function() {}
            ,
            t.prototype.dispose = function() {}
            ,
            t;
        }();
        t.BaseUIPanel = e;
        var i = function() {
            function i() {}
            return i.init = function(t) {
                (i._Bkg_Root = new Laya.Sprite()).width = Laya.stage.width,
                i._Bkg_Root.height = Laya.stage.height,
                i._Bkg_Root.mouseThrough = !0,
                Laya.stage.addChild(i._Bkg_Root),
                (i._Game_Root = new Laya.Sprite()).width = Laya.stage.width,
                i._Game_Root.height = Laya.stage.height,
                i._Game_Root.mouseThrough = !0,
                Laya.stage.addChild(i._Game_Root),
                (i._UI_Root = new Laya.Sprite()).width = Laya.stage.width,
                i._UI_Root.height = Laya.stage.height,
                i._UI_Root.mouseThrough = !0,
                Laya.stage.addChild(i._UI_Root),
                (i._UI_EFFECT = new Laya.Sprite()).width = Laya.stage.width,
                i._UI_EFFECT.height = Laya.stage.height,
                i._UI_EFFECT.mouseThrough = !0,
                Laya.stage.addChild(i._UI_EFFECT),
                (i._Tip_Root = new Laya.Sprite()).width = Laya.stage.width,
                i._Tip_Root.height = Laya.stage.height,
                i._Tip_Root.mouseThrough = !0,
                Laya.stage.addChild(i._Tip_Root),
                i._uifactory = t,
                i._uiPanels.clear();
            }
            ,
            i.addBkgView = function(t) {
                t && i._Bkg_Root.addChild(t);
            }
            ,
            i.addGameView = function(t) {
                t && i._Game_Root.addChild(t);
            }
            ,
            i.addUIView = function(t) {
                t && i._UI_Root.addChild(t);
            }
            ,
            i.addUIEffectView = function(t) {
                t && i._UI_EFFECT.addChild(t);
            }
            ,
            i.addTipView = function(t) {
                t && i._Tip_Root.addChild(t);
            }
            ,
            i.getHasTipUI = function() {
                for (var t = 0; t < i._Tip_Root.numChildren; t++) {
                    var e = i._Tip_Root.getChildAt(t);
                    if (e && e.visible)
                        return !0;
                }
                return !1;
            }
            ,
            i.findUIPanel = function(t) {
                return i._uiPanels.search(null, i._compareUI, t);
            }
            ,
            i._compareUI = function(t, e) {
                return t && e && e == t.getName();
            }
            ,
            i.openView = function(t) {
                var e = i._uiPanels.search(null, i._compareUI, t);
                return e || (e = i._uifactory.getUI(t)) && i._uiPanels.add(e),
                e && e.openView(),
                e;
            }
            ,
            i.prepareView = function(t) {
                var e = i._uiPanels.search(null, i._compareUI, t);
                return e || (e = i._uifactory.getUI(t)) && i._uiPanels.add(e),
                e && e.prepareView(),
                e;
            }
            ,
            i.closeView = function(t) {
                var e = i._uiPanels.search(null, i._compareUI, t);
                e && e.closeView(!0);
            }
            ,
            i.onFrame = function(t, e) {
                i._frameTime = t,
                i._frameDelta = e,
                i._uiPanels.scan(null, i._uiPanelFrame);
            }
            ,
            i._uiPanelFrame = function(t) {
                return t && t.isVisible() && t.onFrame(i._frameTime, i._frameDelta),
                !0;
            }
            ,
            i._uiPanels = new n.utils.SimpleList(),
            i;
        }();
        t.UIManager = i;
    }(n.ui || (n.ui = {}));
}(asgard || (asgard = {})),
function(a) {
    !function(t) {
        var l = a.utils.DataUtil
          , e = function() {
            function t() {
                this.Id = 0;
            }
            return t.prototype.getDataType = function() {
                return 0;
            }
            ,
            t.prototype.initialize = function(t) {
                return !1;
            }
            ,
            t.prototype.initReference = function() {}
            ,
            t.prototype.initTextBlock = function() {}
            ,
            t.prototype.readBoolean = function(t) {
                return .1 < t.getByte();
            }
            ,
            t.prototype.readByte = function(t) {
                return t.getByte();
            }
            ,
            t.prototype.readShort = function(t) {
                return t.getInt16();
            }
            ,
            t.prototype.readInt = function(t) {
                return t.getInt32();
            }
            ,
            t.prototype.readInt64 = function(t) {
                var e = t.getInt32()
                  , i = t.getInt32();
                return new a.utils.Int64(e,i);
            }
            ,
            t.prototype.readFloat = function(t) {
                return t.getFloat32();
            }
            ,
            t.prototype.readDouble = function(t) {
                return t.getFloat64();
            }
            ,
            t.prototype.readString = function(t) {
                return t.getUTFString();
            }
            ,
            t;
        }();
        t.BaseStaticData = e;
        var i = function() {
            function t(t) {
                this._textSource = t;
            }
            return t.prototype.initData = function() {}
            ,
            Object.defineProperty(t.prototype, "textSource", {
                get: function() {
                    return this.textSource;
                },
                enumerable: !0,
                configurable: !0
            }),
            t;
        }();
        t.BaseTextBlockData = i;
        var n = function() {
            function h() {}
            return h.getSheet = function(t) {
                return h._dataMap.get(t);
            }
            ,
            h.getSheetDatas = function(t) {
                var e = h._dataMap.get(t);
                return e ? e.getSheetDatas() : null;
            }
            ,
            h.appendSheet = function(t) {
                var e = h._dataMap.get(t);
                if (e)
                    return e;
                var i = new u();
                return h._dataMap.set(t, i),
                i;
            }
            ,
            h.findData = function(t, e) {
                var i = h._dataMap.get(t);
                return null != i ? i.getData(e) : null;
            }
            ,
            h.loadStaticData = function(t, e) {
                var i, n, a = l.readShort(t), s = new Array(a), r = new Array(a);
                for (i = 0; i < a; i++)
                    s[i] = l.readInt(t),
                    r[i] = l.readInt(t);
                var o = new Array(a);
                for (i = 0; i < a; i++)
                    (n = new u()).initDataFactory(e),
                    n.loadSheetData(t),
                    o[i] = n,
                    h._dataMap.set(n.SheetId, n);
                for (i = 0; i < a; i++)
                    o[i].loadReferenceData();
                for (i = 0; i < a; i++)
                    o[i].loadTextBlockData();
                console.log("数据加载完毕--》" + o);
                for (var i = 0; i < o[8]._dataList.length; i++) {
                    var obj = o[8]._dataList[i];
                    obj.Resource = obj.Resource.replace("爆头", "baotou").replace("出现", "chuxian").replace("打中身体", "dazhongshenti").replace("打中盾牌", "dazhongdunpai").replace("获得金币", "huodejinbi");
                    //console.log("------------->" + obj.Resource);
                }

            }
            ,
            h._dataMap = new Laya.Dictionary(),
            h;
        }();
        t.StaticDataManager = n;
        var u = function() {
            function t() {
                this._sheetId = 0,
                this._sheetName = null,
                this._containsReferenceField = !1,
                this._containsTextBlockField = !1,
                this._dataMap = new Laya.Dictionary(),
                this._dataList = null;
            }
            return t.prototype.initDataFactory = function(t) {
                this._dataFactory = t;
            }
            ,
            Object.defineProperty(t.prototype, "SheetId", {
                get: function() {
                    return this._sheetId;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "SheetName", {
                get: function() {
                    return this._sheetName;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.getData = function(t) {
                return this._dataMap.get(t);
            }
            ,
            t.prototype.getSheetDatas = function() {
                if (null != this._dataList) {
                    var t = this._dataList.length;
                    if (0 < t) {
                        for (var e = new Array(t), i = 0; i < t; i++)
                            e[i] = this._dataList[i];
                        return e;
                    }
                }
                return null;
            }
            ,
            t.prototype.loadSheetData = function(t) {
                try {
                    this._sheetName = l.readString(t),
                    this._sheetId = l.readShort(t),
                    l.readString(t);
                    var e = void 0
                      , i = l.readShort(t)
                      , n = l.readShort(t);
                    for (e = 0; e < n; e++)
                        l.readString(t),
                        0 < l.readShort(t) && (this._containsReferenceField = !0),
                        l.readString(t),
                        7 == l.readByte(t) && (this._containsTextBlockField = !0),
                        l.readByte(t);
                    var a = void 0;
                    for (this._dataList = new Array(i),
                    e = 0; e < i; e++)
                        if (null != (a = this._dataFactory.createStaticData(this._sheetId)))
                            try {
                                a.initialize(t),
                                this._dataList[e] = a,
                                this._dataMap.set(a.Id, a);
                            } catch (t) {}
                    console.log(this._dataList);
                } catch (t) {}
            }
            ,
            t.prototype.loadReferenceData = function() {
                if (null != this._dataList && this._containsReferenceField)
                    for (var t = this._dataList.length, e = 0; e < t; e++)
                        this._dataList[e].initReference();
            }
            ,
            t.prototype.loadTextBlockData = function() {
                if (null != this._dataList && this._containsTextBlockField)
                    for (var t = this._dataList.length, e = 0; e < t; e++)
                        this._dataList[e].initTextBlock();
            }
            ,
            Object.defineProperty(t.prototype, "Count", {
                get: function() {
                    return this._dataList ? this._dataList.length : 0;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.getDataAt = function(t) {
                return 0 <= t && t < this._dataList.length ? this._dataList[t] : null;
            }
            ,
            t;
        }();
        t.StaticDataSheet = u;
    }(a.data || (a.data = {}));
}(asgard || (asgard = {})),
function(t) {
    !function(t) {
        var e = function() {
            function t(t, e) {
                this._owner = t,
                this._statesManager = e,
                this._frameActive = !0,
                this._active = !1,
                this._fromStateId = -1,
                this._toStateId = -1,
                this._enterStamp = 0,
                this._keepTime = 0,
                this._lockReferCount = 0;
            }
            return t.prototype.onInit = function() {}
            ,
            t.prototype.changeState = function(t, e) {
                void 0 === e && (e = !1),
                this._statesManager.changeState(t, e);
            }
            ,
            t.prototype.bindOwner = function(t) {
                this._owner = t;
            }
            ,
            Object.defineProperty(t.prototype, "Owner", {
                get: function() {
                    return this._owner;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "StateId", {
                get: function() {
                    return this._stateId;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "Name", {
                get: function() {
                    return this._name;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "Locked", {
                get: function() {
                    return 0 < this._lockReferCount;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.lock = function() {
                this._lockReferCount++;
            }
            ,
            t.prototype.unlock = function() {
                this._lockReferCount--;
            }
            ,
            Object.defineProperty(t.prototype, "KeepTime", {
                get: function() {
                    return this._keepTime;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "Active", {
                get: function() {
                    return this._active;
                },
                set: function(t) {
                    this._active = t;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "EnterFrameTick", {
                get: function() {
                    return this._enterFrameTick;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.prepareEnter = function(t) {
                this._enterFrameTick = this._statesManager.FrameTick,
                this._enterStamp = t;
            }
            ,
            t.prototype.transitable = function(t) {
                return !0;
            }
            ,
            t.prototype.enter = function(t) {}
            ,
            t.prototype.exit = function(t) {}
            ,
            t.prototype.afterExit = function() {}
            ,
            t.prototype.activeCurrentFrame = function(t) {
                this._keepTime = t - this._enterStamp,
                this._frameActive || (this._frameActive = !0);
            }
            ,
            Object.defineProperty(t.prototype, "FrameActive", {
                get: function() {
                    return this._frameActive;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.ignoreCurrentFrame = function() {
                this._frameActive = !1;
            }
            ,
            t.prototype.prepareFrame = function(t, e) {}
            ,
            t.prototype.onFrame = function(t, e) {}
            ,
            t.prototype.dispose = function() {}
            ,
            Object.defineProperty(t.prototype, "StateFromId", {
                get: function() {
                    return this._fromStateId;
                },
                set: function(t) {
                    this._fromStateId = t;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "StateToId", {
                get: function() {
                    return this._toStateId;
                },
                set: function(t) {
                    this._toStateId = t;
                },
                enumerable: !0,
                configurable: !0
            }),
            t;
        }();
        t.BaseState = e;
        var i = function() {
            function s(t, e, i) {
                this._owner = t,
                this._stateCount = e,
                this._states = new Array(this._stateCount),
                this._initStateId = i,
                this._frameTick = 0,
                this._isTransittingState = !1,
                this._locked = !1,
                this.initStates(),
                this._lastTimeStmap = Laya.timer.currTimer,
                this._ready = !1,
                this.reset();
            }
            return s.prototype.initStates = function() {}
            ,
            Object.defineProperty(s.prototype, "Owner", {
                get: function() {
                    return this._owner;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(s.prototype, "IsReady", {
                get: function() {
                    return this._ready;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(s.prototype, "FrameTick", {
                get: function() {
                    return this._frameTick;
                },
                enumerable: !0,
                configurable: !0
            }),
            s.prototype.reset = function() {
                for (var t = 0; t < this._states.length; t++)
                    this._states[t] && this._states[t].onInit();
                this._curState = this.getState(this._initStateId),
                null != this._curState && (this._curState.Active = !0,
                this._curState.prepareEnter(Laya.timer.currTimer),
                this._curState.enter(Laya.timer.currTimer)),
                this._ready = !0;
            }
            ,
            s.prototype.lock = function() {
                this._locked = !0;
            }
            ,
            s.prototype.unlock = function() {
                this._locked = !1,
                this.changeState(this._initStateId, !0);
            }
            ,
            Object.defineProperty(s.prototype, "IsLocked", {
                get: function() {
                    return this._locked;
                },
                enumerable: !0,
                configurable: !0
            }),
            s.prototype.regState = function(t) {
                null == t || t.StateId >= this._stateCount || null == this._states[t.StateId] && (this._states[t.StateId] = t);
            }
            ,
            s.prototype.getState = function(t) {
                return 0 <= t && t < this._stateCount ? this._states[t] : null;
            }
            ,
            s.prototype.onFrame = function(t) {
                this._ready ? (this._frameDelta = t - this._lastTimeStmap,
                this._lastTimeStmap = t,
                this._frameTick++,
                this._locked || null == this._curState || (this._curState.activeCurrentFrame(t),
                this._curState.prepareFrame(t, this._frameDelta),
                this._curState.Active && this._curState.FrameActive && this._curState.onFrame(t, this._frameDelta))) : this._lastTimeStmap = t;
            }
            ,
            s.prototype.changeState = function(t, e) {
                if (void 0 === e && (e = !1),
                null != this._curState && this._curState.StateId == t)
                    return s.SAME_AND_NOSELFINTERRUPTABLE;
                var i, n = e ? s.OK : this.checkToState(t);
                if (n == s.OK) {
                    this._isTransittingState = !0,
                    i = this.getState(t);
                    var a = Laya.timer.currTimer;
                    null != this._curState && (this._curState.StateToId = t,
                    this._curState.exit(a),
                    this._curState.afterExit(),
                    this._curState.Active = !1,
                    this._curState.StateToId = -1),
                    null != i && (i.StateFromId = this.CurrentStateID,
                    this._curState = i,
                    this._curState.Active = !0,
                    this._curState.prepareEnter(a),
                    this._curState.enter(a)),
                    this._isTransittingState = !1;
                }
                return n;
            }
            ,
            s.prototype.checkToState = function(t) {
                if (null != this._curState && !this._curState.transitable(t))
                    return this.CurrentState.StateId != t ? s.NOT_TRANSITABLE : s.SAME_AND_NOSELFINTERRUPTABLE;
                if (null != this._curState && this._curState.StateFromId == t && this._curState.EnterFrameTick == this.FrameTick)
                    return s.RECIRCLE_STATE_TRANSIT;
                var e = this.getState(t);
                return null != e && e.Locked ? s.LOCKED : s.OK;
            }
            ,
            s.prototype.dispose = function() {
                var t;
                if ((this._owner = null) != this._states) {
                    for (t = 0; t < this._stateCount; t++)
                        null != this._states[t] && (this._states[t].dispose(),
                        this._states[t] = null);
                    this._states = null;
                }
            }
            ,
            Object.defineProperty(s.prototype, "CurrentStateID", {
                get: function() {
                    return null != this._curState ? this._curState.StateId : -1;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(s.prototype, "CurrentStateFromID", {
                get: function() {
                    return null != this._curState ? this._curState.StateFromId : -1;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(s.prototype, "CurrentState", {
                get: function() {
                    return this._curState;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(s.prototype, "TransittingState", {
                get: function() {
                    return this._isTransittingState;
                },
                enumerable: !0,
                configurable: !0
            }),
            s.SAME_AND_NOSELFINTERRUPTABLE = s.OK = 0,
            s.LOCKED = 1,
            s.NOT_TRANSITABLE = 2,
            s.NOT_IN_LAYER = 3,
            s.RECIRCLE_STATE_TRANSIT = 4,
            s;
        }();
        t.StatesManager = i;
    }(t.state || (t.state = {}));
}(asgard || (asgard = {})),
function(t) {
    !function(t) {
        var e = function() {
            function t() {
                this._stageId = 0,
                this.FromStageId = 0;
            }
            return Object.defineProperty(t.prototype, "stageId", {
                get: function() {
                    return this._stageId;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.enterStage = function(t) {
                i.enterStage(t);
            }
            ,
            t.prototype.onEnter = function() {}
            ,
            t.prototype.onFrame = function(t, e) {}
            ,
            t.prototype.onExit = function() {}
            ,
            t;
        }();
        t.BaseStage = e;
        var i = function() {
            function i() {}
            return i.init = function(t, e) {
                i._curStage = null,
                i._initStageId = t,
                i._stageFactory = e;
            }
            ,
            Object.defineProperty(i, "CurStage", {
                get: function() {
                    return i._curStage;
                },
                enumerable: !0,
                configurable: !0
            }),
            i.enterStage = function(t) {
                if (!i._curStage || i._curStage.stageId != t) {
                    var e = 0;
                    i._curStage && (e = i._curStage.stageId,
                    i._curStage.onExit(),
                    i._curStage = null),
                    i._stageFactory && (i._curStage = i._stageFactory.getStage(t)) && (i._curStage.FromStageId = e,
                    i._curStage.onEnter());
                }
            }
            ,
            i.onFrame = function(t, e) {
                i._curStage ? i._curStage.onFrame(t, e) : i._initStageId && (i.enterStage(i._initStageId),
                i._initStageId = 0);
            }
            ,
            i;
        }();
        t.StageManager = i;
    }(t.stage || (t.stage = {}));
}(asgard || (asgard = {})),
function(t) {
    !function(t) {
        var a = function(t, e) {
            this.walkable = !0,
            this.costMultiplier = 1,
            this.x = t,
            this.y = e;
        };
        t.Node = a;
        var e = function() {
            function t(t, e) {
                this._numCols = t,
                this._numRows = e,
                this._nodes = [];
                for (var i = 0; i < t; i++) {
                    this._nodes[i] = [];
                    for (var n = 0; n < e; n++)
                        this._nodes[i][n] = new a(i,n);
                }
            }
            return t.prototype.getNode = function(t, e) {
                return this._nodes[t][e];
            }
            ,
            t.prototype.setEndNode = function(t, e) {
                this._endNode = this._nodes[t][e];
            }
            ,
            t.prototype.setStartNode = function(t, e) {
                this._startNode = this._nodes[t][e];
            }
            ,
            t.prototype.setWalkable = function(t, e, i) {
                this._nodes[t][e].walkable = i;
            }
            ,
            Object.defineProperty(t.prototype, "endNode", {
                get: function() {
                    return this._endNode;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "numCols", {
                get: function() {
                    return this._numCols;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "numRows", {
                get: function() {
                    return this._numRows;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "startNode", {
                get: function() {
                    return this._startNode;
                },
                enumerable: !0,
                configurable: !0
            }),
            t;
        }();
        t.Grid = e;
        var i = function() {
            function t() {
                this._straightCost = 1,
                this._diagCost = Math.SQRT2,
                this._heuristic = this.diagonal;
            }
            return t.prototype.findPath = function(t) {
                return this._grid = t,
                this._open = [],
                this._closed = [],
                this._startNode = this._grid.startNode,
                this._endNode = this._grid.endNode,
                this._startNode.g = 0,
                this._startNode.h = this._heuristic(this._startNode),
                this._startNode.f = this._startNode.g + this._startNode.h,
                this.search();
            }
            ,
            t.prototype.search = function() {
                for (var t = this._startNode; t != this._endNode; ) {
                    for (var e = Math.max(0, t.x - 1), i = Math.min(this._grid.numCols - 1, t.x + 1), n = Math.max(0, t.y - 1), a = Math.min(this._grid.numRows - 1, t.y + 1), s = e; s <= i; s++)
                        for (var r = n; r <= a; r++)
                            if (s == t.x || r == t.y) {
                                var o = this._grid.getNode(s, r);
                                if (o != t && o.walkable && this._grid.getNode(t.x, o.y).walkable && this._grid.getNode(o.x, t.y).walkable) {
                                    var h = this._straightCost;
                                    t.x != o.x && t.y != o.y && (h = this._diagCost);
                                    var l = t.g + h * o.costMultiplier
                                      , u = this._heuristic(o)
                                      , c = l + u;
                                    this.isOpen(o) || this.isClosed(o) ? o.f > c && (o.f = c,
                                    o.g = l,
                                    o.h = u,
                                    o.parent = t) : (o.f = c,
                                    o.g = l,
                                    o.h = u,
                                    o.parent = t,
                                    this._open.push(o));
                                }
                            }
                    for (var d = 0; d < this._open.length; d++)
                        ;
                    if (this._closed.push(t),
                    0 == this._open.length)
                        return console.log("AStar >> no path found"),
                        !1;
                    for (var _ = this._open.length, p = 0; p < _; p++)
                        for (var f = p + 1; f < _; f++)
                            if (this._open[p].f > this._open[f].f) {
                                var g = this._open[p];
                                this._open[p] = this._open[f],
                                this._open[f] = g;
                            }
                    t = this._open.shift();
                }
                return this.buildPath(),
                !0;
            }
            ,
            t.prototype.buildPath = function() {
                this._path = new Array();
                var t = this._endNode;
                for (this._path.push(t); t != this._startNode; )
                    t = t.parent,
                    this._path.unshift(t);
            }
            ,
            Object.defineProperty(t.prototype, "path", {
                get: function() {
                    return this._path;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.isOpen = function(t) {
                for (var e = 0; e < this._open.length; e++)
                    if (this._open[e] == t)
                        return !0;
                return !1;
            }
            ,
            t.prototype.isClosed = function(t) {
                for (var e = 0; e < this._closed.length; e++)
                    if (this._closed[e] == t)
                        return !0;
                return !1;
            }
            ,
            t.prototype.manhattan = function(t) {
                return Math.abs(t.x - this._endNode.x) * this._straightCost + Math.abs(t.y + this._endNode.y) * this._straightCost;
            }
            ,
            t.prototype.euclidian = function(t) {
                var e = t.x - this._endNode.x
                  , i = t.y - this._endNode.y;
                return Math.sqrt(e * e + i * i) * this._straightCost;
            }
            ,
            t.prototype.diagonal = function(t) {
                var e = Math.abs(t.x - this._endNode.x)
                  , i = Math.abs(t.y - this._endNode.y)
                  , n = Math.min(e, i)
                  , a = e + i;
                return this._diagCost * n + this._straightCost * (a - 2 * n);
            }
            ,
            Object.defineProperty(t.prototype, "visited", {
                get: function() {
                    return this._closed.concat(this._open);
                },
                enumerable: !0,
                configurable: !0
            }),
            t;
        }();
        t.AStar = i;
    }(t.pathing || (t.pathing = {}));
}(asgard || (asgard = {})),
function(d) {
    !function(t) {
        var n = laya.events.Event
          , e = laya.utils.Byte
          , i = Laya.Socket
          , a = laya.utils.Browser
          , s = d.utils.SimpleDelegate
          , r = function() {
            function t() {}
            return t.prototype.registerEventListener = function(t, e, i) {
                switch (t) {
                case n.OPEN:
                    this.onConnected = new s(e,i);
                    break;

                case n.CLOSE:
                    this.onClose = new s(e,i);
                    break;

                case n.ERROR:
                    this.onError = new s(e,i);
                    break;

                case n.MESSAGE:
                    this.onMessageReceived = new s(e,i);
                }
            }
            ,
            t.prototype.unregisterEventListener = function(t) {
                switch (t) {
                case n.OPEN:
                    this.onConnected = null;
                    break;

                case n.CLOSE:
                    this.onClose = null;
                    break;

                case n.ERROR:
                    this.onError = null;
                    break;

                case n.MESSAGE:
                    this.onMessageReceived = null;
                }
            }
            ,
            t.prototype.connectedNotify = function() {
                this.onConnected && this.onConnected.apply();
            }
            ,
            t.prototype.closeNotify = function() {
                this.onClose && (this.onClose.apply(),
                console.log("SimpleSocket.closeHandler(), 数据连接关闭!"));
            }
            ,
            t.prototype.errorNotify = function() {
                this.onError && (this.onError.apply(),
                console.log("SimpleSocket.errorHandler(), 数据连接错误!"));
            }
            ,
            t.prototype.messageReceivedNotify = function(t, e) {
                this.onMessageReceived && this.onMessageReceived.apply([t, e]);
            }
            ,
            t;
        }();
        t.NetEvents = r,
        t.CONNECTION_LOBBY = 0,
        t.CONNECTION_ARENA = 1;
        var o = function() {
            function t(t) {
                this._connectionFlag = t,
                this._net = new d.net.TCPClient(),
                this._net.registerEventListener(laya.events.Event.OPEN, this, this.OnConnected),
                this._net.registerEventListener(laya.events.Event.MESSAGE, this, this.OnMsgReceive),
                this._connectedNotify = null;
            }
            return Object.defineProperty(t.prototype, "ConnectionFlag", {
                get: function() {
                    return this._connectionFlag;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "IsConnected", {
                get: function() {
                    return this._net.connected;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.setConnectedNotify = function(t, e) {
                this._connectedNotify = new d.utils.SimpleDelegate(t,e);
            }
            ,
            t.prototype.setMessageNotify = function(t, e) {
                this._messageNotify = new d.utils.SimpleDelegate(t,e);
            }
            ,
            t.prototype.tryConnection = function(t, e) {
                this._net.connect(t, e);
            }
            ,
            t.prototype.OnConnected = function() {
                this._connectedNotify && this._connectedNotify.apply();
            }
            ,
            t.prototype.sendMessage = function(t) {
                var e = t.encode();
                this._net.sendMessages(t.getMessageType(), e),
                e = null;
            }
            ,
            t.prototype.OnMsgReceive = function(t, e) {
                this._messageNotify && this._messageNotify.apply([this._connectionFlag, t, e]);
            }
            ,
            t;
        }();
        t.NetSession = o;
        var h = function() {
            function r() {}
            return r.InitMessageFactory = function(t) {
                r._messageFactory = t;
            }
            ,
            r.tryConnect = function(t, e, i, n, a) {
                var s = r._sessions[t];
                return s || ((s = new o(t)).setMessageNotify(r, r._onMessageNotify),
                r._sessions[t] = s),
                s && (s.setConnectedNotify(n, a),
                s.tryConnection(e, i)),
                s;
            }
            ,
            r.sendMessage = function(t) {
                var e = r._sessions[t.connectionFlag];
                e && e.sendMessage(t);
            }
            ,
            r._onMessageNotify = function(t, e, i) {
                if (r._messageFactory) {
                    var n = r._messageFactory.getMessage(e);
                    n && (n.setConnectionFlag(t),
                    n.decode(i),
                    d.message.MessageDispatcher.ProcessMessage(e, n));
                }
            }
            ,
            r._sessions = new Array(t.CONNECTION_ARENA + 1),
            r;
        }();
        t.NetManager = h;
        var l = function() {
            function t() {
                this.init();
            }
            return t.prototype.getEvents = function() {
                return this._events;
            }
            ,
            t.prototype.setEvents = function(t) {
                this._events = t;
            }
            ,
            t.prototype.getConnected = function() {
                return this.socket.connected;
            }
            ,
            t.prototype.connect = function(t, e) {
                console.log("GameSocket.connect()"),
                this.resetConnect(),
                this.socket.connect(t, e);
            }
            ,
            t.prototype.close = function() {
                this.socket && this.socket.connected && this.socket.close();
            }
            ,
            t.prototype.init = function() {
                this.socket = new i(),
                this.socket.endian = t.BYTE_ORDER,
                this.socket.on(n.OPEN, this, this.connectHandler),
                this.socket.on(n.CLOSE, this, this.closeHandler),
                this.socket.on(n.MESSAGE, this, this.socketDataHandler),
                this.socket.on(n.ERROR, this, this.errorHandler),
                this.outputBuffer = new e(),
                this.outputBuffer.endian = t.BYTE_ORDER,
                this.inputBuffer = new e(),
                this.inputBuffer.endian = t.BYTE_ORDER,
                this.msgBuffer = new e(),
                this.msgBuffer.endian = t.BYTE_ORDER;
            }
            ,
            t.prototype.resetConnect = function() {
                this.socket.off(n.OPEN, this, this.connectHandler),
                this.socket.off(n.CLOSE, this, this.closeHandler),
                this.socket.off(n.ERROR, this, this.errorHandler),
                this.socket.off(n.MESSAGE, this, this.socketDataHandler),
                this.socket = null,
                this.outputBuffer = null,
                this.inputBuffer = null,
                this.msgBuffer = null,
                this.init();
            }
            ,
            t.prototype.sendPackage = function(t, e) {
                this.socket.connected ? (e.pos = 0,
                this.outputBuffer.clear(),
                this.outputBuffer.writeUint32(e.length + 8),
                this.outputBuffer.writeUint32(t),
                this.outputBuffer.writeArrayBuffer(e.buffer),
                this.outputBuffer.pos = 0,
                console.log("Send cmd = " + t + ", bytes.leng = " + e.length),
                this.socket.output.writeArrayBuffer(this.outputBuffer.buffer),
                this.socket.flush(),
                this.outputBuffer.clear()) : console.log("GameSocket.sendPackage(), 无连接");
            }
            ,
            t.prototype.connectHandler = function(t) {
                this._events.connectedNotify();
            }
            ,
            t.prototype.closeHandler = function(t) {
                this._events && (this._events.closeNotify(),
                console.log("SimpleSocket.closeHandler(), 数据连接关闭!"));
            }
            ,
            t.prototype.errorHandler = function(t) {
                this._events && (this._events.errorNotify(),
                console.log("SimpleSocket.errorHandler(), 数据连接错误!"));
            }
            ,
            t.prototype.clearRecvArray = function() {
                this.inputBuffer && (this.inputBuffer.clear(),
                this.inputBuffer = new e()),
                this.msgBuffer && (this.msgBuffer.clear(),
                this.msgBuffer = new e());
            }
            ,
            t.prototype.socketDataHandler = function(t) {
                console.log("GameSocket.socketDataHandler");
                try {
                    var e = void 0
                      , i = void 0
                      , n = void 0
                      , a = void 0;
                    for (this.inputBuffer.writeArrayBuffer(t),
                    this.inputBuffer.pos = 0; 8 <= this.inputBuffer.bytesAvailable; ) {
                        if ((e = this.inputBuffer.getInt32()) < 8)
                            return i = this.inputBuffer.getInt32(),
                            this.inputBuffer.length = 0,
                            void alert("数据长度为0了 , 协议号为： " + i);
                        if (!(e - 4 <= this.inputBuffer.bytesAvailable))
                            break;
                        i = this.inputBuffer.getInt32(),
                        this.msgBuffer.clear(),
                        this.msgBuffer.writeArrayBuffer(this.inputBuffer.buffer, this.inputBuffer.pos, e - 8),
                        n = this.inputBuffer.pos + e - 8,
                        a = this.inputBuffer.length - n,
                        this.inputBuffer.pos = 0,
                        this.inputBuffer.length = 0 < a ? (this.inputBuffer.writeArrayBuffer(this.inputBuffer.buffer, n, this.inputBuffer.length),
                        a) : 0,
                        this.msgBuffer.pos = 0,
                        this._events && this._events.messageReceivedNotify(i, this.msgBuffer),
                        this.msgBuffer.clear();
                    }
                } catch (t) {
                    console.log("error = ", t.message);
                }
            }
            ,
            t.BYTE_ORDER = Laya.Byte.BIG_ENDIAN,
            t;
        }();
        t.SimpleSocket = l;
        var u = function() {
            function t() {
                this._events = new r(),
                this.init();
            }
            return t.prototype.registerEventListener = function(t, e, i) {
                this._events.registerEventListener(t, e, i);
            }
            ,
            t.prototype.unregisterEventListener = function(t) {
                this._events.unregisterEventListener(t);
            }
            ,
            t.prototype.onBlur = function() {
                console.log("失去焦点");
            }
            ,
            t.prototype.onVisibilityReconnect = function() {
                console.log("可见性变化"),
                Laya.stage.isVisibility && (this._socket.getConnected() || a.window.location.reload());
            }
            ,
            t.prototype.init = function() {
                this._socket = new l(),
                this._socket.setEvents(this._events);
            }
            ,
            t.prototype.connect = function(t, e) {
                this._socket || this.init(),
                this._socket.getConnected() || this._socket.connect(t, e);
            }
            ,
            Object.defineProperty(t.prototype, "connected", {
                get: function() {
                    return !!this._socket && this._socket.getConnected();
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.sendMessages = function(t, e) {
                this._socket && this._socket.getConnected() ? Laya.stage.isVisibility && this._socket.sendPackage(t, e) : this._socket && this._socket.getConnected();
            }
            ,
            t.prototype.close = function() {
                this._socket && this._socket.getConnected() && this._socket.close();
            }
            ,
            t.prototype.unUseFul = function() {
                close(),
                this._socket = null;
            }
            ,
            t.prototype.hadSocket = function() {
                return !!this._socket;
            }
            ,
            t.prototype.clearRecvArray = function() {
                this._socket && this._socket.clearRecvArray();
            }
            ,
            t.prototype.onConnect = function() {
                this._events.connectedNotify();
            }
            ,
            t.prototype.onMessageReceived = function(t, e) {
                this._events.messageReceivedNotify(t, e);
            }
            ,
            t.prototype.onDisConnect = function() {
                this.onLoseConnectionWithServer();
            }
            ,
            t.prototype.onConnectError = function() {
                this.showErrorMessageContent(),
                this.receiveIOError();
            }
            ,
            t.prototype.receiveIOError = function() {
                close(),
                this.onLoseConnectionWithServer();
            }
            ,
            t.prototype.showErrorMessageContent = function() {}
            ,
            t.prototype.onLoseConnectionWithServer = function() {
                Laya.stage.isVisibility && (this._socket.getConnected() || (console.log("连接断开"),
                a.window.location.reload()));
            }
            ,
            t;
        }();
        t.TCPClient = u;
        var c = function() {
            function t() {}
            return Object.defineProperty(t.prototype, "Status", {
                get: function() {
                    return this._status;
                },
                enumerable: !0,
                configurable: !0
            }),
            Object.defineProperty(t.prototype, "ResponseText", {
                get: function() {
                    return this._responseText;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.postRequest = function(t, e, i, n, a, s) {
                if (void 0 === a && (a = "text"),
                void 0 === s && (s = 1e4),
                t) {
                    this._taskHandler = new d.utils.SimpleDelegate(i,n);
                    try {
                        this._http = new Laya.HttpRequest(),
                        this._http.http.timeout = s,
                        this._http.once(Laya.Event.PROGRESS, this, this.onHttpRequestProgress),
                        this._http.once(Laya.Event.COMPLETE, this, this.onHttpRequestComplete),
                        this._http.once(Laya.Event.ERROR, this, this.onHttpRequestError),
                        a ? this._http.send(t, e, "POST", "text", ["Content-Type", a]) : this._http.send(t, e, "POST", "text");
                    } catch (t) {
                        this.onHttpRequestError(t);
                    }
                }
            }
            ,
            t.prototype.getRequest = function(t, e, i, n, a) {
                void 0 === n && (n = "text"),
                void 0 === a && (a = 1e4),
                t && (this._taskHandler = new d.utils.SimpleDelegate(e,i),
                this._http = new Laya.HttpRequest(),
                this._http.http.timeout = a,
                this._http.once(Laya.Event.PROGRESS, this, this.onHttpRequestProgress),
                this._http.once(Laya.Event.COMPLETE, this, this.onHttpRequestComplete),
                this._http.once(Laya.Event.ERROR, this, this.onHttpRequestError),
                this._http.send(t, null, "GET", n));
            }
            ,
            t.prototype.onHttpRequestError = function(t) {
                console.log("http error:" + JSON.stringify(t)),
                this._status = -1,
                this._responseText = t,
                this._notifyHandle();
            }
            ,
            t.prototype.onHttpRequestProgress = function(t) {
                console.log("http precess " + t);
            }
            ,
            t.prototype.onHttpRequestComplete = function(t) {
                console.log("http complete"),
                this._status = 0,
                this._responseText = this._http.data,
                this._notifyHandle();
            }
            ,
            t.prototype._notifyHandle = function() {
                this._taskHandler && this._taskHandler.apply([this]);
            }
            ,
            t;
        }();
        t.SimpleHttp = c;
    }(d.net || (d.net = {}));
}(asgard || (asgard = {})),
function(t) {
    !function(t) {
        var e = function() {
            function t() {}
            return Object.defineProperty(t.prototype, "moduleId", {
                get: function() {
                    return this._moduleId;
                },
                enumerable: !0,
                configurable: !0
            }),
            t;
        }();
        t.BaseModule = e;
        var i = function() {
            function i() {}
            return i.init = function(t) {
                i._moduleFactory = t;
            }
            ,
            i.clear = function() {
                i._moduleMap.clear();
            }
            ,
            i.RegisterModule = function(t) {
                if (!t)
                    throw new Error("module instance is null!");
                i._moduleMap.set(t.moduleId, t);
            }
            ,
            i.getModule = function(t) {
                var e = i._moduleMap.get(t);
                return !e && i._moduleFactory && (e = i._moduleFactory.getModule(t)) && i._moduleMap.set(t, e),
                e;
            }
            ,
            i._moduleMap = new laya.utils.Dictionary(),
            i;
        }();
        t.ModuleManager = i;
    }(t.module || (t.module = {}));
}(asgard || (asgard = {})),
function(s) {
    !function(t) {
        var e = function() {
            function t() {}
            return t.prototype.setConnectionFlag = function(t) {
                this._connectionFlag = t;
            }
            ,
            Object.defineProperty(t.prototype, "connectionFlag", {
                get: function() {
                    return this._connectionFlag;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.encode = function() {
                return this._bytes = new laya.utils.Byte(),
                this._bytes.endian = s.utils.SystemOption.BYTE_ORDER,
                this.writeImpl(),
                this._bytes;
            }
            ,
            t.prototype.decode = function(t) {
                this._bytes = t,
                this.readImpl();
            }
            ,
            t.prototype.getMessageType = function() {
                return 0;
            }
            ,
            t.prototype.getByteArray = function() {
                return this._bytes;
            }
            ,
            t.prototype.excute = function() {}
            ,
            t.prototype.writeImpl = function() {}
            ,
            t.prototype.readImpl = function() {}
            ,
            t.prototype.writeBoolean = function(t) {
                1 == t ? this._bytes.writeByte(1) : this._bytes.writeByte(0);
            }
            ,
            t.prototype.writeByte = function(t) {
                this._bytes.writeByte(t);
            }
            ,
            t.prototype.writeShort = function(t) {
                this._bytes.writeInt16(t);
            }
            ,
            t.prototype.writeInt = function(t) {
                this._bytes.writeInt32(t);
            }
            ,
            t.prototype.writeLong = function(t) {
                this._bytes.writeInt32(t);
            }
            ,
            t.prototype.writeFloat = function(t) {
                this._bytes.writeFloat32(t);
            }
            ,
            t.prototype.writeDouble = function(t) {
                this._bytes.writeFloat64(t);
            }
            ,
            t.prototype.writeString = function(t) {
                this._bytes.writeUTFString(t);
            }
            ,
            t.prototype.readBoolean = function() {
                return .1 < this._bytes.getByte();
            }
            ,
            t.prototype.readByte = function() {
                return this._bytes.getByte();
            }
            ,
            t.prototype.readShort = function() {
                return this._bytes.getInt16();
            }
            ,
            t.prototype.readInt = function() {
                return this._bytes.getInt32();
            }
            ,
            t.prototype.readInt64 = function() {
                var t = this._bytes.getInt32()
                  , e = this._bytes.getInt32();
                return new s.utils.Int64(t,e);
            }
            ,
            t.prototype.readFloat = function() {
                return this._bytes.getFloat32();
            }
            ,
            t.prototype.readDouble = function() {
                return this._bytes.getFloat64();
            }
            ,
            t.prototype.readString = function() {
                return this._bytes.getUTFString();
            }
            ,
            t.prototype.toString = function() {
                return "";
            }
            ,
            t;
        }();
        t.BaseMessage = e;
        var i = function() {
            function t() {}
            return t.prototype.init = function() {}
            ,
            t.prototype.RegisterMsgHandler = function(t, e) {
                n.RegisterMsgProcess(t, this, e);
            }
            ,
            t.prototype.RegisterMsgData = function(t) {
                return null;
            }
            ,
            t;
        }();
        t.BaseMessageHandler = i;
        var n = function() {
            function a() {}
            return a.reset = function() {
                a._messageHandlerMap.clear();
            }
            ,
            a.addMessageHandler = function(t) {
                t && t.init();
            }
            ,
            a.RegisterMsgProcess = function(t, e, i) {
                if (!(e && 0 < t))
                    throw new Error("Unsupported type!");
                var n = new s.utils.SimpleDelegate(e,i);
                a._messageHandlerMap.set(t, n);
            }
            ,
            a.ProcessMessage = function(t, e) {
                var i = a._messageHandlerMap.get(t);
                if (!i)
                    throw new Error("Unsupported msg:" + t);
                i.apply([t, e]);
            }
            ,
            a._messageHandlerMap = new laya.utils.Dictionary(),
            a;
        }();
        t.MessageDispatcher = n;
    }(s.message || (s.message = {}));
}(asgard || (asgard = {})),
function(t) {
    !function(t) {
        var e = function() {
            function t(t, e) {
                this.x = 0,
                this.y = 0,
                this.x = t,
                this.y = e,
                this._lengthDirty = !0;
            }
            return t.prototype.add = function(t) {
                this.x += t.x,
                this.y += t.y;
            }
            ,
            t.prototype.scale = function(t) {
                this.x *= t,
                this.y *= t;
            }
            ,
            Object.defineProperty(t.prototype, "Length", {
                get: function() {
                    return this._lengthDirty && (this._lengthDirty = !1,
                    this._length = Math.sqrt(this.x * this.x + this.y * this.y)),
                    this._length;
                },
                enumerable: !0,
                configurable: !0
            }),
            t.prototype.normalize = function() {
                var t = this.Length;
                0 < t && 1 != t && this.scale(1 / t);
            }
            ,
            t.prototype.clear = function() {
                this.x = 0,
                this.y = 0;
            }
            ,
            t.prototype.toString = function() {
                return this.x + "," + this.y;
            }
            ,
            t.cross = function(t, e, i, n) {
                return t * n - e * i;
            }
            ,
            t.dot = function(t, e, i, n) {
                return t * i + e * n;
            }
            ,
            t.lengthOf = function(t, e) {
                return Math.sqrt(t * t + e * e);
            }
            ,
            t;
        }();
        t.Vector2 = e;
        var i = function(t, e, i) {
            this.x = 0,
            this.y = 0,
            this.z = 0,
            this.x = t,
            this.y = e,
            this.z = i;
        };
        t.Vector3 = i;
    }(t.math || (t.math = {}));
}(asgard || (asgard = {})),
function(t) {
    !function(t) {
        t.LEFT = 1,
        t.RIGHT = 2,
        t.FORWARD = 3,
        t.BACKWARD = 4,
        t.JoyStick = 5,
        t.JoyDirection = 6,
        t.JoyForce = 7,
        t.MouseX = 8,
        t.MouseY = 9,
        t.FIRE = 10,
        t.F1 = 11,
        t.F2 = 12,
        t.F3 = 13,
        t.F4 = 14,
        t.F5 = 15,
        t.F6 = 16,
        t.F7 = 17,
        t.F8 = 18,
        t.F9 = 19,
        t.F10 = 20;
        var a = function() {
            function t() {}
            return t.prototype.setKeyValue = function(t) {
                return this.KeyValue = t,
                this.KeyValue ? (this.ExpireStamp = Laya.timer.currTimer + 80,
                !0) : (this.ExpireStamp = 0,
                !1);
            }
            ,
            t.prototype.tryResetKey = function(t) {
                return !this.KeyValue || t > this.ExpireStamp && (this.KeyValue = 0,
                !(this.ExpireStamp = 0));
            }
            ,
            t;
        }()
          , e = function() {
            function n() {}
            return n.getKey = function(t) {
                if (!n.ACTIVE)
                    return 0;
                var e = n._Key[t];
                return e && e.ExpireStamp > Laya.timer.currTimer ? e.KeyValue : 0;
            }
            ,
            n.setKey = function(t, e) {
                if (n.ACTIVE) {
                    var i = n._Key[t];
                    i || (i = new a(),
                    n._Key[t] = i),
                    i.setKeyValue(e) && (n._anyKey = !0,
                    n._anyKeyStamp = Laya.timer.currTimer + 80);
                }
            }
            ,
            n.isAnyKey = function() {
                return n.ACTIVE && n._anyKey && n._anyKeyStamp > Laya.timer.currTimer;
            }
            ,
            n._keyCount = 32,
            n._Key = new Array(n._keyCount),
            n._anyKey = !1,
            n._anyKeyStamp = 0,
            n.ACTIVE = !0,
            n;
        }();
        t.BaseInput = e;
    }(t.input || (t.input = {}));
}(asgard || (asgard = {})),
function(s) {
    var t, e;
    t = s.events || (s.events = {}),
    e = function() {
        function a() {}
        return a.registerEventListener = function(t, e, i) {
            if (0 < t && e && i) {
                var n = a._eventMap.get(t);
                n || (n = new s.utils.SimpleDelegates(),
                a._eventMap.set(t, n)),
                n.tryAddDelegate(e, i);
            }
        }
        ,
        a.unregisterEventListener = function(t, e, i) {
            if (0 < t && e && i) {
                var n = a._eventMap.get(t);
                n && n.removeDelegate(e, i);
            }
        }
        ,
        a.eventNotify = function(t, e) {
            if (0 < t) {
                var i = a._eventMap.get(t);
                i && (e ? i.invokeDelegate([e]) : i.invokeDelegate());
            }
        }
        ,
        a._eventMap = new laya.utils.Dictionary(),
        a;
    }(),
    t.EventsDispatcher = e;
}(asgard || (asgard = {}));

var asgard, __extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

function IsWXGame() {
    return false;
    //null != Laya.Browser.window.wx;
}

function clone(t) {
    var e;
    if (t instanceof Array) {
        e = [];
        for (var i = t.length; i--; )
            e[i] = clone(t[i]);
        return e;
    }
    if (t instanceof Object) {
        for (var n in e = {},
        t)
            e[n] = clone(t[n]);
        return e;
    }
    return t;
}

function HttpRequest(t, e, i, n, a, s) {
    var r = new Laya.HttpRequest();
    r.http.timeout = 1e4,
    r.once(Laya.Event.COMPLETE, null, function(t) {
        a.method.apply(a.caller, [t]);
    }),
    r.once(Laya.Event.ERROR, null, function(t) {
        s.method.apply(s.caller, [t]);
    }),
    r.send(logic.SystemConst.SERVER_URL + t, e, i, n, ["Content-Type", "application/json"]);
}

function HttpPost(t, e, i, n) {
    HttpRequest(t, e = JSON.stringify(e), "post", "json", i, n);
}

function HttpGet(t, e, i) {
    HttpRequest(t, "", "get", "json", e, i);
}

function HttpGetJSON(t, e, i) {
    var n = new Laya.HttpRequest();
    n.http.timeout = 1e4,
    n.once(Laya.Event.COMPLETE, null, function(t) {
        e.method.apply(e.caller, [t]);
    }),
    n.once(Laya.Event.ERROR, null, function(t) {
        i.method.apply(i.caller, [t]);
    }),
    n.send(logic.SystemConst.FILE_SERVER_URL + t, data, "get", "json", ["Content-Type", "application/json"]);
}

function GetQuery(t) {
    for (var e = new Object(), i = t.split("&"), n = 0; n < i.length; n++)
        e[i[n].split("=")[0]] = i[n].split("=")[1];
    return e;
}

!function(X) {
    var W, n, t;
    W = X.phys || (X.phys = {}),
    n = function() {
        function Y(t) {
            this.state = t,
            this.id = Y.nextBodyId++,
            this.origin = new X.math.Vector2(0,0),
            this.angle = 0,
            this.dimension = new X.math.Vector2(.1,.1),
            this.mass = 1,
            this.velocity = new X.math.Vector2(0,0),
            this.angularVelocity = 0,
            this.force = new X.math.Vector2(0,0),
            this.cx = [0, 0, 0, 0],
            this.cy = [0, 0, 0, 0];
        }
        return Y.prototype.finalize = function() {
            return this.inertia = (this.dimension.x * this.dimension.x + this.dimension.y * this.dimension.y) * this.mass / 12,
            this.calculateCorners(),
            this;
        }
        ,
        Y.prototype.setOrigin = function(t, e) {
            return this.origin.x = t,
            this.origin.y = e,
            this;
        }
        ,
        Y.prototype.setAngle = function(t) {
            return this.angle = t,
            this;
        }
        ,
        Y.prototype.setDimension = function(t, e) {
            return this.dimension.x = t,
            this.dimension.y = e,
            this;
        }
        ,
        Y.prototype.setMass = function(t) {
            return this.mass = t,
            this;
        }
        ,
        Y.prototype.setForce = function(t, e) {
            return this.force.x = t,
            this.force.y = e,
            this;
        }
        ,
        Y.prototype.advance = function(t) {
            this.origin.x += this.velocity.x * t,
            this.origin.y += this.velocity.y * t,
            this.angle += this.angularVelocity * t,
            this.angle > Math.PI ? this.angle -= Math.PI + Math.PI : this.angle < -Math.PI && (this.angle += Math.PI + Math.PI),
            this.calculateCorners();
        }
        ,
        Y.prototype.applyForces = function(t) {
            this.velocity.x += this.force.x * t * this.invertedMass(),
            this.velocity.y += this.force.y * t * this.invertedMass(),
            this.velocity.scale(Math.max(0, 1 - t * this.state.LATERAL_FRICTION)),
            this.angularVelocity *= Math.max(0, 1 - t * this.state.ROTATIONAL_FRICTION);
        }
        ,
        Y.prototype.calculateCorners = function() {
            var t = Math.sin(this.angle)
              , e = Math.cos(this.angle)
              , i = -t
              , n = e;
            this.cx[0] = this.origin.x + e * this.dimension.x * .5 + i * this.dimension.y * .5,
            this.cy[0] = this.origin.y + t * this.dimension.x * .5 + n * this.dimension.y * .5,
            this.cx[1] = this.origin.x - e * this.dimension.x * .5 + i * this.dimension.y * .5,
            this.cy[1] = this.origin.y - t * this.dimension.x * .5 + n * this.dimension.y * .5,
            this.cx[2] = this.origin.x - e * this.dimension.x * .5 - i * this.dimension.y * .5,
            this.cy[2] = this.origin.y - t * this.dimension.x * .5 - n * this.dimension.y * .5,
            this.cx[3] = this.origin.x + e * this.dimension.x * .5 - i * this.dimension.y * .5,
            this.cy[3] = this.origin.y + t * this.dimension.x * .5 - n * this.dimension.y * .5;
        }
        ,
        Y.prototype.invertedMass = function() {
            return this.isFixedBody() ? 0 : 1 / this.mass;
        }
        ,
        Y.prototype.invertedInertia = function() {
            return this.isFixedBody() || 0 === this.inertia ? 0 : 1 / this.inertia;
        }
        ,
        Y.prototype.isFixedBody = function() {
            return this.mass === Y.INFINITE_MASS;
        }
        ,
        Y.prototype.addVelocity = function(t) {
            this.velocity.add(t);
        }
        ,
        Y.prototype.addAngularVelocity = function(t) {
            this.angularVelocity += t;
        }
        ,
        Y.prototype.collideSingleCorner = function(t, e, i, n) {
            var a = e.cx[i]
              , s = e.cy[i]
              , r = a - this.origin.x
              , o = s - this.origin.y
              , h = Math.cos(-this.angle)
              , l = Math.sin(-this.angle)
              , u = r * l + o * h;
            r = r * h - o * l,
            o = u;
            var c = .5 * this.dimension.x
              , d = .5 * this.dimension.y;
            if (-c - Y.EPS <= r && r <= c + Y.EPS && -d - Y.EPS <= o && o <= d + Y.EPS) {
                var _ = e.velocity
                  , p = e.angularVelocity
                  , f = this.velocity
                  , g = this.angularVelocity
                  , m = a - e.origin.x
                  , y = s - e.origin.y
                  , v = a - this.origin.x
                  , S = -p * y
                  , x = p * m;
                S -= -g * (s - this.origin.y),
                x -= g * v,
                S -= f.x,
                x -= f.y;
                var b = (S += _.x) * n
                  , w = (x += _.y) * n
                  , M = Math.cos(-this.angle)
                  , I = Math.sin(-this.angle)
                  , T = b * I + w * M;
                b = b * M - w * I;
                var C = d - o
                  , E = C
                  , P = 0
                  , A = 0;
                C < -(w = T) && (P = 1),
                (C = c + r) < b && (P |= 2),
                C < E && (E = C,
                A = 1),
                (C = d + o) < w && (P |= 4),
                C < E && (E = C,
                A = 2),
                (C = c - r) < -b && (P |= 8),
                C < E && (E = C,
                A = 3);
                var L = void 0
                  , D = void 0;
                if (0 < P) {
                    for (var R = 0, k = D = L = 0; k < 4; k++)
                        if (0 < (P & 1 << k)) {
                            var N = 3 === (U = k) ? 0 : U + 1
                              , O = this.cx[U] - this.cx[N]
                              , B = this.cy[U] - this.cy[N]
                              , G = O *= H = 1 / X.math.Vector2.lengthOf(O, B);
                            L += O = -(B *= H),
                            D += B = G,
                            R++;
                        }
                    if (1 < R) {
                        var F = X.math.Vector2.lengthOf(L, D);
                        L /= F,
                        D /= F;
                    }
                } else {
                    var U, H;
                    N = 3 === (U = A) ? 0 : U + 1,
                    O = this.cx[U] - this.cx[N],
                    B = this.cy[U] - this.cy[N],
                    G = O *= H = 1 / X.math.Vector2.lengthOf(O, B);
                    L = O = -(B *= H),
                    D = B = G;
                }
                var V = new W.CollisionPoint(e,this,L,D,a,s,E);
                t.collisionPoints.push(V);
            }
        }
        ,
        Y.collide = function(t, e, i, n) {
            var a = new W.Collision(t);
            return Y.collideAllCorners(a, e, i, n),
            a.collisionPoints.length < 2 && Y.collideAllCorners(a, i, e, n),
            0 === a.collisionPoints.length ? null : a;
        }
        ,
        Y.collideAllCorners = function(t, e, i, n) {
            for (var a = 0; a < 4; a++)
                i.collideSingleCorner(t, e, a, n);
        }
        ,
        Y.INFINITE_MASS = -1,
        Y.EPS = 1e-5,
        Y.nextBodyId = 0,
        Y;
    }(),
    t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e.setMass(n.INFINITE_MASS),
            e;
        }
        return __extends(t, i),
        t;
    }(W.Body = n),
    W.FixedBody = t;
}(asgard || (asgard = {})),
function(n) {
    var t = function() {
        function i() {}
        return i.init = function() {
            i._playerModule = asgard.module.ModuleManager.getModule(n.MODULE_PLAYER),
            i._uiDataModule = asgard.module.ModuleManager.getModule(n.MODULE_UIDATA),
            asgard.events.EventsDispatcher.registerEventListener(n.GameEvents.EVENT_REFRESH_HISTORY_SCORE, i, i.chapterChange);
        }
        ,
        i.onFrame = function(t, e) {}
        ,
        i.chapterChange = function() {
            var t = i._playerModule.RoleInfo.HighScore;
            console.log("chapterChange:" + t),
            console.log("chapterChangeopenId:" + n.PlatformData.Instance.OpenId),
            n.PlatForm.getInstance().postMesToOpenContext({
                cmd: "postRank",
                rank: {
                    chapter: t,
                    openID: i._playerModule.RoleInfo.OpenId
                }
            });
        }
        ,
        i.syncRankData = function() {
            var t = i._playerModule.RoleInfo.Chapter
              , e = i._playerModule.RoleInfo.AllGold;
            n.PlatForm.getInstance().postMesToOpenContext({
                cmd: "postRank",
                rank: {
                    chapter: t,
                    allgold: e,
                    openID: i._playerModule.RoleInfo.OpenId
                }
            });
        }
        ,
        i.getRankData = function() {
            n.PlatForm.getInstance().postMesToOpenContext({
                cmd: "getRankList"
            });
        }
        ,
        i.closeRankMes = function(t) {
            n.PlatForm.getInstance().postMesToOpenContext({
                cmd: "closePanel",
                panel: t
            });
        }
        ,
        i.refreshRankMes = function(t, e) {
            if (IsWXGame()) {
                var i = {
                    page: e = e || "curPage"
                };
                n.PlatForm.getInstance().postMesToOpenContext({
                    cmd: "showPanel",
                    panel: t,
                    data: i
                });
            }
        }
        ,
        i;
    }();
    n.RankManager = t;
}(logic || (logic = {})),
function(a) {
    var t = function() {
        this.shareId = 0;
    };
    a.QueryInfo = t;
    var e = function() {
        function t() {
            this.IsIphoneX = !1,
            this.Share_Tip = "分享失败",
            this.New_Player_Times = 1,
            this.Share_Failed_Seconds = .3,
            this.Share_Failed_Times = 1,
            this.Share_Points = [],
            this.Share_Check_Time = 2500,
            this.Use_Share_Point = 3,
            this._isLogin = !1,
            this.CurTimeStamp = 0,
            this.ShareSwitch = !1,
            this._shareInfo = new a.ShareInfo(),
            this._shareGroupMap = new Laya.Dictionary(),
            this.IsNewVersion = !0,
            this.firstShareCheck = !1,
            this.localCheck = !1,
            this.moreGameCheck = !1;
        }
        return Object.defineProperty(t, "Instance", {
            get: function() {
                return t._instance || (t._instance = new t()),
                t._instance;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.onFrame = function(t, e) {
            this._isLogin && (this.CurTimeStamp += e);
        }
        ,
        Object.defineProperty(t.prototype, "IsLogin", {
            get: function() {
                return this._isLogin;
            },
            set: function(t) {
                this._isLogin = t;
                new Date(this.CurTimeStamp);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ShareSwitch", {
            get: function() {
                return this._shareSwitch;
            },
            set: function(t) {
                this._shareSwitch = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.getShareDataByIndex = function(t) {
            for (var e = 0; e < this.Share_Points.length; e++) {
                var i = this.Share_Points[e];
                if (console.log("shareElement: " + i),
                i.shareIndex == t)
                    return i;
            }
            return null;
        }
        ,
        t.prototype.getLastShareTimeByOpenGId = function(t) {
            return parseInt(this._shareGroupMap.get(t) || 0);
        }
        ,
        t.prototype.setLastShareTimeByOpenGId = function(t, e) {
            this._shareGroupMap.set(t, e);
        }
        ,
        Object.defineProperty(t.prototype, "UId", {
            get: function() {
                return this._uid || (this._uid = Laya.LocalStorage.getItem("uid")),
                this._uid;
            },
            set: function(t) {
                this._uid = t,
                Laya.LocalStorage.setItem("uid", this._uid);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ShareInfo", {
            get: function() {
                return this._shareInfo;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.createQuery = function(t, e, i) {
            var n = asgard.module.ModuleManager.getModule(a.MODULE_PLAYER);
            return "gameId=" + a.SystemConst.GAME_ID + "&share_uid=" + n.RoleInfo.UId + "&shareIndex=" + t + "&shareType=" + i + "&gameShareId=" + e;
        }
        ,
        Object.defineProperty(t.prototype, "SystemInfo", {
            get: function() {
                return this._systemInfo || (this._systemInfo = {
                    brand: "0",
                    model: "0",
                    pixelRatio: 1,
                    screenWidth: 720,
                    screenHeight: 1280,
                    windowWidth: 720,
                    windowHeight: 1280,
                    language: "",
                    version: "",
                    system: "",
                    platform: "",
                    fontSizeSetting: 20,
                    SDKVersion: "",
                    benchmarkLevel: 0,
                    battery: 1,
                    wifiSignal: 0,
                    statusBarHeight: 0
                }),
                this._systemInfo;
            },
            set: function(t) {
                this._systemInfo = t;
                var e = String(t ? t.model : "");
                e && -1 != e.search("iPhone X") && (this.IsIphoneX = !0);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "OnShowQuery", {
            get: function() {
                return this._onShowQuery;
            },
            set: function(t) {
                this._onShowQuery = t,
                asgard.events.EventsDispatcher.eventNotify(a.GameEvents.EVENT_WX_ON_SHOW);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "NickName", {
            get: function() {
                return this._nickName || (this._nickName = Laya.LocalStorage.getItem("nickName")),
                this._nickName;
            },
            set: function(t) {
                this._nickName = t,
                Laya.LocalStorage.setItem("nickName", this._nickName);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "AvatarUrl", {
            get: function() {
                return this._avatarUrl || (this._avatarUrl = Laya.LocalStorage.getItem("avatarUrl")),
                this._avatarUrl;
            },
            set: function(t) {
                this._avatarUrl = t,
                Laya.LocalStorage.setItem("avatarUrl", this._avatarUrl);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Gender", {
            get: function() {
                return this._gender || (this._gender = Laya.LocalStorage.getItem("gender")),
                this._gender;
            },
            set: function(t) {
                this._gender = t,
                Laya.LocalStorage.setItem("gender", this._gender);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.removeUId = function() {
            this._uid = null,
            Laya.LocalStorage.removeItem("uid");
        }
        ,
        Object.defineProperty(t.prototype, "OpenId", {
            get: function() {
                return this._openId || (this._openId = Laya.LocalStorage.getItem("openid")),
                this._openId;
            },
            set: function(t) {
                this._openId = t,
                Laya.LocalStorage.setItem("openid", this._openId);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.removeOpenId = function() {
            this._openId = null,
            Laya.LocalStorage.removeItem("openid");
        }
        ,
        Object.defineProperty(t.prototype, "UnionId", {
            get: function() {
                return this._unionId || (this._unionId = Laya.LocalStorage.getItem("unionid")),
                this._unionId;
            },
            set: function(t) {
                this._unionId = t,
                Laya.LocalStorage.setItem("unionid", this._unionId);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.removeUnionId = function() {
            this._unionId = null,
            Laya.LocalStorage.removeItem("unionid");
        }
        ,
        Object.defineProperty(t.prototype, "SessionId", {
            get: function() {
                return this._sessionId || (this._sessionId = Laya.LocalStorage.getItem("sessionid")),
                this._sessionId;
            },
            set: function(t) {
                this._sessionId = t,
                Laya.LocalStorage.setItem("sessionid", this._sessionId),
                a.CommonUtil.Log("SessionId被设置为：", this._sessionId);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.removeSessionId = function() {
            this._sessionId = null,
            Laya.LocalStorage.removeItem("sessionid");
        }
        ,
        Object.defineProperty(t.prototype, "ShareSuccessHandler", {
            get: function() {
                return this._shareSuccessHandler;
            },
            set: function(t) {
                this._shareSuccessHandler = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ShareFailHandler", {
            get: function() {
                return this._shareFailHandler;
            },
            set: function(t) {
                this._shareFailHandler = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ShareRes", {
            get: function() {
                return this._shareRes;
            },
            set: function(t) {
                this._shareRes = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "LastGetUserInfoStamp", {
            get: function() {
                return this._lastGetUserInfoStamp || (this._lastGetUserInfoStamp = parseInt(Laya.LocalStorage.getItem("lastGetUserInfoStamp"))),
                this._lastGetUserInfoStamp;
            },
            set: function(t) {
                this._lastGetUserInfoStamp = t,
                Laya.LocalStorage.setItem("lastGetUserInfoStamp", this._lastGetUserInfoStamp + "");
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Entrysource", {
            get: function() {
                return this._entrysource || (this._entrysource = Laya.LocalStorage.getItem("entrysource")),
                this._entrysource;
            },
            set: function(t) {
                this._entrysource = t,
                Laya.LocalStorage.setItem("entrysource", this._entrysource);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.removeEntrysource = function() {
            this._entrysource = null,
            Laya.LocalStorage.removeItem("entrysource");
        }
        ,
        Object.defineProperty(t.prototype, "Entrydata", {
            get: function() {
                return this._entrydata || (this._entrydata = Laya.LocalStorage.getItem("entrydata")),
                this._entrydata;
            },
            set: function(t) {
                this._entrydata = t,
                Laya.LocalStorage.setItem("entrydata", this._entrydata);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.removeEntrydata = function() {
            this._entrydata = null,
            Laya.LocalStorage.removeItem("entrydata");
        }
        ,
        t.ShareGap = 3e5,
        t;
    }();
    a.PlatformData = e;
}(logic || (logic = {})),
function(a) {
    var t = function() {
        function n() {}
        return n.init = function() {
            Laya.loader.retryNum = 2,
            Laya.AtlasResourceManager.atlasLimitHeight = 256,
            Laya.AtlasResourceManager.atlasLimitWidth = 256,
            a.ResLoader.init();
        }
        ,
        n.GetResInfo = function(t) {
            return t && "" != t ? this._resMap[t] : null;
        }
        ,
        n.registerResource = function(t, e) {
            if (!t || "" == t)
                return null;
            var i = n._resMap[t];
            return i || (i = new s(t,e),
            n._resMap[t] = i),
            i;
        }
        ,
        n.setResourceState = function(t, e) {
            var i = n._resMap[t];
            i && (i.State = e);
        }
        ,
        n.isResourceLoaded = function(t) {
            if (n.checkResourceState(t, s.RES_STATE_LOADED)) {
                if (Laya.loader.getRes(t))
                    return !0;
                n.setResourceState(t, s.RES_STATE_FREE);
            }
            return !1;
        }
        ,
        n.checkResourceState = function(t, e) {
            if (!t || "" == t)
                return !1;
            var i = n._resMap[t];
            return i && i.State == e;
        }
        ,
        n.referNotify = function(t, e) {
            if (!t || "" == t)
                return null;
            var i = n._resMap[t];
            i && (e ? (i.Active || (i.Active = !0,
            n._activeRes.add(i)),
            i.incRefer()) : i.decRefer());
        }
        ,
        n.onFrame = function(t, e) {
            a.ResLoader.ckeckLoaderState(),
            --n._frameDelay <= 0 && (n._frameDelay = n.DFT_DISPOSE_FRAME,
            n._checkStamp = 0,
            n._activeRes.scan(null, n._checkResourceRefer));
        }
        ,
        n._checkResourceRefer = function(t) {
            return !t.tryReclaim();
        }
        ,
        n.DFT_DISPOSE_FRAME = 30,
        n._resMap = new Laya.Dictionary(),
        n._activeRes = new asgard.utils.SimpleList(),
        n._frameDelay = 30,
        n._checkStamp = 0,
        n;
    }();
    a.AppResources = t;
    var s = function() {
        function i(t, e) {
            this._resUrl = t,
            this._resType = e,
            this._refCount = 0,
            this._freeStamp = a.DateUtils.getTimestamp() + i.RECLAIM_DELAY_PREPARE,
            this.State = i.RES_STATE_FREE,
            this.Active = !1;
        }
        return Object.defineProperty(i.prototype, "State", {
            get: function() {
                return this._state;
            },
            set: function(t) {
                this._state = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(i.prototype, "Loaded", {
            get: function() {
                return this.State == i.RES_STATE_LOADED;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(i.prototype, "Url", {
            get: function() {
                return this._resUrl;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(i.prototype, "ResType", {
            get: function() {
                return this._resType;
            },
            enumerable: !0,
            configurable: !0
        }),
        i.prototype.incRefer = function() {
            this._refCount++;
        }
        ,
        i.prototype.decRefer = function() {
            this._refCount--,
            this._refCount <= 0 && (this._refCount = 0,
            this._freeStamp = a.DateUtils.getTimestamp() + i.RECLAIM_DELAY_FREE);
        }
        ,
        i.prototype.tryReclaim = function() {
            return this._refCount <= 0 && a.DateUtils.getTimestamp() > this._freeStamp && (this.dispose(),
            !0);
        }
        ,
        i.prototype.dispose = function() {
            this.Active = !1,
            0 < this._refCount ? a.CommonUtil.Log("!!!!resource " + this._resUrl + " disposed,but refer count is " + this._refCount) : a.CommonUtil.Log("dispose resource ", this._resUrl),
            Laya.loader.getRes(this._resUrl) ? Laya.loader.clearRes(this._resUrl, !0) : a.CommonUtil.Log("resRuntime==null", this._resUrl),
            this.State;
        }
        ,
        i.RES_STATE_FREE = 0,
        i.RES_STATE_LOADED = 2,
        i.RECLAIM_DELAY_FREE = 3e5,
        i.RECLAIM_DELAY_PREPARE = 6e5,
        i;
    }();
    a.ResourceInfo = s;
}(logic || (logic = {})),
function(h) {
    var o = function() {
        function t(t, e) {
            var i = t.Count;
            if (this._resList = new Array(),
            this._loadList = new Array(),
            this._completeHandler = e,
            this._taskCompleted = !1,
            0 < i)
                for (var n = void 0, a = void 0, s = void 0, r = void 0, o = 0; o < i; o++)
                    s = (n = t.getResInfo(o)).url,
                    r = n.type,
                    s && "" != s && ((a = h.AppResources.GetResInfo(s)) || (a = h.AppResources.registerResource(s, r)),
                    a.Loaded || this._loadList.push(n),
                    this._resList.push(a));
            this.CheckResLoaded();
        }
        return Object.defineProperty(t.prototype, "LoadList", {
            get: function() {
                return this._loadList;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "TaskCompleted", {
            get: function() {
                return this._taskCompleted;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.CheckResLoaded = function() {
            if (this._taskCompleted)
                return !0;
            this._taskCompleted = !0;
            for (var t = 0; this._taskCompleted && t < this._resList.length; t++)
                this._resList[t].State != h.ResourceInfo.RES_STATE_LOADED && (h.CommonUtil.Log("需要加载：", this._resList[t].Url),
                this._taskCompleted = !1);
            return this._taskCompleted && this._completeHandler && this._completeHandler.run(),
            this._taskCompleted;
        }
        ,
        t;
    }();
    h.ResLoadingTask = o;
    var a = function() {
        function t() {
            this._resArray = new Array(),
            this._resCount = 0;
        }
        return t.prototype.appendRessource = function(t, e) {
            t && "" != t && e && "" != e && (this.containRes(t) || (this._resArray.push({
                url: t,
                type: e
            }),
            this._resCount++));
        }
        ,
        t.prototype.appendRessourceArr = function(t) {
            for (var e = 0; e < t.length; e++) {
                var i = t[e];
                this.appendRessource(i.url, i.type);
            }
        }
        ,
        Object.defineProperty(t.prototype, "LoadList", {
            get: function() {
                return this._resArray;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Count", {
            get: function() {
                return this._resCount;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.getResInfo = function(t) {
            return 0 <= t && t < this._resCount ? this._resArray[t] : null;
        }
        ,
        t.prototype.containRes = function(t) {
            for (var e = 0; e < this._resArray.length; e++) {
                if (this._resArray[e].url == t)
                    return !0;
            }
        }
        ,
        t;
    }();
    h.ResLoadList = a;
    var t = function() {
        function r() {}
        return r.init = function() {
            Laya.loader.on(Laya.Event.ERROR, null, r.onError);
        }
        ,
        r.dispose = function() {
            Laya.loader.off(Laya.Event.ERROR, null, r.onError);
        }
        ,
        r.ckeckLoaderState = function() {
            r._activeTasks.scan(null, r.scanTaskState);
        }
        ,
        r.loadRes = function(t, e, i) {
            if (t && "" != t && e && "" != e && !h.AppResources.isResourceLoaded(t)) {
                var n = new a();
                n.appendRessource(t, e),
                r.load(n, i);
            }
        }
        ,
        r.scanTaskState = function(t) {
            if (t) {
                var e = t;
                return e.CheckResLoaded(),
                !e.TaskCompleted;
            }
            return !1;
        }
        ,
        r.load = function(n, t, e, i) {
            (!n || n.Count <= 0) && t && t.run();
            var a = new o(n,t);
            a.TaskCompleted || r._activeTasks.add(a);
            var s = a.LoadList;
            s && 0 < s.length && Laya.loader.load(s, new Laya.Handler(this,function() {
                for (var t, e = n.Count, i = 0; i < e; i++)
                    (t = n.getResInfo(i)) && h.AppResources.setResourceState(t.url, h.ResourceInfo.RES_STATE_LOADED);
            }
            ), e, i);
        }
        ,
        r.onError = function(t) {
            h.CommonUtil.Log("加载错误，", t);
        }
        ,
        r._activeTasks = new asgard.utils.SimpleList(),
        r;
    }();
    h.ResLoader = t;
}(logic || (logic = {})),
function(r) {
    var t = function() {
        function t() {}
        return t.SplitNumber = function(t) {
            for (var e = []; 0 < t; )
                e.push(t % 10),
                t = Math.floor(t / 10);
            return e.reverse();
        }
        ,
        t.SplitExponential = function(t, e) {
            var i = new Array()
              , n = t.toExponential(e)
              , a = n.indexOf("e");
            return "-" == n.substring(a + 1, a + 2) ? i.push(-1) : i.push(1),
            i.push(parseFloat(n.substring(0, a))),
            i.push(parseInt(n.substring(a + 2, n.length))),
            i;
        }
        ,
        t.CheckProp = function(t) {
            return 1e5 * Math.random() < t;
        }
        ,
        t.randomWeightByDataArr = function(t, e) {
            for (var i = 0, n = 0; n < t.length; n++)
                i += t[n][e] || 0;
            var a, s = Math.floor(Math.random() * i);
            for (n = 0; n < t.length; n++)
                if ((s -= t[n][e] || 0) < 0) {
                    a = t[n];
                    break;
                }
            return null == a && r.CommonUtil.Log("随机权重的时候没有找到对应的项！"),
            a;
        }
        ,
        t.randomWeightByWeightArr = function(t) {
            for (var e = 0, i = 0; i < t.length; i++)
                e += t[i] || 0;
            var n, a = Math.floor(Math.random() * e);
            for (i = 0; i < t.length; i++)
                if ((a -= t[i] || 0) < 0) {
                    n = i;
                    break;
                }
            return null == n && r.CommonUtil.Log("随机权重的时候没有找到对应的项！"),
            n;
        }
        ,
        t.shuffle = function(t) {
            for (var e, i = t.length; i; ) {
                var n = Math.floor(Math.random() * i--);
                e = [t[i], t[n]],
                t[n] = e[0],
                t[i] = e[1];
            }
            return t;
        }
        ,
        t;
    }();
    r.NumberUtils = t;
}(logic || (logic = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.getBuyGoldById = function(t) {
            var e = data.StaticDataFactory.findGun(t);
            return e && e.BuyGold ? Number(e.BuyGold) : 0;
        }
        ,
        t.getSellGoldById = function(t) {
            var e = data.StaticDataFactory.findGun(t);
            return e && e.SellGold ? Number(e.SellGold) : 0;
        }
        ,
        t.getEarnPerSecondById = function(t) {
            var e = data.StaticDataFactory.findGun(t);
            return e && e.EarnPerSecond ? Number(e.EarnPerSecond) : 0;
        }
        ,
        t.getSpeedUpEarnById = function(t) {
            var e = data.StaticDataFactory.findGun(t);
            return e && e.SpeedUpEarn ? Number(e.SpeedUpEarn) : 0;
        }
        ,
        t.getMonsterDataById = function(t) {
            var e = data.StaticDataFactory.findMonster(t);
            return e || null;
        }
        ,
        t.getBossDataById = function(t) {
            var e = data.StaticDataFactory.findBoss(t);
            return e || null;
        }
        ,
        t.getSkillDataById = function(t) {
            var e = data.StaticDataFactory.findSkill(t);
            return e || null;
        }
        ,
        t;
    }();
    t.DataUtils = e;
}(logic || (logic = {})),
function(a) {
    var t = function() {
        function n() {}
        return n.Log = function(t) {
            for (var e = [], i = 1; i < arguments.length; i++)
                e[i - 1] = arguments[i];
            a.SystemConst.LOG_ACTIVE && console.log.apply(n, arguments);
        }
        ,
        n.timeToStr_M_S = function(t) {
            if (!t)
                return "00:00";
            t = Math.floor(.001 * t);
            var e = Math.floor(t / 3600)
              , i = Math.floor((t - 3600 * e) / 60)
              , n = Math.floor(t - 3600 * e - 60 * i);
            return (i < 10 ? "0" + i : i) + ":" + (n < 10 ? "0" + n : n);
        }
        ,
        n.timeToStr_H_M_S = function(t) {
            if (!t)
                return "00:00:00";
            new Date().setTime(t),
            t = Math.floor(.001 * t);
            var e = Math.floor(t / 3600)
              , i = Math.floor((t - 3600 * e) / 60)
              , n = Math.floor(t - 3600 * e - 60 * i);
            return (e < 10 ? "0" + e : e) + ":" + (i < 10 ? "0" + i : i) + ":" + (n < 10 ? "0" + n : n);
        }
        ,
        n.timeToStr_D_H_M = function(t) {
            if (!t)
                return "00:00:00";
            new Date().setTime(t),
            t = Math.floor(.001 * t);
            var e = Math.floor(t / 86400)
              , i = Math.floor((t - 86400 * e) / 3600);
            return e + "天" + i + "小时" + Math.floor((t - 86400 * e - 3600 * i) / 60) + "分";
        }
        ,
        n.upAndDown = function(t, e) {
            Laya.Tween.clearAll(t);
            var i = t.y + e;
            Laya.Tween.to(t, {
                y: i
            }, 1e3, null, Laya.Handler.create(n, n.upAndDown, [t, 0 - e]));
        }
        ,
        n.leftAndRight = function(t, e) {
            Laya.Tween.clearAll(t);
            var i = t.x + e;
            Laya.Tween.to(t, {
                x: i
            }, 800, null, Laya.Handler.create(n, n.leftAndRight, [t, 0 - e]));
        }
        ,
        n.lightShowAndHide = function(t, e) {
            Laya.Tween.clearAll(t);
            var i = 1 - t.alpha;
            Laya.Tween.to(t, {
                alpha: i
            }, e, null, Laya.Handler.create(n, n.lightShowAndHide, [t, e]));
        }
        ,
        n.getGlobalByPoint = function(t) {
            if (t) {
                var e = new Laya.Point(t.x,t.y)
                  , i = t.parent;
                return i && (e = i.localToGlobal(e)),
                e;
            }
            return new Laya.Point(0,0);
        }
        ,
        n.moneyChange = function(t) {
            var e, i = ["", "K", "M", "B", "T", "aa", "ab", "ac", "ad", "af", "ag", "ah", "ai", "aj", "ak", "al", "am"];
            for (e = i.shift(); 1e3 < t; )
                e = i.shift(),
                t /= 1e3;
            var n = (t = t.toFixed(1)) + ""
              , a = n.indexOf(".");
            return "0" == n.substr(a + 1, 2) ? n.substring(0, a) + n.substr(a + 3, 1) + e : "" == e ? Math.floor(t) : t + e;
        }
        ,
        n.bezierPath = function(t, e, i, n, a) {
            var s, r = [], o = t.distance(e.x, e.y) / (2 * i), h = Math.atan2(e.y - t.y, e.x - t.x);
            r.push(t.x, t.y);
            for (var l = 1, u = 0; u < i - 1 + i; u++) {
                var c = t.x + Math.cos(h) * (o * (u + 1))
                  , d = t.y + Math.sin(h) * (o * (u + 1));
                u % 2 == 0 && (c += Math.cos(h + (1 == l ? -90 * Math.PI / 180 : 270 * Math.PI / 180)) * n * l,
                d += Math.sin(h + (1 == l ? -90 * Math.PI / 180 : 270 * Math.PI / 180)) * n * l,
                l *= -1),
                r.push(c, d);
            }
            r.push(e.x, e.y);
            var _ = 0
              , p = []
              , f = 0;
            for (i = (s = Laya.Bezier.I.getBezierPoints(r, a, 2)).length; f < i; f += 2)
                p[_] = [],
                p[_][0] = parseFloat(s[f]),
                p[_][1] = parseFloat(s[f + 1]),
                _++;
            return p;
        }
        ,
        n.getRandom = function(t, e, i) {
            if (i <= 0 || e <= t)
                return null;
            for (var n = []; 0 < i; ) {
                var a = t + Math.floor(Math.random() * (e - t + 1));
                -1 == n.indexOf(a) && (n.push(a),
                i--);
            }
            return n;
        }
        ,
        n.sidesShake = function(t, e) {
            return t.skew(0, 0),
            t.alpha = 0,
            t.scale(.5, .5),
            Laya.Tween.to(t, {
                alpha: 1
            }, 33, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    skewX: 7,
                    skewY: 7,
                    scaleX: .85,
                    scaleY: .85
                }, 67, null, Laya.Handler.create(this, function() {
                    Laya.Tween.to(t, {
                        skewX: -7,
                        skewY: -7,
                        scaleX: 1.2,
                        scaleY: 1.2
                    }, 66, null, Laya.Handler.create(this, function() {
                        Laya.Tween.to(t, {
                            skewX: 4,
                            skewY: 4,
                            scaleX: 1,
                            scaleY: 1
                        }, 67, null, Laya.Handler.create(this, function() {
                            Laya.Tween.to(t, {
                                skewX: -4,
                                skewY: -4
                            }, 67, null, Laya.Handler.create(this, function() {
                                Laya.Tween.to(t, {
                                    skewX: 2,
                                    skewY: 2
                                }, 33, null, Laya.Handler.create(this, function() {
                                    Laya.Tween.to(t, {
                                        skewX: -2,
                                        skewY: -2
                                    }, 33, null, Laya.Handler.create(this, function() {
                                        Laya.Tween.to(t, {
                                            skewX: 0,
                                            skewY: 0
                                        }, 34, null, e);
                                    }));
                                }));
                            }));
                        }));
                    }));
                }));
            }));
        }
        ,
        n.pound = function(t, e, i) {
            var n = this;
            return t.alpha = 0,
            t.scale(2, 2),
            i && i.run(),
            Laya.Tween.to(t, {
                scaleX: .8,
                scaleY: .8,
                alpha: e
            }, 100, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: 1.2,
                    scaleY: 1.2,
                    alpha: e
                }, 60, null, Laya.Handler.create(n, function() {
                    Laya.Tween.to(t, {
                        scaleX: .9,
                        scaleY: .9,
                        alpha: e
                    }, 60, null, Laya.Handler.create(n, function() {
                        Laya.Tween.to(t, {
                            scaleX: 1.1,
                            scaleY: 1.1,
                            alpha: e
                        }, 50, null, Laya.Handler.create(n, function() {
                            Laya.Tween.to(t, {
                                scaleX: 1,
                                scaleY: 1,
                                alpha: e
                            }, 30, null, Laya.Handler.create(n, function() {}));
                        }));
                    }));
                }));
            }));
        }
        ,
        n.shake = function(t, e) {
            var i = this;
            return e && e.run(),
            Laya.Tween.to(t, {
                scaleX: 1.2,
                scaleY: 1.2
            }, 60, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: .8,
                    scaleY: .8
                }, 100, null, Laya.Handler.create(i, function() {
                    Laya.Tween.to(t, {
                        scaleX: 1.2,
                        scaleY: 1.2
                    }, 60, null, Laya.Handler.create(i, function() {
                        Laya.Tween.to(t, {
                            scaleX: .9,
                            scaleY: .9
                        }, 60, null, Laya.Handler.create(i, function() {
                            Laya.Tween.to(t, {
                                scaleX: 1.1,
                                scaleY: 1.1
                            }, 30, null, Laya.Handler.create(i, function() {
                                Laya.Tween.to(t, {
                                    scaleX: 1,
                                    scaleY: 1
                                }, 30, null, Laya.Handler.create(i, function() {}));
                            }));
                        }));
                    }));
                }));
            }));
        }
        ,
        n;
    }();
    a.CommonUtil = t;
}(logic || (logic = {})),
function(t) {
    var i, e, r = function() {
        function t() {}
        return Object.defineProperty(t, "SERVER_URL", {
            get: function() {
                return "";
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t, "CITY_CHECK_URL", {
            get: function() {
                return "";
            },
            enumerable: !0,
            configurable: !0
        }),
        t.FrameOpen = !0,
        t.SOUND_ACTIVE = !0,
        t.LOG_ACTIVE = !1,
        t.GAME_VERSION = "2.3.2",
        t.SCEEN_WIDTH = 720,
        t.SCEEN_HEIGHT = 1280,
        t.REAL_HEIGHT = 1280,
        t.CHANGE_HEIGHT = 0,
        t.USE_SERVER = !0,
        t.APP_NAME = "Gun",
        t.GAME_ID = "wx09c7fa4274acf1a9",
        t.TEST = !0,
        t.IS_CITY = !1,
        t.FILE_SERVER_URL = "",
        t.SYSTEM_CONFIG_PATH = "/gun/gun" + t.GAME_VERSION + ".json",
        t.GAME_DATA_FILE = "catgo.json",
        t;
    }();
    t.SystemConst = r,
    (e = i = t.AdType || (t.AdType = {}))[e.Offline = 1] = "Offline",
    e[e.SignIn = 2] = "SignIn",
    e[e.NpcBox = 3] = "NpcBox",
    e[e.AddSpeed = 4] = "AddSpeed",
    e[e.NewGunReward = 5] = "NewGunReward",
    e[e.FreeTry = 6] = "FreeTry",
    e[e.EndDoubleReward = 7] = "EndDoubleReward",
    e[e.Revive = 8] = "Revive",
    e[e.DialTimes = 9] = "DialTimes",
    e[e.FREE_GOLD = 10] = "FREE_GOLD",
    e[e.Shield = 11] = "Shield",
    e[e.FreeGun = 12] = "FreeGun",
    e[e.DialReward3 = 13] = "DialReward3",
    e[e.DialReward6 = 14] = "DialReward6",
    e[e.Skin = 102] = "Skin";
    var n = function() {
        function e() {}
        return e.getADByIndex = function(t) {
            switch (t) {
            case i.Offline:
                return e.AD_VIO_OFF_LINE;

            case i.SignIn:
                return e.AD_VIO_SIGN_IN;

            case i.NpcBox:
                return e.AD_VIO_NPC_BOX;

            case i.AddSpeed:
                return e.AD_VIO_ADD_SPEED;

            case i.NewGunReward:
                return e.AD_VIO_UNLOCK_DIAMOND;

            case i.FreeTry:
                return e.AD_VIO_FREE_TRY;

            case i.EndDoubleReward:
                return e.AD_VIO_END_DOUBLE;

            case i.Revive:
                return e.AD_VIO_REVIVE;

            case i.DialTimes:
                return e.AD_VIO_DIAL_TIMES;

            case i.FREE_GOLD:
                return e.AD_VIO_FREE_GOLD;

            case i.Shield:
                return e.AD_VIO_SHIELD;

            case i.FreeGun:
                return e.AD_VIO_FREE_GUN;

            case i.DialReward3:
                return e.AD_VIO_DIAL_REWARD_3;

            case i.DialReward6:
                return e.AD_VIO_DIAL_REWARD_6;

            case i.Skin:
                return e.AD_VIO_SKIN;
            }
            return e.AD_VIO_OFF_LINE;
        }
        ,
        e.AD_BANNER_PLAY = "adunit-2770a0ada615e2e5",
        e.AD_BANNER_WINDOW = "adunit-e32832b9ff967196",
        e.AD_VIO_OFF_LINE = "adunit-5a5309141629594d",
        e.AD_VIO_SIGN_IN = "adunit-450ac3459c35b197",
        e.AD_VIO_NPC_BOX = "adunit-2788082f4abad80e",
        e.AD_VIO_ADD_SPEED = "adunit-2596e345a88552cc",
        e.AD_VIO_UNLOCK_DIAMOND = "adunit-273a8bb5cd8808ae",
        e.AD_VIO_FREE_TRY = "adunit-5da9ebf53d236df3",
        e.AD_VIO_END_DOUBLE = "adunit-93f134d125c79259",
        e.AD_VIO_REVIVE = "adunit-6d358022eae15b18",
        e.AD_VIO_DIAL_TIMES = "adunit-62180083d6615332",
        e.AD_VIO_FREE_GOLD = "adunit-dad4970965cd2a07",
        e.AD_VIO_SHIELD = "adunit-f232c871e720fba6",
        e.AD_VIO_FREE_GUN = "adunit-ca4ef550dc2104df",
        e.AD_VIO_SKIN = "adunit-a235c0a5745c896c",
        e.AD_VIO_DIAL_REWARD_3 = "adunit-0a52101b13a061c7",
        e.AD_VIO_DIAL_REWARD_6 = "adunit-2aa66462a831364a",
        e;
    }();
    t.AD_ID = n;
    var a = function() {
        function t() {}
        return t.Buy = 1,
        t.MergeNewLevel = 2,
        t.Merge = 3,
        t.HeadShoot = 4,
        t.BossWarning = 5,
        t.BodyShoot = 6,
        t.HitShield = 7,
        t.GetGold = 8,
        t.Button = 100,
        t;
    }();
    t.SoundId = a;
    var s = function() {
        function s() {}
        return s.initSoundSystem = function() {
            Laya.SoundManager.autoStopMusic = !1,
            Laya.SoundManager.muted = !1;
        }
        ,
        s.playSound = function(t, e) {
            void 0 === e && (e = 1),
            r.SOUND_ACTIVE && (IsWXGame() ? this.wxPlaySound(t) : Laya.SoundManager.playSound(t, e));
        }
        ,
        s.wxPlaySound = function(t, e) {
            var i = s.getAudioContext(t);
            i ? (i.play(),
            e && (i.volume = e)) : console.log("play audio fail:" + t);
        }
        ,
        s.wxStopSound = function(t) {
            var e = s.getAudioContext(t);
            e ? (e.pause(),
            e.seek(0)) : console.log("stop audio fail:" + t);
        }
        ,
        s.getAudioContext = function(t) {
            var e = this._soundDic.get(t);
            return e || ((e = wx.createInnerAudioContext()).src = t,
            this._soundDic.set(t, e)),
            e;
        }
        ,
        s.playSoundById = function(t, e, i) {
            if (void 0 === e && (e = 1),
            r.SOUND_ACTIVE) {
                var n = data.StaticDataFactory.findSound(t);
                if (null != n) {
                    var a = "sound/" + n.Resource;
                    IsWXGame() ? s.wxPlaySound(a, i) : Laya.SoundManager.playSound(a, e);
                }
            }
        }
        ,
        s.stopSound = function(t) {
            r.SOUND_ACTIVE && (IsWXGame() ? s.wxStopSound(t) : Laya.SoundManager.stopSound(t));
        }
        ,
        s.stopSoundById = function(t) {
            if (r.SOUND_ACTIVE) {
                var e = data.StaticDataFactory.findSound(t);
                if (null != e) {
                    var i = "sound/" + e.Resource;
                    IsWXGame() ? s.wxStopSound(i) : Laya.SoundManager.stopSound(i);
                }
            }
        }
        ,
        s.playMusic = function(t, e) {
            void 0 === e && (e = 1);
        }
        ,
        s.playMusicById = function(t, e) {
            void 0 === e && (e = 1);
            var i = data.StaticDataFactory.findSound(t);
            null != i && (s.soundchannel = Laya.SoundManager.playMusic("sound/" + i.Resource, e));
        }
        ,
        s.stopMusic = function() {
            Laya.SoundManager.stopMusic();
        }
        ,
        s.stopAllSound = function() {
            Laya.SoundManager.stopAllSound();
        }
        ,
        s.stopAll = function() {
            Laya.SoundManager.stopMusic(),
            Laya.SoundManager.stopAllSound();
        }
        ,
        s.resumeSound = function() {
            Laya.SoundManager.musicMuted = !1,
            Laya.SoundManager.soundMuted = !1,
            Laya.SoundManager.musicVolume = 1,
            Laya.SoundManager.soundVolume = 1;
        }
        ,
        s.adjustMusic = function(t) {
            s.soundchannel && (s.soundchannel.volume = t);
        }
        ,
        s._soundDic = new Laya.Dictionary(),
        s;
    }();
    t.SystemHelper = s;
    var o = function() {
        function t() {}
        return t.EVENT_REFRESH_SCORE = 1001,
        t.EVENT_REFRESH_HISTORY_SCORE = 1002,
        t.EVENT_MONSTER_DIE = 1003,
        t.EVENT_MONSTER_ARRIVED = 1004,
        t.EVENT_SHOOT_STEP = 1005,
        t.EVENT_MOSTER_FIRE = 1006,
        t.EVENT_PLAYER_HITED = 1007,
        t.EVENT_PLAYER_AIM = 1008,
        t.EVENT_MONSTER_DAMAGED = 1009,
        t.EVENT_HEAD_SHOOT = 1010,
        t.EVENT_BOSS_APPEAR = 1011,
        t.EVENT_MONSTER_HP_CHANGE = 1012,
        t.EVENT_REFRESH_MAIN_MENU = 1013,
        t.EVENT_SHOOT_BULLET_COUNT_CHANGE = 1014,
        t.EVENT_SHOW_HIT_EFFECT = 1015,
        t.EVENT_MONSTER_ADD_HP = 1016,
        t.EVENT_SHOW_HIT_EFFECT2 = 1017,
        t.EVENT_TANK_FIRE = 1018,
        t.EVENT_GET_SHARE_COUNT = 1019,
        t.EVENT_CHAPTER_BULLET_COUNT = 1020,
        t.EVENT_SHOW_HIT_EFFECT3 = 1021,
        t.EVENT_CREATE_BLACK_HOLE = 1022,
        t.EVENT_SHOOT_FIRE = 1023,
        t.EVENT_SHOOT_MODE_CHANGE = 1024,
        t.EVENT_WX_ON_HIDE = 1025,
        t.EVENT_HIGH_KILL_COUNT_CHANGE = 1026,
        t.EVENT_KILL_COUNT_CHANGE = 1027,
        t.EVENT_BOSS_DIE = 1028,
        t.EVENT_EVERYDAY_SHARE_COUNT = 1029,
        t.EVENT_EVERYDAY_AD_COUNT = 1029,
        t.EVENT_EVERYDAY_KILL_COUNT = 1029,
        t.EVENT_EVERYDAY_COMPOUND = 1029,
        t.EVENT_CLOSE_SNIPE_END = 1030,
        t.EVENT_GET_SHARE_INFO = 1100,
        t.EVENT_LOGIN_LOG = 1101,
        t.EVENT_OPEN_GAME_RANK = 1102,
        t.EVENT_REFRESH_GAME_LIST = 1201,
        t.EVENT_REFRESH_VERSION = 1202,
        t.EVENT_SHOP = 2401,
        t.EVENT_FREESHOP = 2404,
        t.EVENT_CHANGEGUN = 2402,
        t.EVENT_SECONDADDGOLD = 2403,
        t.EVENT_ROLESKIN = 2405,
        t.EVENT_WX_ON_SHOW = 1301,
        t.EVENT_CLICK_USERINFO_BTN = 1302,
        t.EVENT_GOLD_REFRESH = 1501,
        t.EVENT_DIAMOND_REFRESH = 1502,
        t.EVENT_BACK_HOME = 1503,
        t;
    }();
    t.GameEvents = o;
    var h = function() {
        function t() {}
        return t.MAINMENU = "MainMenu",
        t.LOADING = "Loading",
        t.GAME = "Game",
        t.PROP_REFRESH = "PropRefresh",
        t.RANK = "Rank",
        t.SHOP = "Shop",
        t.CHANGEGUN = "ChangeGun",
        t.TIPS = "Tips",
        t.END = "End",
        t.BATTLE = "Battle",
        t.RAPID = "Rapid",
        t.GETGOLD = "GetGold",
        t.DIAL = "Dial",
        t.SHIELDTIP = "ShieldTip",
        t.AWARDDIAL = "AwardDial",
        t.GETNEWGUN = "GetNewGun",
        t.GM = "GM",
        t.SIGNIN = "SignIn",
        t.OFFLINE = "OffLine",
        t.ROLESKIN = "RoleSkin",
        t.REVIVE = "REVIVE",
        t.TRYGUN = "TryGun",
        t.ADDBULLET = "AddBullet",
        t.ENDSNIPE = "EndSnipe",
        t.SNIPEGOLD = "SnipeGold",
        t.TASK = "Task",
        t.REPETTITION = "Repettition",
        t.ENDREWARD = "EndReward",
        t.ENDLOSE = "EndLose",
        t.MOREGAME = "MoreGame",
        t.RECENTLYUSE = "RecentlyUse",
        t.EXITPANEL = "ExitPanel",
        t;
    }();
    t.UIRes = h;
    var l = function() {
        function t() {}
        return t.getMapImgById = function(t) {
            var e = new Array()
              , i = {
                url: "map/yuan" + t + "-1.png",
                type: Laya.Loader.IMAGE
            }
              , n = {
                url: "map/yuan" + t + "-2.png",
                type: Laya.Loader.IMAGE
            }
              , a = {
                url: "map/zhong" + t + "-1.png",
                type: Laya.Loader.IMAGE
            }
              , s = {
                url: "map/zhong" + t + "-2.png",
                type: Laya.Loader.IMAGE
            };
            return e.push(i),
            e.push(n),
            e.push(a),
            e.push(s),
            e;
        }
        ,
        t.getLaterUILoadList = function() {
            return [{
                url: t.UI_MONSTER,
                type: Laya.Loader.ATLAS
            }, {
                url: t.UI_GUN_GAME,
                type: Laya.Loader.ATLAS
            }, {
                url: t.UI_STEP,
                type: Laya.Loader.ATLAS
            }, {
                url: t.UI_EFFECT,
                type: Laya.Loader.ATLAS
            }].concat(this.getMapImgArr());
        }
        ,
        t.getMapImgArr = function() {
            for (var t = new Array(), e = 1; e <= 4; e++) {
                var i = {
                    url: "map/yuan" + e + "-1.png",
                    type: Laya.Loader.IMAGE
                }
                  , n = {
                    url: "map/yuan" + e + "-2.png",
                    type: Laya.Loader.IMAGE
                }
                  , a = {
                    url: "map/zhong" + e + "-1.png",
                    type: Laya.Loader.IMAGE
                }
                  , s = {
                    url: "map/zhong" + e + "-2.png",
                    type: Laya.Loader.IMAGE
                };
                t.push(i),
                t.push(n),
                t.push(a),
                t.push(s);
            }
            return t;
        }
        ,
        t.getLocalUILoadList = function() {
            return [{
                url: "back/lixian_di.png",
                type: Laya.Loader.IMAGE
            }, {
                url: "back/qiandao_bg.png",
                type: Laya.Loader.IMAGE
            }, {
                url: "back/beijing.png",
                type: Laya.Loader.IMAGE
            }];
        }
        ,
        t.getLoadingEffect = function() {
            return [{
                url: "loading/huoguang01.png",
                type: Laya.Loader.IMAGE
            }, {
                url: "loading/huoguang02.png",
                type: Laya.Loader.IMAGE
            }, {
                url: "loading/huoguang03.png",
                type: Laya.Loader.IMAGE
            }, {
                url: "loading/zidan.png",
                type: Laya.Loader.IMAGE
            }, {
                url: "ani/load.ani",
                type: Laya.Loader.JSON
            }];
        }
        ,
        t.ATLAS_GUN = "res/atlas/gun.atlas",
        t.STATIC_DATA = "data/catgo.json",
        t.UI_GAME = "res/atlas/game.atlas",
        t.UI_RANK = "res/atlas/rank.atlas",
        t.UI_SCORE_TIP = "res/atlas/scoretip.atlas",
        t.UI_STEP = "res/atlas/step.atlas",
        t.UI_PLAYER = "res/atlas/player.atlas",
        t.UI_GUN_GAME = "res/atlas/gunGame.atlas",
        t.UI_MONSTER = "res/atlas/monster.atlas",
        t.UI_GUNPANEL = "res/atlas/gunPanel.atlas",
        t.UI_EFFECT = "res/atlas/effect.atlas",
        t;
    }();
    t.CommonRes = l;
    var u = function() {
        function n() {}
        return n.getTimestamp = function() {
            return new Date().getTime();
        }
        ,
        n.isSameDay = function(t) {
            if (t <= 0)
                return !1;
            var e = new Date(n.getTimestamp())
              , i = new Date(t);
            return e.toDateString() == i.toDateString();
        }
        ,
        n.getDateNumber = function(t) {
            var e = new Date(t);
            return 1e4 * e.getFullYear() + 100 * e.getMonth() + e.getDate();
        }
        ,
        n;
    }();
    t.DateUtils = u;
}(logic || (logic = {})),
function(t) {
    var e;
    (e = t.ShareType || (t.ShareType = {}))[e.OffLine = 1] = "OffLine",
    e[e.SignIn = 2] = "SignIn",
    e[e.NpcBox = 3] = "NpcBox",
    e[e.AddSpeed = 4] = "AddSpeed",
    e[e.NewGunReward = 5] = "NewGunReward",
    e[e.FreeTry = 6] = "FreeTry",
    e[e.EndDoubleReward = 7] = "EndDoubleReward",
    e[e.Revive = 8] = "Revive",
    e[e.Dial = 9] = "Dial",
    e[e.GoldNotEnough = 10] = "GoldNotEnough",
    e[e.Shield = 11] = "Shield",
    e[e.FreeGun = 12] = "FreeGun",
    e[e.DialReward3 = 13] = "DialReward3",
    e[e.DialReward6 = 14] = "DialReward6",
    e[e.AddBullet = 15] = "AddBullet",
    e[e.SnipeDouble = 16] = "SnipeDouble",
    e[e.SnipeShare = 17] = "SnipeShare",
    e[e.Repetition = 18] = "Repetition",
    e[e.AdCard = 19] = "AdCard";
    var i = function() {
        this.shareIndex = 1,
        this.shareOrAdTimes = 0,
        this.shareSeconds = 1,
        this.HasShareTimes = 0,
        this.HasAdTimes = 0,
        this.IsShare = !0,
        this.IsStartShareOrAd = 0,
        this.IsSharePoint = !1;
    };
    t.ShareBtnInfo = i;
    var n = function() {
        function t() {
            this.videoEnable = !1,
            this.showGameCloud = !1,
            this.blackCitys = [],
            this.btns = [],
            this.jumpAppId = "",
            this.speedUpShare = !1,
            this.lockShare = !0,
            this.videoTimes = 1,
            this.normalCityShareType = t.SHARE_TYPE_VIDEO_SHARE,
            this.blackCityShareType = t.SHARE_TYPE_ALLVIDEO;
        }
        return t.SHARE_TYPE_ALLSHARE = 1,
        t.SHARE_TYPE_ALLVIDEO = 2,
        t.SHARE_TYPE_VIDEO_SHARE = 3,
        t.SHARE_TYPE_VIDEO_TIMES_SHARE = 4,
        t.SHARE_TYPE_COUNT = 5,
        t;
    }();
    t.ShareInfo = n;
}(logic || (logic = {})),
function(e) {
    var t = function() {
        function t() {
            this.init();
        }
        return t.prototype.init = function() {
            this.newSign = !1,
            this.newRoleSkin = !1,
            this.newChangeGun = !1,
            this.showNewGun = !1,
            this.dragChangeGun = !1,
            this._highScore = 0,
            this._currentScore = 0,
            this._gold = 4100,
            this.allGold = 4100,
            this._diamond = 0,
            this.IsNew = 1,
            this.failedShareTimes = 0,
            this.HaveAddMyGame = 0,
            this.showGunId = 1,
            this.maxGunId = 1,
            this.showGunArr = [],
            this.gunBuyNum = [{
                id: 1,
                isTrue: !0,
                buyNum: 0,
                buyJewelNum: 0
            }],
            this._chapter = 1,
            this.secondAddGold = 0,
            this.getGoldNum = 0,
            this._shieldCount = 0,
            this.dialNum = 5,
            this.signInNum = 0,
            this.istureSignIn = !1,
            this.offLineTimer = 0,
            this.roleSkinArr = [{
                id: 1,
                istrue: !0,
                redDot: !0,
                pitchOn: !0,
                type: 1
            }],
            this.tipsDescribe = "The arsenal is full, please combine or drag the guns",
            this.showOffneIsTrue = !1,
            this.showSigninIsTrue = !1,
            this._selectedPlayerId = 1,
            this.ShareTimes = 0,
            this.isFinishGuidance = !1,
            this.procedureFinish = 1,
            this.HasGetShieldCount = 0,
            this.freeGunIstrue = !1,
            this.dialDot = !1,
            this.signDot = !1,
            this._shareScore = 200,
            this.ShareBackCount = 0,
            this.PlayerLevel = 3,
            this.TryGunTimes = 3,
            this.HasGetBulletCount = 0,
            this.killCount = 0,
            this.highKillCount = 0,
            this.IsContiue = 0,
            this.BossHpTimes = 4,
            this.everyDayShareCount = 0,
            this.everyDayAdCount = 0,
            this.everyDayKillCount = 0,
            this.everyDayCompound = 0,
            this.eventDayWinNum = 0,
            this.istrueTaskArr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            this.repetitionGet = !1,
            this.diamondChangeGold = 0;
        }
        ,
        Object.defineProperty(t.prototype, "EveryDayShareCount", {
            get: function() {
                return this.everyDayShareCount;
            },
            set: function(t) {
                this.everyDayShareCount = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_EVERYDAY_SHARE_COUNT);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "EveryDayAdCount", {
            get: function() {
                return this.everyDayAdCount;
            },
            set: function(t) {
                this.everyDayAdCount = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_EVERYDAY_AD_COUNT);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "EveryDayKillCount", {
            get: function() {
                return this.everyDayKillCount;
            },
            set: function(t) {
                this.everyDayKillCount = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_EVERYDAY_KILL_COUNT);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "EveryDayCompound", {
            get: function() {
                return this.everyDayCompound;
            },
            set: function(t) {
                this.everyDayCompound = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_EVERYDAY_COMPOUND);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "IstrueTaskArr", {
            get: function() {
                return this.istrueTaskArr;
            },
            set: function(t) {
                this.istrueTaskArr = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_EVERYDAY_COMPOUND);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "EventDayWinNum", {
            get: function() {
                return this.eventDayWinNum;
            },
            set: function(t) {
                this.eventDayWinNum = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_EVERYDAY_COMPOUND);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "KillCount", {
            get: function() {
                return this.killCount;
            },
            set: function(t) {
                this.killCount = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_KILL_COUNT_CHANGE),
                t > this.HighKillCount && (this.HighKillCount = t);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "HighKillCount", {
            get: function() {
                return this.highKillCount;
            },
            set: function(t) {
                this.highKillCount = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_HIGH_KILL_COUNT_CHANGE);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ShareScore", {
            get: function() {
                return this._shareScore;
            },
            set: function(t) {
                this._shareScore = t,
                this._shareScore < 0 && (this._shareScore = 0),
                300 < this._shareScore && (this._shareScore = 300),
                this._shareScore <= 99 ? this.PlayerLevel = 1 : 100 <= this._shareScore && this._shareScore <= 199 ? this.PlayerLevel = 2 : this.PlayerLevel = 3;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "IsFinishGuidance", {
            get: function() {
                return this.isFinishGuidance;
            },
            set: function(t) {
                this.isFinishGuidance = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "OffLineTimer", {
            get: function() {
                return this.offLineTimer;
            },
            set: function(t) {
                this.offLineTimer = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "SelectedPlayerId", {
            get: function() {
                return this._selectedPlayerId;
            },
            set: function(t) {
                this._selectedPlayerId = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ShieldCount", {
            get: function() {
                return this._shieldCount;
            },
            set: function(t) {
                this._shieldCount = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Chapter", {
            get: function() {
                return this._chapter;
            },
            set: function(t) {
                this._chapter = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "DialNum", {
            get: function() {
                return this.dialNum;
            },
            set: function(t) {
                this.dialNum = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ShowGunIdId", {
            get: function() {
                return this.showGunId;
            },
            set: function(t) {
                t > this.showGunId && (this.BossHpTimes = 4),
                this.showGunId = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "SignInNum", {
            get: function() {
                return this.signInNum;
            },
            set: function(t) {
                this.signInNum = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "IstureSignIn", {
            get: function() {
                return this.istureSignIn;
            },
            set: function(t) {
                this.istureSignIn = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "GetGoldNum", {
            get: function() {
                return this.getGoldNum;
            },
            set: function(t) {
                this.getGoldNum = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "MaxGunId", {
            get: function() {
                return this.maxGunId;
            },
            set: function(t) {
                this.maxGunId = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "SecondAddGold", {
            get: function() {
                return this.secondAddGold;
            },
            set: function(t) {
                this.secondAddGold = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ShowGunArr", {
            get: function() {
                return this.showGunArr;
            },
            set: function(t) {
                this.showGunArr = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Gold", {
            get: function() {
                return this._gold;
            },
            set: function(t) {
                this._gold = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_GOLD_REFRESH);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "AllGold", {
            get: function() {
                return this.allGold;
            },
            set: function(t) {
                this.allGold = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Diamond", {
            get: function() {
                return this._diamond;
            },
            set: function(t) {
                this._diamond = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_DIAMOND_REFRESH);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "CurrentScore", {
            get: function() {
                return this._currentScore;
            },
            set: function(t) {
                this._currentScore = t,
                this._currentScore > this._highScore && (this.HighScore = this._currentScore),
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_REFRESH_SCORE);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "HighScore", {
            get: function() {
                return this._highScore;
            },
            set: function(t) {
                this._highScore = t,
                asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_REFRESH_HISTORY_SCORE);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.createUser = function() {
            var t = Math.floor(1e3 * Math.random()).toString();
            1 == t.length ? t = "00" + t : 2 == t.length && (t = "0" + t),
            this.UId = "wx" + e.DateUtils.getTimestamp() + t,
            this.OpenId = this.UId,
            e.PlatformData.Instance.UId = this.UId,
            e.PlatformData.Instance.OpenId = this.UId,
            this.init(),
            console.log("uid" + this.UId),
            console.log("openid" + this.UId);
        }
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.clearAll = function() {
            this.init();
        }
        ,
        t.prototype.exportData = function() {
            var t = {};
            return t.topScore = this.HighScore,
            t.chapter = this.Chapter,
            t.uid = this.UId,
            t.openid = this.OpenId,
            t.gold = this.Gold,
            t.allGold = this.AllGold,
            t.diamond = this.Diamond,
            t.curScore = this.CurrentScore,
            t.isNew = this.IsNew,
            t.failedShareTimes = this.failedShareTimes,
            t.haveAddMyGame = this.HaveAddMyGame,
            t.shareTimes = this.ShareTimes,
            t.hasGetShieldCount = this.HasGetShieldCount,
            t.shieldCount = this._shieldCount,
            t.shareBackCount = this.ShareBackCount,
            t.shareScore = this.ShareScore,
            t.tryGunTimes = this.TryGunTimes,
            t.hasGetBulletCount = this.HasGetBulletCount,
            t.highKillCount = this.HighKillCount,
            t.killCount = this.KillCount,
            t.IsContiue = this.IsContiue,
            t.gunId = this.showGunId,
            t.secondAddGold = this.secondAddGold,
            t.getGoldNum = this.getGoldNum,
            t.maxGunId = this.maxGunId,
            t.showGunArr = this.showGunArr,
            t.gunBuyNum = this.gunBuyNum,
            t.DialNum = this.DialNum,
            t.signInNum = this.signInNum,
            t.istureSignIn = this.istureSignIn,
            t.roleSkinArr = this.roleSkinArr,
            t._selectedPlayerId = this._selectedPlayerId,
            t.isFinishGuidance = this.isFinishGuidance,
            t.procedureFinish = this.procedureFinish,
            t.signDot = this.signDot,
            t.dialDot = this.dialDot,
            t.newSign = this.newSign,
            t.newRoleSkin = this.newRoleSkin,
            t.newChangeGun = this.newChangeGun,
            t.showNewGun = this.showNewGun,
            t.dragChangeGun = this.dragChangeGun,
            t.everyDayShareCount = this.everyDayShareCount,
            t.everyDayAdCount = this.everyDayAdCount,
            t.everyDayKillCount = this.everyDayKillCount,
            t.everyDayCompound = this.everyDayCompound,
            t.eventDayWinNum = this.eventDayWinNum,
            t.istrueTaskArr = this.istrueTaskArr,
            t.repetitionGet = this.repetitionGet,
            t.diamondChangeGold = this.diamondChangeGold,
            t;
        }
        ,
        t.prototype.importData = function(t) {
            t && (null == t.isNew ? this.IsNew = 1 : this.IsNew = t.isNew,
            null == t.chapter && (t.chapter = 1),
            this.UId = t.uid,
            this.OpenId = t.openid,
            this.Diamond = t.diamond || 0,
            this.Gold = t.gold || 4100,
            this.AllGold = t.allGold || 4100,
            this.HighScore = t.topScore || 0,
            this.CurrentScore = t.curScore || 0,
            this.failedShareTimes = t.failedShareTimes || 0,
            this.ShareTimes = t.shareTimes || 0,
            this.HaveAddMyGame = t.haveAddMyGame || 0,
            this.getGoldNum = t.getGoldNum || 0,
            this.Chapter = t.chapter,
            this.signInNum = t.signInNum || 0,
            this.istureSignIn = t.istureSignIn || 0,
            this.secondAddGold = t.secondAddGold || 0,
            this._selectedPlayerId = t._selectedPlayerId || 1,
            this.isFinishGuidance = t.isFinishGuidance || !1,
            this.procedureFinish = t.procedureFinish || 1,
            this.HasGetShieldCount = t.hasGetShieldCount || 0,
            this.ShieldCount = t.shieldCount || 0,
            this.signDot = t.signDot || !1,
            this.dialDot = t.dialDot || !1,
            this.HasGetBulletCount = t.hasGetBulletCount || 0,
            this.newSign = t.newSign || !1,
            this.newRoleSkin = t.newRoleSkin || !1,
            this.newChangeGun = t.newChangeGun || !1,
            this.showNewGun = t.showNewGun || !1,
            this.dragChangeGun = t.dragChangeGun || !1,
            this.HighKillCount = t.highKillCount || 0,
            this.KillCount = t.killCount || 0,
            this.IsContiue = t.IsContiue || 0,
            this.EveryDayShareCount = t.everyDayShareCount || 0,
            this.EveryDayAdCount = t.everyDayAdCount || 0,
            this.EveryDayKillCount = t.everyDayKillCount || 0,
            this.EveryDayCompound = t.everyDayCompound || 0,
            this.EventDayWinNum = t.eventDayWinNum || 0,
            this.repetitionGet = t.repetitionGet || !1,
            this.diamondChangeGold = t.diamondChangeGold || 0,
            null == t.istrueTaskArr ? this.IstrueTaskArr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] : this.IstrueTaskArr = t.istrueTaskArr,
            null == t.tryGunTimes ? this.TryGunTimes = 3 : this.TryGunTimes = t.tryGunTimes,
            null == t.shareScore ? this.ShareScore = 200 : this.ShareScore = t.shareScore,
            null == t.shareBackCount ? this.ShareBackCount = 0 : this.ShareBackCount = t.shareBackCount,
            null == t.gunId ? this.showGunId = 1 : this.showGunId = t.gunId,
            null == t.maxGunId ? this.maxGunId = 1 : this.maxGunId = t.maxGunId,
            null == t.showGunArr ? this.showGunArr = [] : this.showGunArr = t.showGunArr,
            t.gunBuyNum ? this.gunBuyNum = t.gunBuyNum : this.gunBuyNum = [{
                id: 1,
                isTrue: !0,
                buyNum: 0,
                buyJewelNum: 0
            }],
            t.roleSkinArr ? this.roleSkinArr = t.roleSkinArr : this.roleSkinArr = [{
                id: 1,
                istrue: !0,
                redDot: !1,
                pitchOn: !1,
                type: 1
            }],
            null == t.DialNum ? this.DialNum = 5 : this.DialNum = t.DialNum);
        }
        ,
        t;
    }();
    e.RoleInfo = t;
}(logic || (logic = {})),
function(t) {
    var e = function() {
        function t() {
            this.init();
        }
        return t.prototype.init = function() {
            this.Id = "",
            this.IconUrl = "",
            this.Name = "",
            this.Path = "",
            this.IsGif = 0,
            this.PngCount = 0,
            this.PicName = "",
            this.PeopleCount = 50;
        }
        ,
        t;
    }();
    t.MoreGameInfo = e;
}(logic || (logic = {})),
function(t) {
    var e = function() {
        this.gun_IsDoubleEarnings = !1;
    };
    (logic || (logic = {})).GunData = e;
}(),
function(t) {
    var e = function() {
        function e() {}
        return e.setLocalization = function(t) {
            (e.LOCALIZATION = 0,
            t && 3 < t.length) && ("zh" == (t = t.toLowerCase()).substring(0, 2) && (e.LOCALIZATION = 1));
        }
        ,
        e.LOCALIZATION = 0,
        e;
    }();
    t.GameText = e;
}(logic || (logic = {})),
function(y) {
    var t = function() {
        function t(t) {
            this._spriteFactory = t,
            this._spriteRoot = new Laya.Sprite(),
            this._spriteList = new asgard.utils.SimpleList(),
            this._stepList = new asgard.utils.SimpleList(),
            this._soreTipList = new asgard.utils.SimpleList(),
            this._bulletList = new asgard.utils.SimpleList(),
            this._bloodList = new asgard.utils.SimpleList(),
            this._player = null,
            this._playerGun = null,
            this._monster = null,
            this._monsterGun = null,
            this._spriteCursor = new asgard.utils.SimpleCursor(),
            this._playerModule = asgard.module.ModuleManager.getModule(y.MODULE_PLAYER),
            this._uiDataModule = asgard.module.ModuleManager.getModule(y.MODULE_UIDATA),
            this._gameModule = asgard.module.ModuleManager.getModule(y.MODULE_GAME),
            this._frameTime = 0,
            this._frameDelta = 0,
            this.reset(),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_MONSTER_ARRIVED, this, this.monsterArrived),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_MONSTER_DIE, this, this.monsterDie),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_SHOOT_STEP, this, this.ShootStep),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_MOSTER_FIRE, this, this.MonsterFire),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_PLAYER_HITED, this, this.playerHited),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_PLAYER_AIM, this, this.gunAim),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_MONSTER_HP_CHANGE, this, this.monsterHited),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_SHOOT_BULLET_COUNT_CHANGE, this, this.shootBulletCountChange),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_SHOW_HIT_EFFECT, this, this.showHitEffect),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_SHOW_HIT_EFFECT2, this, this.showHitEffect2),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_TANK_FIRE, this, this.TankFire),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_CREATE_BLACK_HOLE, this, this.createBlackHole),
            asgard.events.EventsDispatcher.registerEventListener(y.GameEvents.EVENT_SHOOT_FIRE, this, this.showShootFire);
        }
        return t.prototype._disposePlayer = function() {
            this._player && (this._player.Sprite.removeSelf(),
            this._player.Sprite.destroy(),
            this._player.Valid = !1,
            this._player = null);
        }
        ,
        Object.defineProperty(t.prototype, "Player", {
            get: function() {
                return this._player;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "PlayerGun", {
            get: function() {
                return this._playerGun;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "MonsterGun", {
            get: function() {
                return this._monsterGun;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Monster", {
            get: function() {
                return this._monster;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "PlayerModule", {
            get: function() {
                return this._playerModule;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "GameModule", {
            get: function() {
                return this._gameModule;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "SpriteRoot", {
            get: function() {
                return this._spriteRoot;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.clear = function() {
            this._disposePlayer(),
            this._spriteList.scan(this, this._disposeSprite),
            this._stepList.scan(this, this._disposeSprite),
            this._bloodList.scan(this, this._disposeSprite),
            this._bulletList.scan(this, this._disposeSprite),
            this.GameMap.SpriteRoot.removeSelf(),
            this.GameMap.BulletStage.removeSelf();
        }
        ,
        t.prototype._disposeSprite = function(t) {
            if (t) {
                var e = t;
                e.Valid = !1,
                e.hide(),
                this.reclaimSprite(e);
            }
            return !1;
        }
        ,
        t.prototype.reset = function() {
            this.IsStart = !0,
            this.GameMap = new y.BattleMap(),
            this.LevelCountArr = [],
            this.LevelStartLongth = [],
            this.MonsterShouldY = 0,
            this._isMapMoving = !1,
            this._isTankFiring = !1,
            this.targetY = 0,
            this.startSpeed = -400,
            this.endY = 0;
        }
        ,
        t.prototype.createSprite = function(t) {
            var e = this._spriteFactory.applySprite(t);
            if (!e)
                return null;
            switch (e.bindSystem(this),
            e.SpriteType) {
            case y.SpriteType.Player:
                this._player = e;
                break;

            case y.SpriteType.Gun:
                this._playerGun = e;
                break;

            case y.SpriteType.MonsterGun:
                this._monsterGun = e;
                break;

            case y.SpriteType.Monster:
                break;

            case y.SpriteType.Step:
                this._stepList.add(e);
                break;

            case y.SpriteType.Bullet:
                this._bulletList.add(e);
                break;

            case y.SpriteType.Blood:
                this._bloodList.add(e);
                break;

            case y.SpriteType.ScoreTip:
                this._soreTipList.add(e);
                break;

            default:
                this._spriteList.add(e);
            }
            return e;
        }
        ,
        t.prototype.onFrame = function(t, e) {
            var s = this;
            if (this._frameTime = t,
            this._frameDelta = e,
            this._spriteList.scan(this, this._checkSprite),
            this._stepList.scan(this, this._checkSprite),
            this._soreTipList.scan(this, this._checkSprite),
            this._bulletList.scan(this, this._checkSprite),
            this._bloodList.scan(this, this._checkSprite),
            this.PlayerGun.onFrame(t, e),
            this.Monster && this.Monster.onFrame(t, e),
            this._isTankFiring) {
                var i = 3.5 * e
                  , n = .75 + .35 * Math.random();
                this._gameModule.CurrentIsStartLeft ? this.bulletImg.x -= e * n : this.bulletImg.x += e * n;
                var a = this.bulletImg.y + Math.floor((this.startSpeed + .5 * i) * e * .001);
                a > this.endY && (a = this.endY,
                this._isTankFiring = !1,
                this.bulletImg.visible = !1,
                asgard.events.EventsDispatcher.eventNotify(y.GameEvents.EVENT_PLAYER_HITED)),
                this.startSpeed += i,
                this.bulletImg.y = a;
            }
            this._isMapMoving && (this.GameMap.SpriteRoot.y += 4,
            this.GameMap.SpriteRoot.y >= this.targetY && (this._isMapMoving = !1,
            Laya.timer.once(100, this, function() {
                if (s._monster.IsDie)
                    s.createMonster();
                else {
                    var t = y.CommonUtil.getGlobalByPoint(s.Monster.Head);
                    s._gameModule.MonsterHeadPoint = t;
                    var e = y.CommonUtil.getGlobalByPoint(s.Monster.Body);
                    s._gameModule.MonsterBodyPoint = e,
                    s.PlayerGun.GunAim();
                }
                for (var i = 0; i < s._stepList.Count; i++) {
                    var n = s._stepList.getDataAt(i);
                    if (n.Level == s.GameModule.CurrentLevel && n.Type == y.StepType.Triangle) {
                        var a = y.CommonUtil.getGlobalByPoint(n.Sprite);
                        s.GameModule.CurrentStepPointArr.push(a);
                    }
                }
                s._gameModule.PlayerPoint = y.CommonUtil.getGlobalByPoint(s.Player.Sprite);
            })));
        }
        ,
        t.prototype._checkSprite = function(t) {
            if (!t)
                return !1;
            var e = t;
            return e.onFrame(this._frameTime, this._frameDelta),
            e.Valid || this.reclaimSprite(e),
            e.Valid;
        }
        ,
        t.prototype.reclaimSprite = function(t) {
            this._spriteFactory.reclaimSprite(t);
        }
        ,
        t.prototype.goldArrived = function(t) {}
        ,
        t.prototype.newGame = function() {
            y.PlatForm.getInstance().aldSendEvent("进入关卡" + this._playerModule.RoleInfo.Chapter),
            this.clear(),
            this.reset(),
            this.GameModule.init(),
            1 == this._uiDataModule.GameMode ? this._gameModule.IsSnipe = !0 : this._gameModule.IsSnipe = !1,
            this.GameModule.IsSnipe ? this.prepareSnipeGame() : this.prepareShootGame(),
            y.SystemHelper.playMusic("sound/bgm_1.mp3", 0);
        }
        ,
        t.prototype.prepareSnipeGame = function() {
            0 == this._playerModule.RoleInfo.IsContiue && (this._playerModule.RoleInfo.KillCount = 0,
            this._playerModule.RoleInfo.IsContiue = 1,
            this._playerModule.RoleInfo.BossHpTimes = 4,
            this._playerModule.TrySaveGameData()),
            this._gameModule.prepareSnipeMonsterData(this._playerModule.RoleInfo.KillCount),
            this.GameModule.MapId = this._uiDataModule.mapId,
            this.loadMap(),
            this.createPlayer(y.SpriteConst.START_PLAYER_X, y.SpriteConst.START_PLAYER_Y - 116);
        }
        ,
        t.prototype.prepareShootGame = function() {
            this.GameModule.BulletCount = 20,
            this.GameModule.prepareMonsterData(this._playerModule.RoleInfo.Chapter),
            this._playerModule.RoleInfo.ShieldCount <= 0 && (this.GameModule.ShieldIndex = y.SpriteConst.shieldIndex(this._gameModule.MonsterArr.length - 1)),
            y.CommonUtil.Log("this.GameModule.ShieldIndex" + this.GameModule.ShieldIndex),
            this.loadMap(),
            this.createPlayer(y.SpriteConst.START_PLAYER_X, y.SpriteConst.START_PLAYER_Y - 116),
            0 < this._playerModule.RoleInfo.TryGunTimes && 3 < this._playerModule.RoleInfo.Chapter && Math.random() < .3 && (asgard.ui.UIManager.openView(y.UIRes.TRYGUN),
            this._playerModule.RoleInfo.TryGunTimes--),
            0 == this._playerModule.RoleInfo.Chapter && asgard.ui.UIManager.openView(y.UIRes.TRYGUN);
        }
        ,
        t.prototype.createHitTip = function(t, e, i) {
            var n = this.createSprite(y.SpriteType.ScoreTip);
            n.buildSprite(t, e, i),
            n.Sprite.zOrder = 99999999,
            this.GameMap.SpriteRoot.addChild(n.Sprite);
        }
        ,
        t.prototype.createBloodBall = function(t, e, i) {
            for (var n = 0; n < t; n++) {
                var a = this.createSprite(y.SpriteType.Blood);
                0 == n ? a.buildSprite(e, this.GameModule.ShootEndX, this.GameModule.ShootEndY, !0) : a.buildSprite(e, this.GameModule.ShootEndX, this.GameModule.ShootEndY),
                this.GameMap.SpriteRoot.addChild(a.Sprite),
                a.Sprite.zOrder = 99999;
            }
        }
        ,
        t.prototype.createGold = function() {
            var t = this.createSprite(y.SpriteType.Blood);
            t.buildSprite("game/金币.png", this.GameModule.ShootEndX, this.GameModule.ShootEndY),
            this.GameMap.SpriteRoot.addChild(t.Sprite),
            t.Sprite.zOrder = 1e5,
            this._gameModule.CurrentGold = t;
        }
        ,
        t.prototype.showShootFire = function() {
            Laya.loader.load("ani/huoxingsijian.part", Laya.Handler.create(this, this.onAssetsLoaded), null, Laya.Loader.JSON);
        }
        ,
        t.prototype.onAssetsLoaded = function(t) {
            var e = new Laya.Particle2D(t);
            e.emitter.start(),
            e.play(),
            e.y = this._gameModule.ShootEndY,
            this._gameModule.CurrentIsStartLeft ? (e.rotation = 5,
            e.scaleX = -1,
            e.x = this._gameModule.ShootEndX - 25) : (e.rotation = -5,
            e.scaleX = 1,
            e.x = this._gameModule.ShootEndX + 25),
            e.zOrder = 1e6,
            Laya.timer.once(160, this, function() {
                e.stop();
            }),
            this.GameMap.SpriteRoot.addChild(e);
        }
        ,
        t.prototype.createMonster = function() {
            var t, e, i, n = this._gameModule.MonsterArr[this._gameModule.CurrentMonsterNum];
            this._monster = this.createSprite(y.SpriteType.Monster),
            e = this._gameModule.CurrentIsStartLeft ? (t = y.SystemConst.SCEEN_WIDTH + 100,
            this.GameModule.CurrentRightStep.Y) : (t = -100,
            this.GameModule.CurrentLeftStep.Y),
            this._monster.buildSprite(n, this._gameModule.CurrentIsStartLeft, t, e),
            this._gameModule.CurrentIsStartLeft ? (i = this.GameModule.CurrentRightStep.X + .5 * this._monster.Body.width + y.SpriteConst.MonsterStepDistance,
            this._monster.HasTank && (i += 70)) : (i = this.GameModule.CurrentLeftStep.StepWidth - .5 * this._monster.Body.width - y.SpriteConst.MonsterStepDistance,
            this._monster.HasTank && (i -= 70)),
            this._monster.Sprite.zOrder = 100050,
            this.GameMap.SpriteRoot.addChild(this._monster.Sprite),
            this._monster.IsBoss ? this._monster.monsterCome(y.MonsterComeType.Jump, i, this._monster.Y) : this._monster.monsterCome(y.MonsterComeType.Walk, i, this._monster.Y),
            this._gameModule.CurrentMonster = this._monster,
            this._gameModule.CurrentMonsterAllHp = this._monster.Hp,
            this._monsterGun = this.createSprite(y.SpriteType.MonsterGun),
            this._monsterGun.buildSprite(1, 0, -.7 * this._monster.Body.height),
            this._monster.Sprite.addChild(this._monsterGun.Sprite),
            this._gameModule.CurrentMonsterGun = this._monsterGun,
            this._gameModule.CurrentMonster.IsBoss && asgard.events.EventsDispatcher.eventNotify(y.GameEvents.EVENT_BOSS_APPEAR),
            this._gameModule.CurrentMonsterNum++;
        }
        ,
        t.prototype.createBlackHole = function() {
            var t = new Laya.Image();
            t.skin = "monster/黑洞.png",
            t.anchorX = .5,
            t.anchorY = .8,
            t.scale(0, 0),
            t.visible = !1,
            t.zOrder = this.Monster.Sprite.zOrder + 1,
            t.y = this.Monster.Sprite.y - this.Monster.Body.height - this.Monster.Head.height - 20,
            t.x = this.Monster.Sprite.x,
            this.GameMap.SpriteRoot.addChild(t),
            this._gameModule.HoleImg = t;
        }
        ,
        t.prototype.monsterHited = function(t) {
            this.Monster && 0 < this.Monster.Hp && this.createHitTip(t, this.GameModule.ShootEndX + 15 * Math.random(), this.GameModule.ShootEndY - 100);
            var e = "game/血液.png";
            y.PlatformData.Instance.ShareSwitch && (e = "game/血液(1).png"),
            this._playerGun.ShootType == y.ShootType.JiGuanQiang && 0 < this.Monster.Hp ? this.createBloodBall(5, e) : this.createBloodBall(10, e);
        }
        ,
        t.prototype.monsterUpLevel = function() {
            var c = this;
            Laya.timer.once(300, this, function() {
                if (!c._monster.IsDie) {
                    var t = new Laya.TimeLine()
                      , e = c._monster.Sprite.y
                      , i = 0
                      , n = 1
                      , a = y.SpriteConst.STEP_HEIGHT
                      , s = c.LevelStartLongth[c.GameModule.CurrentLevel]
                      , r = 0;
                    r = 1 == c.GameModule.CurrentLevel && c.IsStart ? (i = 180 + 3 * y.SpriteConst.STEP_HEIGHT,
                    n = -1,
                    4) : (s && (c.GameModule.CurrentIsStartLeft ? (n = -1,
                    i = y.SystemConst.SCEEN_WIDTH - s,
                    y.CommonUtil.Log(c.Player.Sprite.x),
                    c.GameModule.CurrentMonster.Sprite.scaleX = 1) : (n = 1,
                    i = s,
                    c.GameModule.CurrentMonster.Sprite.scaleX = -1)),
                    c.LevelCountArr[c.GameModule.CurrentLevel]),
                    c.ChangeColor(c.GameModule.CurrentLevel + 1, 0);
                    var o = Math.abs(i - c.Monster.Sprite.x);
                    if (t.addLabel("turnUp", 0).to(c.Monster.Sprite, {
                        x: i
                    }, o / y.SpriteConst.PLAYER_MOVE_SPEED, null, 0),
                    r)
                        for (var h = 0; h < r; h++) {
                            var l = i + n * a * .5 + n * h * a
                              , u = 0;
                            u = h == r - 1 ? c._gameModule.CurrentIsStartLeft ? y.SystemConst.SCEEN_WIDTH - s - (r - 1) * a - .5 * c._monster.Body.width - y.SpriteConst.MonsterStepDistance : s + (r - 1) * a + .5 * c._monster.Body.width + y.SpriteConst.MonsterStepDistance : l + n * a * .5,
                            t.addLabel("turnUp", 0).to(c.Monster.Sprite, {
                                x: l,
                                y: e - 2 * a - h * a
                            }, 82, Laya.Ease.quadOut, 0).addLabel("turnDown", 0).to(c.Monster.Sprite, {
                                x: u,
                                y: e - (h + 1) * a
                            }, 41, null, 0),
                            c.MonsterShouldY = e - (h + 1) * a;
                        }
                    t.play(0, !1),
                    t.on(Laya.Event.COMPLETE, c, c.onMonsterUpLevelComplete);
                }
            });
        }
        ,
        t.prototype.monsterMoveNextLevel = function() {
            var t = (this._gameModule.CurrentIsStartLeft,
            this._gameModule.CurrentRightStep.Sprite.y);
            this.Monster.HasJump && this._gameModule.CurrentIsStartLeft && this.Monster.Sprite.y < this._gameModule.CurrentRightStep.Sprite.y || this.Monster.HasJump && this._gameModule.CurrentIsStartLeft && this.Monster.Sprite.y < this._gameModule.CurrentRightStep.Sprite.y ? Laya.Tween.to(this.Monster.Sprite, {
                y: t
            }, 7 * (t - this.Monster.Sprite.y) / 26, null, new Laya.Handler(this,this.checkAddHp)) : this.checkAddHp();
        }
        ,
        t.prototype.checkAddHp = function() {
            this._gameModule.CurrentMonster.Hp < .5 * this._gameModule.CurrentMonsterAllHp && this.GameModule.CurrentMonster.HasAddBlood && 0 < this._gameModule.CurrentMonster.Hp ? this._gameModule.CurrentMonster.DoAddBlood(new Laya.Handler(this,this.monsterUpLevel)) : this.monsterUpLevel();
        }
        ,
        t.prototype.shootBulletCountChange = function() {
            if (this._gameModule.ShootBulletCount == this.PlayerGun.BulletCount)
                if (this._gameModule.CurrentMonster.HasUnBeatable && this._gameModule.CurrentMonster.IsBoss && (this._gameModule.CurrentMonster.UnBeatTimes--,
                this._gameModule.CurrentMonster.UnBeatTimes <= 0 && (this._gameModule.CurrentMonster.HasUnBeatable = !1,
                this._gameModule.CurrentMonster.doCancelUnBeatable())),
                this._gameModule.ShootDamage <= 0 && !this._gameModule.MonsterUseSkill)
                    this.ShootNot();
                else {
                    if (!this._gameModule.CurrentMonster.IsBoss && this._gameModule.CurrentMonster.HasTank) {
                        var t = this._gameModule.CurrentMonster;
                        Laya.Tween.to(t.TankBodyImg, {
                            alpha: 0
                        }, 300, null, Laya.Handler.create(this, function() {
                            t.TankBodyImg.removeSelf();
                        })),
                        Laya.Tween.to(t.TankHeadImg, {
                            alpha: 0
                        }, 300, null, Laya.Handler.create(this, function() {
                            t.TankHeadImg.removeSelf();
                        })),
                        Laya.Tween.to(t.Body, {
                            y: -1 * t.Body.height
                        }, 200, null, Laya.Handler.create(this, function() {})),
                        Laya.Tween.to(t.Head, {
                            y: -1 * t.Body.height - t.Head.height + 1
                        }, 200, null, Laya.Handler.create(this, function() {})),
                        t.HasTank = !1,
                        this._gameModule.CurrentMonsterGun.showGun();
                    }
                    this._gameModule.CurrentMonster.HasMove && Laya.Tween.clearAll(this._gameModule.CurrentMonster.Sprite),
                    this.monsterMoveNextLevel();
                }
        }
        ,
        t.prototype.onMonsterUpLevelComplete = function() {
            this.MonsterShouldY != this.Monster.Sprite.y && (this.Monster.Sprite.y = this.MonsterShouldY),
            -1 == this.Monster.Sprite.scaleX ? this.Monster.Sprite.scaleX = 1 : this.Monster.Sprite.scaleX = -1,
            this._gameModule.CurrentMonsterArriveX = this.Monster.Sprite.x,
            this.MovePlayerToNextLevel();
        }
        ,
        t.prototype.monsterDie = function(t) {
            var e = this;
            this._monster && (t == y.DieType.ShootHead && (this.createGold(),
            this._playerModule.RoleInfo.HasGetShieldCount <= 0 && this._playerModule.RoleInfo.ShieldCount <= 0 && !this._gameModule.IsSnipe && (ishasAds ? asgard.ui.UIManager.openView(y.UIRes.SHIELDTIP) : console.log("暂时没有广告11"))),
            this._monster.IsBoss && !this._gameModule.IsSnipe && (this._uiDataModule.CanQuitBtn = !1,
            this.showWinDoor()),
            this._monster.IsBoss && asgard.events.EventsDispatcher.eventNotify(y.GameEvents.EVENT_BOSS_DIE),
            t == y.DieType.ShootHead ? this._monster.die(!0) : this._monster.die(!1),
            this._gameModule.IsSnipe && (this._playerModule.RoleInfo.KillCount++,
            this._playerModule.RoleInfo.EveryDayKillCount++,
            this._gameModule.KillCount++),
            y.PlatForm.getInstance().aldSendEvent("狙击击杀" + this._playerModule.RoleInfo.KillCount + "人"),
            16 <= this._playerModule.RoleInfo.KillCount && this._playerModule.RoleInfo.KillCount % 10 == 0 && (this._playerModule.RoleInfo.BossHpTimes++,
            10 < this._playerModule.RoleInfo.BossHpTimes && (this._playerModule.RoleInfo.BossHpTimes = 10)),
            this._playerModule.TrySaveGameData(),
            Laya.timer.once(800, this, function() {
                e.MovePlayerToNextLevel();
            }));
        }
        ,
        t.prototype.monsterArrived = function(t) {
            var e = y.CommonUtil.getGlobalByPoint(this.Monster.Head);
            this._gameModule.MonsterHeadPoint = e;
            var i = y.CommonUtil.getGlobalByPoint(this.Monster.Body);
            this._gameModule.MonsterBodyPoint = i,
            this.PlayerGun.GunAim();
        }
        ,
        t.prototype.showHitEffect2 = function() {
            var t = this._gameModule.ShootEndX
              , e = this._gameModule.ShootEndY
              , i = new Laya.Animation();
            i.loadAnimation("ani/Hit.ani"),
            this._gameModule.CurrentIsStartLeft ? i.x = t - 20 : i.x = t + 20,
            i.y = e,
            i.zOrder = 100051,
            i.play(0, !1),
            this.GameMap.SpriteRoot.addChild(i),
            Laya.timer.once(1e3, this, function() {
                i.destroy();
            });
        }
        ,
        t.prototype.showHitEffect = function(t) {
            var e = this._gameModule.ShootEndX
              , i = this._gameModule.ShootEndY
              , n = new Laya.Image();
            n.zOrder = 100051;
            var a = 1;
            a = 1 == t ? (n.skin = "effect/爆头被击.png",
            2.4) : (n.skin = "effect/被击中.png",
            3.5),
            n.x = e,
            n.y = i,
            this.GameMap.SpriteRoot.addChild(n),
            n.pivot(.5 * n.width, .5 * n.width),
            Laya.Tween.to(n, {
                scaleX: a,
                scaleY: a,
                alpha: .2
            }, 210, null, new Laya.Handler(this,function() {
                n.destroy();
            }
            ));
        }
        ,
        t.prototype.PlayerFire = function() {
            var o = this;
            if (this.PlayerGun.IsAiming) {
                if (this._gameModule.BulletCount <= 0 && !this._gameModule.IsSnipe)
                    return void (this._gameModule.CurrentMonsterNum == this._gameModule.MonsterArr.length && this.Monster.IsDie || (this._gameModule.AddBulletsTimes <= 0 ? asgard.ui.UIManager.openView(y.UIRes.ADDBULLET) : (asgard.ui.UIManager.openView(y.UIRes.ENDLOSE),
                    asgard.ui.UIManager.openView(y.UIRes.RECENTLYUSE),
                    y.PlatForm.getInstance().hideBannerAd())));
                this._gameModule.BulletCount--,
                this.PlayerGun.Fire(),
                this.GameModule.ShootBulletCount = 0,
                this.GameModule.ShootDamage = 0,
                this.GameModule.MonsterUseSkill = !1,
                y.SystemHelper.playSound(this.PlayerGun.FireSound);
                for (var t = function(t) {
                    var e = h.createSprite(y.SpriteType.Bullet);
                    e.Sprite.zOrder = 100002;
                    var i = 0;
                    h._playerGun.ShootType == y.ShootType.Default ? i = h.PlayerGun.ShootAngle : h._playerGun.ShootType == y.ShootType.SanDan ? i = h.PlayerGun.ShootAngle + 6 * t - 2.5 * h._playerGun.BulletCount : h._playerGun.ShootType == y.ShootType.JiGuanQiang && (i = h.PlayerGun.ShootAngle + Math.floor(12 * Math.random()) - 6),
                    e.Sprite.rotation = i;
                    var n, a = -100, s = h.PlayerGun.FirePoint.x;
                    a = h.GameModule.CurrentIsStartLeft ? y.SystemConst.SCEEN_WIDTH + 100 : (e.Sprite.rotation = -180 - i,
                    -100);
                    var r = h.PlayerGun.FirePoint.y;
                    n = h.PlayerGun.FirePoint.y - Math.tan(Math.abs(i) * Math.PI / 180) * Math.abs(a - s),
                    h._playerGun.ShootType == y.ShootType.JiGuanQiang ? Laya.timer.once(0 + 60 * t, h, function() {
                        e.buildSprite(0, y.BulletFromType.Player, s, r, a, n),
                        y.SystemHelper.stopSound(o.PlayerGun.FireSound),
                        y.SystemHelper.playSound(o.PlayerGun.FireSound),
                        o.PlayerGun.GunRecoil();
                    }) : e.buildSprite(0, y.BulletFromType.Player, s, r, a, n),
                    h.GameMap.BulletStage.addChild(e.Sprite);
                }, h = this, e = 0; e < this._playerGun.BulletCount; e++)
                    t(e);
            }
        }
        ,
        t.prototype.gunAim = function() {
            this.PlayerGun.GunAim();
        }
        ,
        t.prototype.ShootStep = function() {
            this.createBloodBall(7, "game/血液.png", !0);
        }
        ,
        t.prototype.ShootNot = function() {
            var t = this;
            Laya.timer.once(400, this, function() {
                t._gameModule.CurrentMonster.HasTank ? t._gameModule.CurrentMonster.tankFire() : t.MonsterGun.Fire();
            });
        }
        ,
        t.prototype.TankFire = function() {
            this.bulletImg = new Laya.Image(),
            this.bulletImg.skin = "effect/坦克炮弹1.png",
            this.bulletImg.anchorX = .5,
            this.bulletImg.anchorY = .5;
            var t = y.CommonUtil.getGlobalByPoint(this.GameModule.CurrentMonster.TankHeadImg);
            if (this.bulletImg.x = t.x,
            this.bulletImg.y = t.y + 10,
            this.startSpeed = -400,
            this.bulletImg.visible = !0,
            this._gameModule.CurrentIsStartLeft) {
                var e = y.CommonUtil.getGlobalByPoint(this._gameModule.CurrentLeftStep.Sprite);
                this.endY = e.y - 100,
                this.bulletImg.scaleX = 1,
                this.bulletImg.rotation = 20,
                Laya.Tween.to(this.bulletImg, {
                    rotation: -60
                }, 550);
            } else {
                e = y.CommonUtil.getGlobalByPoint(this._gameModule.CurrentRightStep.Sprite);
                this.endY = e.y - 100,
                this.bulletImg.scaleX = -1,
                this.bulletImg.rotation = -20,
                Laya.Tween.to(this.bulletImg, {
                    rotation: 60
                }, 550);
            }
            this.GameMap.BulletStage.addChild(this.bulletImg);
            y.CommonUtil.getGlobalByPoint(this.Player.Sprite);
            this._isTankFiring = !0;
        }
        ,
        t.prototype.MonsterFire = function() {
            var t = this.createSprite(y.SpriteType.Bullet)
              , e = -100
              , i = 0
              , n = this._gameModule.MonsterFirePoint.x;
            i = this._gameModule.MonsterShootInPlayer ? (e = this.GameModule.PlayerPoint.x,
            this.GameModule.PlayerPoint.y + 40) : (e = this.GameModule.CurrentIsStartLeft ? -100 : y.SystemConst.SCEEN_WIDTH + 100,
            this._gameModule.MonsterFirePoint.y - Math.tan(Math.abs(90 - this.MonsterGun.ShootAngle) * Math.PI / 180) * Math.abs(e - n)),
            t.buildSprite(0, y.BulletFromType.Monster, this._gameModule.MonsterFirePoint.x, this._gameModule.MonsterFirePoint.y, e, i),
            t.Sprite.rotation = 90 - this.MonsterGun.ShootAngle,
            t.Sprite.zOrder = 100002,
            console.log(this.MonsterGun.ShootAngle),
            this._gameModule.CurrentIsStartLeft ? t.Sprite.rotation = 90 + this.MonsterGun.ShootAngle : t.Sprite.rotation = 90 - this.MonsterGun.ShootAngle,
            y.SystemHelper.playSound("sound/ev_gun_1.mp3"),
            this.GameMap.BulletStage.addChild(t.Sprite);
        }
        ,
        t.prototype.createPlayer = function(t, e) {
            this.createSprite(y.SpriteType.Player),
            this._player.buildSprite(this._playerModule.RoleInfo.SelectedPlayerId, t, e, 84, 116),
            this._player.Sprite.scaleX = -1,
            this._player.Sprite.zOrder = 100001,
            this._player.Sprite.pivotX = 63,
            this._player.Sprite.pivotY = 0,
            this.GameMap.SpriteRoot.addChild(this._player.Sprite),
            this.createSprite(y.SpriteType.Gun);
            this._playerGun.buildSprite(this.PlayerModule.RoleInfo.ShowGunIdId, 35, 58),
            this._gameModule.PlayerGun = this._playerGun,
            this._player.Sprite.addChild(this._playerGun.Sprite),
            this._gameModule.IsSnipe || this.PlayerGun.StopAim();
        }
        ,
        t.prototype.changeGun = function() {
            var t = this._playerGun.IsAiming;
            this._playerGun.Valid = !1,
            this._playerGun.Sprite.removeSelf(),
            this._playerGun.Sprite.destroy(),
            this._playerGun.dispose();
            this.createSprite(y.SpriteType.Gun),
            this._playerGun.buildSprite(this.GameModule.TryGun, 35, 65),
            this._gameModule.PlayerGun = this._playerGun,
            this._player.Sprite.addChild(this._playerGun.Sprite),
            t && this.PlayerGun.GunAim();
        }
        ,
        t.prototype.playerRevive = function() {
            this.createPlayer(this.GameModule.PlayerDiePoint.x, this.GameModule.PlayerDiePoint.y),
            this.Player.Sprite.scaleX = this.GameModule.PlayerScaleX,
            this.PlayerGun.GunAim();
        }
        ,
        t.prototype.playerHited = function() {
            0 < this._playerModule.RoleInfo.ShieldCount && !this._gameModule.IsSnipe ? (this.Player.showProtect(),
            this._playerModule.RoleInfo.ShieldCount = 0,
            this.PlayerGun.GunAim()) : 0 < this._gameModule.BulletCount && this.Player.die();
        }
        ,
        t.prototype.MovePlayerToNextLevel = function() {
            this.PlayerGun.StopAim();
            var t = new Laya.TimeLine()
              , e = this.Player.Sprite.y
              , i = 0
              , n = 1
              , a = y.SpriteConst.STEP_HEIGHT
              , s = this.LevelStartLongth[this.GameModule.CurrentLevel - 1]
              , r = 0;
            r = 1 == this.GameModule.CurrentLevel && this.IsStart ? (i = 180 + 3 * y.SpriteConst.STEP_HEIGHT,
            n = -1,
            4) : (s && (this.GameModule.CurrentIsStartLeft ? (n = 1,
            i = s,
            y.CommonUtil.Log(this.Player.Sprite.x)) : (n = -1,
            i = y.SystemConst.SCEEN_WIDTH - s)),
            this.LevelCountArr[this.GameModule.CurrentLevel - 1]);
            var o = Math.abs(i - this.Player.Sprite.x);
            t.addLabel("turnUp", 0).to(this.Player.Sprite, {
                x: i
            }, o / y.SpriteConst.PLAYER_MOVE_SPEED, null, 0);
            for (var h = 0; h < r; h++) {
                var l = i + n * a * .5 + n * h * a
                  , u = l + n * a * .5;
                h == r - 1 && (l += 30 * n,
                u += 30 * n),
                t.addLabel("turnUp", 0).to(this.Player.Sprite, {
                    x: l,
                    y: e - 2 * a - h * a
                }, 82, Laya.Ease.quadOut, 0).addLabel("turnDown", 0).to(this.Player.Sprite, {
                    x: u,
                    y: e - (h + 1) * a
                }, 41, null, 0),
                this.Player.Y = e - (h + 1) * a;
            }
            t.play(0, !1),
            t.on(Laya.Event.COMPLETE, this, this.onLevelUpComplete);
        }
        ,
        t.prototype.onLevelUpComplete = function() {
            var t = this;
            if (this._gameModule.CurrentGold) {
                var e, i = y.CommonUtil.getGlobalByPoint(this._gameModule.CurrentGold.Sprite), n = y.CommonUtil.getGlobalByPoint(this.Player.Sprite), a = 0;
                e = this._gameModule.CurrentGold.Sprite.y + n.y - i.y,
                Laya.Tween.to(this._gameModule.CurrentGold.Sprite, {
                    x: n.x,
                    y: e + 80
                }, 300, null, Laya.Handler.create(this, function() {
                    y.SystemHelper.playSoundById(y.SoundId.GetGold),
                    t._gameModule.CurrentGold.Valid = !1,
                    t._gameModule.CurrentGold.Sprite.removeSelf(),
                    t._gameModule.CurrentGold.Sprite.destroy(),
                    t._gameModule.CurrentGold.dispose(),
                    t._gameModule.CurrentGold = null;
                }));
            }
            if (this._gameModule.CurrentMonsterNum >= this._gameModule.MonsterArr.length && this.Monster.IsDie) {
                a = 0;
                return a = this.GameModule.CurrentIsStartLeft ? 920 : -200,
                void Laya.Tween.to(this.Player.Sprite, {
                    x: a
                }, 1e3, null, new Laya.Handler(this,function() {
                    t._gameModule.IsFinish = !0,
                    t._uiDataModule.CanQuitBtn = !0,
                    asgard.ui.UIManager.openView(y.UIRes.END),
                    t._playerModule.RoleInfo.Chapter++,
                    t._playerModule.RoleInfo.EventDayWinNum++,
                    t._playerModule.TrySaveGameData();
                }
                ));
            }
            this.IsStart ? (this._gameModule.PlayerPoint = y.CommonUtil.getGlobalByPoint(this.Player.Sprite),
            1 == this.GameModule.CurrentLevel && (this.IsStart = !1,
            this.ChangeColor(this._gameModule.CurrentLevel, 0),
            -1 == this.Player.Sprite.scaleX ? this.Player.Sprite.scaleX = 1 : this.Player.Sprite.scaleX = -1,
            this.Player.Sprite.y + this.Player.Sprite.height != y.SpriteConst.STEP_START_Y && (this.Player.Sprite.y = y.SpriteConst.STEP_START_Y - this.Player.Sprite.height),
            this.Player.Sprite.x = 110),
            this.createMonster()) : (this._gameModule.CurrentIsStartLeft && this.Player.Sprite.y + this.Player.Sprite.height != this._gameModule.CurrentRightStep.Y ? this.Player.Sprite.y = this._gameModule.CurrentRightStep.Y - this.Player.Sprite.height : this._gameModule.CurrentIsStartLeft || this.Player.Sprite.y + this.Player.Sprite.height == this._gameModule.CurrentLeftStep.Y || (this.Player.Sprite.y = this._gameModule.CurrentLeftStep.Y - this.Player.Sprite.height),
            this.moveMap());
        }
        ,
        t.prototype.loadMap = function() {
            this.loadStep(),
            this.cleanOutStep();
        }
        ,
        t.prototype.CleanMap = function() {
            this._stepList.clear(),
            this.GameModule.CurrentLevel = 1,
            this.GameMap.dispose();
        }
        ,
        t.prototype.createStepImg = function(t, e, i, n, a, s, r, o, h) {
            var l = this.createSprite(y.SpriteType.Step);
            l.buildSprite(t, e, i, n, a, s, r, o),
            h && (l.Sprite.scaleX = -1),
            this.GameMap.SpriteRoot.addChild(l.Sprite);
        }
        ,
        t.prototype.loadStep = function() {
            var t = 150;
            this._uiDataModule.orderCount = 9e4;
            var e = y.SpriteConst.STEP_HEIGHT;
            this.LevelCountArr.length = 0,
            this.LevelStartLongth.length = 0;
            var i = this.GameModule.CurrentStepPointArr.length = 0
              , n = 0;
            n = this._gameModule.IsSnipe ? 145 : y.SpriteConst.stepWidth(this._playerModule.RoleInfo.Chapter),
            y.SpriteConst.STEP_START_Y = 800 + y.GameConst.CHANGE_HEIGHT,
            y.SpriteConst.START_PLAYER_Y = y.SpriteConst.STEP_START_Y + y.SpriteConst.START_STEP_COUNT * y.SpriteConst.STEP_HEIGHT,
            this.createStepImg(!1, 0, y.StepType.Left, y.SpriteConst.STEP_BLOCK_BASE_IMG, 0, y.SpriteConst.STEP_START_Y + y.SpriteConst.START_STEP_COUNT * y.SpriteConst.STEP_HEIGHT, y.SystemConst.SCEEN_WIDTH, y.SystemConst.REAL_HEIGHT - y.SpriteConst.STEP_START_Y - y.SpriteConst.START_STEP_COUNT * y.SpriteConst.STEP_HEIGHT);
            for (var a = 0; a < y.SpriteConst.START_STEP_COUNT; a++)
                this.createStepImg(!1, 0, y.StepType.Left, y.SpriteConst.STEP_BLOCK_BASE_IMG, 0, y.SpriteConst.STEP_START_Y + a * y.SpriteConst.STEP_HEIGHT, 180 + a * y.SpriteConst.STEP_HEIGHT, y.SpriteConst.STEP_HEIGHT + .5);
            if (this._gameModule.IsSnipe)
                for (var s = 0; s < 300; s++) {
                    var r = y.SpriteConst.getStepCounts(38);
                    this.LevelCountArr.push(r);
                }
            else
                for (s = 0; s < 35; s++) {
                    r = y.SpriteConst.getStepCounts(this._playerModule.RoleInfo.Chapter);
                    this.LevelCountArr.push(r);
                }
            for (var o = 0; o < this.LevelCountArr.length; o++) {
                t = n + Math.floor(50 * Math.random());
                r = this.LevelCountArr[o];
                this.LevelCountArr[o + 1] && this.LevelCountArr[o + 1];
                var h = y.SystemConst.SCEEN_WIDTH - r * e - t
                  , l = 0;
                l = 0 == o ? y.SpriteConst.STEP_START_Y : y.SpriteConst.STEP_START_Y - i * e;
                var u = o + 1;
                if (o % 2 == 0) {
                    new y.SpriteStep();
                    this.createStepImg(!0, u, y.StepType.Left, y.SpriteConst.STEP_BLOCK_IMG, 0, l, h + 1, e + .5),
                    this.LevelStartLongth.push(h);
                    for (var c = 0; c < r; c++) {
                        var d = h + c * e
                          , _ = l - (c + 1) * e;
                        this.createStepImg(!0, u, y.StepType.Triangle, y.SpriteConst.STEP_TRIANGLE_IMG, d, _, 2 * e, 2 * e),
                        (f = new Laya.Point()).x = d,
                        f.y = _;
                    }
                    var p = t + e;
                    new y.SpriteStep();
                    this.createStepImg(!0, u, y.StepType.Right, y.SpriteConst.STEP_BLOCK_IMG, y.SystemConst.SCEEN_WIDTH - p, l - r * e, p, e + .5);
                } else {
                    this.createStepImg(!1, u, y.StepType.Right, y.SpriteConst.STEP_BLOCK_IMG, y.SystemConst.SCEEN_WIDTH - h - 1, l, h + 1, e + .5),
                    this.LevelStartLongth.push(h);
                    for (c = 0; c < r; c++) {
                        var f;
                        d = y.SystemConst.SCEEN_WIDTH - h - c * e,
                        _ = l - (c + 1) * e;
                        this.createStepImg(!1, u, y.StepType.Triangle, y.SpriteConst.STEP_TRIANGLE_IMG, d, _, 2 * e, 2 * e, !0),
                        (f = new Laya.Point()).x = d,
                        f.y = _;
                    }
                    new y.SpriteStep();
                    this.createStepImg(!1, u, y.StepType.Left, y.SpriteConst.STEP_BLOCK_IMG, 0, l - r * e, t + e + 1, e + .5);
                }
                i += r;
            }
            for (o = 0; o < this._stepList.Count; o++) {
                var g = this._stepList.getDataAt(o);
                if (1 == g.Level && g.Type == y.StepType.Triangle) {
                    var m = y.CommonUtil.getGlobalByPoint(g.Sprite);
                    this.GameModule.CurrentStepPointArr.push(m);
                }
            }
            this.ChangeColor(0, 0);
        }
        ,
        t.prototype.ChangeColor = function(i, t) {
            for (var n = this, a = 0, e = function(t) {
                var e = s._stepList.getDataAt(t);
                a += 10,
                Laya.timer.once(a, s, function() {
                    e.Level == i && (e.Type == y.StepType.Triangle ? e.stepImg.skin = y.SpriteConst.STEP_TRIANGLE_BASE_IMG : (e.stepImg.skin = y.SpriteConst.STEP_BLOCK_BASE_IMG,
                    e.PictureImg && (e.PictureImg.skin = "step/" + y.SpriteConst.getMapNameById(n._gameModule.MapId) + (e.PictureId + 1) + ".png")));
                });
            }, s = this, r = 0; r < this._stepList.Count; r++)
                e(r);
            this.setCurrentData();
        }
        ,
        t.prototype.moveMap = function() {
            var t = 0;
            if (this.GameModule.CurrentStepPointArr.length = 0,
            this.LevelCountArr[this._gameModule.CurrentLevel - 1]) {
                t = this.LevelCountArr[this._gameModule.CurrentLevel - 1],
                this.targetY = this.GameMap.SpriteRoot.y + t * y.SpriteConst.STEP_HEIGHT,
                this._isMapMoving = !0;
                var e = this.FarBg.y + y.SpriteConst.MOVE_FAR_BG_IMG * t;
                e < 0 && Laya.Tween.to(this.FarBg, {
                    y: e
                }, y.SpriteConst.MOVE_STEP_TIME * t);
                var i = this.MiddleBg.y + y.SpriteConst.MOVE_MIDDLE_BG_IMG * t;
                i < 0 && Laya.Tween.to(this.MiddleBg, {
                    y: i
                }, y.SpriteConst.MOVE_STEP_TIME * t),
                this.changeLevel();
            }
            this.cleanOutStep(),
            this.cleanOutBloodBall();
        }
        ,
        t.prototype.changeLevel = function() {
            this._gameModule.CurrentLevel++,
            this.ChangeColor(this._gameModule.CurrentLevel, 0),
            -1 == this.Player.Sprite.scaleX ? this.Player.Sprite.scaleX = 1 : this.Player.Sprite.scaleX = -1;
        }
        ,
        t.prototype.setCurrentData = function() {
            this._gameModule.CurrentLevel % 2 == 0 ? this._gameModule.CurrentIsStartLeft = !1 : this._gameModule.CurrentIsStartLeft = !0,
            this._gameModule.CurrentLeftStep = this.getLeftStep(),
            this._gameModule.CurrentRightStep = this.getRightStep();
        }
        ,
        t.prototype.getRightStep = function() {
            for (var t = 0; t < this._stepList.Count; t++) {
                var e = this._stepList.getDataAt(t);
                if (e.Level == this.GameModule.CurrentLevel && e.Type == y.StepType.Right)
                    return e;
            }
            return null;
        }
        ,
        t.prototype.getLeftStep = function() {
            for (var t = 0; t < this._stepList.Count; t++) {
                var e = this._stepList.getDataAt(t);
                if (e.Level == this.GameModule.CurrentLevel && e.Type == y.StepType.Left)
                    return e;
            }
            return null;
        }
        ,
        t.prototype.cleanOutBloodBall = function() {
            for (var t = 0; t < this._bloodList.Count; t++) {
                var e = this._bloodList.getDataAt(t)
                  , i = new Laya.Point(e.X,e.Y)
                  , n = e.Sprite.parent;
                n && (i = n.localToGlobal(i)),
                i.y > y.SystemConst.REAL_HEIGHT && (e.Valid = !1,
                e.hide(),
                this.reclaimSprite(e));
            }
        }
        ,
        t.prototype.cleanOutStep = function() {
            for (var t = 0; t < this._stepList.Count; t++) {
                var e = this._stepList.getDataAt(t)
                  , i = new Laya.Point(e.X,e.Y)
                  , n = e.Sprite.parent;
                n && (i = n.localToGlobal(i)),
                i.y > y.SystemConst.REAL_HEIGHT + 40 && (e.Valid = !1,
                e.hide(),
                this.reclaimSprite(e)),
                i.y < -250 ? e.Visible = !1 : e.Visible = !0;
            }
        }
        ,
        t.prototype.showWinDoor = function() {
            var t = new Laya.Image();
            t.skin = "effect/通关门.png",
            t.anchorX = 1,
            t.anchorY = 1,
            t.scaleY = .9,
            t.alpha = 0,
            t.zOrder = 90001,
            this._gameModule.CurrentIsStartLeft ? (t.x = 770,
            t.scaleX = .9,
            t.y = this._gameModule.CurrentRightStep.Y) : (t.x = -50,
            t.scaleX = -.9,
            t.y = this._gameModule.CurrentLeftStep.Y),
            Laya.Tween.to(t, {
                alpha: 1
            }, 700),
            this.GameMap.SpriteRoot.addChild(t);
        }
        ,
        t.prototype.createFlyingIcon = function(t, e, i, n, a, s, r) {
            for (var o = 0; o < e; o++) {
                var h = this.createSprite(y.SpriteType.FlyCoin);
                h.buildSprite(0, i, n, a, s, r),
                t ? Laya.stage.addChild(h.Sprite) : asgard.ui.UIManager.addUIEffectView(h.Sprite);
            }
        }
        ,
        t.getInstance = function() {
            return t._instance || (t._instance = new t(y.SpriteFactory.getInstance()),
            asgard.ui.UIManager.addGameView(t._instance.SpriteRoot)),
            t._instance;
        }
        ,
        t._instance = null,
        t;
    }();
    y.SpriteManager = t;
}(logic || (logic = {})),
function(n) {
    var t = function() {
        function t() {
            this._flyCoinPool = new asgard.utils.SimpleQueue(),
            this._playerPool = new asgard.utils.SimpleQueue(),
            this._stepPool = new asgard.utils.SimpleQueue(),
            this._gunPool = new asgard.utils.SimpleQueue(),
            this._monsterPool = new asgard.utils.SimpleQueue(),
            this._monsterGunPool = new asgard.utils.SimpleQueue(),
            this._bulletPool = new asgard.utils.SimpleQueue(),
            this._bloodPool = new asgard.utils.SimpleQueue();
        }
        return t.getInstance = function() {
            return t._instance || (t._instance = new t()),
            t._instance;
        }
        ,
        t.prototype._getSpritePool = function(t) {
            switch (t) {
            case n.SpriteType.Player:
                return this._playerPool;

            case n.SpriteType.Step:
                return this._stepPool;

            case n.SpriteType.Gun:
                return this._gunPool;

            case n.SpriteType.Monster:
                return this._monsterPool;

            case n.SpriteType.MonsterGun:
                return this._monsterGunPool;

            case n.SpriteType.Blood:
                return this._bloodPool;
            }
            return null;
        }
        ,
        t.prototype.applySprite = function(t) {
            var e = null
              , i = this._getSpritePool(t);
            if (i && (e = i.dequeue()),
            !e)
                switch (t) {
                case n.SpriteType.Player:
                    e = new n.SpritePlayer();
                    break;

                case n.SpriteType.Gun:
                    e = new n.SpriteGun();
                    break;

                case n.SpriteType.MonsterGun:
                    e = new n.SpriteMonsterGun();
                    break;

                case n.SpriteType.Bullet:
                    e = new n.SpriteBullet();
                    break;

                case n.SpriteType.Blood:
                    e = new n.SpriteBlood();
                    break;

                case n.SpriteType.Monster:
                    e = new n.SpriteMonster();
                    break;

                case n.SpriteType.FlyCoin:
                    e = new n.SpriteFlyingCoin();
                    break;

                case n.SpriteType.Step:
                    e = new n.SpriteStep();
                    break;

                case n.SpriteType.ScoreTip:
                    e = new n.SpriteScoreTip();
                }
            return e && (e.Valid = !0,
            e.Sprite.visible = !0),
            e;
        }
        ,
        t.prototype.reclaimSprite = function(t) {
            t && (t.Sprite.removeSelf(),
            t.dispose());
        }
        ,
        t._instance = null,
        t;
    }();
    n.SpriteFactory = t;
}(logic || (logic = {})),
function(t) {
    var e, i, n, a, s, r, o;
    (e = t.StepType || (t.StepType = {}))[e.Left = 0] = "Left",
    e[e.Triangle = 1] = "Triangle",
    e[e.Right = 2] = "Right",
    (i = t.MonsterSkill || (t.MonsterSkill = {}))[i.None = 0] = "None",
    i[i.Shield = 101] = "Shield",
    i[i.Helmet = 102] = "Helmet",
    i[i.Jump = 103] = "Jump",
    i[i.Move = 104] = "Move",
    i[i.Fly = 105] = "Fly",
    i[i.Flash = 106] = "Flash",
    i[i.Tank = 107] = "Tank",
    i[i.ManaShield = 108] = "ManaShield",
    i[i.AddBlood = 109] = "AddBlood",
    i[i.UnBeatable = 110] = "UnBeatable",
    i[i.GlassShield = 111] = "GlassShield",
    i[i.BlackHole = 112] = "BlackHole",
    (n = t.DieType || (t.DieType = {}))[n.ShootBody = 0] = "ShootBody",
    n[n.ShootHead = 1] = "ShootHead",
    (a = t.ShootType || (t.ShootType = {}))[a.Default = 1] = "Default",
    a[a.SanDan = 2] = "SanDan",
    a[a.JiGuanQiang = 3] = "JiGuanQiang",
    (s = t.MonsterComeType || (t.MonsterComeType = {}))[s.Walk = 0] = "Walk",
    s[s.Jump = 1] = "Jump",
    (r = t.MonsterDieType || (t.MonsterDieType = {}))[r.Fly = 0] = "Fly",
    (o = t.BulletFromType || (t.BulletFromType = {}))[o.Player = 0] = "Player",
    o[o.Monster = 1] = "Monster";
    var h = function() {
        function t() {}
        return t.getMapNameById = function(t) {
            switch (t) {
            case 1:
                return "纽约家具";

            case 2:
                return "试验室家具";

            case 3:
                return "东方家具";

            case 4:
                return "金字塔家具";

            case 5:
                return "赛博";

            case 6:
                return "丛林动物";

            case 7:
                return "西部地物";

            case 8:
                return "山水地物";

            case 9:
                return "科技地物";

            default:
                return "";
            }
        }
        ,
        t.shieldIndex = function(t) {
            if (Math.random() < .3)
                return Math.floor(Math.random() * t) + 1;
        }
        ,
        t.getBossHeadById = function(t) {
            return "monster/BOSS" + (t - 100) + "tou.png";
        }
        ,
        t.getBossBodyById = function(t) {
            return "monster/BOSS" + (t - 100) + "shen.png";
        }
        ,
        t.stepWidth = function(t) {
            return t <= 2 ? 170 : t <= 9 ? 165 : t <= 14 ? 160 : t <= 19 ? 150 : t <= 24 ? 145 : 25 <= t ? 140 : void 0;
        }
        ,
        t.getStepCounts = function(t) {
            return t <= 2 ? 2 + Math.floor(2 * Math.random()) : t <= 9 ? 2 + Math.floor(3 * Math.random()) : t <= 20 ? 3 + Math.floor(3 * Math.random()) : t <= 30 ? 3 + Math.floor(4 * Math.random()) : t <= 40 ? 3 + Math.floor(5 * Math.random()) : 40 < t ? 3 + Math.floor(5 * Math.random()) : void 0;
        }
        ,
        t.CHEST_COIN_RES = "",
        t.STEP_BLOCK_IMG = "step/台阶1（试验室）.png",
        t.STEP_TRIANGLE_IMG = "step/台阶2（试验室）.png",
        t.STEP_BLOCK_BASE_IMG = "step/台阶1.png",
        t.STEP_TRIANGLE_BASE_IMG = "step/台阶2.png",
        t.STEP_TRIANGLE_WIDTH = 2 * (t.STEP_HEIGHT = 40),
        t.START_STEP_COUNT = 4,
        t.STEP_START_Y = 850,
        t.PLAYER_MOVE_SPEED = 1,
        t.START_PLAYER_X = 500,
        t.START_PLAYER_Y = t.STEP_START_Y + t.START_STEP_COUNT * t.STEP_HEIGHT,
        t.MOVE_STEP_TIME = 170,
        t.MOVE_FAR_BG_IMG = 6,
        t.MOVE_MIDDLE_BG_IMG = 10,
        t.SKILL_START_TIME = 300,
        t.MonsterStepDistance = 15,
        t.PictureIdArr = [1, 3, 5],
        t.FlyMonsterImgArr = ["fly1", "fly2", "fly3"],
        t.monsterImgArr = ["xiaoguai1-", "xiaoguai2-", "xiaoguai5-", "xiaoguai6-", "xiaoguai7-", "xiaoguai8-", "xiaoguai9-", "xiaoguai10-", "xiaoguai11-"],
        t.monsterHelmetImgArr = ["xiaoguai3-", "xiaoguai4-"],
        t.monsterHeadImgArr = ["monster/小怪tou0.png", "monster/小怪tou1.png", "monster/小怪tou2.png", "monster/小怪tou3.png", "monster/小怪tou4.png", "monster/小怪tou5.png", "monster/小怪tou6.png", "monster/小怪tou8.png", "monster/小怪tou9.png", "monster/小怪tou10.png", "monster/小怪tou11.png", "monster/小怪tou12.png", "monster/小怪tou13.png"],
        t.monsterBodyImgArr = ["monster/小怪shen1.png", "monster/小怪shen2.png", "monster/小怪shen3.png", "monster/小怪shen4.png", "monster/小怪shen5.png", "monster/小怪shen6.png", "monster/小怪shen7.png", "monster/小怪shen8.png", "monster/小怪shen9.png", "monster/小怪shen10.png"],
        t;
    }();
    t.SpriteConst = h;
}(logic || (logic = {})),
function(e) {
    var t = function() {
        function t() {
            this._spriteRoot = new Laya.Sprite(),
            this._bulletStage = new Laya.Sprite(),
            this._viewOffsetX = 0,
            this._stepList = [],
            this._uiDataModule = asgard.module.ModuleManager.getModule(e.MODULE_UIDATA),
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this.game_level = this._playerModule.RoleInfo.Chapter;
        }
        return t.prototype.NewMap = function() {
            this._spriteRoot = new Laya.Sprite(),
            this._bulletStage = new Laya.Sprite();
        }
        ,
        Object.defineProperty(t.prototype, "SpriteRoot", {
            get: function() {
                return this._spriteRoot;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "BulletStage", {
            get: function() {
                return this._bulletStage;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.init = function(t, e) {
            this._width = t,
            this._height = e,
            this._viewOffsetX = 0;
        }
        ,
        t.prototype.dispose = function() {
            this._spriteRoot.removeSelf(),
            this._bulletStage.removeSelf();
        }
        ,
        t.prototype.removeStepFromList = function(t) {
            for (var e = 0; e < this._stepList.length; e++) {
                if (this._stepList[e].Level == t.Level)
                    return e;
            }
            return -1;
        }
        ,
        t.prototype.cleanBlock = function() {}
        ,
        t.prototype.initLevelMapData = function() {}
        ,
        t;
    }();
    e.BattleMap = t;
}(logic || (logic = {})),
function(t) {
    var e, i;
    (i = e = t.BaseItemState || (t.BaseItemState = {}))[i.NORMAL = 0] = "NORMAL",
    i[i.MOVING = 1] = "MOVING";
    var n = function() {
        function t() {
            this._isMoving = !1,
            this._curState = e.NORMAL,
            this._sprite = new Laya.Sprite();
        }
        return Object.defineProperty(t.prototype, "Sprite", {
            get: function() {
                return this._sprite;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ItemInfo", {
            get: function() {
                return this._itemInfo;
            },
            set: function(t) {
                this._itemInfo = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "x", {
            get: function() {
                return this._sprite ? this._sprite.x : 0;
            },
            set: function(t) {
                this._sprite && (this._sprite.x = t);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "y", {
            get: function() {
                return this._sprite ? this._sprite.y : 0;
            },
            set: function(t) {
                this._sprite && (this._sprite.y = t);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "width", {
            get: function() {
                return this._sprite ? this._sprite.width : 0;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "height", {
            get: function() {
                return this._sprite ? this._sprite.height : 0;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.scale = function(t, e) {
            this._sprite && this._sprite.scale(t, e);
        }
        ,
        Object.defineProperty(t.prototype, "scaleX", {
            get: function() {
                if (this._sprite)
                    return this._sprite.scaleX;
            },
            set: function(t) {
                this._sprite && (this._sprite.scaleX = t);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "scaleY", {
            get: function() {
                if (this._sprite)
                    return this._sprite.scaleY;
            },
            set: function(t) {
                this._sprite && (this._sprite.scaleY = t);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "visible", {
            get: function() {
                return !!this._sprite && this._sprite.visible;
            },
            set: function(t) {
                this._sprite && (this._sprite.visible = t);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.moveTo = function(t, e) {
            this._sprite && this._sprite.pos(t, e),
            this._itemInfo && this._itemInfo.moveTo(t, e);
        }
        ,
        t.prototype.init = function(t) {
            t || console.error("创建ITEM时传入了空的itemInfo"),
            this._itemInfo = t,
            (this._itemInfo.Target = this)._sprite && this._sprite.pos(t.Row, t.Col),
            this.newItem(t);
        }
        ,
        t.prototype.newItem = function(t) {}
        ,
        t.prototype.refresh = function() {
            this.init(this._itemInfo);
        }
        ,
        t.prototype.recycle = function() {
            this._itemInfo.clear(),
            this._itemInfo = null,
            this._sprite && (this._sprite.graphics.clear(),
            this._sprite.removeSelf());
        }
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t;
    }();
    t.BaseItem = n;
}(logic || (logic = {})),
function(t) {
    var e;
    (e = t.SpriteType || (t.SpriteType = {}))[e.Player = 1] = "Player",
    e[e.Step = 2] = "Step",
    e[e.Monster = 3] = "Monster",
    e[e.Bullet = 4] = "Bullet",
    e[e.Gun = 5] = "Gun",
    e[e.MonsterGun = 6] = "MonsterGun",
    e[e.Blood = 7] = "Blood",
    e[e.Picture = 8] = "Picture",
    e[e.ScoreTip = 10] = "ScoreTip",
    e[e.FlyCoin = 11] = "FlyCoin";
    var i = function() {
        function e(t) {
            this._id = e.SERIAL_ID++,
            this._spriteType = t,
            this._x = 0,
            this._y = 0,
            this._isMoving = !1,
            this._offsetx = 0,
            this._offsety = 0,
            this._rotation = 0,
            this._width = 100,
            this._height = 100,
            this._phyXScope = 50,
            this._phyYScope = 50;
        }
        return Object.defineProperty(e.prototype, "Id", {
            get: function() {
                return this._id;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "SpriteType", {
            get: function() {
                return this._spriteType;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "DataId", {
            get: function() {
                return this._dataId;
            },
            set: function(t) {
                this._dataId = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "X", {
            get: function() {
                return this._x;
            },
            set: function(t) {
                this._x = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "Y", {
            get: function() {
                return this._y;
            },
            set: function(t) {
                this._y = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "OffsetX", {
            get: function() {
                return this._offsetx;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "OffsetY", {
            get: function() {
                return this._offsety;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.moveTo = function(t, e) {
            this._x = t,
            this._y = e;
        }
        ,
        e.prototype.offsetTo = function(t, e) {
            this._offsetx = t,
            this._offsety = e;
        }
        ,
        e.prototype.initSize = function(t, e) {
            this._width = t,
            this._height = e;
        }
        ,
        Object.defineProperty(e.prototype, "Width", {
            get: function() {
                return this._width;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "Height", {
            get: function() {
                return this._height;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "PhyXScope", {
            get: function() {
                return this._phyXScope;
            },
            set: function(t) {
                this._phyXScope = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "PhyYScope", {
            get: function() {
                return this._phyYScope;
            },
            set: function(t) {
                this._phyYScope = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.setSpeed = function(t, e) {
            this._speedX = t,
            this._speedY = e,
            this._isMoving = 1e-5 < Math.abs(this._speedX) || 1e-5 < Math.abs(this._speedY);
        }
        ,
        Object.defineProperty(e.prototype, "SpeedX", {
            get: function() {
                return this._speedX;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "SpeedY", {
            get: function() {
                return this._speedY;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(e.prototype, "IsMoving", {
            get: function() {
                return this._isMoving;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.SERIAL_ID = 1e4,
        e.CAMP_NONE = 0,
        e.CAMP_PLAYER = 1,
        e.CAMP_ENEMY = 2,
        e;
    }();
    t.SpriteInfo = i;
}(logic || (logic = {})),
function(t) {
    var e = function() {
        function t() {
            this._unionId = t.SERIAL_ID++,
            this._row = 0,
            this._col = 0,
            this._level = 0,
            this._isEmpty = !0,
            this._isActive = !1,
            this._isMoving = !1,
            this._isCenter = !1,
            this._isPassive = !1;
        }
        return Object.defineProperty(t.prototype, "UnionId", {
            get: function() {
                return this._unionId;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "IsPassive", {
            get: function() {
                return this._isPassive;
            },
            set: function(t) {
                this._isPassive = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "IsMoving", {
            get: function() {
                return this._isMoving;
            },
            set: function(t) {
                this._isMoving = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "IsActive", {
            get: function() {
                return this._isActive;
            },
            set: function(t) {
                this._isActive = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Row", {
            get: function() {
                return this._row;
            },
            set: function(t) {
                this._row = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Col", {
            get: function() {
                return this._col;
            },
            set: function(t) {
                this._col = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "IsCenter", {
            get: function() {
                return this._isCenter;
            },
            set: function(t) {
                this._isCenter = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "IsEmpty", {
            get: function() {
                return this._isEmpty;
            },
            set: function(t) {
                this._isEmpty = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.moveTo = function(t, e) {
            this._row = t,
            this._col = e;
        }
        ,
        Object.defineProperty(t.prototype, "Target", {
            get: function() {
                return this._target;
            },
            set: function(t) {
                this._target = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Level", {
            get: function() {
                return this._level;
            },
            set: function(t) {
                this._level = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "IsMaxLv", {
            get: function() {
                return !1;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.clear = function() {
            this._target = null,
            this._row = 0,
            this._col = 0;
        }
        ,
        t.prototype.toString = function() {}
        ,
        t.prototype.exportData = function() {
            var t = {};
            return t._unionId = this._unionId,
            t.row = this._row,
            t.col = this._col,
            t.level = this._level,
            t;
        }
        ,
        t.SERIAL_ID = 1e4,
        t;
    }();
    t.BlockInfo = e;
}(logic || (logic = {})),
function(t) {
    var e = function() {
        function a() {}
        return a.reset = function() {
            a._width = 0,
            a._height = 0,
            a._halfWidth = 0,
            a._halfHeight = 0,
            a._left = 0,
            a._top = 0,
            a._right = 0,
            a._bottom = 0,
            a._centerPosx = 0,
            a._centerPosy = 0,
            a._curMapx = 0,
            a._curMapy = 0,
            a.MapOffsetx = 0,
            a.MapOffsety = 0,
            a.PositionChanged = !1;
        }
        ,
        Object.defineProperty(a, "Width", {
            get: function() {
                return a._width;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a, "Height", {
            get: function() {
                return a._height;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a, "CenterPosx", {
            get: function() {
                return this._centerPosx;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a, "CenterPosy", {
            get: function() {
                return this._centerPosy;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a, "CurMapx", {
            get: function() {
                return this._curMapx;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(a, "CurMapy", {
            get: function() {
                return this._curMapy;
            },
            enumerable: !0,
            configurable: !0
        }),
        a.mapxToViewx = function(t) {
            return a.MapOffsetx + t;
        }
        ,
        a.mapyToViewy = function(t) {
            return a.MapOffsety - t;
        }
        ,
        a.setViewCenter = function(t, e) {
            a._centerPosx == t && a._centerPosy == e || (a._centerPosx = t,
            a._centerPosy = e,
            a.MapOffsetx = a.CenterPosx - a.CurMapx,
            a.MapOffsety = a.CenterPosy + a.CurMapy);
        }
        ,
        a.initViewPort = function(t, e) {
            a._width = t,
            a._height = e,
            a._halfWidth = Math.floor(.5 * t),
            a._halfHeight = Math.floor(.5 * e),
            a._left = a.CurMapx - a._halfWidth,
            a._right = a.CurMapx + a._halfWidth,
            a._top = a.CurMapy - a._halfHeight,
            a._bottom = a.CurMapy + a._halfHeight;
        }
        ,
        a.setMapPosition = function(t, e) {
            t = Math.floor(t),
            e = Math.floor(e),
            a.CurMapx == t && a.CurMapy == e || (a._curMapx = t,
            a._curMapy = e,
            a.MapOffsetx = a.CenterPosx - a.CurMapx,
            a.MapOffsety = a.CenterPosy + a.CurMapy,
            a.PositionChanged = !0,
            a._left = a.CurMapx - a._halfWidth,
            a._right = a.CurMapx + a._halfWidth,
            a._top = a.CurMapy - a._halfHeight,
            a._bottom = a.CurMapy + a._halfHeight);
        }
        ,
        a.checkInfView = function(t, e, i, n) {
            return a._left <= e && t <= a._right && a._top <= n && i <= a._bottom;
        }
        ,
        a._width = 0,
        a._height = 0,
        a._halfWidth = 0,
        a._halfHeight = 0,
        a._left = 0,
        a._top = 0,
        a._right = 0,
        a._bottom = 0,
        a._centerPosx = 0,
        a._centerPosy = 0,
        a._curMapx = 0,
        a._curMapy = 0,
        a.MapOffsetx = 0,
        a.MapOffsety = 0,
        a.PositionChanged = !1,
        a;
    }();
    t.GameViewport = e;
}(logic || (logic = {})),
function(e) {
    var t = function() {
        function t() {}
        return t.prototype.init = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(e.MODULE_UIDATA),
            this._roleInfo = this._playerModule.RoleInfo,
            asgard.events.EventsDispatcher.registerEventListener(e.GameEvents.EVENT_WX_ON_SHOW, this, this.recoverSound);
        }
        ,
        t.prototype.dispose = function() {
            this._spriteManager.clear();
        }
        ,
        t.prototype.recoverSound = function() {
            this._gameModule.HasSound ? e.SystemConst.SOUND_ACTIVE = !0 : (e.SystemConst.SOUND_ACTIVE = !1,
            e.SystemHelper.stopMusic());
        }
        ,
        Object.defineProperty(t.prototype, "RoleInfo", {
            get: function() {
                return this._roleInfo;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.start = function() {
            e.GameViewport.initViewPort(e.SystemConst.SCEEN_WIDTH, e.GameConst.BATTLE_FIELD_HEIGHT),
            e.GameViewport.setViewCenter(e.GameConst.PLAYER_LOCATE_X, e.GameConst.SPRITE_LOCATE_Y);
        }
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t;
    }();
    e.GameLogic = t;
}(logic || (logic = {})),
function(t) {
    var e = function() {
        function t() {}
        return t.NEAR_BKG_LOCATE_Y = 65,
        t.MID_BKG_LOCATE_Y = 156,
        t.BATTLE_FIELD_HEIGHT = 445,
        t.SPRITE_LOCATE_Y = 370,
        t.BOTTOM_BOX_HEIGHT = 870,
        t.HEIGHT_CHANGE = 0,
        t.PLAYER_LOCATE_X = 350,
        t.CHANGE_HEIGHT = 0,
        t.REAL_STATIC = 1,
        t.BannerHeight = 0,
        t.ENERGY_RECOVER_TIME = 12e5,
        t.BLOCK_ROW_COUNT = 5,
        t.BLOCK_COL_COUNT = 7,
        t.BLOCK_COUNT = 35,
        t.XArr = [53.5, 158.5, 263.5, 368.5, 473.5],
        t.YArr = [52.5, 157.5, 262.5, 367.5, 472.5, 577.5, 682.5],
        t;
    }();
    t.GameConst = e;
    var i = function() {
        function t() {}
        return t.InGame = 10001,
        t.ClickStart = 10002,
        t.ClickContinue = 10003,
        t.ClickReplay = 10004,
        t.OpenRefreshProp = 10005,
        t.GetRefreshProp = 10006,
        t.SkipRefreshProp = 10007,
        t.OpenHammerProp = 10008,
        t.GetHammerProp = 10009,
        t.SkipHammerProp = 10010,
        t.OpenPassiveProp = 10011,
        t.GetPassiveProp = 10012,
        t.SkipPassiveProp = 10013,
        t.OpenResurge = 10014,
        t.ClickResurge = 10015,
        t.ClickSkipResurge = 10016,
        t.LuckyBagApear = 10017,
        t.LuckyBagOpen = 10018,
        t.LuckyBagGiveUp = 10019,
        t.OldInGame = 20001,
        t.OldClickStart = 20002,
        t.OldClickContinue = 20003,
        t.OldClickReplay = 20004,
        t.OldOpenRefreshProp = 20005,
        t.OldGetRefreshProp = 20006,
        t.OldSkipRefreshProp = 20007,
        t.OldOpenHammerProp = 20008,
        t.OldGetHammerProp = 20009,
        t.OldSkipHammerProp = 20010,
        t.OldOpenPassiveProp = 20011,
        t.OldGetPassiveProp = 20012,
        t.OldSkipPassiveProp = 20013,
        t.OldOpenResurge = 20014,
        t.OldClickResurge = 20015,
        t.OldClickSkipResurge = 20016,
        t.OldLuckyBagApear = 20017,
        t.OldLuckyBagOpen = 20018,
        t.OldLuckyBagGiveUp = 20019,
        t;
    }();
    t.EventLog = i;
}(logic || (logic = {})),
Object.defineProperty(Array.prototype, "remove", {
    value: function(t) {
        var e = this.indexOf(t);
        return 0 <= e ? this.splice(e, 1) : null;
    }
}),
Object.defineProperty(Array.prototype, "clone", {
    value: function() {
        return clone(this);
    }
});

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

var bossNames = ["Orc", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Ninja 2", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gunner", "Gangster", "breaking Bad", "spy", "White border", "The Gangster Boss", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Ninja 2", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Ninja 2", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Ninja 2", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien", "Slime Trainer", "Mystery man", "Baby Bat", "SAW", "Terminator", "Jungle Princess", "Link", "Zombie", "The Dwarf King", "Cthulhu", "Vulture", "clown", "Doctor", "violent", "McRae", "Dead Hold", "Ayanami", "Ghost Rider", "Baby Bat", "Asuka", "Doctor", "Momotaro", "Wolf", "Bull Devil", "Machine Gun Captain", "Gangster", "breaking Bad", "spy", "Bulletproof Police", "The Gangster 2", "Sister Assassin", "Cyberpunk", "BOSS1", "Hannibal", "2077", "Pharaoh", "Cleopatra", "Spartan", "Egyptian", "Ada King", "Storm Blue Cat", "Dead Hold", "prison", "Nova", "Alien"]

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 6;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            var e, i;
            for (this.Id = this.readInt(t),
            this.Hp = this.readInt(t),
            i = this.readByte(t),
            this.Skill = new Array(i),
            e = 0; e < i; e++)
                this.Skill[e] = this.readInt(t);
            return this.Name = this.readString(t),
            this.Name = bossNames[this.Id - 100],
            this.ImgPath = this.readString(t),
            this.EquipImg = this.readString(t),
            this.GunImg = this.readString(t),
            this.BulletImg = this.readString(t),
            this.GunPosX = this.readInt(t),
            this.GunPosY = this.readInt(t),
            this.MapId = this.readInt(t),
            !0;
        }
        ,
        e.prototype.getSkillCount = function() {
            return this.Skill.length;
        }
        ,
        e.prototype.getSkillAt = function(t) {
            return 0 <= t && t < this.Skill.length ? this.Skill[t] : 0;
        }
        ,
        e.prototype.getSkill = function() {
            return this.Skill;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",Hp=" + this.Hp + ",Skill=" + this.Skill + ",Name=" + this.Name + ",ImgPath=" + this.ImgPath + ",EquipImg=" + this.EquipImg + ",GunImg=" + this.GunImg + ",BulletImg=" + this.BulletImg + ",GunPosX=" + this.GunPosX + ",GunPosY=" + this.GunPosY + ",MapId=" + this.MapId;
        }
        ,
        e.DATA_TYPE = 6,
        e;
    }(asgard.data.BaseStaticData);
    t.Boss = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 5;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            var e, i;
            for (this.Id = this.readInt(t),
            this.LevelCount = this.readInt(t),
            this.MonsterCount = this.readInt(t),
            i = this.readByte(t),
            this.MonsterIds = new Array(i),
            e = 0; e < i; e++)
                this.MonsterIds[e] = this.readInt(t);
            for (i = this.readByte(t),
            this.MonsterCounts = new Array(i),
            e = 0; e < i; e++)
                this.MonsterCounts[e] = this.readInt(t);
            return this.MonsterHp = this.readFloat(t),
            this.BossId = this.readInt(t),
            this.MapId = this.readInt(t),
            !0;
        }
        ,
        e.prototype.getMonsterIdsCount = function() {
            return this.MonsterIds.length;
        }
        ,
        e.prototype.getMonsterIdsAt = function(t) {
            return 0 <= t && t < this.MonsterIds.length ? this.MonsterIds[t] : 0;
        }
        ,
        e.prototype.getMonsterIds = function() {
            return this.MonsterIds;
        }
        ,
        e.prototype.getMonsterCountsCount = function() {
            return this.MonsterCounts.length;
        }
        ,
        e.prototype.getMonsterCountsAt = function(t) {
            return 0 <= t && t < this.MonsterCounts.length ? this.MonsterCounts[t] : 0;
        }
        ,
        e.prototype.getMonsterCounts = function() {
            return this.MonsterCounts;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",LevelCount=" + this.LevelCount + ",MonsterCount=" + this.MonsterCount + ",MonsterIds=" + this.MonsterIds + ",MonsterCounts=" + this.MonsterCounts + ",MonsterHp=" + this.MonsterHp + ",BossId=" + this.BossId + ",MapId=" + this.MapId;
        }
        ,
        e.DATA_TYPE = 5,
        e;
    }(asgard.data.BaseStaticData);
    t.Chapter = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 10;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            return this.Id = this.readInt(t),
            this.BossId = this.readInt(t),
            !0;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",BossId=" + this.BossId;
        }
        ,
        e.DATA_TYPE = 10,
        e;
    }(asgard.data.BaseStaticData);
    t.Endless = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

var guns = {
    "手枪": "Gun",
    "消音枪": "Silencer",
    "复古手枪": "Retro pistol",
    "左轮": "Revolver",
    "重手枪": "Heavy pistol",
    "乌齐冲锋枪": "Uzi mini",
    "沙漠之鹰": "Desert Eagle",
    "喷子": "Shotgun",
    "冲锋枪": "Submachine gun",
    "爆裂枪": "Burst gun",
    "轻型自动步枪": "automatic rifle",
    "散弹枪": "Shotgun",
    "突击步枪": "Assault rifle",
    "51机枪": "Machine gun",
    "复古长枪": "Retro spear",
    "斯太尔": "TMP",
    "狙击步枪": "Sniper rifle",
    "内格夫轻机枪": "Negev",
    "重狙之王": "Barrett",
    "巴雷特M82A1": "Barrett M82A1",
    "蝎式冲锋枪": "Scorpion",
    "曼利夏AUG": "AUG-A2",
    "水路步枪": "ADS",
    "双管猎枪": "Double-barreled shotgun",
    "G3步枪": "HK G3",
    "AWP狙击": "AWP",
    "莫辛-纳甘": " Mosin-Nagant",
    "HK416步枪": "HK416",
    "AK5突击步枪": "AK5",
    "SAR 21突击步枪": "SAR 21",
    "墨西哥狂热": "Mexican gold",
    "鬼面南瓜": "Face rifle ",
    "喷子-深蓝": "Bule shotgun",
    "冬雪": "Winter snow",
    "疯狂电音": "Crazy Sound",
    "守望者": "Catcher",
    "幽灵": "Ghost",
}
!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 1;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            return this.Id = this.readInt(t),
            this.Name = this.readString(t),
            guns[this.Name] ? this.Name = guns[this.Name] : console.log(this.Name),
            this.Level = this.readInt(t),
            this.BulletType = this.readInt(t),
            this.BulletResource = this.readString(t),
            this.SnipeType = this.readInt(t),
            this.Sound = this.readString(t),
            this.X = this.readInt(t),
            this.Y = this.readInt(t),
            this.PosX = this.readInt(t),
            this.PosY = this.readInt(t),
            this.FireX = this.readInt(t),
            this.FireY = this.readInt(t),
            this.FireScale = this.readInt(t),
            this.Demage = this.readInt(t),
            this.BulletCount = this.readInt(t),
            this.Longth = this.readInt(t),
            this.BuyGold = this.readString(t),
            this.AddGold = this.readFloat(t),
            this.SellGold = this.readString(t),
            this.GoldInterval = this.readInt(t),
            this.EarnPerSecond = this.readString(t),
            this.SpeedUpEarn = this.readString(t),
            this.EarnSpace = this.readInt(t),
            this.StartJewel = this.readInt(t),
            this.AddJewel = this.readInt(t),
            this.AwardJewel = this.readInt(t),
            !0;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",Name=" + this.Name + ",Level=" + this.Level + ",BulletType=" + this.BulletType + ",BulletResource=" + this.BulletResource + ",SnipeType=" + this.SnipeType + ",Sound=" + this.Sound + ",X=" + this.X + ",Y=" + this.Y + ",PosX=" + this.PosX + ",PosY=" + this.PosY + ",FireX=" + this.FireX + ",FireY=" + this.FireY + ",FireScale=" + this.FireScale + ",Demage=" + this.Demage + ",BulletCount=" + this.BulletCount + ",Longth=" + this.Longth + ",BuyGold=" + this.BuyGold + ",AddGold=" + this.AddGold + ",SellGold=" + this.SellGold + ",GoldInterval=" + this.GoldInterval + ",EarnPerSecond=" + this.EarnPerSecond + ",SpeedUpEarn=" + this.SpeedUpEarn + ",EarnSpace=" + this.EarnSpace + ",StartJewel=" + this.StartJewel + ",AddJewel=" + this.AddJewel + ",AwardJewel=" + this.AwardJewel;
        }
        ,
        e.DATA_TYPE = 1,
        e;
    }(asgard.data.BaseStaticData);
    t.Gun = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 3;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            var e, i;
            for (this.Id = this.readInt(t),
            this.Hp = this.readInt(t),
            i = this.readByte(t),
            this.Skill = new Array(i),
            e = 0; e < i; e++)
                this.Skill[e] = this.readInt(t);
            return !0;
        }
        ,
        e.prototype.getSkillCount = function() {
            return this.Skill.length;
        }
        ,
        e.prototype.getSkillAt = function(t) {
            return 0 <= t && t < this.Skill.length ? this.Skill[t] : 0;
        }
        ,
        e.prototype.getSkill = function() {
            return this.Skill;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",Hp=" + this.Hp + ",Skill=" + this.Skill;
        }
        ,
        e.DATA_TYPE = 3,
        e;
    }(asgard.data.BaseStaticData);
    t.Monster = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 2;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            return this.Id = this.readInt(t),
            this.Name = this.readString(t),
            this.HeadPath = this.readString(t),
            this.BodyPath = this.readString(t),
            this.HeadHeight = this.readInt(t),
            this.HeadWidth = this.readInt(t),
            this.BodyHeight = this.readInt(t),
            this.BodyWidth = this.readInt(t),
            !0;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",Name=" + this.Name + ",HeadPath=" + this.HeadPath + ",BodyPath=" + this.BodyPath + ",HeadHeight=" + this.HeadHeight + ",HeadWidth=" + this.HeadWidth + ",BodyHeight=" + this.BodyHeight + ",BodyWidth=" + this.BodyWidth;
        }
        ,
        e.DATA_TYPE = 2,
        e;
    }(asgard.data.BaseStaticData);
    t.Player = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 4;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            return this.Id = this.readInt(t),
            this.Name = this.readString(t),
            this.Type = this.readInt(t),
            this.Defense = this.readInt(t),
            this.HeadPath = this.readString(t),
            !0;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",Name=" + this.Name + ",Type=" + this.Type + ",Defense=" + this.Defense + ",HeadPath=" + this.HeadPath;
        }
        ,
        e.DATA_TYPE = 4,
        e;
    }(asgard.data.BaseStaticData);
    t.Prop = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

var lock11s = {
    "默认解锁": 'Default Unlock',
    "视频解锁": 'Video Unlock',
    "签到解锁": 'Sign Unlock',
    "翻牌解锁": 'Flip Unlock'
}

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 9;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            return this.Id = this.readInt(t),
            this.Describe = this.readString(t),
            lock11s[this.Describe] ? this.Describe = lock11s[this.Describe] : console.log(this.Describe),
            this.Type = this.readInt(t),
            this.Condition = this.readInt(t),
            this.Name = this.readString(t),
            !0;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",Describe=" + this.Describe + ",Type=" + this.Type + ",Condition=" + this.Condition + ",Name=" + this.Name;
        }
        ,
        e.DATA_TYPE = 9,
        e;
    }(asgard.data.BaseStaticData);
    t.RoleSkin = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 7;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            return this.Id = this.readInt(t),
            this.Des = this.readString(t),
            this.Data60 = this.readInt(t),
            this.Data60_100 = this.readInt(t),
            this.DataMore100 = this.readInt(t),
            !0;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",Des=" + this.Des + ",Data60=" + this.Data60 + ",Data60_100=" + this.Data60_100 + ",DataMore100=" + this.DataMore100;
        }
        ,
        e.DATA_TYPE = 7,
        e;
    }(asgard.data.BaseStaticData);
    t.Skill = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 8;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            return this.Id = this.readInt(t),
            this.Resource = this.readString(t),
            this._desc = this.readString(t),
            !0;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",Resource=" + this.Resource + ",_desc=" + this._desc;
        }
        ,
        e.DATA_TYPE = 8,
        e;
    }(asgard.data.BaseStaticData);
    t.Sound = e;
}(data || (data = {})),
function(e) {
    var t = function() {
        function t() {}
        return t.prototype.createStaticData = function(t) {
            switch (t) {
            case 10:
                return new e.Endless();

            case 11:
                return new e.Task();

            case 2:
                return new e.Player();

            case 3:
                return new e.Monster();

            case 4:
                return new e.Prop();

            case 5:
                return new e.Chapter();

            case 6:
                return new e.Boss();

            case 7:
                return new e.Skill();

            case 8:
                return new e.Sound();

            case 9:
                return new e.RoleSkin();

            case 1:
                return new e.Gun();
            }
            return null;
        }
        ,
        t.findEndless = function(t) {
            return asgard.data.StaticDataManager.findData(10, t);
        }
        ,
        t.findTask = function(t) {
            return asgard.data.StaticDataManager.findData(11, t);
        }
        ,
        t.findPlayer = function(t) {
            return asgard.data.StaticDataManager.findData(2, t);
        }
        ,
        t.findMonster = function(t) {
            return asgard.data.StaticDataManager.findData(3, t);
        }
        ,
        t.findProp = function(t) {
            return asgard.data.StaticDataManager.findData(4, t);
        }
        ,
        t.findChapter = function(t) {
            return asgard.data.StaticDataManager.findData(5, t);
        }
        ,
        t.findBoss = function(t) {
            return asgard.data.StaticDataManager.findData(6, t);
        }
        ,
        t.findSkill = function(t) {
            return asgard.data.StaticDataManager.findData(7, t);
        }
        ,
        t.findSound = function(t) {
            return asgard.data.StaticDataManager.findData(8, t);
        }
        ,
        t.findRoleSkin = function(t) {
            return asgard.data.StaticDataManager.findData(9, t);
        }
        ,
        t.findGun = function(t) {
            return asgard.data.StaticDataManager.findData(1, t);
        }
        ,
        t;
    }();
    e.StaticDataFactory = t;
}(data || (data = {}));

var data;

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        Object.defineProperty(e.prototype, "DataType", {
            get: function() {
                return 11;
            },
            enumerable: !0,
            configurable: !0
        }),
        e.prototype.initialize = function(t) {
            return this.Id = this.readInt(t),
            this.Describe = this.readString(t),
            this.Number = this.readInt(t),
            this.Target = this.readInt(t),
            this.Tepe = this.readInt(t),
            this.Index = this.readInt(t),
            !0;
        }
        ,
        e.prototype.toString = function() {
            return "Id=" + this.Id + ",Describe=" + this.Describe + ",Number=" + this.Number + ",Target=" + this.Target + ",Tepe=" + this.Tepe + ",Index=" + this.Index;
        }
        ,
        e.DATA_TYPE = 11,
        e;
    }(asgard.data.BaseStaticData);
    t.Task = e;
}(data || (data = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._valid = !0,
            e._sprite = new Laya.Sprite(),
            e;
        }
        return __extends(t, i),
        Object.defineProperty(t.prototype, "Valid", {
            get: function() {
                return this._valid;
            },
            set: function(t) {
                this._valid = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "Sprite", {
            get: function() {
                return this._sprite;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.bindSystem = function(t) {
            this._spriteManager = t;
        }
        ,
        Object.defineProperty(t.prototype, "SpriteManager", {
            get: function() {
                return this._spriteManager;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.moveTo = function(t, e) {
            t == this._x && e == this._y || (i.prototype.moveTo.call(this, t, e),
            this._sprite.pos(this._x + this._offsetx, this._y + this._offsety));
        }
        ,
        t.prototype.offsetTo = function(t, e) {
            t == this._offsetx && e == this._offsety || (i.prototype.offsetTo.call(this, t, e),
            this._sprite.pos(this._x + this._offsetx, this._y + this._offsety));
        }
        ,
        t.prototype.hide = function() {
            this._sprite.removeSelf(),
            this.onHide();
        }
        ,
        Object.defineProperty(t.prototype, "Visible", {
            get: function() {
                return this._sprite && this._sprite.visible;
            },
            set: function(t) {
                this._sprite && (this._sprite.visible = t);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.doHit = function(t, e, i, n) {}
        ,
        t.prototype.onHide = function() {}
        ,
        t.prototype.dispose = function() {}
        ,
        t;
    }(t.SpriteInfo);
    t.BaseSprite = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(o) {
    var t = function(e) {
        function t() {
            var t = e.call(this, o.SpriteType.FlyCoin) || this;
            return t.TIP_MAX_STEP = 8,
            t.TIP_STEP_FACTOR = .4,
            t.TIP_STEP_DELAY = 40,
            t.FLYING_SPEED = .9,
            t.FLYING_DELAY = 180,
            t._reset(),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this._flyingState = 0,
            this._flyingTime = 0,
            this._coinCount = 0,
            this._explodx = 0,
            this._explody = 0,
            this._targetx = 0,
            this._targety = 0,
            this._explodDampx = 0,
            this._explodDampy = 0,
            this._stateDelay = 0,
            this._coinScaleX = 0,
            this._callBack = null;
        }
        ,
        t.prototype.buildSprite = function(t, e, i, n, a, s) {
            var r;
            this._coinCount = t,
            this._targetx = n,
            this._targety = a,
            this._explodx = e + 100 * (Math.random() - .5) + 20,
            this._explody = i + 100 * (Math.random() - .5) + 20,
            this._flyingTime = 0,
            this._explodDampx = 0,
            this._explodDampy = 0,
            this._stateDelay = 0,
            this._callBack = s,
            r = Laya.loader.getRes(o.SpriteConst.CHEST_COIN_RES),
            this._coinW = Math.floor(.5 * r.width),
            this._coinH = Math.floor(.5 * r.height),
            this.Sprite.graphics.cleanByTexture(r, -this._coinW, -this._coinH, this._coinW + this._coinW, this._coinH + this._coinH),
            this.moveTo(e, i),
            this._flyingState = 1,
            this.calcMoving(this._explodx, this._explody, this.FLYING_SPEED, !0);
        }
        ,
        t.prototype.calcMoving = function(t, e, i, n) {
            var a = t - this._x
              , s = e - this._y;
            if (1e-4 < Math.abs(a) || 1e-4 < Math.abs(s)) {
                var r = i;
                n && (r *= .5),
                r < .1 && (r = .1);
                var o = Math.sqrt(a * a + s * s);
                this._flyingTime = o / r,
                this._speedX = a / this._flyingTime,
                this._speedY = s / this._flyingTime,
                n ? (this._explodDampx = -this._speedX / this._flyingTime,
                this._explodDampy = -this._speedY / this._flyingTime,
                this._speedX = 2 * this._speedX,
                this._speedY = 2 * this._speedY) : (this._explodDampx = 0,
                this._explodDampy = 0);
            } else
                this._flyingTime = 0;
        }
        ,
        t.prototype.onFrame = function(t, e) {
            switch (this._flyingState) {
            case 1:
                if (this._flyingTime > e) {
                    this._flyingTime -= e;
                    var i = this._speedX + this._explodDampx * e
                      , n = this._speedY + this._explodDampy * e
                      , a = (this._speedX + i) * e * .5
                      , s = (this._speedY + n) * e * .5;
                    this.moveTo(this._x + a, this._y + s),
                    this._speedX = i,
                    this._speedY = n;
                } else
                    this._flyingState = 2,
                    this._stateDelay = this.FLYING_DELAY;
                break;

            case 2:
                this._stateDelay -= e,
                this._stateDelay < 200 * Math.random() && (this._coinScaleX += .2),
                this.Sprite.scaleX = 1 - this._coinScaleX,
                this._stateDelay <= 0 && (this._flyingState = 3,
                this.calcMoving(this._targetx, this._targety, this.FLYING_SPEED, !1));
                break;

            case 3:
                this._flyingTime > e ? (this._flyingTime < 15 * e && (this.Sprite.scaleX = 1),
                this._flyingTime -= e,
                this._width -= 1,
                this.moveTo(this._x + this._speedX * e, this._y + this._speedY * e)) : (this._flyingState = 4,
                this._stateDelay = this.FLYING_DELAY,
                this._speedX = 0,
                this._speedY = 0);
                break;

            case 4:
                this._stateDelay -= e,
                this._stateDelay <= 0 && (this._flyingState = 0,
                this._valid = !1,
                this._callBack.run(),
                this.hide());
            }
        }
        ,
        t;
    }(o.BaseSprite);
    o.SpriteFlyingCoin = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this, i.SpriteType.Blood) || this;
            return t._reset(),
            t._gameModule = asgard.module.ModuleManager.getModule(i.MODULE_GAME),
            t._playerModule = asgard.module.ModuleManager.getModule(i.MODULE_PLAYER),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this.IsStartLeft = !0,
            this._targetx = 0,
            this._targety = 0,
            this.isMoving = !1,
            this.endY = 0,
            this.randX = .5,
            this.startYSpeed = 0,
            this.isGold = !1;
        }
        ,
        t.prototype.buildSprite = function(t, e, i, n) {
            if (this.bloodImg = new Laya.Image(),
            this.bloodImg.skin = t,
            this.Sprite.addChild(this.bloodImg),
            "game/金币.png" != t)
                if (Math.random() < .3 || n) {
                    this.startSpeed = "game/血液.png" == t ? -2800 - 500 * Math.random() : -2e3 - 600 * Math.random();
                    var a = .45 * Math.random() + .3;
                    this.bloodImg.size(18 * a, 18 * a);
                } else {
                    this.startSpeed = -900 - 700 * Math.random();
                    a = .55 * Math.random() + .33;
                    this.bloodImg.size(18 * a, 18 * a);
                }
            else
                this.startSpeed = -950 - 400 * Math.random(),
                this.isGold = !0;
            this.startYSpeed = this.startSpeed,
            this.randX = Math.random(),
            this.Sprite.pivot(.5 * this.bloodImg.width, .5 * this.bloodImg.width),
            this._gameModule.CurrentIsStartLeft ? (this.IsStartLeft = !0,
            this.endY = this._gameModule.CurrentLeftStep.Sprite.y - .5 * this.bloodImg.width) : (this.IsStartLeft = !1,
            this.endY = this._gameModule.CurrentRightStep.Sprite.y - .5 * this.bloodImg.width),
            this.moveTo(e, i),
            this.isMoving = !0;
        }
        ,
        t.prototype.onFrame = function(t, e) {
            var i = this;
            if (this.isMoving) {
                var n = 9.3 * e;
                this.isGold && (n = 4.8 * e);
                var a = void 0;
                a = this.isGold ? .3 + .3 * Math.random() : this.startYSpeed < -2e3 ? this._playerModule.RoleInfo.Chapter <= 9 ? .27 + .55 * Math.random() : .45 + .2 * Math.random() : this._playerModule.RoleInfo.Chapter <= 9 ? this.randX < .6 ? .23 + .6 * Math.random() : .5 + 1 * Math.random() : .3 + 1.3 * Math.random(),
                this.IsStartLeft ? this._x -= e * a : this._x += e * a;
                var s = this._y + Math.floor((this.startSpeed + .5 * n) * e * .001);
                if (s > this.endY && (s = this.endY,
                this.isMoving = !1),
                this.startSpeed += n,
                this.moveTo(this._x, s),
                0 == this.isMoving)
                    if (this.isGold) {
                        var r = this._x
                          , o = s
                          , h = 1;
                        h = this.IsStartLeft ? -1 : 1,
                        Laya.Tween.to(this.Sprite, {
                            x: r + 40 * h,
                            y: o - 25
                        }, 150, Laya.Ease.circOut, Laya.Handler.create(this, function() {
                            Laya.Tween.to(i.Sprite, {
                                x: r + 80 * h,
                                y: o
                            }, 130, null, Laya.Handler.create(i, function() {
                                Laya.Tween.to(i.Sprite, {
                                    x: r + 170 * h,
                                    y: o,
                                    rotation: -180
                                }, 1200, Laya.Ease.circOut);
                            }));
                        }));
                    } else
                        this.IsStartLeft ? Laya.Tween.to(this.Sprite, {
                            x: this._x - 10 - 220 * Math.random(),
                            rotation: -360
                        }, 500 + 2200 * Math.random(), Laya.Ease.circOut) : Laya.Tween.to(this.Sprite, {
                            x: this._x + 10 + 220 * Math.random(),
                            rotation: 360
                        }, 500 + 2200 * Math.random(), Laya.Ease.circOut);
            }
        }
        ,
        t;
    }(i.BaseSprite);
    i.SpriteBlood = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(u) {
    var t = function(e) {
        function t() {
            var t = e.call(this, u.SpriteType.Bullet) || this;
            return t._gameModule = asgard.module.ModuleManager.getModule(u.MODULE_GAME),
            t._reset(),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this._targetx = 0,
            this._targety = 0,
            this.BulletImg = null,
            this.isFlying = !1,
            this.speedX = 0,
            this.speedY = 0,
            this.stepPointArr = [],
            this.Damage = 0,
            this.isOut = !1,
            this.bulletFrom = u.BulletFromType.Player;
        }
        ,
        t.prototype.buildSprite = function(t, e, i, n, a, s) {
            if (this.BulletImg = new Laya.Image(),
            this.bulletFrom = e,
            this.bulletFrom == u.BulletFromType.Monster) {
                if (this.BulletImg.skin = "gunGame/子弹1.png",
                this._gameModule.CurrentMonster.IsBoss) {
                    var r = data.StaticDataFactory.findBoss(this._gameModule.CurrentMonster.MonsterId);
                    r && 0 < r.GunImg.length && 0 < r.BulletImg.length && (this.BulletImg.skin = "monster/" + r.BulletImg + ".png",
                    this.BulletImg.scaleX = -1);
                }
            } else
                this.BulletImg.skin = this._gameModule.PlayerGun.BulletResource;
            this.BulletImg.pivot(this.BulletImg.width, .5 * this.BulletImg.height),
            this.Sprite.addChild(this.BulletImg),
            this.moveTo(i, n),
            this.Damage = this._gameModule.PlayerGun.Damage,
            this.speed = 1.95,
            this._targetx = a,
            this._targety = s;
            var o = a - this._x
              , h = s - this._y
              , l = Math.sqrt(o * o + h * h) / this.speed;
            this.speedX = o / l,
            this.speedY = h / l,
            this.isFlying = !0,
            this.stepPointArr = this._gameModule.CurrentStepPointArr,
            this.monsterBodyPoint = this._gameModule.MonsterBodyPoint,
            this.monsterHeadPoint = this._gameModule.MonsterHeadPoint;
        }
        ,
        t.prototype.removeBullet = function() {
            this.Valid = !1,
            this.isFlying = !1,
            this._reset(),
            this.Sprite.destroy();
        }
        ,
        t.prototype.ShootProtectSkill = function(t) {
            var e = this._gameModule.CurrentMonster;
            switch (t) {
            case u.MonsterSkill.Shield:
                e.IsBoss ? (e.DefenseHp -= this._gameModule.PlayerGun.Damage,
                e.DefenseHp <= 0 ? (e.DefenseBgImg.visible = !1,
                e.PropFly(e.ShieldImg),
                e.HasShield = !1) : e.DefenseHpImg.width = e.DefenseHp / e.BaseDefenseHp * 138) : (e.PropFly(e.ShieldImg),
                e.HasShield = !1);
                break;

            case u.MonsterSkill.Helmet:
                e.PropFly(e.HelmetImg),
                e.HasHelmet = !1;
                break;

            case u.MonsterSkill.ManaShield:
                e.IsBoss ? (e.DefenseHp -= this._gameModule.PlayerGun.Damage,
                e.DefenseHp <= 0 ? (e.DefenseBgImg.visible = !1,
                e.ManaShieldImg.removeSelf(),
                e.HasManaShield = !1) : e.DefenseHpImg.width = e.DefenseHp / e.BaseDefenseHp * 138) : (e.ManaShieldImg.removeSelf(),
                e.HasManaShield = !1);
                break;

            case u.MonsterSkill.UnBeatable:
            case u.MonsterSkill.GlassShield:
                break;

            case u.MonsterSkill.Tank:
                e.IsBoss && (e.DefenseHp -= this._gameModule.PlayerGun.Damage,
                e.DefenseHp <= 0 ? (e.DefenseBgImg.visible = !1,
                e.HasTank = !1,
                Laya.Tween.to(e.TankBodyImg, {
                    alpha: 0
                }, 300, null, Laya.Handler.create(this, function() {
                    e.TankBodyImg.removeSelf();
                })),
                Laya.Tween.to(e.TankHeadImg, {
                    alpha: 0
                }, 300, null, Laya.Handler.create(this, function() {
                    e.TankHeadImg.removeSelf();
                })),
                Laya.Tween.to(e.Body, {
                    y: -1 * e.Body.height
                }, 200, null, Laya.Handler.create(this, function() {})),
                Laya.Tween.to(e.Head, {
                    y: -1 * e.Body.height - e.Head.height + 1
                }, 200, null, Laya.Handler.create(this, function() {})),
                this._gameModule.CurrentMonsterGun.showGun()) : e.DefenseHpImg.width = e.DefenseHp / e.BaseDefenseHp * 138);
            }
            u.SystemHelper.playSoundById(u.SoundId.HitShield),
            this._gameModule.MonsterUseSkill = !0,
            this._gameModule.ShootBulletCount++,
            this.removeBullet(),
            this.blood(),
            asgard.events.EventsDispatcher.eventNotify(u.GameEvents.EVENT_SHOOT_FIRE);
        }
        ,
        t.prototype.ShootMonster = function(t, e, i) {
            var n = t ? 2 : 1;
            if (this._gameModule.CurrentMonster.Hp -= this.Damage * n,
            this._gameModule.ShootDamage += this.Damage * n,
            this.blood(),
            this._gameModule.ShootBulletCount++,
            asgard.events.EventsDispatcher.eventNotify(u.GameEvents.EVENT_MONSTER_HP_CHANGE, this.Damage * n),
            this._gameModule.CurrentMonster.Hp <= 0) {
                t ? (this._gameModule.HeadShootTimes++,
                asgard.events.EventsDispatcher.eventNotify(u.GameEvents.EVENT_SHOW_HIT_EFFECT, 1)) : asgard.events.EventsDispatcher.eventNotify(u.GameEvents.EVENT_SHOW_HIT_EFFECT, 2);
                var a = t ? u.DieType.ShootHead : u.DieType.ShootBody;
                asgard.events.EventsDispatcher.eventNotify(u.GameEvents.EVENT_MONSTER_DIE, a),
                this._gameModule.ShootBulletCount = 0;
            } else
                asgard.events.EventsDispatcher.eventNotify(u.GameEvents.EVENT_SHOW_HIT_EFFECT2);
            this.removeBullet();
        }
        ,
        t.prototype.ShootMonsterNot = function() {
            this._gameModule.ShootBulletCount++,
            this.isOut || (this.blood(),
            asgard.events.EventsDispatcher.eventNotify(u.GameEvents.EVENT_SHOOT_STEP)),
            this.removeBullet();
        }
        ,
        t.prototype.blood = function() {
            if (this._gameModule.CurrentIsStartLeft) {
                var t = u.CommonUtil.getGlobalByPoint(this._gameModule.CurrentLeftStep.Sprite);
                this._gameModule.ShootEndY = this.Sprite.y - t.y + this._gameModule.CurrentLeftStep.Sprite.y,
                this._gameModule.ShootEndX = this.X;
            } else
                this._gameModule.ShootEndY = this.Sprite.y - u.CommonUtil.getGlobalByPoint(this._gameModule.CurrentRightStep.Sprite).y + this._gameModule.CurrentRightStep.Sprite.y,
                this._gameModule.ShootEndX = this.X;
        }
        ,
        t.prototype.onFrame = function(t, e) {
            if (this.isFlying) {
                if (this.moveTo(this.X + this.speedX * e, this.Y + this.speedY * e),
                this.bulletFrom == u.BulletFromType.Player) {
                    for (var i = 0; i < this.stepPointArr.length; i++) {
                        var n = this.stepPointArr[i];
                        if (this.Y + 5 > n.y && this.X > n.x && this._gameModule.CurrentIsStartLeft)
                            return void this.ShootMonsterNot();
                        if (this.Y + 5 > n.y && this.X < n.x && !this._gameModule.CurrentIsStartLeft)
                            return void this.ShootMonsterNot();
                    }
                    var a = u.CommonUtil.getGlobalByPoint(this._gameModule.CurrentMonster.Head)
                      , s = u.CommonUtil.getGlobalByPoint(this._gameModule.CurrentMonster.Body);
                    if ((this.Y + 7 > a.y && this.Y < s.y && this.X - 3 > a.x && this._gameModule.CurrentIsStartLeft || this.Y + 7 > a.y && this.Y < s.y && this.X - 3 < a.x && !this._gameModule.CurrentIsStartLeft) && !this._gameModule.CurrentMonster.IsFlashing)
                        return void (0 < this._gameModule.CurrentMonster.Hp && (this._gameModule.CurrentMonster.HasHelmet ? this.ShootProtectSkill(u.MonsterSkill.Helmet) : this._gameModule.CurrentMonster.HasManaShield ? this.ShootProtectSkill(u.MonsterSkill.ManaShield) : this._gameModule.CurrentMonster.HasUnBeatable ? this.ShootProtectSkill(u.MonsterSkill.UnBeatable) : this._gameModule.CurrentMonster.HasTank ? this.ShootProtectSkill(u.MonsterSkill.Tank) : this._gameModule.CurrentMonster.HasGlassShield && this._gameModule.CurrentMonster.IsGlassing ? this.ShootProtectSkill(u.MonsterSkill.GlassShield) : (u.CommonUtil.Log("爆头"),
                        this.ShootMonster(!0, this.X, this.Y),
                        u.PlatForm.getInstance().vibrateShort(),
                        u.SystemHelper.playSoundById(u.SoundId.HeadShoot, 1, .7)),
                        this._gameModule.CurrentMonster.hitBack()));
                    if ((this.Y + 7 > s.y && this.X - 3 > s.x && this._gameModule.CurrentIsStartLeft || this.Y + 7 > s.y && this.X - 3 < s.x && !this._gameModule.CurrentIsStartLeft) && !this._gameModule.CurrentMonster.IsFlashing)
                        return void (0 < this._gameModule.CurrentMonster.Hp && (this._gameModule.CurrentMonster.HasShield ? this.ShootProtectSkill(u.MonsterSkill.Shield) : this._gameModule.CurrentMonster.HasManaShield ? this.ShootProtectSkill(u.MonsterSkill.ManaShield) : this._gameModule.CurrentMonster.HasUnBeatable ? this.ShootProtectSkill(u.MonsterSkill.UnBeatable) : this._gameModule.CurrentMonster.HasTank ? this.ShootProtectSkill(u.MonsterSkill.Tank) : this._gameModule.CurrentMonster.HasGlassShield && this._gameModule.CurrentMonster.IsGlassing ? this.ShootProtectSkill(u.MonsterSkill.GlassShield) : (u.CommonUtil.Log("击中身子"),
                        this.ShootMonster(!1, this.X, this.Y),
                        u.SystemHelper.playSoundById(u.SoundId.BodyShoot, 1, .7)),
                        this._gameModule.CurrentMonster.hitBack()));
                } else if (this.Y + 5 > this._gameModule.PlayerPoint.y && this.X < this._gameModule.PlayerPoint.x && this._gameModule.CurrentIsStartLeft || this.Y + 5 > this._gameModule.PlayerPoint.y && this.X > this._gameModule.PlayerPoint.x && !this._gameModule.CurrentIsStartLeft)
                    return asgard.events.EventsDispatcher.eventNotify(u.GameEvents.EVENT_PLAYER_HITED),
                    void this.removeBullet();
                (750 < this.X || this.X < -30 || this.Y < -10) && (this.bulletFrom == u.BulletFromType.Player ? (this.isOut = !0,
                this.ShootMonsterNot()) : (asgard.events.EventsDispatcher.eventNotify(u.GameEvents.EVENT_PLAYER_AIM),
                this.removeBullet()));
            }
        }
        ,
        t;
    }(u.BaseSprite);
    u.SpriteBullet = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this, i.SpriteType.Gun) || this;
            return t.SHOOT_SCOPE_IMG = "game/瞄准角度.png",
            t.SHOOT_LINE_IMG = "game/瞄准线.png",
            t.SHOOT_ANGLE = 50,
            t.SHOOT_ANGLE_TIME = 1200,
            t._gameModule = asgard.module.ModuleManager.getModule(i.MODULE_GAME),
            t._reset(),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this._targetx = 0,
            this._targety = 0,
            this._maskStartRotation = 0,
            this._rotationSpeed = 0,
            this._aimUpTime = 0,
            this._aimDownTime = 0,
            this.ShootLongth = 0,
            this.IsAiming = !1,
            this.FirePoint = new Laya.Point(),
            this._fireEffect = null,
            this.BulletCount = 1,
            this.ShootType = 0,
            this.spritex = 0,
            this.spritey = 0,
            this.AimType = 0;
        }
        ,
        t.prototype.buildSprite = function(t, e, i) {
            var n = data.StaticDataFactory.findGun(t + 1e3);
            this.ShootLongth = 110,
            this.Damage = 1,
            this.BulletResource = "gunGame/子弹1.png";
            var a = 20
              , s = 8
              , r = 0
              , o = 0;
            n && (this.Damage = n.Demage,
            this.BulletCount = n.BulletCount,
            this.ShootType = n.BulletType,
            this.FireSound = "sound/" + n.Sound + ".mp3",
            this.ShootLongth = 110 + 18 * n.Longth,
            this.BulletResource = "gunGame/子弹" + n.BulletResource + ".png",
            a = n.PosX,
            s = n.PosY,
            r = n.X,
            o = n.Y),
            this.ShootScope = new Laya.Image(),
            this.ShootScope.pos(r, o),
            this.ShootScope.skin = this.SHOOT_SCOPE_IMG,
            this.ShootScope.sizeGrid = "5,5,5,5",
            this.ShootScope.anchorX = 0,
            this.ShootScope.anchorY = 1,
            this.ShootScope.width = 1.5 * this.ShootLongth,
            this.ShootScope.height = 1.5 * this.ShootLongth,
            this.Sprite.addChild(this.ShootScope),
            this.ShootScope.visible = !1,
            this.ShootScopeMask = new Laya.Sprite(),
            this.ShootScopeMask.graphics.drawPie(r, o, this.ShootLongth, 0, 90, "#ff0000"),
            this.ShootScopeMask.y = 1.5 * this.ShootLongth,
            this.ShootScopeMask.rotation = 0,
            this.ShootScope.mask = this.ShootScopeMask,
            this.Line = new Laya.Image(),
            this.Line.width = this.ShootLongth + 5,
            this.Line.skin = this.SHOOT_LINE_IMG,
            this.ShootScope.sizeGrid = "0,10,0,10",
            this.Line.pos(r, o),
            this.Line.visible = !1,
            this.Sprite.addChild(this.Line),
            this.GunImg = new Laya.Image(),
            this.GunImg.skin = "gunGame/gungame" + t + ".png",
            this.GunImg.pivot(a, s),
            this.GunImg.pos(r, o),
            this.Sprite.addChild(this.GunImg),
            this.ShootPoint = new Laya.Image(),
            this.ShootPoint.pos(this.GunImg.width - this.GunImg.pivotX, this.GunImg.pivotY),
            this.GunImg.addChild(this.ShootPoint),
            this._fireEffect = new Laya.Animation(),
            this._fireEffect.loadAnimation("ani/Fire.ani"),
            this.ShootPoint.addChild(this._fireEffect),
            this.moveTo(e, i),
            this._rotationSpeed = this.SHOOT_ANGLE / this.SHOOT_ANGLE_TIME,
            this.spritex = this.Sprite.x,
            this.spritey = this.Sprite.y;
        }
        ,
        t.prototype.ChangeGun = function(t) {
            var e = data.StaticDataFactory.findGun(t + 1e3);
            this.ShootLongth = 110,
            this.Damage = 1,
            this.BulletResource = "gunGame/子弹1.png";
            var i = 20
              , n = 8
              , a = 0
              , s = 0;
            e && (this.Damage = e.Demage,
            this.BulletCount = e.BulletCount,
            this.ShootType = e.BulletType,
            this.FireSound = "sound/" + e.Sound + ".mp3",
            this.ShootLongth = 110 + 21 * e.Longth,
            this.BulletResource = "gunGame/子弹" + e.BulletResource + ".png",
            i = e.PosX,
            n = e.PosY,
            a = e.X,
            s = e.Y),
            this.ShootScope = new Laya.Image(),
            this.ShootScope.pos(a, s),
            this.ShootScope.skin = this.SHOOT_SCOPE_IMG,
            this.ShootScope.sizeGrid = "5,5,5,5",
            this.ShootScope.anchorX = 0,
            this.ShootScope.anchorY = 1,
            this.ShootScope.width = 1.5 * this.ShootLongth,
            this.ShootScope.height = 1.5 * this.ShootLongth,
            this.ShootScope.visible = !1,
            this.ShootScopeMask = new Laya.Sprite(),
            this.ShootScopeMask.graphics.drawPie(a, s, this.ShootLongth, 0, 90, "#ff0000"),
            this.ShootScopeMask.y = 1.5 * this.ShootLongth,
            this.ShootScopeMask.rotation = 0,
            this.ShootScope.mask = this.ShootScopeMask,
            this.Line = new Laya.Image(),
            this.Line.width = this.ShootLongth + 10,
            this.Line.skin = this.SHOOT_LINE_IMG,
            this.ShootScope.sizeGrid = "0,10,0,10",
            this.Line.pos(a, s),
            this.Line.visible = !1,
            this.GunImg = new Laya.Image(),
            this.GunImg.skin = "gunGame/gungame" + t + ".png",
            this.GunImg.pivot(i, n),
            this.GunImg.pos(a, s),
            this.ShootPoint = new Laya.Image(),
            this.ShootPoint.pos(this.GunImg.width - this.GunImg.pivotX + 20, this.GunImg.pivotY),
            this._fireEffect = new Laya.Animation(),
            this._fireEffect.loadAnimation("ani/Fire.ani"),
            this._rotationSpeed = this.SHOOT_ANGLE / this.SHOOT_ANGLE_TIME,
            this.spritex = this.Sprite.x,
            this.spritey = this.Sprite.y;
        }
        ,
        t.prototype.StopAim = function() {
            this.IsAiming = !1,
            this._gameModule.IsSnipe && Laya.timer.once(650, this, function() {
                asgard.events.EventsDispatcher.eventNotify(i.GameEvents.EVENT_SHOOT_MODE_CHANGE);
            }),
            this.clearAim(),
            this._gameModule.CurrentMonster && this._gameModule.CurrentMonster.StartSkill();
        }
        ,
        t.prototype.clearAim = function() {
            this.AimType = 0,
            this.ShootScope.visible = !1,
            this.Line.visible = !1,
            this._aimUpTime = 0,
            this.GunImg.rotation = 0,
            this.Line.rotation = 0,
            this._maskStartRotation = 0;
        }
        ,
        t.prototype.GunAim = function() {
            this.IsAiming = !0,
            this._gameModule.IsSnipe ? asgard.events.EventsDispatcher.eventNotify(i.GameEvents.EVENT_SHOOT_MODE_CHANGE) : (this.ShootScope.visible = !0,
            this.Line.visible = !0,
            this._maskStartRotation = 0,
            this.ShootScopeMask.graphics.clear(),
            this.ShootScopeMask.graphics.drawPie(0, 0, this.ShootLongth, this._maskStartRotation, 0, "#ff0000"),
            this.AimType = 1,
            this._aimUpTime = this.SHOOT_ANGLE_TIME);
        }
        ,
        t.prototype.Fire = function() {
            this.ShootAngle = this._maskStartRotation;
            Math.abs(this._maskStartRotation);
            var t = i.CommonUtil.getGlobalByPoint(this.ShootPoint);
            this.StopAim(),
            this.FirePoint = t,
            i.CommonUtil.Log("pointX:  ", t.x),
            i.CommonUtil.Log("pointY:  ", t.y),
            this._fireEffect.play(0, !1),
            this.GunRecoil();
        }
        ,
        t.prototype.GunRecoil = function() {
            var t = this;
            this.GunImg.rotation = this.ShootAngle,
            Laya.Tween.to(this.Sprite, {
                x: this.spritex - 10,
                y: this.spritey
            }, 25, null, new Laya.Handler(this,function() {
                Laya.Tween.to(t.Sprite, {
                    x: t.spritex + 10,
                    y: t.spritey
                }, 25, null, new Laya.Handler(t,function() {
                    Laya.timer.once(100, t, t.DownGun);
                }
                ));
            }
            ));
        }
        ,
        t.prototype.DownGun = function() {
            var t = this;
            Laya.Tween.to(this.GunImg, {
                rotation: 0
            }, 150, null, new Laya.Handler(this,function() {
                t.ShootAngle = 0;
            }
            ));
        }
        ,
        t.prototype.onFrame = function(t, e) {
            1 == this.AimType ? 0 < this._aimUpTime ? (this._aimUpTime -= e,
            this._maskStartRotation -= this._rotationSpeed * e,
            this.ShootScopeMask.graphics.clear(),
            this.ShootScopeMask.graphics.drawPie(0, 0, this.ShootLongth, this._maskStartRotation, 0, "#ff0000"),
            this.GunImg.rotation = this._maskStartRotation,
            this.Line.rotation = this._maskStartRotation) : (this.ShootScopeMask.graphics.clear(),
            this.ShootScopeMask.graphics.drawPie(0, 0, this.ShootLongth, 0 - this.SHOOT_ANGLE, 0, "#ff0000"),
            this.GunImg.rotation = 0 - this.SHOOT_ANGLE,
            this.Line.rotation = 0 - this.SHOOT_ANGLE,
            this._maskStartRotation = 0 - this.SHOOT_ANGLE,
            this.AimType = 2,
            this._aimDownTime = this.SHOOT_ANGLE_TIME) : 2 == this.AimType && (0 < this._aimDownTime ? (this._aimDownTime -= e,
            this._maskStartRotation += this._rotationSpeed * e,
            this.ShootScopeMask.graphics.clear(),
            this.ShootScopeMask.graphics.drawPie(0, 0, this.ShootLongth, this._maskStartRotation, 0, "#ff0000"),
            this.GunImg.rotation = this._maskStartRotation,
            this.Line.rotation = this._maskStartRotation) : (this.AimType = 1,
            this._aimUpTime = this.SHOOT_ANGLE_TIME,
            this.GunAim()));
        }
        ,
        t;
    }(i.BaseSprite);
    i.SpriteGun = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this, i.SpriteType.ScoreTip) || this;
            return t._reset(),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this._remainTime = 0,
            this._scaleTime = 0,
            this._offsety = 0,
            this._mapx = 0,
            this._locatey = 0,
            this._scaleBig = 0,
            this._scaleSmall = 0,
            this._sprite.scale(1, 1),
            this._sprite.pivot(0, 0);
        }
        ,
        t.prototype.buildSprite = function(t, e, i) {
            this._scaleBig = .1,
            this._sprite.scaleX = 1,
            this._sprite.scaleY = 1;
            this._sprite.pivot(100, 50);
            var n = new Laya.Label();
            n.text = "-" + t,
            n.x = 0,
            n.y = 0,
            n.width = 200,
            n.height = 100,
            n.align = "center",
            n.valign = "middle",
            n.fontSize = 35,
            n.bold = !0,
            n.color = "#ff0000",
            this.Sprite.addChild(n),
            this.moveTo(e, i),
            this._remainTime = 400,
            this._scaleTime = 150;
        }
        ,
        t.prototype.onFrame = function(t, e) {
            0 < this._scaleTime && (this._scaleTime -= e,
            this._sprite.scaleX += this._scaleBig,
            this._sprite.scaleY += this._scaleBig),
            this._remainTime -= e,
            0 < this._remainTime && (this._sprite.y -= 2),
            this._remainTime <= 0 && (this._valid = !1,
            this.hide());
        }
        ,
        t;
    }(i.BaseSprite);
    i.SpriteScoreTip = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(d) {
    var t = function(e) {
        function t() {
            var t = e.call(this, d.SpriteType.Monster) || this;
            return t._gameModule = asgard.module.ModuleManager.getModule(d.MODULE_GAME),
            t._playerModule = asgard.module.ModuleManager.getModule(d.MODULE_PLAYER),
            t._reset(),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this._monsterId = 0,
            this.FlyingState = 0,
            this._targetx = 0,
            this._targety = 0,
            this._stateDelay = 0,
            this.Head = null,
            this.Body = null,
            this.Hp = 0,
            this.IsBoss = !1,
            this.HasHelmet = !1,
            this.HasShield = !1,
            this.HasFly = !1,
            this.HasJump = !1,
            this.HasManaShield = !1,
            this.HasAddBlood = !1,
            this.HasUnBeatable = !1,
            this.HasGlassShield = !1,
            this.HasBlackHole = !1,
            this.isWalking = !1,
            this.FlyDelay = 0,
            this.FlyDelayTime = 0,
            this.FlashDelay = 0,
            this.FlashDelayTime = 0,
            this.IsFlashing = !1,
            this.GlassDelay = 0,
            this.GlassDelayTime = 0,
            this.IsGlassing = !1,
            this.HoleDelay = 0,
            this.HoleDelayTime = 0,
            this.IsHoleing = !1,
            this.JumpDelay = 0,
            this.JumpDelayTime = 0,
            this.DefenseHp = 0,
            this.BaseDefenseHp = 0,
            this.AddHp = 0,
            this.Name = "",
            this.UnBeatTimes = 0,
            this.startSpeed = 0,
            this.isDieDowning = !1,
            this.IsDie = !1,
            this.IsHeadShootDie = !1;
        }
        ,
        Object.defineProperty(t.prototype, "MonsterId", {
            get: function() {
                return this._monsterId;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.buildSprite = function(t, e, i, n) {
            var a;
            if (this.Body = new Laya.Image(),
            this.Head = new Laya.Image(),
            this.Sprite.addChild(this.Body),
            this.Sprite.addChild(this.Head),
            (this._monsterId = t) < 100) {
                if (this.IsBoss = !1,
                a = d.DataUtils.getMonsterDataById(t)) {
                    if (this.Hp = a.Hp,
                    this._gameModule.IsSnipe)
                        this._gameModule.PlayerGun.ShootType == d.ShootType.JiGuanQiang && (this.Hp = 2 * this._gameModule.PlayerGun.Damage);
                    else {
                        this.Hp = 1 + .5 * this._playerModule.RoleInfo.Chapter,
                        21 < this.Hp && (this.Hp = 21);
                        var s = data.StaticDataFactory.findChapter(this._playerModule.RoleInfo.Chapter);
                        s && (this.Hp = s.MonsterHp);
                    }
                    var r = [];
                    if (0 <= a.getSkill().indexOf(d.MonsterSkill.Fly)) {
                        var o = Math.floor(3 * Math.random());
                        this.Body.skin = "monster/" + d.SpriteConst.FlyMonsterImgArr[o] + "shen.png",
                        this.Head.skin = "monster/" + d.SpriteConst.FlyMonsterImgArr[o] + "tou.png";
                    } else if (0 <= a.getSkill().indexOf(d.MonsterSkill.Helmet)) {
                        o = Math.floor(2 * Math.random());
                        this.Body.skin = "monster/" + d.SpriteConst.monsterHelmetImgArr[o] + "shen.png",
                        this.Head.skin = "monster/" + d.SpriteConst.monsterHelmetImgArr[o] + "tou.png",
                        this.HelmetImg = new Laya.Image(),
                        this.HelmetImg.x = (this.HelmetImg.skin = 0 == o ? "monster/xiaoguai3-kui.png" : "monster/xiaoguai4-kui.png",
                        .5 * this.HelmetImg.width);
                    } else {
                        o = Math.floor(Math.random() * d.SpriteConst.monsterImgArr.length);
                        this.Body.skin = "monster/" + d.SpriteConst.monsterImgArr[o] + "shen.png",
                        this.Head.skin = "monster/" + d.SpriteConst.monsterImgArr[o] + "tou.png";
                    }
                    r = a.getSkill();
                    for (var h = 0; h < r.length; h++) {
                        switch (l = r[h]) {
                        case d.MonsterSkill.Shield:
                            this.HasShield = !0,
                            this.ShieldImg = new Laya.Image(),
                            1 == this._gameModule.HelmetId ? this.ShieldImg.skin = "monster/小怪盾牌.png" : this.ShieldImg.skin = "monster/小怪盾牌2.png",
                            this.ShieldImg.height = this.Body.height - 10,
                            this.ShieldImg.y = .5 * this.ShieldImg.height,
                            this.ShieldImg.x = .5 * this.ShieldImg.width - 25,
                            this.ShieldImg.pivot(.5 * this.ShieldImg.width, .5 * this.ShieldImg.height - 5),
                            this.Body.addChild(this.ShieldImg);
                            break;

                        case d.MonsterSkill.Helmet:
                            this.HasHelmet = !0,
                            this.HelmetImg.bottom = 0,
                            this.HelmetImg.pivot(.5 * this.HelmetImg.width, .5 * this.HelmetImg.height),
                            this.Head.addChild(this.HelmetImg);
                            break;

                        case d.MonsterSkill.Jump:
                            this.HasJump = !0,
                            this.JumpDelay = 1500,
                            this.JumpDelayTime = this.JumpDelay;
                            break;

                        case d.MonsterSkill.Move:
                            break;

                        case d.MonsterSkill.Fly:
                            this.HasFly = !0,
                            this.FlyDelay = 700,
                            this.FlyDelayTime = 0;
                            break;

                        case d.MonsterSkill.ManaShield:
                            this.HasManaShield = !0,
                            this.ManaShieldImg = new Laya.Image(),
                            this.ManaShieldImg.skin = "game/小怪盾.png",
                            this.ManaShieldImg.anchorX = .5,
                            this.ManaShieldImg.anchorY = 1,
                            this.Sprite.addChild(this.ManaShieldImg),
                            d.UIAnimTool.lightShowAndHide(this.ManaShieldImg, 500);
                            break;

                        case d.MonsterSkill.Flash:
                            this.HasFlash = !0,
                            this.FlashDelay = 2e3;
                            break;

                        case d.MonsterSkill.Tank:
                            this.HasTank = !0,
                            this.TankBodyImg = new Laya.Image(),
                            this.TankHeadImg = new Laya.Image(),
                            this.TankBodyImg.skin = "monster/坦克shen.png",
                            this.TankHeadImg.skin = "monster/坦克tou.png",
                            this.TankHeadImg.anchorX = .5,
                            this.TankBodyImg.anchorX = .5,
                            this.TankHeadImg.y = 0,
                            this.TankBodyImg.y = 40,
                            this.Body.addChild(this.TankHeadImg),
                            this.Body.addChild(this.TankBodyImg);
                        }
                    }
                }
            } else if (this.IsBoss = !0,
            a = d.DataUtils.getBossDataById(t)) {
                this._gameModule.IsSnipe ? this.Hp = this._gameModule.PlayerGun.Damage * this._gameModule.PlayerGun.BulletCount * this._playerModule.RoleInfo.BossHpTimes : this.Hp = a.Hp,
                this.Name = a.Name,
                this.HasFly && "飞行小怪" == a.ImgPath ? (this.Body.width = 90,
                this.Body.height = 30,
                this.Head.width = 90,
                this.Head.height = 70) : (this.Body.skin = "monster/" + a.ImgPath + "shen.png",
                this.Head.skin = "monster/" + a.ImgPath + "tou.png");
                for (r = a.getSkill(),
                h = 0; h < r.length; h++) {
                    var l = r[h]
                      , u = d.DataUtils.getSkillDataById(l);
                    switch (!u || l != d.MonsterSkill.Shield && l != d.MonsterSkill.ManaShield && l != d.MonsterSkill.Tank || (this._playerModule.RoleInfo.Chapter <= 60 ? this.DefenseHp = Math.floor(.01 * u.Data60 * a.Hp) : this._playerModule.RoleInfo.Chapter <= 100 && 60 < this._playerModule.RoleInfo.Chapter ? this.DefenseHp = Math.floor(.01 * u.Data60_100 * a.Hp) : 100 < this._playerModule.RoleInfo.Chapter && (this.DefenseHp = Math.floor(.01 * u.DataMore100 * a.Hp)),
                    this.BaseDefenseHp = this.DefenseHp),
                    u && l == d.MonsterSkill.UnBeatable && (this._playerModule.RoleInfo.Chapter <= 60 ? this.UnBeatTimes = u.Data60 : this._playerModule.RoleInfo.Chapter <= 100 && 60 < this._playerModule.RoleInfo.Chapter ? this.UnBeatTimes = u.Data60_100 : 100 < this._playerModule.RoleInfo.Chapter && (this.UnBeatTimes = u.DataMore100)),
                    l) {
                    case d.MonsterSkill.Shield:
                        this.HasShield = !0,
                        this.ShieldImg = new Laya.Image(),
                        this.ShieldImg.skin = "monster/" + a.EquipImg + ".png",
                        this.ShieldImg.pivot(.5 * this.ShieldImg.width, .5 * this.ShieldImg.height),
                        this.ShieldImg.bottom = 5,
                        this.ShieldImg.x = .5 * this.ShieldImg.width - 25,
                        this.Body.addChild(this.ShieldImg);
                        break;

                    case d.MonsterSkill.Helmet:
                        this.HasHelmet = !0,
                        this.HelmetImg = new Laya.Image(),
                        this.HelmetImg.skin = "monster/" + a.EquipImg + ".png",
                        this.HelmetImg.pivot(.5 * this.HelmetImg.width, .5 * this.HelmetImg.height),
                        this.HelmetImg.pos(.5 * this.HelmetImg.width, .5 * this.HelmetImg.height),
                        this.Head.addChild(this.HelmetImg);
                        break;

                    case d.MonsterSkill.Jump:
                        this.HasJump = !0,
                        this.JumpDelay = 1500,
                        this.JumpDelayTime = this.JumpDelay;
                        break;

                    case d.MonsterSkill.Move:
                        break;

                    case d.MonsterSkill.Fly:
                        if (this.HasFly = !0,
                        this.FlyDelay = 700,
                        this.FlyDelayTime = 0,
                        "飞行小怪" == a.ImgPath) {
                            var c = new Laya.Animation();
                            c.pos(0, 0),
                            c.play(0, !0),
                            c.loadAnimation("ani/FlyBoss.ani"),
                            this.Sprite.addChild(c);
                        }
                        break;

                    case d.MonsterSkill.ManaShield:
                        this.HasManaShield = !0,
                        this.ManaShieldImg = new Laya.Image(),
                        this.ManaShieldImg.skin = "game/小怪盾.png",
                        this.ManaShieldImg.anchorX = .5,
                        this.ManaShieldImg.anchorY = 1,
                        this.Sprite.addChild(this.ManaShieldImg),
                        d.UIAnimTool.lightShowAndHide(this.ManaShieldImg, 500);
                        break;

                    case d.MonsterSkill.AddBlood:
                        this.HasAddBlood = !0,
                        this.AddBloodAni = new Laya.Animation(),
                        this.AddBloodAni.loadAnimation("ani/addBlood.ani"),
                        this.AddBloodAni.y = -30,
                        this.AddBloodAni.x = 10,
                        this.Sprite.addChild(this.AddBloodAni),
                        this._playerModule.RoleInfo.Chapter <= 60 ? this.AddHp = Math.floor(.01 * u.Data60 * a.Hp) : this.AddHp = Math.floor(.01 * u.Data60_100 * a.Hp);
                        break;

                    case d.MonsterSkill.Flash:
                        this.HasFlash = !0,
                        this.FlashDelay = 2e3;
                        break;

                    case d.MonsterSkill.Tank:
                        this.HasTank = !0,
                        this.TankBodyImg = new Laya.Image(),
                        this.TankHeadImg = new Laya.Image(),
                        this.TankBodyImg.skin = "monster/坦克shen.png",
                        this.TankHeadImg.skin = "monster/坦克tou.png",
                        this.TankHeadImg.anchorX = .5,
                        this.TankBodyImg.anchorX = .5,
                        this.TankHeadImg.y = 0,
                        this.TankBodyImg.y = 40,
                        this.Body.addChild(this.TankHeadImg),
                        this.Body.addChild(this.TankBodyImg);
                        break;

                    case d.MonsterSkill.UnBeatable:
                        this.HasUnBeatable = !0,
                        this.UnBeatableAni = new Laya.Animation(),
                        this.UnBeatableAni.y = 1,
                        "恶灵骑士" == a.ImgPath ? this.UnBeatableAni.loadAnimation("ani/SiWangQiShi.ani") : "法老" == a.ImgPath ? this.UnBeatableAni.loadAnimation("ani/FaLao.ani") : "埃及艳后" == a.ImgPath && this.UnBeatableAni.loadAnimation("ani/YanHou.ani"),
                        this.Sprite.addChild(this.UnBeatableAni),
                        this.UnBeatableLight = new Laya.Image(),
                        this.UnBeatableLight.skin = "effect/无敌特效辉光.png",
                        this.UnBeatableLight.zOrder = this.Body.zOrder - 1,
                        this.UnBeatableLight.anchorX = .5,
                        this.UnBeatableLight.anchorY = 1,
                        d.UIAnimTool.lightShowAndHide(this.UnBeatableLight, 500),
                        this.Sprite.addChild(this.UnBeatableLight),
                        this.doUnBeatable();
                        break;

                    case d.MonsterSkill.GlassShield:
                        this.HasGlassShield = !0,
                        this.GlassShieldImg = new Laya.Image(),
                        this.GlassShieldImg.skin = "monster/玻璃箱.png",
                        this.GlassShieldImg.anchorX = .5,
                        this.GlassShieldImg.anchorY = 1,
                        this.GlassShieldImg.height = this.Body.height + this.Head.height + 10,
                        this.Sprite.addChild(this.GlassShieldImg),
                        this.GlassShieldImg.visible = !1,
                        this.GlassDelay = 2e3;
                    }
                }
                (this.HasShield || this.HasTank || this.HasManaShield) && (this.DefenseBgImg = new Laya.Image(),
                this.DefenseBgImg.skin = "game/护甲槽.png",
                this.HasTank ? this.DefenseBgImg.y = -220 : this.DefenseBgImg.y = this.Sprite.y - this.Body.height - this.Head.height - 50,
                this.DefenseBgImg.scale(.8, .8),
                this.DefenseBgImg.x = -70,
                this.Sprite.addChild(this.DefenseBgImg),
                this.DefenseHpImg = new Laya.Image(),
                this.DefenseHpImg.skin = "game/护甲条.png",
                this.DefenseHpImg.pos(22, 4),
                this.DefenseHpImg.sizeGrid = "0,64,0,69",
                this.DefenseBgImg.addChild(this.DefenseHpImg));
            }
            this.HasTank ? (this.Body.pos(-.5 * this.Body.width, -130),
            this.Head.pos(-.5 * this.Head.width, 2 - this.Head.height - 130)) : (this.Body.pos(-.5 * this.Body.width, 0 - this.Body.height),
            this.Head.pos(-.5 * this.Head.width, 2 - this.Head.height - this.Body.height)),
            e || (this.Sprite.scaleX = -1),
            this.HasFly ? this.moveTo(i, n - 35) : this.moveTo(i, n);
        }
        ,
        t.prototype.tankFire = function() {
            var t = new Laya.Animation();
            t.loadAnimation("ani/TankFire.ani"),
            t.x = -8,
            t.y = 15,
            this.TankHeadImg.addChild(t),
            t.play(0, !1),
            d.SystemHelper.playSound("sound/ev_gun_16.mp3"),
            asgard.events.EventsDispatcher.eventNotify(d.GameEvents.EVENT_TANK_FIRE);
        }
        ,
        t.prototype.doUnBeatable = function() {
            this.UnBeatableAni.play(0, !0),
            this.UnBeatableAni.visible = !0,
            this.UnBeatableLight.visible = !0;
        }
        ,
        t.prototype.doCancelUnBeatable = function() {
            this.UnBeatableAni.stop(),
            this.UnBeatableAni.visible = !1,
            this.UnBeatableAni.removeSelf(),
            this.UnBeatableLight.visible = !1,
            this.UnBeatableLight.removeSelf();
        }
        ,
        t.prototype.DoGlass = function() {
            var t = this;
            this.GlassShieldImg.visible = !0,
            this.GlassShieldImg.alpha = 0,
            Laya.Tween.to(this.GlassShieldImg, {
                alpha: 1
            }, 200, null, new Laya.Handler(this,function() {
                t.IsGlassing = !0,
                Laya.timer.once(900, t, function() {
                    t.IsGlassing = !1,
                    Laya.Tween.to(t.GlassShieldImg, {
                        alpha: 0
                    }, 200, null, new Laya.Handler(t,function() {
                        t.GlassDelayTime = t.GlassDelay;
                    }
                    ));
                });
            }
            ));
        }
        ,
        t.prototype.DoBlackHole = function() {
            var e = this;
            this._gameModule.HoleImg.visible = !0;
            var i = this.Sprite.y
              , t = this.Sprite.y - this.Head.height - this.Body.height - 30;
            this._gameModule.HoleImg.alpha = 0,
            this._gameModule.HoleImg.scaleX = .8,
            this._gameModule.HoleImg.scaleY = .6,
            Laya.Tween.to(this._gameModule.HoleImg, {
                alpha: 1
            }, 300, null, new Laya.Handler(this,function() {
                Laya.Tween.to(e.Sprite, {
                    scaleX: 0,
                    scaleY: 0,
                    y: t
                }, 300, null, new Laya.Handler(e,function() {
                    e.IsHoleing = !0,
                    Laya.Tween.to(e._gameModule.HoleImg, {
                        alpha: 0
                    }, 300, null, new Laya.Handler(e,function() {
                        e._gameModule.HoleImg.visible = !1,
                        e._gameModule.HoleImg.alpha = 0,
                        e._gameModule.HoleImg.scale(.8, .6),
                        Laya.timer.once(1100, e, function() {
                            e.IsHoleing = !1;
                            var t = 1;
                            e._gameModule.CurrentIsStartLeft || (t = -1),
                            e._gameModule.HoleImg.visible = !0,
                            Laya.Tween.to(e._gameModule.HoleImg, {
                                alpha: 1
                            }, 250, null, new Laya.Handler(e,function() {}
                            )),
                            Laya.Tween.to(e.Sprite, {
                                scaleX: t,
                                scaleY: 1,
                                y: i
                            }, 300, null, new Laya.Handler(e,function() {
                                e.HoleDelayTime = e.HoleDelay,
                                Laya.Tween.to(e._gameModule.HoleImg, {
                                    alpha: 0
                                }, 250, null, new Laya.Handler(e,function() {
                                    e._gameModule.HoleImg.visible = !1,
                                    e._gameModule.HoleImg.alpha = 0,
                                    e._gameModule.HoleImg.scale(.8, .6);
                                }
                                ));
                            }
                            ));
                        });
                    }
                    ));
                }
                ));
            }
            ));
        }
        ,
        t.prototype.DoFlash = function() {
            var t = this;
            Laya.Tween.to(this.Sprite, {
                alpha: .3
            }, 300, null, new Laya.Handler(this,function() {
                t.IsFlashing = !0,
                Laya.timer.once(900, t, function() {
                    t.IsFlashing = !1,
                    Laya.Tween.to(t.Sprite, {
                        alpha: 1
                    }, 300, null, new Laya.Handler(t,function() {
                        t.FlashDelayTime = t.FlashDelay;
                    }
                    ));
                });
            }
            ));
        }
        ,
        t.prototype.DoAddBlood = function(t) {
            var e = this;
            this.AddBloodAni.play(0, !0),
            Laya.timer.once(3500, this, function() {
                e.Hp += e.AddHp,
                e.Hp >= e._gameModule.CurrentMonsterAllHp && (e.Hp = e._gameModule.CurrentMonsterAllHp),
                asgard.events.EventsDispatcher.eventNotify(d.GameEvents.EVENT_MONSTER_ADD_HP),
                e.AddBloodAni.stop(),
                e.AddBloodAni.removeSelf(),
                Laya.timer.once(1e3, e, function() {
                    t.run();
                });
            }),
            this.HasAddBlood = !1;
        }
        ,
        t.prototype.FlyUp = function() {
            var t = this
              , e = this.Sprite.y;
            Laya.Tween.to(this.Sprite, {
                y: e - 25
            }, 350, Laya.Ease.quadOut, new Laya.Handler(this,function() {
                Laya.Tween.to(t.Sprite, {
                    y: e
                }, 350);
            }
            ));
        }
        ,
        t.prototype.DoJumpSkill = function() {
            var t = this
              , e = this.Sprite.y;
            Laya.Tween.to(this.Sprite, {
                y: e - 60
            }, 270, Laya.Ease.quadOut, new Laya.Handler(this,function() {
                Laya.Tween.to(t.Sprite, {
                    y: e
                }, 260, null, new Laya.Handler(t,function() {
                    t.JumpDelayTime = t.JumpDelay;
                }
                ));
            }
            ));
        }
        ,
        t.prototype.DoMoveSkill = function() {
            var t = this
              , e = this._gameModule.CurrentIsStartLeft ? this._gameModule.CurrentRightStep.Sprite.x + .5 * this.Body.width + d.SpriteConst.MonsterStepDistance : this._gameModule.CurrentLeftStep.StepWidth - .5 * this.Body.width - +d.SpriteConst.MonsterStepDistance
              , i = this._gameModule.CurrentIsStartLeft ? e + 120 : e - 120;
            this.Sprite.scaleX = -1 * this.Sprite.scaleX,
            Laya.Tween.to(this.Sprite, {
                x: i
            }, 800, null, new Laya.Handler(this,function() {
                t.Sprite.scaleX = -1 * t.Sprite.scaleX,
                Laya.Tween.to(t.Sprite, {
                    x: e
                }, 800, null, new Laya.Handler(t,function() {
                    t.MoveDelayTime = t.MoveDelay;
                }
                ));
            }
            ));
        }
        ,
        t.prototype.PropFly = function(t) {
            t && Laya.Tween.to(t, {
                x: t.x + 150,
                y: t.y - 50,
                alpha: 0,
                rotation: 1e3
            }, 400, null, new Laya.Handler(this,function() {
                t.removeSelf();
            }
            ));
        }
        ,
        t.prototype.monsterCome = function(t, e, i) {
            var n = this;
            switch (this._targetx = e,
            t) {
            case d.MonsterComeType.Walk:
                this.isWalking = !0;
                break;

            case d.MonsterComeType.Jump:
                var a = this.Sprite.y
                  , s = this.Sprite.y - 110
                  , r = 0;
                r = e < 360 ? e - 120 : e + 120,
                Laya.Tween.to(this.Sprite, {
                    x: r,
                    y: s
                }, 120, null, new Laya.Handler(this,function() {
                    Laya.Tween.to(n.Sprite, {
                        x: e,
                        y: a
                    }, 150, Laya.Ease.circInOut, new Laya.Handler(n,function() {
                        n._gameModule.CurrentMonsterArriveX = e,
                        Laya.timer.once(200, n, function() {
                            n.arrived();
                        });
                    }
                    ));
                }
                ));
            }
        }
        ,
        t.prototype.arrived = function() {
            asgard.events.EventsDispatcher.eventNotify(d.GameEvents.EVENT_MONSTER_ARRIVED),
            this.HasBlackHole && asgard.events.EventsDispatcher.eventNotify(d.GameEvents.EVENT_CREATE_BLACK_HOLE),
            this.StartSkill();
        }
        ,
        t.prototype.StartSkill = function() {
            this.HasJump && (this.JumpDelayTime = d.SpriteConst.SKILL_START_TIME),
            this.HasMove && (this.MoveDelayTime = d.SpriteConst.SKILL_START_TIME),
            this.HasFlash && (this.FlashDelayTime = d.SpriteConst.SKILL_START_TIME),
            this.HasGlassShield && (this.GlassDelayTime = d.SpriteConst.SKILL_START_TIME),
            this.HasBlackHole && (this.HoleDelayTime = d.SpriteConst.SKILL_START_TIME);
        }
        ,
        t.prototype.hitBack = function() {
            var t = this
              , e = this._gameModule.CurrentIsStartLeft ? 20 : -20;
            Laya.Tween.to(this.Sprite, {
                x: this.Sprite.x + e
            }, 30, null, new Laya.Handler(this,function() {
                Laya.Tween.to(t.Sprite, {
                    x: t.Sprite.x - 2 * e
                }, 30, null, new Laya.Handler(t,function() {}
                ));
            }
            ));
        }
        ,
        t.prototype.die = function(t) {
            var e = this;
            this.IsDie = !0,
            this.IsHeadShootDie = t,
            Laya.Tween.clearAll(this.Sprite),
            this.Sprite.pivot(0, -this.Body.height);
            this._gameModule.CurrentIsStartLeft,
            this.Sprite.x,
            this._gameModule.CurrentIsStartLeft;
            this.HelmetImg && (this.HelmetImg.visible = !1),
            this.ShieldImg && (this.ShieldImg.visible = !1),
            Laya.timer.once(300, this, function() {
                e._gameModule.CurrentMonsterNum == e._gameModule.ShieldIndex && !e._gameModule.IsSnipe && e._playerModule.RoleInfo.ShieldCount <= 0 && (ishasAds ? asgard.ui.UIManager.openView(d.UIRes.SHIELDTIP) : console.log("暂时没有广告！"));
            }),
            this.IsHeadShootDie ? this.startSpeed = -2100 : this.startSpeed = -1700,
            this.isDieDowning = !0;
        }
        ,
        t.prototype.onFrame = function(t, e) {
            if (this.IsDie || this.isWalking && (this._gameModule.CurrentIsStartLeft ? (this.Sprite.x -= 8,
            this.Sprite.x <= this._targetx && (this.isWalking = !1,
            this.Sprite.x = this._targetx,
            this._gameModule.CurrentMonsterArriveX = this._targetx,
            this.arrived())) : (this.Sprite.x += 8,
            this.Sprite.x >= this._targetx && (this.isWalking = !1,
            this.Sprite.x = this._targetx,
            this._gameModule.CurrentMonsterArriveX = this._targetx,
            this.arrived()))),
            this._gameModule.PlayerGun.IsAiming && (this.HasJump && (this.JumpDelayTime -= e,
            this.JumpDelayTime <= 0 && (this.DoJumpSkill(),
            this.JumpDelayTime = 1e5)),
            this.HasMove && (this.MoveDelayTime -= e,
            this.MoveDelayTime <= 0 && (this.DoMoveSkill(),
            this.MoveDelayTime = 1e5)),
            this.HasFly && (this.FlyDelayTime -= e,
            this.FlyDelayTime <= 0 && (this.FlyUp(),
            this.FlyDelayTime = this.FlyDelay)),
            this.HasFlash && (this.FlashDelayTime -= e,
            this.FlashDelayTime <= 0 && (this.DoFlash(),
            this.FlashDelayTime = 1e5)),
            this.HasGlassShield && (this.GlassDelayTime -= e,
            this.GlassDelayTime <= 0 && (this.DoGlass(),
            this.GlassDelayTime = 1e5))),
            this.isDieDowning) {
                var i = 6 * e;
                this.IsHeadShootDie ? this._gameModule.CurrentIsStartLeft ? (this.Sprite.x += .9 * e,
                this.Sprite.rotation += 12) : (this.Sprite.x -= .9 * e,
                this.Sprite.rotation -= 12) : this._gameModule.CurrentIsStartLeft ? (this.Sprite.x += .23 * e,
                this.Sprite.rotation += 12) : (this.Sprite.x -= .23 * e,
                this.Sprite.rotation -= 12);
                var n = this.Sprite.y + Math.floor((this.startSpeed + .5 * i) * e * .001);
                this.moveTo(this.Sprite.x, n),
                1500 < d.CommonUtil.getGlobalByPoint(this.Sprite).y && (this.isDieDowning = !1,
                this.Valid = !1,
                this.Sprite.destroy()),
                this.startSpeed += i;
            }
        }
        ,
        t;
    }(d.BaseSprite);
    d.SpriteMonster = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(a) {
    var t = function(e) {
        function t() {
            var t = e.call(this, a.SpriteType.MonsterGun) || this;
            return t.SHOOT_ANGLE = 50,
            t.SHOOT_ANGLE_TIME = 1e3,
            t._gameModule = asgard.module.ModuleManager.getModule(a.MODULE_GAME),
            t._playerModule = asgard.module.ModuleManager.getModule(a.MODULE_PLAYER),
            t._reset(),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this._targetx = 0,
            this._targety = 0,
            this.ShootAngle = 0;
        }
        ,
        t.prototype.buildSprite = function(t, e, i) {
            if (this.GunImg = new Laya.Image(),
            this.GunImg.skin = "monster/BOSS警察枪.png",
            this.GunImg.pivot(35, 8),
            this._gameModule.CurrentMonster.IsBoss) {
                var n = data.StaticDataFactory.findBoss(this._gameModule.CurrentMonster.MonsterId);
                n && 0 < n.GunImg.length && "gungame4" != n.GunImg && (this.GunImg.skin = "monster/" + n.GunImg + ".png",
                this.GunImg.pivot(n.GunPosX, n.GunPosY));
            }
            this.GunImg.pos(0, 0),
            this.Sprite.addChild(this.GunImg),
            this.ShootPoint = new Laya.Image(),
            this.ShootPoint.pos(this.GunImg.width - this.GunImg.pivotX, this.GunImg.pivotY),
            this.GunImg.addChild(this.ShootPoint),
            this._gameModule.CurrentMonster.HasTank && (this.Sprite.visible = !1),
            this.moveTo(e, i);
        }
        ,
        t.prototype.Fire = function() {
            var e = this
              , t = Math.abs(a.CommonUtil.getGlobalByPoint(this.Sprite).x - this._gameModule.PlayerPoint.x)
              , i = Math.abs(a.CommonUtil.getGlobalByPoint(this.Sprite).y - this._gameModule.PlayerPoint.y - 40)
              , n = 0;
            this._gameModule.IsSnipe ? (n = 180 / Math.PI * Math.atan(t / i),
            this._gameModule.MonsterShootInPlayer = !0) : 4 <= this._playerModule.RoleInfo.Chapter && this._playerModule.RoleInfo.Chapter <= 6 && Math.random() < .3 ? (n = 180 / Math.PI * Math.atan(t / i),
            this._gameModule.MonsterShootInPlayer = !0) : 6 < this._playerModule.RoleInfo.Chapter ? (n = 180 / Math.PI * Math.atan(t / i),
            this._gameModule.MonsterShootInPlayer = !0) : (n = 180 / Math.PI * Math.atan(t / i) + 20,
            this._gameModule.MonsterShootInPlayer = !1),
            this.ShootAngle = n,
            Laya.Tween.to(this.GunImg, {
                rotation: n - 90
            }, 500, null, new Laya.Handler(this,function() {
                e.GunRecoil();
                var t = a.CommonUtil.getGlobalByPoint(e.ShootPoint);
                e._gameModule.MonsterFirePoint = t,
                asgard.events.EventsDispatcher.eventNotify(a.GameEvents.EVENT_MOSTER_FIRE);
            }
            )),
            a.CommonUtil.Log("fireRotation: " + n);
        }
        ,
        t.prototype.showGun = function() {
            this.Sprite.visible = !0;
        }
        ,
        t.prototype.GunRecoil = function() {
            var t = this;
            Laya.Tween.to(this.GunImg, {
                x: this.GunImg.x - 10,
                y: this.GunImg.y
            }, 20, null, new Laya.Handler(this,function() {
                Laya.Tween.to(t.GunImg, {
                    x: t.GunImg.x + 10,
                    y: t.GunImg.y
                }, 20, null, new Laya.Handler(t,function() {
                    Laya.timer.once(100, t, t.DownGun);
                }
                ));
            }
            ));
        }
        ,
        t.prototype.DownGun = function() {
            var t = this;
            Laya.Tween.to(this.GunImg, {
                rotation: 0
            }, 150, null, new Laya.Handler(this,function() {
                t.GunImg.rotation = 0;
            }
            ));
        }
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t;
    }(a.BaseSprite);
    a.SpriteMonsterGun = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this, i.SpriteType.Player) || this;
            return t._gameModule = asgard.module.ModuleManager.getModule(i.MODULE_GAME),
            t._playerModule = asgard.module.ModuleManager.getModule(i.MODULE_PLAYER),
            t._uiDataModule = asgard.module.ModuleManager.getModule(i.MODULE_UIDATA),
            t._reset(),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this._level = 0,
            this._targetx = 0,
            this._targety = 0,
            this.Shield = null,
            this.ProtectImg = null;
        }
        ,
        t.prototype.buildSprite = function(t, e, i, n, a) {
            var s = new Laya.Image();
            s.skin = "player/Hero_" + t + ".png",
            this.Sprite.addChild(s),
            this.Sprite.pivot(n, 0),
            this.Sprite.width = n,
            this.Sprite.height = a,
            this.moveTo(e, i),
            this.addProtect();
        }
        ,
        t.prototype.addProtect = function() {
            this.ProtectImg = new Laya.Image(),
            this.ProtectImg.skin = "game/英雄盾.png",
            this.ProtectImg.pivot(.5 * this.ProtectImg.width, this.ProtectImg.height),
            this.ProtectImg.x = .5 * this.Sprite.width,
            this.ProtectImg.y = this.Sprite.height,
            this.Sprite.addChild(this.ProtectImg),
            this.ProtectImg.visible = !1,
            this.ProtectImg.alpha = 0,
            this.Shield = new Laya.Image(),
            this.Shield.x = 30,
            this.Shield.y = -40,
            this.Shield.skin = "game/盾.png",
            this.Sprite.addChild(this.Shield),
            0 < this._playerModule.RoleInfo.ShieldCount && !this._gameModule.IsSnipe ? this.Shield.visible = !0 : this.Shield.visible = !1;
        }
        ,
        t.prototype.showProtect = function() {
            var t = this;
            this.ProtectImg.visible = !0,
            this.ProtectImg.alpha = 0,
            Laya.Tween.to(this.ProtectImg, {
                alpha: 1
            }, 80, null, new Laya.Handler(this,function() {
                Laya.Tween.to(t.ProtectImg, {
                    alpha: 0
                }, 200, null, new Laya.Handler(t,function() {
                    t.ProtectImg.visible = !1,
                    t.Shield.visible = !1;
                }
                ));
            }
            ));
        }
        ,
        t.prototype.addLife = function() {
            this.Shield.visible = !0;
        }
        ,
        t.prototype.die = function() {
            var t = this;
            this._gameModule.PlayerDiePoint = new Laya.Point(this.Sprite.x,this.Sprite.y),
            this._gameModule.PlayerScaleX = this.Sprite.scaleX,
            this.Sprite.pivot(.5 * this._width, 50);
            var e = this._gameModule.CurrentIsStartLeft ? this.Sprite.x - 200 : this.Sprite.x + 200
              , i = this._gameModule.CurrentIsStartLeft ? -720 : 720;
            Laya.Tween.to(this.Sprite, {
                x: e,
                y: this.Y - 80,
                alpha: 0,
                rotation: i
            }, 800, null, new Laya.Handler(this,function() {
                t.openEndPnl();
            }
            ));
        }
        ,
        t.prototype.openEndPnl = function() {
            this._uiDataModule.GameIsOpen && (this._gameModule.CurrentGameReviveTimes <= 0 ? asgard.ui.UIManager.openView(i.UIRes.REVIVE) : this._gameModule.IsSnipe ? asgard.ui.UIManager.openView(i.UIRes.ENDSNIPE) : (asgard.ui.UIManager.openView(i.UIRes.ENDLOSE),
            asgard.ui.UIManager.openView(i.UIRes.RECENTLYUSE),
            i.PlatForm.getInstance().hideBannerAd()),
            this._gameModule.CurrentGameReviveTimes++);
        }
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t;
    }(i.BaseSprite);
    i.SpritePlayer = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(a) {
    var t = function(e) {
        function t() {
            var t = e.call(this, a.SpriteType.Step) || this;
            return t._reset(),
            t._gameModule = asgard.module.ModuleManager.getModule(a.MODULE_GAME),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this._targetx = 0,
            this._targety = 0;
        }
        ,
        t.prototype.buildSprite = function(t, e, i) {
            var n = new Laya.Image();
            switch (t) {
            case a.MonsterSkill.Shield:
                n.skin = "monster/小怪盾牌.png",
                n.height = this._gameModule.CurrentMonster.Body.height - 10,
                n.y = .5 * n.height,
                n.x = .5 * n.width - 20,
                n.pivot(.5 * n.width, .5 * n.height - 5);
                break;

            case a.MonsterSkill.Helmet:
                n.skin = "monster/小怪钢盔.png",
                n.bottom = 5,
                n.x = .5 * n.width - 15,
                n.pivot(.5 * n.width, .5 * n.height);
            }
            this.Sprite.addChild(n),
            this.moveTo(e, i);
        }
        ,
        t.prototype.ShieldFly = function(t) {
            var e = this;
            Laya.Tween.to(t, {
                x: t.x + 150,
                y: t.y - 50,
                alpha: 0,
                rotation: 1e3
            }, 400, null, new Laya.Handler(this,function() {
                e.Sprite.removeSelf();
            }
            ));
        }
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t;
    }(a.BaseSprite);
    a.SpriteProp = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(l) {
    var t = function(e) {
        function t() {
            var t = e.call(this, l.SpriteType.Step) || this;
            return t._reset(),
            t._uiDataModule = asgard.module.ModuleManager.getModule(l.MODULE_UIDATA),
            t._gameModule = asgard.module.ModuleManager.getModule(l.MODULE_GAME),
            t;
        }
        return __extends(t, e),
        t.prototype.dispose = function() {
            this._reset();
        }
        ,
        t.prototype._reset = function() {
            this.Level = 0,
            this.StepWidth = 0,
            this.Type = 0,
            this.IsStartLeft = !0,
            this._targetx = 0,
            this._targety = 0,
            this.PictureId = 0;
        }
        ,
        t.prototype.buildSprite = function(t, e, i, n, a, s, r, o) {
            if (this.stepImg = new Laya.Image(),
            this.stepImg.size(r, o),
            this.stepImg.x = 0,
            this.stepImg.y = 0,
            this.stepImg.skin = n,
            this.stepImg.sizeGrid = "2,2,2,2",
            this.Sprite.addChild(this.stepImg),
            this.Level = e,
            this.Type = i,
            this.IsStartLeft = t,
            this.StepWidth = this.stepImg.width,
            this.moveTo(a, s),
            this._uiDataModule.orderCount--,
            this.Sprite.zOrder = this._uiDataModule.orderCount,
            .7 < Math.random() && i != l.StepType.Triangle && 2 < e && 5 != this._gameModule.MapId) {
                this.PictureImg = new Laya.Image();
                var h = Math.floor(Math.random() * l.SpriteConst.PictureIdArr.length);
                this.PictureId = l.SpriteConst.PictureIdArr[h],
                this.PictureImg.skin = "step/" + l.SpriteConst.getMapNameById(this._gameModule.MapId) + this.PictureId + ".png",
                this.PictureImg.anchorX = 1,
                this.PictureImg.anchorY = 1,
                this.PictureImg.scale(.9, .9),
                t && i == l.StepType.Right ? (this.PictureImg.scaleX = 1,
                this.PictureImg.pos(this.stepImg.width, 1),
                this.Sprite.addChild(this.PictureImg)) : t || i != l.StepType.Left || (this.PictureImg.scaleX = -1,
                this.PictureImg.pos(0, 1),
                this.Sprite.addChild(this.PictureImg));
            }
        }
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t;
    }(l.BaseSprite);
    l.SpriteStep = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(o) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._moduleId = o.MODULE_GAME,
            t.init(),
            t;
        }
        return __extends(t, e),
        t.prototype.init = function() {
            this.HasSound = !0,
            this.CurrentLevel = 1,
            this.CurrentStepPointArr = [],
            this.CurrentIsStartLeft = !0,
            this.CurrentLeftStep = null,
            this.CurrentRightStep = null,
            this.MonsterHeadPoint = null,
            this.MonsterBodyPoint = null,
            this.CurrentMonster = null,
            this.PlayerPoint = null,
            this.MonsterFirePoint = null,
            this.PlayerGun = null,
            this.MonsterShootInPlayer = !1,
            this.ShootEndX = 0,
            this.ShootEndY = 0,
            this.headShootTimes = 0,
            this.CurrentMonsterNum = 0,
            this.MonsterArr = [],
            this.IsFinish = !1,
            this.PlayerDiePoint = null,
            this.PlayerScaleX = -1,
            this.CurrentMonsterAllHp = 0,
            this.CurrentGameReviveTimes = 0,
            this.ShieldIndex = 0,
            this._shootBulletCount = 0,
            this.ShootDamage = 0,
            this.MonsterUseSkill = !1,
            this.MapId = 1,
            this.HelmetId = 1,
            this.TryGun = 1,
            this._bulletCount = 20,
            this.AddBulletsTimes = 0,
            this.isSnipe = !0,
            this.SnipeAnimY = 0,
            this.SnipeAnimX = 0,
            this.CurrentMonsterArriveX = 0,
            this.KillCount = 0;
        }
        ,
        Object.defineProperty(t.prototype, "IsSnipe", {
            get: function() {
                return this.isSnipe;
            },
            set: function(t) {
                this.isSnipe = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "BulletCount", {
            get: function() {
                return this._bulletCount;
            },
            set: function(t) {
                this._bulletCount = t,
                asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_CHAPTER_BULLET_COUNT);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "ShootBulletCount", {
            get: function() {
                return this._shootBulletCount;
            },
            set: function(t) {
                this._shootBulletCount = t,
                this._shootBulletCount < 0 && (this._shootBulletCount = 0),
                asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_SHOOT_BULLET_COUNT_CHANGE);
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "HeadShootTimes", {
            get: function() {
                return this.headShootTimes;
            },
            set: function(t) {
                this.headShootTimes = t,
                asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_HEAD_SHOOT);
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.prepareMonsterData = function(t) {
            this.HelmetId = Math.floor(2 * Math.random()) + 1;
            var e = data.StaticDataFactory.findChapter(t);
            if (e) {
                for (var i = e.getMonsterCounts(), n = e.getMonsterIds(), a = [], s = 0; s < i.length; s++)
                    for (var r = 0; r < i[s]; r++)
                        a.push(n[s]);
                this.MonsterArr = o.NumberUtils.shuffle(a),
                this.MonsterArr.push(e.BossId),
                o.CommonUtil.Log("怪物id：" + this.MonsterArr),
                this.MapId = e.MapId;
            }
        }
        ,
        t.prototype.prepareSnipeMonsterData = function(t) {
            for (var e = 0; e < 200; e++) {
                var i = t + e;
                if (9 < i && i % 5 == 0) {
                    var n = data.StaticDataFactory.findEndless(i / 5);
                    n && this.MonsterArr.push(n.BossId);
                } else
                    this.MonsterArr.push(1);
            }
        }
        ,
        t.prototype.ShootHead = function() {}
        ,
        t.prototype.ShootBody = function() {}
        ,
        t.prototype.blood = function(t, e) {
            if (this.CurrentIsStartLeft) {
                var i = o.CommonUtil.getGlobalByPoint(this.CurrentLeftStep.Sprite);
                this.ShootEndY = e - i.y + this.CurrentLeftStep.Sprite.y;
            } else
                this.ShootEndY = e - o.CommonUtil.getGlobalByPoint(this.CurrentRightStep.Sprite).y + this.CurrentRightStep.Sprite.y;
            this.ShootEndX = t;
        }
        ,
        t.prototype.ShootMonster = function(t, e, i) {
            var n = this.PlayerGun.Damage
              , a = t ? 2 : 1;
            if (this.CurrentMonster.Hp -= n * a,
            this.ShootDamage += n * a,
            this.blood(e, i),
            this.ShootBulletCount++,
            asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_MONSTER_HP_CHANGE, n * a),
            this.CurrentMonster.Hp <= 0) {
                t ? (this.HeadShootTimes++,
                asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_SHOW_HIT_EFFECT, 1)) : asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_SHOW_HIT_EFFECT, 2);
                var s = t ? o.DieType.ShootHead : o.DieType.ShootBody;
                asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_MONSTER_DIE, s),
                this.ShootBulletCount = 0;
            } else
                asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_SHOW_HIT_EFFECT2);
        }
        ,
        t.prototype.ShootProtectSkill = function(t, e, i) {
            var n = this.CurrentMonster;
            switch (t) {
            case o.MonsterSkill.Shield:
                n.IsBoss ? (n.DefenseHp -= this.PlayerGun.Damage,
                n.DefenseHp <= 0 ? (n.DefenseBgImg.visible = !1,
                n.PropFly(n.ShieldImg),
                n.HasShield = !1) : n.DefenseHpImg.width = n.DefenseHp / n.BaseDefenseHp * 138) : (n.PropFly(n.ShieldImg),
                n.HasShield = !1);
                break;

            case o.MonsterSkill.Helmet:
                n.PropFly(n.HelmetImg),
                n.HasHelmet = !1;
                break;

            case o.MonsterSkill.ManaShield:
                n.IsBoss ? (n.DefenseHp -= this.PlayerGun.Damage,
                n.DefenseHp <= 0 ? (n.DefenseBgImg.visible = !1,
                n.ManaShieldImg.removeSelf(),
                n.HasManaShield = !1) : n.DefenseHpImg.width = n.DefenseHp / n.BaseDefenseHp * 138) : (n.ManaShieldImg.removeSelf(),
                n.HasManaShield = !1);
                break;

            case o.MonsterSkill.UnBeatable:
            case o.MonsterSkill.GlassShield:
                break;

            case o.MonsterSkill.Tank:
                n.IsBoss && (n.DefenseHp -= this.PlayerGun.Damage,
                n.DefenseHp <= 0 ? (n.DefenseBgImg.visible = !1,
                n.HasTank = !1,
                Laya.Tween.to(n.TankBodyImg, {
                    alpha: 0
                }, 300, null, Laya.Handler.create(this, function() {
                    n.TankBodyImg.removeSelf();
                })),
                Laya.Tween.to(n.TankHeadImg, {
                    alpha: 0
                }, 300, null, Laya.Handler.create(this, function() {
                    n.TankHeadImg.removeSelf();
                })),
                Laya.Tween.to(n.Body, {
                    y: -1 * n.Body.height
                }, 200, null, Laya.Handler.create(this, function() {})),
                Laya.Tween.to(n.Head, {
                    y: -1 * n.Body.height - n.Head.height + 1
                }, 200, null, Laya.Handler.create(this, function() {})),
                this.CurrentMonsterGun.showGun()) : n.DefenseHpImg.width = n.DefenseHp / n.BaseDefenseHp * 138);
            }
            o.SystemHelper.playSoundById(o.SoundId.HitShield),
            this.MonsterUseSkill = !0,
            this.ShootBulletCount++,
            this.blood(e, i),
            asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_SHOOT_FIRE);
        }
        ,
        t;
    }(asgard.module.BaseModule);
    o.GameModule = t;
}(logic || (logic = {})),
function(e) {
    e.MODULE_PLAYER = 0,
    e.MODULE_SOCIAL = 1,
    e.MODULE_OPTION = 2,
    e.MODULE_UIDATA = 3,
    e.MODULE_GAME = 5;
    var t = function() {
        function t() {}
        return t.prototype.getModule = function(t) {
            switch (t) {
            case e.MODULE_UIDATA:
                return new e.UIDataModule();

            case e.MODULE_GAME:
                return new e.GameModule();

            case e.MODULE_PLAYER:
                return new e.PlayerModule();

            case e.MODULE_SOCIAL:
                return new e.SocialModule();
            }
            return null;
        }
        ,
        t;
    }();
    e.ModuleFactory = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(r) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._moduleId = r.MODULE_PLAYER,
            t._roleInfo = new r.RoleInfo(),
            t._noAd = !1,
            t._noAdStamp = 0,
            t._noAdRefreshGap = 36e5,
            t._loadTime = 0,
            t.resetDate = !1,
            t.HasLoaded = !1,
            t.ShareUserCount = 0,
            t;
        }
        return __extends(t, e),
        t.prototype.onFrame = function(t, e) {
            this._frameTime = t,
            this._frameDelta = e,
            this.RoleInfo.onFrame(t, e),
            this.HasLoaded || (this._loadTime += e);
        }
        ,
        Object.defineProperty(t.prototype, "NoAd", {
            get: function() {
                return this._noAd;
            },
            set: function(t) {
                this._noAd = t;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "NoAdStamp", {
            get: function() {
                return this._noAdStamp;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "NoAdRefreshGap", {
            get: function() {
                return this._noAdRefreshGap;
            },
            set: function(t) {
                this._noAdRefreshGap = t,
                this.NoAd = this._noAd;
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "RoleInfo", {
            get: function() {
                return this._roleInfo;
            },
            enumerable: !0,
            configurable: !0
        }),
        t.prototype.initRoleInfo = function() {
            this._roleInfo.init();
        }
        ,
        t.prototype.TrySaveGameData = function(t, e) {
            var i = this.getSaveData();
            r.PlatForm.getInstance().writeData2File(r.SystemConst.GAME_DATA_FILE, i);
        }
        ,
        t.prototype.onSaveSuccess = function(t) {
            console.log("onSaveSuccess,", t);
        }
        ,
        t.prototype.onSavefail = function(t) {
            console.log("onSavefail,", t);
        }
        ,
        t.prototype.roleSkin = function(t) {
            for (var e = this.findType(3), i = 0; i < e.length; i++) {
                var n = e[i];
                n.Id == t && (this.istrueExist(n.Id) || this.RoleInfo.roleSkinArr.push({
                    id: n.Id,
                    istrue: !0,
                    redDot: !1,
                    pitchOn: !1,
                    type: n.Type
                }));
            }
        }
        ,
        t.prototype.istrueExist = function(t) {
            for (var e = this.RoleInfo.roleSkinArr, i = 0; i < e.length; i++) {
                if (e[i].id == t)
                    return !0;
            }
            return !1;
        }
        ,
        t.prototype.findType = function(t) {
            for (var e = asgard.data.StaticDataManager.getSheetDatas(9), i = [], n = 0; n < e.length; n++) {
                e[n].Type == t && i.push(e[n]);
            }
            return i;
        }
        ,
        t.prototype.getSaveData = function() {
            try {
                var t = r.DateUtils.getTimestamp()
                  , e = {};
                return e.roleinfo = this._roleInfo.exportData(),
                e.stamp = t,
                e;
            } catch (t) {
                return r.CommonUtil.Log("获取保存数据出错，", t),
                null;
            }
        }
        ,
        t.prototype.loadGameData = function(t) {
            if (t)
                try {
                    var e = t.stamp
                      , i = r.DateUtils.getTimestamp()
                      , n = 0;
                    e && (n = i - e);
                    var a = r.DateUtils.isSameDay(e);
                    this._roleInfo.importData(t.roleinfo);
                    var s = Math.floor(n / 864e5);
                    0 < s && 2 < s && (this.RoleInfo.ShareScore += 170),
                    600 < n / 1e3 && (this.RoleInfo.showOffneIsTrue = !0,
                    this.RoleInfo.OffLineTimer = n),
                    a || (this.RoleInfo.failedShareTimes = 0,
                    this.RoleInfo.signDot = !1,
                    this.RoleInfo.showSigninIsTrue = !0,
                    this.RoleInfo.TryGunTimes = 3,
                    this.RoleInfo.ShareScore -= 70,
                    this.RoleInfo.EveryDayShareCount = 0,
                    this.RoleInfo.EveryDayAdCount = 0,
                    this.RoleInfo.EventDayWinNum = 0,
                    this.RoleInfo.EveryDayKillCount = 0,
                    this.RoleInfo.EveryDayCompound = 0,
                    this.RoleInfo.IstrueTaskArr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                    this.RoleInfo.diamondChangeGold = 0,
                    this.RoleInfo.DialNum++),
                    console.log("shareScore: " + this.RoleInfo.ShareScore);
                } catch (t) {
                    r.CommonUtil.Log("load data fail,", t);
                }
        }
        ,
        t;
    }(asgard.module.BaseModule);
    r.PlayerModule = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(l) {
    var h, t;
    (t = h = l.RewardType || (l.RewardType = {}))[t.Share = 1] = "Share",
    t[t.Ad = 2] = "Ad";
    var e = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._moduleId = l.MODULE_SOCIAL,
            t.MoreGameArr = [],
            t.initShareInfo(),
            t.ShareBackCount = 0,
            t.cityNameArr = ["上海", "成都", "深圳", "广州", "北京", "杭州", "香港"],
            t;
        }
        return __extends(t, e),
        t.prototype.initShareInfo = function() {//this.SharePic = "分享图片地址", 
        // this.ShareText = "试试你能射杀多少个敌人，来吧!枪王", this.ShareIndex = "1", this.GameShareId = "0";
        }
        ,
        t.prototype.checkCity = function() {
            asgard.module.ModuleManager.getModule(l.MODULE_PLAYER);
            var t = new asgard.net.SimpleHttp()
              , e = l.SystemConst.CITY_CHECK_URL;
            console.log("url:" + e),
            t.getRequest(e, this, this.cityCheckCallBack);
        }
        ,
        t.prototype.cityCheckCallBack = function(t) {
            var e = t.ResponseText.split(" = ")[1];
            if (console.log("cityStr: " + e),
            e) {
                var i = e.slice(0, e.length - 1)
                  , n = JSON.parse(i);
                console.log("city: " + n.cname);
                for (var a = n.cname, s = 0; s < this.cityNameArr.length; s++) {
                    var r = this.cityNameArr[s];
                    if (0 <= a.indexOf(r))
                        return void (l.SystemConst.IS_CITY = !0);
                }
            }
        }
        ,
        t.prototype.setShareType = function(t, e) {
            var i = l.PlatformData.Instance.getShareDataByIndex(t);
            return i && (e == h.Share ? i.IsShare = !0 : i.IsShare = !1),
            e;
        }
        ,
        t.prototype.getShareOrAd = function(t) {
            if (!IsWXGame())
                return h.Ad;
            if (console.log("Use_Share_Point: " + l.PlatformData.Instance.Use_Share_Point),
            2 == l.PlatformData.Instance.Use_Share_Point)
                return this.getShareOrAd2(t);
            console.log("get_Use_Share_Point: 3");
            var e = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)
              , i = 0
              , n = 1
              , a = 0
              , s = !1
              , r = l.PlatformData.Instance.getShareDataByIndex(t);
            if (r) {
                if (i = r.shareOrAdTimes,
                n = r.shareSeconds,
                a = r.HasShareTimes,
                r.HasAdTimes,
                s = r.IsSharePoint,
                0 != r.IsStartShareOrAd,
                l.CommonUtil.Log("shareTimes----------- " + i),
                l.CommonUtil.Log("shareSeconds----------- " + n),
                l.CommonUtil.Log("hasShareTimes----------- " + a),
                console.log("playerModule.RoleInfo.PlayerLevel+++: " + e.RoleInfo.PlayerLevel),
                l.PlatformData.Instance.ShareSwitch)
                    return e.NoAd ? this.setShareType(t, h.Share) : s ? (e.ShareUserCount++,
                    1 == e.RoleInfo.PlayerLevel ? 1 == e.ShareUserCount ? this.setShareType(t, h.Share) : this.setShareType(t, h.Ad) : 2 == e.RoleInfo.PlayerLevel ? 1 == e.ShareUserCount || 3 == e.ShareUserCount || 4 == e.ShareUserCount ? this.setShareType(t, h.Share) : this.setShareType(t, h.Ad) : (console.log("playerModule.ShareUserCount: " + e.ShareUserCount),
                    e.ShareUserCount < 6 || 7 == e.ShareUserCount || 8 == e.ShareUserCount || 9 == e.ShareUserCount || 11 == e.ShareUserCount || 12 == e.ShareUserCount ? this.setShareType(t, h.Share) : this.setShareType(t, h.Ad))) : t == l.ShareType.NpcBox ? this.setShareType(t, h.Share) : this.setShareType(t, h.Ad);
                this.setShareType(t, h.Ad);
            } else
                this.setShareType(t, h.Ad);
        }
        ,
        t.prototype.doShareOrAd = function(t, e) {
            this.successCallBackHander = e
            l.PlatForm.getInstance().createRewardedVideoAd(l.AD_ID.getADByIndex(t), Laya.Handler.create(this, this.VideoSuccessCallBack));
            //a.HasAdTimes++;
            l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(t) + "点击视频次数");

            return;
            if (l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(t) + "点击次数"),
            this.successCallBackHander = e,
            true /*IsWXGame()*/
            ) {
                if (console.log("do_Use_Share_Point: " + l.PlatformData.Instance.Use_Share_Point),
                2 != l.PlatformData.Instance.Use_Share_Point) {
                    console.log("do_Use_Share_Point: 3");
                    var i = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)
                      , n = !0
                      , a = l.PlatformData.Instance.getShareDataByIndex(t);
                    a && (n = a.IsShare),
                    n || i.NoAd && l.PlatformData.Instance.ShareSwitch ? (l.CommonUtil.Log("share-----------share"),
                    this.getShareInfo(t),
                    a.HasShareTimes++,
                    l.CommonUtil.Log("分享次数：" + l.PlatformData.Instance.getShareDataByIndex(t).HasShareTimes),
                    l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(t) + "点击分享次数")) : !l.PlatformData.Instance.ShareSwitch && i.NoAd ? (l.CommonUtil.Log("shareSwitch_down-----------share"),
                    this.SuccessCallBack("ok")) : (l.PlatForm.getInstance().createRewardedVideoAd(l.AD_ID.getADByIndex(t), Laya.Handler.create(this, this.VideoSuccessCallBack)),
                    a.HasAdTimes++,
                    l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(t) + "点击视频次数"));
                } else {
                    e ? this.doShareOrAd2(t, e) : this.doShareOrAd2(t);
                }
            } else {
                this.SuccessCallBack("ok");
            }
        }
        ,
        t.prototype.VideoSuccessCallBack = function(t) {
            this.SuccessCallBack(t);
            var e = Number(this.ShareIndex);
            if ("ok" == t) {
                var i = l.PlatformData.Instance.getShareDataByIndex(e);
                if (i) {
                    var n = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER);
                    i.IsSharePoint && console.log("playerModule.ShareUserCount: " + n.ShareUserCount),
                    n.RoleInfo.EveryDayAdCount++;
                }
                console.log(this.getShareDesByIndex(e) + "视频播放成功次数"),
                l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(e) + "视频播放成功次数");
            } else
                l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(e) + "视频播放失败次数");
        }
        ,
        t.prototype.SuccessCallBack = function(t) {
            console.log("successCallBack== ： " + t),
            this.successCallBackHander.method.apply(this.successCallBackHander.caller, [t]);
        }
        ,
        t.prototype.getShareInfo = function(t) {
            var e = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)
              , i = new asgard.net.SimpleHttp()
              , n = l.SystemConst.SERVER_URL + "/share?gameId=" + l.SystemConst.GAME_ID + "&uid=" + e.RoleInfo.UId + "&shareIndex=" + t;
            console.log("url:" + n),
            i.getRequest(n, this, this.requestShareInfoCallBack);
        }
        ,
        t.prototype.requestShareInfoCallBack = function(t) {
            var e = JSON.parse(t.ResponseText);
            if (e) {
                console.log("shareInfo： " + t.ResponseText),
                console.log("shareInfo.code " + e.code);
                var i = e.data;
                i && "0" == e.code ? (this.SharePic = i.sharePic,
                this.ShareText = i.shareWords,
                this.ShareIndex = i.shareIndex,
                this.GameShareId = i.gameShareId) : this.initShareInfo();
            } else
                this.initShareInfo();
            asgard.module.ModuleManager.getModule(l.MODULE_PLAYER),
            Number(this.ShareIndex);
            l.PlatForm.getInstance().showShareMenu(this.ShareIndex, this.SharePic, this.ShareText, this.GameShareId, this, this.shareCallBack);
        }
        ,
        t.prototype.shareCallBack = function() {
            var t = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)
              , e = Math.random();
            l.CommonUtil.Log("ShareTimes: " + t.RoleInfo.ShareTimes),
            l.CommonUtil.Log("isShareSuccess: " + l.WeChat.isShareSuccess),
            l.CommonUtil.Log("random: " + e),
            l.CommonUtil.Log("SystemConst.SHARE_FAILD: " + l.PlatformData.Instance.Share_Failed_Seconds);
            var i = Number(this.ShareIndex);
            l.WeChat.isShareSuccess && t.RoleInfo.ShareTimes > l.PlatformData.Instance.Share_Failed_Times && e > l.PlatformData.Instance.Share_Failed_Seconds ? (i != l.ShareType.SnipeShare && this.SuccessCallBack("ok"),
            t.RoleInfo.EveryDayShareCount++,
            console.log(this.getShareDesByIndex(i) + "分享发出次数"),
            l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(i) + "分享发出次数")) : i != l.ShareType.SnipeShare && (t.RoleInfo.tipsDescribe = "请分享到群",
            asgard.ui.UIManager.openView(l.UIRes.TIPS),
            l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(i) + "分享发出失败次数")),
            i == l.ShareType.SnipeShare && asgard.events.EventsDispatcher.eventNotify(l.GameEvents.EVENT_CLOSE_SNIPE_END);
        }
        ,
        t.prototype.loginLog = function() {
            return;
            var e = this
              , t = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)
              , i = new asgard.net.SimpleHttp()
              , n = l.SystemConst.SERVER_URL + "/log/shareSourceLog"
              , a = {
                openId: t.RoleInfo.UId,
                unionId: t.RoleInfo.UId,
                gameId: l.SystemConst.GAME_ID,
                sourceType: l.PlatformData.Instance.OnShowQuery.scene + "",
                sourceGameId: l.PlatformData.Instance.OnShowQuery.gameId,
                query: "gameId=" + l.SystemConst.GAME_ID + "&share_uid=" + l.PlatformData.Instance.OnShowQuery.share_uid + "&shareIndex=" + l.PlatformData.Instance.OnShowQuery.shareIndex + "&shareType=" + l.PlatformData.Instance.OnShowQuery.shareType + "&gameShareId=" + l.PlatformData.Instance.OnShowQuery.gameShareId + "&channel=" + l.PlatformData.Instance.OnShowQuery.channel,
                isNew: t.RoleInfo.IsNew + ""
            };
            console.log("postData---:" + a),
            console.log("postData---:" + a.query);
            var s = JSON.stringify(a);
            console.log("postPara---:" + s),
            i.postRequest(n, s, this, function(t) {
                e.loginLogCallBack(t);
            });
        }
        ,
        t.prototype.loginLogCallBack = function(t) {
            asgard.events.EventsDispatcher.eventNotify(l.GameEvents.EVENT_LOGIN_LOG);
        }
        ,
        t.prototype.EventLog = function(t, e) {
            var i = this
              , n = 0;
            e && (n = e);
            var a = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)
              , s = new asgard.net.SimpleHttp()
              , r = l.SystemConst.SERVER_URL + "/log/otherLog"
              , o = {
                openId: a.RoleInfo.UId,
                gameId: l.SystemConst.GAME_ID,
                logType: t + "",
                logDetail: n + ""
            };
            console.log("eventlogpostData---:" + o);
            var h = JSON.stringify(o);
            console.log("eventlogpostPara---:" + h),
            s.postRequest(r, h, this, function(t) {
                i.EventLogCallBack(t);
            });
        }
        ,
        t.prototype.EventLogCallBack = function(t) {
            var e = JSON.parse(t.ResponseText);
            console.log(e);
        }
        ,
        t.prototype.GetShareBackCount = function() {
            var t = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)
              , e = new asgard.net.SimpleHttp()
              , i = l.SystemConst.SERVER_URL + "/invite-count?gameId=" + l.SystemConst.GAME_ID + "&uid=" + t.RoleInfo.UId;
            console.log("url:" + i),
            e.getRequest(i, this, this.requestShareBackCountCallBack);
        }
        ,
        t.prototype.requestShareBackCountCallBack = function(t) {
            var e = JSON.parse(t.ResponseText);
            e && (this.ShareBackCount = e.count,
            console.log("this.ShareBackCount " + this.ShareBackCount),
            asgard.events.EventsDispatcher.eventNotify(l.GameEvents.EVENT_GET_SHARE_COUNT));
        }
        ,
        t.prototype.getShareDesByIndex = function(t) {
            switch (t) {
            case l.ShareType.OffLine:
                return "离线奖励";

            case l.ShareType.SignIn:
                return "签到";

            case l.ShareType.NpcBox:
                return "空投箱";

            case l.ShareType.AddSpeed:
                return "加速";

            case l.ShareType.NewGunReward:
                return "新枪解锁";

            case l.ShareType.FreeTry:
                return "免费试枪";

            case l.ShareType.EndDoubleReward:
                return "结算双倍";

            case l.ShareType.Revive:
                return "复活";

            case l.ShareType.Dial:
                return "转盘次数";

            case l.ShareType.GoldNotEnough:
                return "金币不足";

            case l.ShareType.Shield:
                return "护盾";

            case l.ShareType.FreeGun:
                return "免费抢";

            case l.ShareType.DialReward3:
                return "转盘3倍奖励";

            case l.ShareType.DialReward6:
                return "转盘6倍奖励";

            case l.ShareType.AddBullet:
                return "加子弹";

            case l.ShareType.SnipeDouble:
                return "狙击模式金币翻倍";

            case l.ShareType.SnipeShare:
                return "狙击模式炫耀一下";

            case l.ShareType.Repetition:
                return "再来一份惊喜";

            case l.ShareType.AdCard:
                return "翻牌";

            default:
                return "";
            }
        }
        ,
        t.prototype.getShareOrAd2 = function(t) {
            if (!IsWXGame())
                return h.Ad;
            var e = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)
              , i = 0
              , n = 1
              , a = 0
              , s = 0
              , r = !1
              , o = l.PlatformData.Instance.getShareDataByIndex(t);
            return o ? (l.CommonUtil.Log("shareData----------- " + o),
            i = o.shareOrAdTimes,
            n = o.shareSeconds,
            a = o.HasShareTimes,
            s = o.HasAdTimes,
            r = 0 != o.IsStartShareOrAd,
            l.CommonUtil.Log("shareTimes----------- " + i),
            l.CommonUtil.Log("shareSeconds----------- " + n),
            l.CommonUtil.Log("hasShareTimes----------- " + a),
            l.PlatformData.Instance.ShareSwitch && (Math.random() < n && 0 == i || !r && i < s && 0 < i && Math.random() < n || r && a < i && 0 < i || e.NoAd) ? (o.IsShare = !0,
            h.Share) : (o.IsShare = !1,
            h.Ad)) : h.Ad;
        }
        ,
        t.prototype.doShareOrAd2 = function(t, e) {
            if (this.successCallBackHander = e,
            IsWXGame()) {
                var i = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)
                  , n = !0
                  , a = l.PlatformData.Instance.getShareDataByIndex(t);
                a && (n = a.IsShare),
                n ? (l.CommonUtil.Log("share-----------share"),
                this.getShareInfo(t),
                a.HasShareTimes++,
                l.CommonUtil.Log("11分享次数：" + l.PlatformData.Instance.getShareDataByIndex(t).HasShareTimes),
                l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(t) + "点击分享次数")) : !l.PlatformData.Instance.ShareSwitch && i.NoAd ? (l.CommonUtil.Log("shareSwitch_down-----------share"),
                this.SuccessCallBack("ok")) : (l.PlatForm.getInstance().aldSendEvent(this.getShareDesByIndex(t) + "点击视频次数"),
                l.PlatForm.getInstance().createRewardedVideoAd(l.AD_ID.getADByIndex(t), Laya.Handler.create(this, this.SuccessCallBack)),
                a.HasAdTimes++);
            } else
                this.SuccessCallBack("ok");
        }
        ,
        t;
    }(asgard.module.BaseModule);
    l.SocialModule = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.mainMenuShowCount = 0,
            t._moduleId = i.MODULE_UIDATA,
            t.Effect_x = 0,
            t.Effect_y = 0,
            t.flyCoinCount = 0,
            t.addMoney = 0,
            t.IsNewPlayer = !1,
            t.fromMain = !1,
            t.orderCount = 0,
            t.CurrentLevel = 1,
            t.isTrueRapid = !1,
            t.addTimer = 0,
            t.getDialAward = 0,
            t.doubleAward = 1,
            t.speedUpTimer = 0,
            t.testChapter = 1,
            t.testGun = 1,
            t.IsDialOpen = !1,
            t.GameIsOpen = !1,
            t.CanQuitBtn = !0,
            t.GameMode = 0,
            t.EndCardInfo = new i.CardInfo(1),
            t.EndCardImgStr = "",
            t.ClickCardCount = 0,
            t;
        }
        return __extends(t, e),
        t;
    }(asgard.module.BaseModule);
    i.UIDataModule = t;
}(logic || (logic = {})),
function(e) {
    var t = function() {
        function t() {}
        return t.getInstance = function() {
            return this._instance || (IsWXGame() ? this._instance = new e.WeChat() : e.SystemConst.USE_SERVER ? this._instance = new e.LocalServer() : this._instance = new this()),
            this._instance;
        }
        ,
        t.prototype.showBannerAd = function() {}
        ,
        t.prototype.hideBannerAd = function() {}
        ,
        t.prototype.initSDK = function(t) {
            t && t.method.apply(t.caller, [720, 1280]);
        }
        ,
        t.prototype.initOpenContext = function(t, e) {}
        ,
        t.prototype.postMesToOpenContext = function(t) {}
        ,
        t.prototype.checkLogined = function(t) {
            t.method.apply(t.caller, [!0]);
        }
        ,
        t.prototype.login = function(t, e) {
            t.method.apply(t.caller, [null]);
        }
        ,
        t.prototype.getUserData = function(t, e) {}
        ,
        t.prototype.saveUserData = function(t, e, i) {}
        ,
        t.prototype.hideShareMenu = function() {}
        ,
        t.prototype.showShareMenu = function(t, e, i, n, a, s, r) {
            return a && s && s.bind(a)(),
            null;
        }
        ,
        t.prototype.ShowShareOrAd = function(t, e, i, n, a, s) {
            i && n && n.bind(i)();
        }
        ,
        t.prototype.vibrateShort = function() {}
        ,
        t.prototype.vibrateLong = function() {}
        ,
        t.prototype.sendWXBizDataCrypt = function(t, e) {}
        ,
        t.prototype.createShareImg = function(t, e, i) {}
        ,
        t.prototype.aldSendEvent = function(t, e) {}
        ,
        t.prototype.createRewardedVideoAd = function(t, e, i) {
            console.log("视频观看成功11");
            if (true) {
                showAds(function() {
                    e && e.method.apply(e.caller, ["ok"]);
                }, function() {
                })
            } else {
                e && e.method.apply(e.caller, ["ok"]);
            }

        }
        ,
        t.prototype.writeData2File = function(t, e) {}
        ,
        t.prototype.readDataFromFile = function(t) {
            return null;
        }
        ,
        t.prototype.removeFile = function(t) {}
        ,
        t.prototype.logEvent = function(t, e) {}
        ,
        t._instance = null,
        t;
    }();
    e.PlatForm = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(t) {
    var e = function(t) {
        function e() {
            return null !== t && t.apply(this, arguments) || this;
        }
        return __extends(e, t),
        e.prototype.writeData2File = function(t, e) {
            var i = JSON.stringify(e);
            Laya.LocalStorage.setItem(t, i);
        }
        ,
        e.prototype.readDataFromFile = function(t) {
            try {
                var e = Laya.LocalStorage.getItem(t);
                return JSON.parse(e);
            } catch (t) {
                return null;
            }
        }
        ,
        e.prototype.removeFile = function(t) {
            Laya.LocalStorage.removeItem(t);
        }
        ,
        e;
    }(t.PlatForm);
    t.LocalServer = e;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(l) {
    var t = function(t) {
        function h() {
            return t.call(this) || this;
        }
        return __extends(h, t),
        h.prototype.initSDK = function(t) {
            /*
            var n = this;
            try {
                l.PlatformData.Instance.SystemInfo = wx.getSystemInfoSync(), console.log("设备信息:" + l.PlatformData.Instance.SystemInfo.platform);
            } catch (t) {
                l.CommonUtil.Log("获取设备信息失败！");
            }
            wx.hideShareMenu(), wx.onShow(function(t) {
                h.endTime = 0, h.endTime = new Date().getTime(), h.isShareSuccess = !1, h.isShareSuccess = !(h.endTime - h.starTime < l.PlatformData.Instance.Share_Check_Time), 
                h.isShareCloseClick = !1, l.SystemConst.FrameOpen = !0, console.log("....onShow.......", t);
                var e = t.query || {}, i = new l.QueryInfo();
                i.scene = t.scene, i.shareTicket = t.shareTicket, i.appId = t.referrerInfo ? t.referrerInfo.appId : "", 
                i.extraData = t.referrerInfo ? t.referrerInfo.extraData : {}, i.shareuser = e.shareuser || 0, 
                i.userName = e.userName || "", i.shareId = e.shareId || 0, i.shareDay = e.shareDay, 
                i.gameId = t.referrerInfo ? t.referrerInfo.appId : "", i.shareType = e.shareType || "1", 
                i.gameShareId = e.gameShareId || "", i.share_uid = e.share_uid || "", i.shareIndex = e.shareIndex || "0", 
                i.channel = e.channel || "", l.PlatformData.Instance.OnShowQuery = i, n.hideShareMenu(), 
                l.PlatformData.Instance.ShareSuccessHandler && (l.CommonUtil.Log("执行分享回来的回调"), l.PlatformData.Instance.ShareSuccessHandler.method.apply(l.PlatformData.Instance.ShareSuccessHandler.caller, [ "ok" ]), 
                l.PlatformData.Instance.ShareSuccessHandler = null);
            }), wx.onHide(function() {
                h.starTime = 0, h.starTime = new Date().getTime(), l.SystemConst.FrameOpen = !1, 
                l.SystemHelper.stopMusic(), l.SystemConst.SOUND_ACTIVE = !1, console.log("....onHide......."), 
                asgard.events.EventsDispatcher.eventNotify(l.GameEvents.EVENT_WX_ON_HIDE);
            }), wx.onError(function(t) {}), t && t.method.apply(t.caller, [ l.PlatformData.Instance.SystemInfo.screenWidth, l.PlatformData.Instance.SystemInfo.screenHeight ]);
			*/
            console.log("初始化SDK");
            t.method.apply(t.caller, [l.PlatformData.Instance.SystemInfo.screenWidth, l.PlatformData.Instance.SystemInfo.screenHeight])
        }
        ,
        h.prototype.hideShareMenu = function() {
            console.log("隐藏分享");
        }
        ,
        h.prototype.initOpenContext = function(t, e) {
            l.CommonUtil.Log("设置开放域！");
        }
        ,
        h.prototype.postMesToOpenContext = function(t) {
            l.CommonUtil.Log("向开放域发送消息，", t)
        }
        ,
        h.prototype.checkUpdate = function(e) {
            console.log("版本更新");
        }
        ,
        h.prototype.showShareMenu = function(t, e, i, n, a, s, r) {
            l.PlatformData.Instance.ShareSuccessHandler = a && s ? Laya.Handler.create(a, s) : null,
            l.PlatformData.Instance.ShareFailHandler = a && r ? Laya.Handler.create(a, r) : null;
            var o = {
                title: i,
                imageUrl: e,
                query: l.PlatformData.Instance.createQuery(t, n, "1"),
                success: h.onSuccess,
                fail: h.onFail,
                cancel: h.cancel,
                complete: h.onComplete
            };
            asgard.module.ModuleManager.getModule(l.MODULE_PLAYER).RoleInfo.ShareTimes++,
            console.log("shareInfo:" + o),
            console.log("fen分享啊");
        }
        ,
        h.cancel = function(t) {
            l.CommonUtil.Log("分享取消的回调"),
            h.isShareCloseClick = !0;
        }
        ,
        h.onSuccess = function(t) {
            l.CommonUtil.Log("分享成功的回调"),
            l.CommonUtil.Log(t);
        }
        ,
        h.onFail = function(t) {}
        ,
        h.onComplete = function(t) {}
        ,
        h.prototype.writeData2File = function(t, e) {
            if (e) {

                l.CommonUtil.Log("写路径------", t);

            }
        }
        ,
        h.prototype.readDataFromFile = function(t) {
            console.log("读文件:" + t);

        }
        ,
        h.prototype.removeFile = function(t) {
            console.log("删除文件:" + t);
        }
        ,
        h.preLoadAd = function() {
            console.log("预加载视频广告rewardedVideoAd" + h.rewardedVideoAd)
            /*  h.rewardedVideoAd = wx.createRewardedVideoAd({
                adUnitId: l.AD_ID.AD_VIO_OFF_LINE
            }), console.log("预加载视频广告rewardedVideoAd" + h.rewardedVideoAd), h.rewardedVideoAd && h.rewardedVideoAd.load();
			*/

        }
        ,
        h.prototype.createRewardedVideoAd = function(t, e) {
            h.onVideoADEndCallback = e
            console.log("视频观看成功22");

            h.isShareSuccess = !0;
            h.OnVideoClose("ok");
            return;
            if (console.log("adUnitId ", t),
            asgard.module.ModuleManager.getModule(l.MODULE_PLAYER).NoAd)
                asgard.module.ModuleManager.getModule(l.MODULE_UIDATA);
            else {
                h.rewardedVideoAd || (h.rewardedVideoAd = wx.createRewardedVideoAd({
                    adUnitId: l.AD_ID.AD_VIO_OFF_LINE
                }),
                console.log("本次加载视频广告rewardedVideoAd" + h.rewardedVideoAd)),
                h.rewardedVideoAd && (h.showADStamp = l.DateUtils.getTimestamp(),
                h.onVideoADEndCallback = e,
                h.adMask && h.adMask.removeSelf(),
                (h.adMask = new Laya.Sprite()).hitArea = new Laya.HitArea(),
                h.adMask.hitArea.hit.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000"),
                h.adMask.mouseEnabled = !0,
                h.adMask.on(Laya.Event.CLICK, h, function() {
                    5e3 < l.DateUtils.getTimestamp() - h.showADStamp && h.clickCnt++,
                    3 <= h.clickCnt && h.adMask && (l.CommonUtil.Log("广告被点击销毁"),
                    h.adMask.offAll(),
                    h.adMask.removeSelf());
                }),
                Laya.stage.addChild(h.adMask),
                l.CommonUtil.Log("广告遮罩创建"),
                h.videoLoaded ? h.rewardedVideoAd.show().then(function() {
                    l.SystemHelper.adjustMusic(0),
                    l.SystemConst.SOUND_ACTIVE = !1;
                }).catch(function(t) {
                    h.OnVideoAdLoadFail(t, !0);
                }) : h.rewardedVideoAd.load().then(function() {
                    h.videoLoaded = !0,
                    h.curAdId = t,
                    h.rewardedVideoAd.show().then(function() {
                        l.SystemHelper.adjustMusic(0),
                        l.SystemConst.SOUND_ACTIVE = !1;
                    }).catch(function(t) {
                        h.OnVideoAdLoadFail(t, !0);
                    });
                }).catch(function(t) {
                    h.OnVideoAdLoadFail(t, !0);
                }),
                h.hasListen || (h.hasListen = !0,
                h.rewardedVideoAd.onClose(function(t) {
                    if (t && t.isEnded || void 0 === t)
                        l.CommonUtil.Log("视频观看成功"),
                        h.isShareSuccess = !0,
                        h.OnVideoClose("ok");
                    else {
                        asgard.module.ModuleManager.getModule(l.MODULE_UIDATA);
                        l.CommonUtil.Log("中途退出"),
                        h.OnVideoClose("fail");
                    }
                }),
                h.rewardedVideoAd.onError(function(t) {
                    h.OnVideoAdLoadFail(t);
                })));
            }
        }
        ,
        h.OnVideoAdLoadFail = function(t, e) {
            console.log("激励视频 广告加载失败", t);
            if (h.adMask && (l.CommonUtil.Log("广告遮罩销毁加载失败"),
            h.adMask.removeSelf(),
            h.adMask = null),
            t) {
                asgard.module.ModuleManager.getModule(l.MODULE_UIDATA);
                if (t.errCode && 1004 == t.errCode) {
                    (i = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER)).NoAd = !0;
                } else {
                    var i = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER);
                    e || h.errcount++,
                    2 <= h.errcount && (i.NoAd = !0);
                }
            }
        }
        ,
        h.OnVideoAdLoad = function() {}
        ,
        h.OnVideoClose = function(t) {
            h.adMask && (l.CommonUtil.Log("广告遮罩销毁正常"),
            Laya.stage.removeChild(h.adMask),
            h.adMask = null);

            var e = asgard.module.ModuleManager.getModule(l.MODULE_GAME);
            i = asgard.module.ModuleManager.getModule(l.MODULE_UIDATA);
            e.HasSound && (l.SystemConst.SOUND_ACTIVE = !0,
            i.GameIsOpen && l.SystemHelper.playMusic("sound/bgm_1.mp3", 0)),
            h.onVideoADEndCallback.method.apply(h.onVideoADEndCallback.caller, [t]);
            console.log("result2--------------" + t);
        }
        ,
        h.prototype.hideBannerAd = function() {
            h.CurBanner && (h.CurBanner.hide(),
            console.log("banner 广告隐藏"));
        }
        ,
        h.preLoadBanner = function() {
            if (h.BannerArr) {
                for (var t = void (h.BannerArr.length = 0), e = 0; e < 3; e++)
                    h.BannerArr.length < 3 && (t = h.createBannerAd()) && h.BannerArr.push(t);
                h.CurBanner = h.BannerArr[0],
                h.BannerIndex = 0;
            }
        }
        ,
        h.prototype.vibrateShort = function() {
            console.log("调用短震动")
        }
        ,
        h.prototype.vibrateLong = function() {
            console.log("调用长震动")
        }
        ,
        h.createBannerAd = function() {
            console.log("创建banner")
        }
        ,
        h.prototype.showBannerAd = function() {
            console.log("显示banner")
        }
        ,
        h.prototype.aldSendEvent = function(t, e) {
            //            e ? wx.aldSendEvent(t, e) : wx.aldSendEvent(t);
            console.log("aldSendEvent")
        }
        ,
        h.hasListen = !1,
        h.errcount = 0,
        h.clickCnt = 0,
        h.showADStamp = 0,
        h.videoLoaded = !1,
        h.bannerLoaded = !1,
        h.starTime = 0,
        h.endTime = 0,
        h.isShareSuccess = !1,
        h.isShareCloseClick = !1,
        h.BannerArr = new Array(),
        h.bannerNum = 0,
        h;
    }(l.PlatForm);
    l.WeChat = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._stageId = i.STAGE_LOADING,
            t;
        }
        return __extends(t, e),
        t.prototype.onEnter = function() {
            i.ResLoader.init(),
            this.onLoaded();
        }
        ,
        t.prototype.onLoaded = function() {
            var t = new i.ResLoadList();
            t.appendRessourceArr(i.CommonRes.getLoadingEffect()),
            0 < t.Count ? i.ResLoader.load(t, Laya.Handler.create(this, function() {
                asgard.ui.UIManager.openView(i.UIRes.LOADING);
            })) : asgard.ui.UIManager.openView(i.UIRes.LOADING);
        }
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onExit = function() {
            asgard.ui.UIManager.closeView(i.UIRes.LOADING),
            i.ResLoader.dispose();
        }
        ,
        t;
    }(asgard.stage.BaseStage);
    i.LoadingStage = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._stageId = i.STAGE_LOBBY,
            t;
        }
        return __extends(t, e),
        t.prototype.onEnter = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(i.MODULE_PLAYER),
            this._socialModule = asgard.module.ModuleManager.getModule(i.MODULE_SOCIAL),
            this._gameModule = asgard.module.ModuleManager.getModule(i.MODULE_GAME),
            this._uiDataModule = asgard.module.ModuleManager.getModule(i.MODULE_UIDATA),
            this._game = new i.GameLogic(),
            this._game.init(),
            this._game.start(),
            i.RankManager.init(),
            i.RankManager.syncRankData(),
            Laya.timer.once(300, this, function() {
                i.RankManager.getRankData();
            }),
            asgard.ui.UIManager.openView(i.UIRes.MAINMENU),
            this._gameModule.HasSound ? i.SystemConst.SOUND_ACTIVE = !0 : i.SystemConst.SOUND_ACTIVE = !1;
        }
        ,
        t.prototype.onFrame = function(t, e) {
            this._game;
        }
        ,
        t;
    }(asgard.stage.BaseStage);
    i.LobbyStage = t;
}(logic || (logic = {})),
function(e) {
    e.STAGE_NONE = 0,
    e.STAGE_LOADING = 1,
    e.STAGE_LOBBY = 2;
    var t = function() {
        function t() {}
        return t.prototype.getStage = function(t) {
            switch (t) {
            case e.STAGE_LOADING:
                return new e.LoadingStage();

            case e.STAGE_LOBBY:
                return new e.LobbyStage();
            }
            return null;
        }
        ,
        t;
    }();
    e.StageFactory = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

var ui, View = laya.ui.View, Dialog = laya.ui.Dialog, EffectAnimation = laya.display.EffectAnimation;

!function(i) {
    var t, e;
    t = i.item || (i.item = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.item.DailyTaskItemUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 617,
                height: 143
            },
            child: [{
                type: "Box",
                props: {
                    y: 0,
                    x: 0,
                    width: 617,
                    renderType: "render",
                    height: 143
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 0,
                        x: 0,
                        width: 617,
                        skin: "back/renwu_ban.png",
                        height: 143
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 55,
                        x: 481,
                        width: 192,
                        var: "btn_conversion",
                        skin: "gunPanel/每日任务领取.png",
                        runtime: "MyButton",
                        pivotY: 43,
                        pivotX: 95,
                        height: 93
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 47,
                        x: 53,
                        width: 42,
                        skin: "gunPanel/钻石.png",
                        rotation: 23,
                        height: 43
                    }
                }, {
                    type: "ProgressBar",
                    props: {
                        y: 102,
                        x: 44,
                        var: "par_bar",
                        value: .5,
                        skin: "gunPanel/dailyTask.png",
                        sizeGrid: "0,14,0,12"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 15,
                        x: 46,
                        var: "lab_name",
                        text: "登陆游戏10次",
                        fontSize: 30,
                        color: "#000000",
                        bold: !0
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 61,
                        x: 95,
                        var: "lab_numbar",
                        text: "100",
                        fontSize: 25,
                        color: "#000000",
                        bold: !0
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 109,
                        x: 483,
                        var: "lab_schedule",
                        text: "10/100",
                        fontSize: 25,
                        color: "#e30906",
                        bold: !0,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 0,
                        x: 0,
                        var: "img_complete",
                        skin: "back/renwu_ling.png"
                    }
                }]
            }]
        },
        e;
    }(View),
    t.DailyTaskItemUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.item || (i.item = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.item.ExitPanelItemUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                y: 0,
                width: 576,
                name: "icon_img",
                height: 579
            },
            child: [{
                type: "List",
                props: {
                    y: 0,
                    x: 0,
                    width: 576,
                    var: "item_list",
                    spaceY: 15,
                    spaceX: 60,
                    repeatY: 3,
                    repeatX: 3,
                    renderType: "render",
                    height: 579
                },
                child: [{
                    type: "Box",
                    props: {
                        y: 4,
                        x: 10,
                        width: 145,
                        renderType: "render",
                        name: "item_box",
                        height: 182
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 71.5,
                            x: 71,
                            width: 140,
                            skin: "game/dabeijing.png",
                            pivotY: 70,
                            pivotX: 70,
                            name: "item_icon",
                            height: 140
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 71,
                                x: 70,
                                width: 140,
                                skin: "game/返回主页.png",
                                renderType: "mask",
                                pivotY: 70,
                                pivotX: 70,
                                height: 140
                            }
                        }]
                    }, {
                        type: "Label",
                        props: {
                            y: 163,
                            x: 68,
                            text: "小游戏",
                            name: "item_name",
                            fontSize: 28,
                            color: "#9c9c9c",
                            bold: !1,
                            anchorY: .5,
                            anchorX: .5,
                            align: "center"
                        }
                    }]
                }]
            }]
        },
        e;
    }(View),
    t.ExitPanelItemUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.item || (i.item = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.item.GunItemUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 130,
                height: 130
            },
            child: [{
                type: "Image",
                props: {
                    y: 105,
                    x: 95,
                    var: "img_bg",
                    skin: "gun/等级.png"
                }
            }, {
                type: "Image",
                props: {
                    y: 65,
                    x: 73,
                    width: 147,
                    var: "img_gun",
                    skin: "gun/gun_10.png",
                    scaleY: 1,
                    scaleX: 1,
                    mouseThrough: !0,
                    mouseEnabled: !1,
                    height: 130,
                    anchorY: .5,
                    anchorX: .5,
                    alpha: .5
                },
                compId: 3
            }, {
                type: "Image",
                props: {
                    y: 65,
                    x: 73,
                    width: 147,
                    var: "img_gunItem",
                    skin: "gun/gun_10.png",
                    scaleY: 1,
                    scaleX: 1,
                    height: 130,
                    anchorY: .5,
                    anchorX: .5
                },
                compId: 2
            }, {
                type: "Label",
                props: {
                    y: 0,
                    x: 10,
                    width: 110,
                    var: "lab_money",
                    text: "$ 150K",
                    height: 29,
                    fontSize: 30,
                    color: "#f4ff00",
                    bold: !0,
                    align: "center"
                }
            }, {
                type: "Label",
                props: {
                    y: 117,
                    x: 101,
                    width: 33,
                    var: "lab_grade",
                    text: "9",
                    height: 20,
                    fontSize: 20,
                    color: "#ffffff",
                    bold: !0,
                    align: "center"
                }
            }],
            animations: [{
                nodes: [{
                    target: 2,
                    keyframes: {
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1.2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleY",
                            index: 10
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleY",
                            index: 20
                        }],
                        scaleX: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleX",
                            index: 0
                        }, {
                            value: 1.2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleX",
                            index: 10
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleX",
                            index: 20
                        }]
                    }
                }, {
                    target: 3,
                    keyframes: {
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1.2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleY",
                            index: 10
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleY",
                            index: 20
                        }],
                        scaleX: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleX",
                            index: 0
                        }, {
                            value: 1.2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleX",
                            index: 10
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleX",
                            index: 20
                        }]
                    }
                }],
                name: "ani1",
                id: 1,
                frameRate: 24,
                action: 0
            }]
        },
        e;
    }(View),
    t.GunItemUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.item || (i.item = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.item.GunMoveItemUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                y: 150,
                x: 170,
                width: 340,
                height: 301,
                anchorY: .5,
                anchorX: .5
            },
            child: [{
                type: "Image",
                props: {
                    y: 150,
                    x: 170,
                    var: "img_left",
                    skin: "gun/gun_10.png",
                    mouseThrough: !0,
                    mouseEnabled: !1,
                    anchorY: .5,
                    anchorX: .5
                },
                compId: 3
            }, {
                type: "Image",
                props: {
                    y: 150,
                    x: 170,
                    var: "img_right",
                    skin: "gun/gun_10.png",
                    anchorY: .5,
                    anchorX: .5
                },
                compId: 2
            }],
            animations: [{
                nodes: [{
                    target: 3,
                    keyframes: {
                        y: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "y",
                            index: 0
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "y",
                            index: 41
                        }],
                        x: [{
                            value: -1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "x",
                            index: 0
                        }, {
                            value: -1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "x",
                            index: 41
                        }],
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1.2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleY",
                            index: 20
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleY",
                            index: 40
                        }],
                        scaleX: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleX",
                            index: 0
                        }, {
                            value: 1.2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleX",
                            index: 20
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "scaleX",
                            index: 40
                        }],
                        anchorY: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "anchorY",
                            index: 0
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "anchorY",
                            index: 41
                        }],
                        anchorX: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "anchorX",
                            index: 0
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "anchorX",
                            index: 41
                        }]
                    }
                }, {
                    target: 2,
                    keyframes: {
                        y: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "y",
                            index: 0
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "y",
                            index: 41
                        }],
                        x: [{
                            value: -1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "x",
                            index: 0
                        }, {
                            value: -1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "x",
                            index: 41
                        }],
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1.2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleY",
                            index: 20
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleY",
                            index: 40
                        }],
                        scaleX: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleX",
                            index: 0
                        }, {
                            value: 1.2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleX",
                            index: 20
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "scaleX",
                            index: 40
                        }],
                        anchorY: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "anchorY",
                            index: 0
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "anchorY",
                            index: 41
                        }],
                        anchorX: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "anchorX",
                            index: 0
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 2,
                            key: "anchorX",
                            index: 41
                        }]
                    }
                }],
                name: "ani1",
                id: 1,
                frameRate: 24,
                action: 0
            }]
        },
        e;
    }(View),
    t.GunMoveItemUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.item || (i.item = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.item.MoreGameItemUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                y: 0,
                x: 0,
                width: 720,
                name: "icon_img",
                height: 450
            },
            child: [{
                type: "Image",
                props: {
                    y: 21,
                    x: 21,
                    width: 5,
                    skin: "game/Black_bg.png",
                    height: 26
                }
            }, {
                type: "Label",
                props: {
                    y: 19,
                    x: 37,
                    width: 163,
                    var: "title_lbl",
                    text: "每周推荐",
                    height: 30,
                    fontSize: 28,
                    color: "#000000"
                }
            }, {
                type: "List",
                props: {
                    y: 68,
                    x: 22,
                    width: 686,
                    var: "game_list",
                    spaceX: 13,
                    height: 319
                },
                child: [{
                    type: "Box",
                    props: {
                        y: 0,
                        x: 0,
                        width: 160,
                        var: "item_box",
                        renderType: "render",
                        height: 190
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 0,
                            x: 20,
                            width: 120,
                            skin: "game/图层 1.png",
                            name: "icon_img",
                            height: 120
                        },
                        child: [{
                            type: "Image",
                            props: {
                                width: 120,
                                top: 0,
                                skin: "game/返回主页.png",
                                renderType: "mask",
                                left: 0,
                                height: 120
                            }
                        }]
                    }, {
                        type: "Label",
                        props: {
                            y: 157,
                            x: 15,
                            width: 128,
                            text: "50万人在玩",
                            name: "count_lbl",
                            height: 12,
                            fontSize: 20,
                            color: "#7a6e6c",
                            align: "center"
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 125,
                            x: 11,
                            width: 136,
                            text: "吃鸡大乱斗",
                            name: "name_lbl",
                            height: 25,
                            fontSize: 25,
                            color: "#000000",
                            align: "center"
                        }
                    }]
                }]
            }]
        },
        e;
    }(View),
    t.MoreGameItemUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.item || (i.item = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.item.PedestalItemUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 160,
                height: 92
            },
            child: [{
                type: "Image",
                props: {
                    y: 10,
                    x: 0,
                    width: 125,
                    skin: "gun/源.png",
                    height: 72
                }
            }, {
                type: "Image",
                props: {
                    y: 46,
                    x: 62,
                    width: 143,
                    var: "img_guang",
                    skin: "gun/源2.png",
                    height: 91,
                    anchorY: .5,
                    anchorX: .5,
                    alpha: .5
                },
                compId: 4
            }],
            animations: [{
                nodes: [{
                    target: 4,
                    keyframes: {
                        alpha: [{
                            value: .5,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 4,
                            key: "alpha",
                            index: 0
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 4,
                            key: "alpha",
                            index: 20
                        }, {
                            value: .5,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 4,
                            key: "alpha",
                            index: 40
                        }]
                    }
                }],
                name: "ani1",
                id: 1,
                frameRate: 24,
                action: 0
            }]
        },
        e;
    }(View),
    t.PedestalItemUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.item || (i.item = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.item.RecentlyUseItemUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                y: 0,
                x: 0,
                width: 720,
                name: "icon_img",
                height: 1700
            },
            child: [{
                type: "List",
                props: {
                    y: 7,
                    x: 4,
                    width: 696,
                    var: "item_list",
                    spaceY: 20,
                    spaceX: 40,
                    selectedIndex: -1,
                    selectEnable: !0,
                    repeatY: 20,
                    repeatX: 1,
                    height: 1313
                },
                child: [{
                    type: "Box",
                    props: {
                        y: 4,
                        x: 10,
                        width: 678,
                        renderType: "render",
                        name: "item_box",
                        height: 107
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 71,
                            x: 70,
                            width: 100,
                            skin: "game/dabeijing.png",
                            pivotY: 70,
                            pivotX: 70,
                            name: "item_icon",
                            height: 100
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 100,
                                skin: "gunPanel/红色叹号.png",
                                renderType: "mask",
                                height: 100
                            }
                        }]
                    }, {
                        type: "Label",
                        props: {
                            y: 43,
                            x: 141,
                            name: "item_name",
                            fontSize: 28,
                            color: "#201f1f",
                            bold: !1
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 98,
                            x: 141,
                            width: 550,
                            skin: "back/fenge2.png"
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 30,
                            x: 561,
                            width: 42,
                            visible: !1,
                            skin: "game/xingxing1.png",
                            name: "xing",
                            height: 41
                        }
                    }]
                }]
            }]
        },
        e;
    }(View),
    t.RecentlyUseItemUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.item || (i.item = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.item.RoleSkinItemUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 220,
                height: 255
            },
            child: [{
                type: "Image",
                props: {
                    y: 0,
                    x: 0,
                    var: "img_Bg",
                    skin: "gunPanel/角色框_未选中.png"
                }
            }, {
                type: "Image",
                props: {
                    y: 0,
                    x: 172,
                    var: "img_dot",
                    skin: "gunPanel/红色叹号.png"
                }
            }, {
                type: "Image",
                props: {
                    y: 126,
                    x: 110,
                    width: 86,
                    var: "img_role",
                    skin: "player/Hero_13.png",
                    mouseThrough: !0,
                    height: 130,
                    anchorY: .5,
                    anchorX: .5
                }
            }, {
                type: "Image",
                props: {
                    y: 210,
                    x: 110,
                    var: "img_name",
                    skin: "player/name_10.png",
                    anchorY: .5,
                    anchorX: .5
                }
            }, {
                type: "Label",
                props: {
                    y: 5,
                    x: 7,
                    width: 206,
                    var: "lab_describe",
                    valign: "middle",
                    text: "Video unlock",
                    mouseThrough: !0,
                    height: 48,
                    fontSize: 25,
                    font: "Microsoft YaHei",
                    color: "#ffffff",
                    align: "center"
                }
            }]
        },
        e;
    }(View),
    t.RoleSkinItemUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.item || (i.item = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.item.ShopItemUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 611,
                height: 117
            },
            child: [{
                type: "Box",
                props: {
                    y: 0,
                    x: 0,
                    width: 611,
                    renderType: "render",
                    height: 117
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 0,
                        x: 0,
                        width: 611,
                        var: "img_bg",
                        skin: "back/xinxitiao.png",
                        height: 114
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 63,
                        x: 500,
                        var: "btn_conversion",
                        skin: "gunPanel/商店购买按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 46,
                            x: 44,
                            width: 42,
                            var: "img_icon",
                            skin: "gunPanel/钻石.png",
                            height: 46,
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 22,
                            x: 70,
                            width: 130,
                            var: "lab_price",
                            text: "142.5M",
                            mouseThrough: !0,
                            mouseEnabled: !1,
                            height: 41,
                            fontSize: 40,
                            color: "#ffffff",
                            align: "center"
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 52,
                            x: 110,
                            var: "img_free",
                            skin: "gun/商店免费按钮.png",
                            mouseThrough: !0,
                            mouseEnabled: !1,
                            anchorY: .5,
                            anchorX: .5
                        }
                    }]
                }, {
                    type: "Label",
                    props: {
                        y: 58,
                        x: 58,
                        width: 110,
                        var: "lab_gunId",
                        text: "1",
                        height: 68,
                        fontSize: 70,
                        font: "SimHei",
                        color: "#ffffff",
                        anchorY: .5,
                        anchorX: .5,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 42,
                        x: 191,
                        width: 188,
                        var: "lab_name",
                        text: "抢得名字",
                        height: 32,
                        fontSize: 25,
                        color: "#ffffff",
                        align: "center"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 58,
                        x: 157,
                        width: 154,
                        var: "img_gunIcon",
                        skin: "gun/gun_15.png",
                        height: 137,
                        anchorY: .5,
                        anchorX: .5
                    }
                }]
            }]
        },
        e;
    }(View),
    t.ShopItemUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.AwardDialPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "bg_img",
                    top: -5,
                    skin: "game/Black_bg.png",
                    right: -5,
                    left: -3,
                    bottom: -5,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    y: 309,
                    x: 29,
                    width: 662,
                    skin: "back/zhuanpan_di.png",
                    height: 663,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 527,
                        x: 331,
                        var: "btn_confirm",
                        skin: "gunPanel/确定新武器.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 65,
                        x: 575,
                        var: "btn_return",
                        skin: "gunPanel/关闭按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 222,
                        x: 331,
                        width: 107,
                        var: "img_icon",
                        skin: "gunPanel/钻石.png",
                        height: 107,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 322,
                        x: 147,
                        var: "img_double",
                        skin: "gunPanel/下次奖励翻3倍.png"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 319,
                        x: 15,
                        width: 631,
                        var: "lab_goldNum",
                        text: "+122.8B",
                        stroke: 5,
                        height: 64,
                        fontSize: 60,
                        font: "Helvetica",
                        color: "#ffffff",
                        align: "center"
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.AwardDialPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.BattleMainUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 720,
                top: 0,
                right: 0,
                mouseThrough: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Box",
                props: {
                    var: "game_box",
                    top: 0,
                    right: 0,
                    left: 0,
                    bottom: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: -1280,
                        width: 720,
                        visible: !0,
                        var: "far1_img",
                        skin: "map/yuan1-1.png",
                        right: 0,
                        left: 0,
                        height: 1281
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 1280,
                            visible: !0,
                            var: "far2_img",
                            skin: "map/yuan1-2.png",
                            right: 0,
                            left: 0
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: -1280,
                        visible: !0,
                        var: "middle1_img",
                        skin: "map/zhong1-1.png",
                        right: 0,
                        left: 0,
                        height: 1281
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 1280,
                            visible: !0,
                            var: "middle2_img",
                            skin: "map/zhong1-2.png",
                            right: 0,
                            left: 0
                        }
                    }]
                }]
            }, {
                type: "Image",
                props: {
                    visible: !1,
                    var: "shoot_bg",
                    top: 0,
                    skin: "game/Black_bg.png",
                    sizeGrid: "17,29,21,28",
                    right: 0,
                    mouseThrough: !0,
                    left: 0,
                    bottom: 0,
                    alpha: .5
                }
            }, {
                type: "Image",
                props: {
                    y: 505,
                    x: 0,
                    visible: !1,
                    var: "fireLight_img",
                    skin: "back/kaihuo_guang.png",
                    bottom: 0
                }
            }, {
                type: "Image",
                props: {
                    x: 377,
                    visible: !1,
                    var: "shootAim_btn",
                    skin: "game/英雄盾.png",
                    runtime: "MyButton",
                    bottom: 300,
                    anchorY: .5,
                    anchorX: .5
                }
            }]
        },
        e;
    }(View),
    t.BattleMainUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.BulletAddTipUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .7
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 824,
                        x: 360,
                        visible: !0,
                        var: "get_btn",
                        skin: "gunPanel/免费领取 .png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 472,
                        x: 360,
                        var: "light_img",
                        skin: "back/zidan_bu.png",
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 14,
                            x: 458,
                            visible: !0,
                            var: "close_btn",
                            skin: "gunPanel/关闭按钮.png"
                        }
                    }]
                }]
            }]
        },
        e;
    }(Dialog),
    t.BulletAddTipUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.ChangeGunUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    top: 0,
                    skin: "back/beijing.png",
                    right: 0,
                    left: 0,
                    bottom: 0
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    var: "box",
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 223,
                        x: 267,
                        skin: "gun/选择武器.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 280,
                        x: 221,
                        skin: "gun/锤子道具锁定.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 912,
                        x: 196,
                        var: "btn_employ",
                        skin: "gun/jiangli_7.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 25,
                        x: 17,
                        skin: "gun/资源栏.png"
                    }
                }, {
                    type: "List",
                    props: {
                        y: 301,
                        x: 0,
                        width: 720,
                        var: "rankList",
                        spaceX: 50,
                        repeatY: 1,
                        repeatX: 3,
                        height: 275
                    },
                    child: [{
                        type: "Box",
                        props: {
                            y: 134,
                            x: 104,
                            width: 206,
                            renderType: "render",
                            height: 170,
                            anchorY: .5,
                            anchorX: .5
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 80,
                                x: 53,
                                width: 160,
                                skin: "gun/gunShadow_1.png",
                                name: "img_gunBg",
                                height: 74,
                                alpha: .7
                            }
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 18,
                                width: 163,
                                skin: "gun/gun_1.png",
                                name: "img_gunIcon",
                                height: 144
                            }
                        }]
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 207,
                        x: 624,
                        var: "close_btn",
                        skin: "gunPanel/关闭.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 704,
                        x: 83,
                        width: 553,
                        skin: "gunPanel/属性板.png",
                        height: 187
                    }
                }, {
                    type: "ProgressBar",
                    props: {
                        y: 734,
                        x: 258,
                        var: "pro_demage",
                        skin: "gunPanel/progress.png"
                    }
                }, {
                    type: "ProgressBar",
                    props: {
                        y: 785,
                        x: 258,
                        var: "pro_bulletCount",
                        skin: "gunPanel/progress.png"
                    }
                }, {
                    type: "ProgressBar",
                    props: {
                        y: 834,
                        x: 258,
                        var: "pro_longth",
                        skin: "gunPanel/progress.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 938,
                        x: 121,
                        width: 477,
                        var: "lab_employing",
                        skin: "gunPanel/型号LV..png",
                        height: 66
                    },
                    child: [{
                        type: "Label",
                        props: {
                            y: 8,
                            x: 83,
                            width: 311,
                            text: "Using",
                            height: 50,
                            fontSize: 50,
                            font: "SimHei",
                            color: "#ffffff",
                            bold: !0,
                            align: "center"
                        }
                    }]
                }, {
                    type: "Label",
                    props: {
                        y: 719,
                        x: 567,
                        var: "lab_demage",
                        text: "400",
                        fontSize: 35,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 627,
                        x: 70,
                        width: 579,
                        var: "lab_name",
                        text: "啥也",
                        height: 71,
                        fontSize: 55,
                        font: "SimHei",
                        color: "#ffffff",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 770,
                        x: 567,
                        var: "lab_bulletCount",
                        text: "3",
                        fontSize: 35,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 820,
                        x: 567,
                        var: "lab_longth",
                        text: "5",
                        fontSize: 35,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 719,
                        x: 174,
                        text: "Fire Power",
                        fontSize: 35,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 769,
                        x: 104,
                        text: "bullets",
                        fontSize: 35,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 819,
                        x: 104,
                        text: "Distance",
                        fontSize: 35,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 31,
                        x: 64,
                        var: "lab_gold",
                        fontSize: 30,
                        color: "#ffffff",
                        bold: !0
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 33,
                        x: 196,
                        var: "lab_perSecondGold",
                        fontSize: 26,
                        color: "#ffffff",
                        bold: !0
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 88,
                        x: 64,
                        var: "lab_diamond",
                        fontSize: 30,
                        color: "#ffffff",
                        bold: !0
                    }
                }]
            }]
        },
        e;
    }(View),
    t.ChangeGunUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.DialUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "bg_img",
                    top: -5,
                    skin: "game/Black_bg.png",
                    right: -5,
                    left: -5,
                    bottom: -5,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    width: 699,
                    skin: "back/dizhuanpan.png",
                    height: 927,
                    centerY: -65,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 676,
                        x: 550,
                        var: "btn_addNum",
                        skin: "gunPanel/+5.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 396,
                        x: 349,
                        skin: "gunPanel/转盘底.png",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 394,
                        x: 349,
                        var: "dial_img",
                        skin: "gunPanel/转盘.png",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 392,
                        x: 348,
                        width: 114,
                        skin: "gunPanel/指针.png",
                        pivotY: 95,
                        pivotX: 56,
                        height: 167
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 69,
                        x: 619,
                        var: "close_btn",
                        skin: "gunPanel/关闭按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 798,
                        x: 349,
                        visible: !0,
                        var: "free_btn",
                        skin: "gunPanel/抽奖按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 653,
                        x: 237,
                        var: "lab_surplusNum",
                        text: "Left:5",
                        stroke: 4,
                        fontSize: 40,
                        font: "SimHei",
                        color: "#ffffff",
                        bold: !0
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.DialUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.DiamondFlutterPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                popupCenter: !0,
                mouseThrough: !0,
                mouseEnabled: !1,
                height: 1280,
                group: "contentLabel",
                centerY: 0,
                centerX: 0
            },
            child: [{
                type: "Box",
                props: {
                    width: 720,
                    var: "box",
                    height: 1280,
                    centerY: 0,
                    centerX: 0,
                    anchorY: .5,
                    anchorX: .5
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 86,
                        x: 106,
                        visible: !1,
                        skin: "gunPanel/钻石.png"
                    },
                    compId: 5
                }, {
                    type: "Image",
                    props: {
                        y: 86,
                        x: 106,
                        visible: !1,
                        skin: "gunPanel/钻石.png"
                    },
                    compId: 6
                }, {
                    type: "Image",
                    props: {
                        y: 86,
                        x: 106,
                        visible: !1,
                        skin: "gunPanel/钻石.png"
                    },
                    compId: 7
                }, {
                    type: "Image",
                    props: {
                        y: 86,
                        x: 106,
                        visible: !1,
                        skin: "gunPanel/钻石.png"
                    },
                    compId: 8
                }, {
                    type: "Image",
                    props: {
                        y: 86,
                        x: 106,
                        visible: !1,
                        skin: "gunPanel/钻石.png"
                    },
                    compId: 9
                }, {
                    type: "Image",
                    props: {
                        y: 86,
                        x: 106,
                        visible: !1,
                        skin: "gunPanel/钻石.png"
                    },
                    compId: 10
                }, {
                    type: "Image",
                    props: {
                        y: 86,
                        x: 106,
                        visible: !1,
                        skin: "gunPanel/钻石.png"
                    },
                    compId: 11
                }, {
                    type: "Image",
                    props: {
                        y: 613,
                        x: 333,
                        width: 53,
                        visible: !1,
                        skin: "gunPanel/金币.png",
                        height: 54
                    },
                    compId: 12
                }, {
                    type: "Image",
                    props: {
                        y: 613,
                        x: 333,
                        width: 53,
                        visible: !1,
                        skin: "gunPanel/金币.png",
                        height: 54
                    },
                    compId: 13
                }, {
                    type: "Image",
                    props: {
                        y: 613,
                        x: 333,
                        width: 53,
                        visible: !1,
                        skin: "gunPanel/金币.png",
                        height: 54
                    },
                    compId: 14
                }, {
                    type: "Image",
                    props: {
                        y: 613,
                        x: 333,
                        width: 53,
                        visible: !1,
                        skin: "gunPanel/金币.png",
                        height: 54
                    },
                    compId: 15
                }, {
                    type: "Image",
                    props: {
                        y: 613,
                        x: 333,
                        width: 53,
                        visible: !1,
                        skin: "gunPanel/金币.png",
                        height: 54
                    },
                    compId: 16
                }, {
                    type: "Image",
                    props: {
                        y: 613,
                        x: 333,
                        width: 53,
                        visible: !1,
                        skin: "gunPanel/金币.png",
                        height: 54
                    },
                    compId: 17
                }, {
                    type: "Image",
                    props: {
                        y: 613,
                        x: 333,
                        width: 53,
                        visible: !1,
                        skin: "gunPanel/金币.png",
                        height: 54
                    },
                    compId: 18
                }, {
                    type: "Image",
                    props: {
                        y: 613,
                        x: 333,
                        width: 53,
                        visible: !1,
                        skin: "gunPanel/金币.png",
                        height: 54
                    },
                    compId: 19
                }, {
                    type: "Image",
                    props: {
                        y: 613,
                        x: 333,
                        width: 53,
                        visible: !1,
                        skin: "gunPanel/金币.png",
                        height: 54
                    },
                    compId: 20
                }]
            }],
            animations: [{
                nodes: [{
                    target: 5,
                    keyframes: {
                        y: [{
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            key: "y",
                            index: 0
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            label: null,
                            key: "y",
                            index: 1
                        }, {
                            value: 570,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            key: "y",
                            index: 4
                        }, {
                            value: 570,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            label: null,
                            key: "y",
                            index: 10
                        }, {
                            value: 86,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            key: "y",
                            index: 20
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            label: null,
                            key: "y",
                            index: 21
                        }],
                        x: [{
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            key: "x",
                            index: 0
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            label: null,
                            key: "x",
                            index: 1
                        }, {
                            value: 290,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            key: "x",
                            index: 4
                        }, {
                            value: 290,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            label: null,
                            key: "x",
                            index: 10
                        }, {
                            value: 106,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            key: "x",
                            index: 20
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 5,
                            label: null,
                            key: "x",
                            index: 21
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 5,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 5,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 5,
                            label: null,
                            key: "visible",
                            index: 21
                        }]
                    }
                }, {
                    target: 6,
                    keyframes: {
                        y: [{
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            key: "y",
                            index: 0
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            label: null,
                            key: "y",
                            index: 1
                        }, {
                            value: 510,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            key: "y",
                            index: 4
                        }, {
                            value: 510,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            label: null,
                            key: "y",
                            index: 10
                        }, {
                            value: 86,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            key: "y",
                            index: 20
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            label: null,
                            key: "y",
                            index: 21
                        }],
                        x: [{
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            key: "x",
                            index: 0
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            label: null,
                            key: "x",
                            index: 1
                        }, {
                            value: 350,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            key: "x",
                            index: 4
                        }, {
                            value: 350,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            label: null,
                            key: "x",
                            index: 10
                        }, {
                            value: 106,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            key: "x",
                            index: 20
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 6,
                            label: null,
                            key: "x",
                            index: 21
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 6,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 6,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 6,
                            label: null,
                            key: "visible",
                            index: 21
                        }]
                    }
                }, {
                    target: 7,
                    keyframes: {
                        y: [{
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            key: "y",
                            index: 0
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            label: null,
                            key: "y",
                            index: 1
                        }, {
                            value: 576,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            key: "y",
                            index: 4
                        }, {
                            value: 576,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            label: null,
                            key: "y",
                            index: 10
                        }, {
                            value: 86,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            key: "y",
                            index: 20
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            label: null,
                            key: "y",
                            index: 21
                        }],
                        x: [{
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            key: "x",
                            index: 0
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            label: null,
                            key: "x",
                            index: 1
                        }, {
                            value: 398,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            key: "x",
                            index: 4
                        }, {
                            value: 398,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            label: null,
                            key: "x",
                            index: 10
                        }, {
                            value: 106,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            key: "x",
                            index: 20
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 7,
                            label: null,
                            key: "x",
                            index: 21
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 7,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 7,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 7,
                            label: null,
                            key: "visible",
                            index: 21
                        }]
                    }
                }, {
                    target: 8,
                    keyframes: {
                        y: [{
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            key: "y",
                            index: 0
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            label: null,
                            key: "y",
                            index: 1
                        }, {
                            value: 648,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            key: "y",
                            index: 4
                        }, {
                            value: 648,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            label: null,
                            key: "y",
                            index: 10
                        }, {
                            value: 86,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            key: "y",
                            index: 20
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            label: null,
                            key: "y",
                            index: 21
                        }],
                        x: [{
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            key: "x",
                            index: 0
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            label: null,
                            key: "x",
                            index: 1
                        }, {
                            value: 424,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            key: "x",
                            index: 4
                        }, {
                            value: 424,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            label: null,
                            key: "x",
                            index: 10
                        }, {
                            value: 106,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            key: "x",
                            index: 20
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 8,
                            label: null,
                            key: "x",
                            index: 21
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 8,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 8,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 8,
                            label: null,
                            key: "visible",
                            index: 21
                        }]
                    }
                }, {
                    target: 9,
                    keyframes: {
                        y: [{
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            key: "y",
                            index: 0
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            label: null,
                            key: "y",
                            index: 1
                        }, {
                            value: 674,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            key: "y",
                            index: 4
                        }, {
                            value: 674,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            label: null,
                            key: "y",
                            index: 10
                        }, {
                            value: 86,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            key: "y",
                            index: 20
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            label: null,
                            key: "y",
                            index: 21
                        }],
                        x: [{
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            key: "x",
                            index: 0
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            label: null,
                            key: "x",
                            index: 1
                        }, {
                            value: 362,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            key: "x",
                            index: 4
                        }, {
                            value: 362,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            label: null,
                            key: "x",
                            index: 10
                        }, {
                            value: 106,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            key: "x",
                            index: 20
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 9,
                            label: null,
                            key: "x",
                            index: 21
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 9,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 9,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 9,
                            label: null,
                            key: "visible",
                            index: 21
                        }]
                    }
                }, {
                    target: 10,
                    keyframes: {
                        y: [{
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            key: "y",
                            index: 0
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            label: null,
                            key: "y",
                            index: 1
                        }, {
                            value: 594,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            key: "y",
                            index: 4
                        }, {
                            value: 594,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            label: null,
                            key: "y",
                            index: 10
                        }, {
                            value: 86,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            key: "y",
                            index: 20
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            label: null,
                            key: "y",
                            index: 21
                        }],
                        x: [{
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            key: "x",
                            index: 0
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            label: null,
                            key: "x",
                            index: 1
                        }, {
                            value: 218,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            key: "x",
                            index: 4
                        }, {
                            value: 218,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            label: null,
                            key: "x",
                            index: 10
                        }, {
                            value: 106,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            key: "x",
                            index: 20
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 10,
                            label: null,
                            key: "x",
                            index: 21
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 10,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 10,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 10,
                            label: null,
                            key: "visible",
                            index: 21
                        }]
                    }
                }, {
                    target: 11,
                    keyframes: {
                        y: [{
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            key: "y",
                            index: 0
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            label: null,
                            key: "y",
                            index: 1
                        }, {
                            value: 632,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            key: "y",
                            index: 4
                        }, {
                            value: 632,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            label: null,
                            key: "y",
                            index: 10
                        }, {
                            value: 86,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            key: "y",
                            index: 20
                        }, {
                            value: 612,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            label: null,
                            key: "y",
                            index: 21
                        }],
                        x: [{
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            key: "x",
                            index: 0
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            label: null,
                            key: "x",
                            index: 1
                        }, {
                            value: 286,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            key: "x",
                            index: 4
                        }, {
                            value: 286,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            label: null,
                            key: "x",
                            index: 10
                        }, {
                            value: 106,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            key: "x",
                            index: 20
                        }, {
                            value: 332,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 11,
                            label: null,
                            key: "x",
                            index: 21
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 11,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 11,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 11,
                            label: null,
                            key: "visible",
                            index: 21
                        }]
                    }
                }],
                name: "ani1",
                id: 1,
                frameRate: 24,
                action: 0
            }, {
                nodes: [{
                    target: 12,
                    keyframes: {
                        y: [{
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            key: "y",
                            index: 0
                        }, {
                            value: 530,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            key: "y",
                            index: 5
                        }, {
                            value: 530,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            label: null,
                            key: "y",
                            index: 13
                        }, {
                            value: 34,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            key: "y",
                            index: 25
                        }, {
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            label: null,
                            key: "y",
                            index: 26
                        }],
                        x: [{
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            key: "x",
                            index: 0
                        }, {
                            value: 267,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            key: "x",
                            index: 5
                        }, {
                            value: 267,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            label: null,
                            key: "x",
                            index: 13
                        }, {
                            value: 88,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            key: "x",
                            index: 25
                        }, {
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 12,
                            label: null,
                            key: "x",
                            index: 26
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 12,
                            label: null,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 12,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 12,
                            label: null,
                            key: "visible",
                            index: 26
                        }]
                    }
                }, {
                    target: 13,
                    keyframes: {
                        y: [{
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            key: "y",
                            index: 0
                        }, {
                            value: 540,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            key: "y",
                            index: 5
                        }, {
                            value: 540,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            label: null,
                            key: "y",
                            index: 13
                        }, {
                            value: 34,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            key: "y",
                            index: 25
                        }, {
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            label: null,
                            key: "y",
                            index: 26
                        }],
                        x: [{
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            key: "x",
                            index: 0
                        }, {
                            value: 364,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            key: "x",
                            index: 5
                        }, {
                            value: 364,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            label: null,
                            key: "x",
                            index: 13
                        }, {
                            value: 88,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            key: "x",
                            index: 25
                        }, {
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 13,
                            label: null,
                            key: "x",
                            index: 26
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 13,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 13,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 13,
                            label: null,
                            key: "visible",
                            index: 26
                        }]
                    }
                }, {
                    target: 14,
                    keyframes: {
                        y: [{
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            key: "y",
                            index: 0
                        }, {
                            value: 509,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            key: "y",
                            index: 5
                        }, {
                            value: 509,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            label: null,
                            key: "y",
                            index: 13
                        }, {
                            value: 34,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            key: "y",
                            index: 25
                        }, {
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            label: null,
                            key: "y",
                            index: 26
                        }],
                        x: [{
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            key: "x",
                            index: 0
                        }, {
                            value: 425,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            key: "x",
                            index: 5
                        }, {
                            value: 425,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            label: null,
                            key: "x",
                            index: 13
                        }, {
                            value: 88,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            key: "x",
                            index: 25
                        }, {
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 14,
                            label: null,
                            key: "x",
                            index: 26
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 14,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 14,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 14,
                            label: null,
                            key: "visible",
                            index: 26
                        }]
                    }
                }, {
                    target: 15,
                    keyframes: {
                        y: [{
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            key: "y",
                            index: 0
                        }, {
                            value: 627,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            key: "y",
                            index: 5
                        }, {
                            value: 627,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            label: null,
                            key: "y",
                            index: 13
                        }, {
                            value: 34,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            key: "y",
                            index: 25
                        }, {
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            label: null,
                            key: "y",
                            index: 26
                        }],
                        x: [{
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            key: "x",
                            index: 0
                        }, {
                            value: 402,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            key: "x",
                            index: 5
                        }, {
                            value: 402,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            label: null,
                            key: "x",
                            index: 13
                        }, {
                            value: 88,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            key: "x",
                            index: 25
                        }, {
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 15,
                            label: null,
                            key: "x",
                            index: 26
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 15,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 15,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 15,
                            label: null,
                            key: "visible",
                            index: 26
                        }]
                    }
                }, {
                    target: 16,
                    keyframes: {
                        y: [{
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            key: "y",
                            index: 0
                        }, {
                            value: 701,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            key: "y",
                            index: 5
                        }, {
                            value: 701,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            label: null,
                            key: "y",
                            index: 13
                        }, {
                            value: 34,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            key: "y",
                            index: 25
                        }, {
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            label: null,
                            key: "y",
                            index: 26
                        }],
                        x: [{
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            key: "x",
                            index: 0
                        }, {
                            value: 369,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            key: "x",
                            index: 5
                        }, {
                            value: 369,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            label: null,
                            key: "x",
                            index: 13
                        }, {
                            value: 88,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            key: "x",
                            index: 25
                        }, {
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 16,
                            label: null,
                            key: "x",
                            index: 26
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 16,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 16,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 16,
                            label: null,
                            key: "visible",
                            index: 26
                        }]
                    }
                }, {
                    target: 17,
                    keyframes: {
                        y: [{
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            key: "y",
                            index: 0
                        }, {
                            value: 585,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            key: "y",
                            index: 5
                        }, {
                            value: 585,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            label: null,
                            key: "y",
                            index: 13
                        }, {
                            value: 34,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            key: "y",
                            index: 25
                        }, {
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            label: null,
                            key: "y",
                            index: 26
                        }],
                        x: [{
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            key: "x",
                            index: 0
                        }, {
                            value: 256,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            key: "x",
                            index: 5
                        }, {
                            value: 256,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            label: null,
                            key: "x",
                            index: 13
                        }, {
                            value: 88,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            key: "x",
                            index: 25
                        }, {
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 17,
                            label: null,
                            key: "x",
                            index: 26
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 17,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 17,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 17,
                            label: null,
                            key: "visible",
                            index: 26
                        }]
                    }
                }, {
                    target: 18,
                    keyframes: {
                        y: [{
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            key: "y",
                            index: 0
                        }, {
                            value: 646,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            key: "y",
                            index: 5
                        }, {
                            value: 646,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            label: null,
                            key: "y",
                            index: 13
                        }, {
                            value: 34,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            key: "y",
                            index: 25
                        }, {
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            label: null,
                            key: "y",
                            index: 26
                        }],
                        x: [{
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            key: "x",
                            index: 0
                        }, {
                            value: 234,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            key: "x",
                            index: 5
                        }, {
                            value: 234,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            label: null,
                            key: "x",
                            index: 13
                        }, {
                            value: 88,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            key: "x",
                            index: 25
                        }, {
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 18,
                            label: null,
                            key: "x",
                            index: 26
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 18,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 18,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 18,
                            label: null,
                            key: "visible",
                            index: 26
                        }]
                    }
                }, {
                    target: 19,
                    keyframes: {
                        y: [{
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            key: "y",
                            index: 0
                        }, {
                            value: 716,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            key: "y",
                            index: 5
                        }, {
                            value: 716,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            label: null,
                            key: "y",
                            index: 13
                        }, {
                            value: 34,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            key: "y",
                            index: 25
                        }, {
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            label: null,
                            key: "y",
                            index: 26
                        }],
                        x: [{
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            key: "x",
                            index: 0
                        }, {
                            value: 258,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            key: "x",
                            index: 5
                        }, {
                            value: 258,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            label: null,
                            key: "x",
                            index: 13
                        }, {
                            value: 88,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            key: "x",
                            index: 25
                        }, {
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 19,
                            label: null,
                            key: "x",
                            index: 26
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 19,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 19,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 19,
                            label: null,
                            key: "visible",
                            index: 26
                        }]
                    }
                }, {
                    target: 20,
                    keyframes: {
                        y: [{
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            key: "y",
                            index: 0
                        }, {
                            value: 648,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            key: "y",
                            index: 5
                        }, {
                            value: 648,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            label: null,
                            key: "y",
                            index: 13
                        }, {
                            value: 34,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            key: "y",
                            index: 25
                        }, {
                            value: 613,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            label: null,
                            key: "y",
                            index: 26
                        }],
                        x: [{
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            key: "x",
                            index: 0
                        }, {
                            value: 329,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            key: "x",
                            index: 5
                        }, {
                            value: 329,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            label: null,
                            key: "x",
                            index: 13
                        }, {
                            value: 88,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            key: "x",
                            index: 25
                        }, {
                            value: 333,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 20,
                            label: null,
                            key: "x",
                            index: 26
                        }],
                        visible: [{
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 20,
                            key: "visible",
                            index: 0
                        }, {
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 20,
                            label: null,
                            key: "visible",
                            index: 1
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 20,
                            label: null,
                            key: "visible",
                            index: 26
                        }]
                    }
                }],
                name: "ani2",
                id: 2,
                frameRate: 24,
                action: 0
            }]
        },
        e;
    }(Dialog),
    t.DiamondFlutterPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.EndLoseTipUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .85
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Label",
                    props: {
                        y: 130,
                        x: 43,
                        width: 621,
                        var: "Chapter_lbl",
                        text: "1234",
                        height: 56,
                        fontSize: 60,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 236,
                        x: 45,
                        width: 626,
                        var: "result_lbl",
                        text: "1234",
                        height: 56,
                        fontSize: 90,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 401,
                        x: 440,
                        width: 141,
                        var: "headShootTimes_lbl",
                        text: "133",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 44,
                        fontSize: 45,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "left"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 713,
                        x: 359,
                        width: 347,
                        visible: !1,
                        var: "double_btn",
                        skin: "gunPanel/分享双倍领取.png",
                        runtime: "MyButton",
                        pivotY: 69,
                        pivotX: 174,
                        height: 151
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 870,
                        x: 506,
                        width: 347,
                        visible: !1,
                        var: "get_btn",
                        skin: "gunPanel/离线奖励领取按钮.png",
                        runtime: "MyButton",
                        pivotY: 46,
                        pivotX: 175,
                        height: 100
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 875,
                        x: 210,
                        var: "home_btn",
                        skin: "game/返回首页.png",
                        scaleY: 1.25,
                        scaleX: 1.2,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 875,
                        x: 500,
                        var: "replay_btn",
                        skin: "game/重新来过.png",
                        scaleY: 1.25,
                        scaleX: 1.2,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 408,
                        x: 390,
                        skin: "game/金币.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 400,
                        x: 165,
                        skin: "game/爆头提示.png",
                        scaleY: .8,
                        scaleX: .8
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 405,
                        x: 222,
                        width: 141,
                        text: "Bouns:",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 44,
                        fontSize: 35,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "left"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 460,
                        x: 0,
                        skin: "back/icon_ban.png"
                    },
                    child: [{
                        type: "List",
                        props: {
                            y: 20,
                            x: 94,
                            width: 532,
                            var: "promote_list",
                            vScrollBarSkin: " ",
                            spaceY: 5,
                            spaceX: 10,
                            repeatX: 4,
                            height: 304
                        },
                        child: [{
                            type: "Box",
                            props: {
                                y: -2,
                                x: 8,
                                width: 120,
                                renderType: "render",
                                height: 150
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 0,
                                    width: 110,
                                    name: "icon_img",
                                    height: 110,
                                    centerX: 0
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        top: 0,
                                        skin: "game/返回主页.png",
                                        right: 0,
                                        renderType: "mask",
                                        left: 0,
                                        bottom: 0
                                    }
                                }]
                            }, {
                                type: "Label",
                                props: {
                                    y: 120,
                                    x: 6,
                                    width: 109,
                                    text: "label",
                                    name: "name_lbl",
                                    height: 25,
                                    fontSize: 20,
                                    color: "#ffffff",
                                    align: "center"
                                }
                            }]
                        }]
                    }]
                }]
            }]
        },
        e;
    }(Dialog),
    t.EndLoseTipUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.EndRewardUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .75
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 200,
                        x: 205,
                        var: "card_img",
                        skin: "back/zi.png",
                        scaleY: 1.6,
                        scaleX: 1.6
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 134,
                            x: 98,
                            var: "reward_img",
                            skin: "game/一堆金币.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 532,
                        x: 129,
                        skin: "game/明细栏.png"
                    },
                    child: [{
                        type: "Label",
                        props: {
                            y: 13,
                            x: 76,
                            width: 308,
                            var: "count_lbl",
                            text: "金币+100",
                            height: 49,
                            fontSize: 48,
                            color: "#ffffff",
                            align: "center"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 960,
                        x: 322,
                        var: "close_btn",
                        skin: "game/跳过.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 852,
                        x: 360,
                        var: "get_btn",
                        skin: "gunPanel/离线奖励领取按钮.png",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 165,
                        x: 20,
                        width: 110,
                        var: "game1_img",
                        height: 110
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 165,
                        x: 590,
                        width: 110,
                        var: "game2_img",
                        height: 110
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.EndRewardUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.EndSnipeTipUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .7
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Label",
                    props: {
                        y: 586,
                        x: 446,
                        width: 141,
                        visible: !1,
                        var: "headShootTimes_lbl",
                        text: "133",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 44,
                        fontSize: 50,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "left"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 525,
                        x: 446,
                        width: 183,
                        visible: !1,
                        var: "money_lbl",
                        text: "1234",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 53,
                        fontSize: 50,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "left"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 705,
                        x: 2,
                        width: 720,
                        var: "tip_lbl",
                        text: "高级枪支伤害更高",
                        height: 59,
                        fontSize: 35,
                        color: "#47f9dd",
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 412,
                        x: 329,
                        width: 100,
                        var: "current_lbl",
                        text: "999",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 53,
                        fontSize: 45,
                        color: "#FFFFFF",
                        bold: !1,
                        align: "right"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 474,
                        x: 325,
                        width: 102,
                        var: "hight_lbl",
                        text: "999",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 53,
                        fontSize: 45,
                        color: "#FFFFFF",
                        bold: !1,
                        align: "right"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 526,
                        x: 179,
                        width: 183,
                        visible: !1,
                        text: "击杀奖励",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 53,
                        fontSize: 50,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "left"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 587,
                        x: 179,
                        width: 141,
                        visible: !1,
                        text: "Bouns",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 44,
                        fontSize: 50,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "left"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 922,
                        x: 359,
                        width: 347,
                        visible: !1,
                        var: "double_btn",
                        skin: "gunPanel/分享双倍领取.png",
                        runtime: "MyButton",
                        pivotY: 69,
                        pivotX: 174,
                        height: 151
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 780,
                        x: 361,
                        width: 347,
                        visible: !1,
                        var: "get_btn",
                        skin: "gunPanel/离线奖励领取按钮.png",
                        runtime: "MyButton",
                        pivotY: 46,
                        pivotX: 175,
                        height: 100
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 202,
                        x: 574,
                        visible: !0,
                        var: "home_btn",
                        skin: "gunPanel/关闭按钮.png",
                        scaleY: 1.2,
                        scaleX: 1.2,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 596,
                        x: 396,
                        visible: !1,
                        skin: "game/金币.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 533,
                        x: 397,
                        visible: !1,
                        skin: "game/金币.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 416,
                        x: 430,
                        skin: "game/人.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 476,
                        x: 242,
                        skin: "game/最高.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 416,
                        x: 240,
                        skin: "game/本次.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 247,
                        x: 205,
                        skin: "game/消灭敌人.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 476,
                        x: 430,
                        skin: "game/人.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 589,
                        x: 123,
                        visible: !1,
                        skin: "game/爆头提示.png",
                        scaleY: .8,
                        scaleX: .8
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 529,
                        x: 126,
                        visible: !1,
                        skin: "game/击毙数.png",
                        scaleY: .7,
                        scaleX: .7
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 769,
                        x: 197,
                        var: "share_btn",
                        skin: "game/炫耀一下(1).png"
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.EndSnipeTipUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.EndTipUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .75
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Label",
                    props: {
                        y: 79,
                        x: 49,
                        width: 621,
                        var: "Chapter_lbl",
                        text: "1234",
                        height: 56,
                        fontSize: 58,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 175,
                        x: 47,
                        width: 626,
                        var: "result_lbl",
                        text: "1234",
                        height: 56,
                        fontSize: 85,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 672,
                        x: 439,
                        width: 141,
                        var: "headShootTimes_lbl",
                        text: "133",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 44,
                        fontSize: 35,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "left"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 844,
                        x: 137,
                        width: 456,
                        var: "clickTip_lbl",
                        text: "Click Flop Get Reward",
                        strokeColor: "#000000",
                        height: 44,
                        fontSize: 45,
                        color: "#ffa200",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 672,
                        x: 220,
                        width: 141,
                        text: "Bouns:",
                        strokeColor: "#000000",
                        stroke: 4,
                        height: 44,
                        fontSize: 35,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "left"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 789,
                        x: 163,
                        width: 394,
                        visible: !1,
                        var: "allTip_lbl",
                        text: "恭喜获得全部大奖",
                        height: 60,
                        fontSize: 45,
                        color: "#ffa200",
                        align: "center"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 947,
                        x: 354,
                        var: "home_btn",
                        skin: "gunPanel/确定.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 673,
                        x: 392,
                        skin: "game/金币.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 667,
                        x: 163,
                        skin: "game/爆头提示.png",
                        scaleY: .8,
                        scaleX: .8
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 465,
                        x: 135,
                        var: "card1_img",
                        skin: "back/zi.png",
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 145,
                            x: 96,
                            visible: !1,
                            var: "card1Reward_img",
                            skin: "game/一堆钻石.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 210,
                            x: -3,
                            visible: !1,
                            var: "card1tip_img",
                            skin: "game/免费开启.png"
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 220,
                            x: 0,
                            width: 194,
                            var: "card1_lbl",
                            text: "+100",
                            height: 42,
                            fontSize: 35,
                            color: "#ffffff",
                            align: "center"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 465,
                        x: 360,
                        width: 193,
                        var: "card2_img",
                        skin: "back/kapai.png",
                        scaleX: 1,
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 145,
                            x: 96,
                            visible: !1,
                            var: "card2Reward_img",
                            skin: "game/一堆金币.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 210,
                            x: -3,
                            visible: !1,
                            var: "card2tip_img",
                            skin: "game/视频开启.png"
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 220,
                            x: 0,
                            width: 194,
                            var: "card2_lbl",
                            text: "+100",
                            height: 42,
                            fontSize: 35,
                            color: "#ffffff",
                            align: "center"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 465,
                        x: 585,
                        var: "card3_img",
                        skin: "back/kapai.png",
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 145,
                            x: 96,
                            visible: !1,
                            var: "card3Reward_img",
                            skin: "game/一堆金币.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 210,
                            x: -3,
                            visible: !1,
                            var: "card3tip_img",
                            skin: "game/视频开启.png"
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 220,
                            x: 0,
                            width: 194,
                            var: "card3_lbl",
                            text: "+100",
                            height: 42,
                            fontSize: 35,
                            color: "#ffffff",
                            align: "center"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 165,
                        x: 20,
                        width: 110,
                        var: "game1_img",
                        height: 110
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 165,
                        x: 590,
                        width: 110,
                        var: "game2_img",
                        height: 110
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.EndTipUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.ExitPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    y: -10,
                    x: -10,
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .85
                }
            }, {
                type: "Image",
                props: {
                    y: 629,
                    x: 360,
                    width: 682,
                    var: "img_bg",
                    skin: "game/dabeijing.png",
                    sizeGrid: "3,3,3,2",
                    height: 724,
                    anchorY: .5,
                    anchorX: .5,
                    alpha: 1
                }
            }, {
                type: "Button",
                props: {
                    y: 204,
                    x: 634,
                    width: 75,
                    var: "close_btn",
                    stateNum: 1,
                    skin: "game/guanbi.png",
                    sizeGrid: "3,3,3,2",
                    pivotY: 38,
                    pivotX: 38,
                    height: 75
                }
            }, {
                type: "List",
                props: {
                    y: 348,
                    x: 71,
                    width: 576,
                    var: "v_list",
                    spaceY: 15,
                    spaceX: 60,
                    repeatY: 3,
                    repeatX: 3,
                    renderType: "render",
                    height: 579
                },
                child: [{
                    type: "Box",
                    props: {
                        y: 4,
                        x: 10,
                        width: 145,
                        renderType: "render",
                        height: 182
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 71.5,
                            x: 71,
                            width: 140,
                            skin: "game/dabeijing.png",
                            pivotY: 70,
                            pivotX: 70,
                            name: "item_icon",
                            height: 140
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 71,
                                x: 70,
                                width: 140,
                                skin: "game/返回主页.png",
                                renderType: "mask",
                                pivotY: 70,
                                pivotX: 70,
                                height: 140
                            }
                        }]
                    }, {
                        type: "Label",
                        props: {
                            y: 163,
                            x: 68,
                            text: "小游戏",
                            name: "item_name",
                            fontSize: 28,
                            color: "#9c9c9c",
                            bold: !1,
                            anchorY: .5,
                            anchorX: .5,
                            align: "center"
                        }
                    }]
                }]
            }]
        },
        e;
    }(Dialog),
    t.ExitPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.GameUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 720,
                top: 0,
                right: 0,
                mouseThrough: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    visible: !0,
                    var: "back_img",
                    top: 0,
                    right: 0,
                    mouseThrough: !0,
                    left: 0,
                    bottom: 0
                },
                child: [{
                    type: "Box",
                    props: {
                        var: "main_box",
                        top: 0,
                        right: 0,
                        mouseThrough: !0,
                        left: 0,
                        bottom: 0
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: -60,
                            visible: !0,
                            var: "shadow_img",
                            skin: "back/guodu.png",
                            right: 0,
                            mouseThrough: !0,
                            left: 0,
                            alpha: .9
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 1280,
                            x: 0,
                            visible: !0,
                            skin: "back/guodu.png",
                            scaleY: -1,
                            right: 0,
                            mouseThrough: !0,
                            left: 0,
                            height: 430,
                            bottom: 430,
                            alpha: .8
                        }
                    }, {
                        type: "Box",
                        props: {
                            y: 65,
                            x: 0,
                            width: 720,
                            var: "handle_box",
                            mouseThrough: !1,
                            height: 211
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: -10,
                                x: 44,
                                var: "close_btn",
                                skin: "game/返回主页.png",
                                scaleY: .65,
                                scaleX: .65,
                                cacheAs: "normal",
                                anchorY: .5,
                                anchorX: .5
                            }
                        }, {
                            type: "Image",
                            props: {
                                y: -41,
                                x: 290,
                                var: "level_img",
                                skin: "game/LEVEL.png"
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 23,
                                    x: 158,
                                    width: 144,
                                    visible: !1,
                                    var: "level_lbl",
                                    text: "11",
                                    height: 56,
                                    fontSize: 43,
                                    color: "#ffffff",
                                    bold: !0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "left"
                                }
                            }]
                        }, {
                            type: "Image",
                            props: {
                                y: 230,
                                x: 296,
                                var: "bossWarning_img",
                                skin: "game/爆头.png",
                                centerX: 0
                            }
                        }, {
                            type: "Image",
                            props: {
                                y: 37,
                                x: 9,
                                width: 155,
                                skin: "game/内部资源栏.png",
                                height: 45
                            }
                        }, {
                            type: "Image",
                            props: {
                                y: 90,
                                x: 9,
                                width: 155,
                                skin: "game/内部资源栏.png",
                                height: 45
                            }
                        }, {
                            type: "Image",
                            props: {
                                y: 94,
                                x: 12,
                                skin: "game/钻石.png",
                                scaleY: 1.1,
                                scaleX: 1.1
                            }
                        }, {
                            type: "Image",
                            props: {
                                y: 38,
                                x: 12,
                                skin: "game/金币.png",
                                scaleY: 1.1,
                                scaleX: 1.1
                            }
                        }, {
                            type: "Image",
                            props: {
                                y: -44,
                                x: 260,
                                var: "snipeTitle_img",
                                skin: "game/狙击模式字.png"
                            }
                        }, {
                            type: "Image",
                            props: {
                                y: 30,
                                x: 568,
                                var: "kill_img",
                                skin: "game/击毙数.png",
                                scaleY: .8,
                                scaleX: .8
                            },
                            child: [{
                                type: "Label",
                                props: {
                                    y: 16,
                                    x: 72,
                                    width: 105,
                                    var: "kill_lbl",
                                    text: "X100",
                                    height: 44,
                                    fontSize: 40,
                                    color: "#ffffff"
                                }
                            }]
                        }, {
                            type: "Box",
                            props: {
                                y: 400,
                                x: 0,
                                width: 720,
                                var: "headShoot_box",
                                height: 66
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: -9,
                                    x: 215,
                                    skin: "game/爆头提示.png"
                                }
                            }, {
                                type: "Label",
                                props: {
                                    y: 0,
                                    x: 287,
                                    width: 433,
                                    var: "headShoot_lbl",
                                    text: "Head Shoot +1",
                                    height: 44,
                                    fontSize: 40,
                                    color: "#ff8a00",
                                    bold: !0,
                                    alpha: 1,
                                    align: "left"
                                }
                            }]
                        }, {
                            type: "Image",
                            props: {
                                y: 130,
                                x: 138,
                                visible: !1,
                                var: "hp_img",
                                skin: "back/xuecao.png"
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 25,
                                    x: 62,
                                    skin: "back/xuetiao.png"
                                },
                                child: [{
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 223,
                                        var: "hp_mask",
                                        skin: "game/Black_bg.png",
                                        renderType: "mask",
                                        height: 27
                                    }
                                }]
                            }, {
                                type: "Label",
                                props: {
                                    y: -34,
                                    x: 76,
                                    width: 311,
                                    var: "name_lbl",
                                    text: "BOSS",
                                    height: 48,
                                    fontSize: 35,
                                    color: "#ffffff",
                                    bold: !0,
                                    align: "center"
                                }
                            }]
                        }, {
                            type: "Label",
                            props: {
                                y: -40,
                                x: 232,
                                width: 257,
                                visible: !1,
                                var: "newPlayer_lbl",
                                text: "新手关",
                                height: 40,
                                fontSize: 35,
                                color: "#ffffff",
                                centerX: 0,
                                bold: !0,
                                align: "center"
                            }
                        }, {
                            type: "Label",
                            props: {
                                y: 44,
                                x: 62,
                                width: 85,
                                var: "gold_lbl",
                                text: "111",
                                height: 39,
                                fontSize: 26,
                                color: "#ffffff"
                            }
                        }, {
                            type: "Label",
                            props: {
                                y: 98,
                                x: 62,
                                width: 85,
                                var: "diamond_lbl",
                                text: "222",
                                height: 39,
                                fontSize: 26,
                                color: "#ffffff"
                            }
                        }, {
                            type: "Box",
                            props: {
                                y: 51,
                                x: 635,
                                width: 153,
                                var: "bullet_box",
                                height: 76,
                                anchorY: .5,
                                anchorX: .5
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 17,
                                    x: -14,
                                    skin: "game/弹夹.png"
                                }
                            }, {
                                type: "Label",
                                props: {
                                    y: 29,
                                    x: 72,
                                    width: 81,
                                    var: "bulletCount_lbl",
                                    text: "X20",
                                    height: 43,
                                    fontSize: 40,
                                    color: "#ffffff"
                                }
                            }]
                        }, {
                            type: "Image",
                            props: {
                                y: 120,
                                x: 612,
                                width: 100,
                                var: "game1_img",
                                height: 100
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    width: 100,
                                    top: 0,
                                    skin: "game/返回主页.png",
                                    renderType: "mask",
                                    left: 0,
                                    height: 100
                                }
                            }]
                        }, {
                            type: "Image",
                            props: {
                                y: 145,
                                x: 14,
                                width: 100,
                                var: "game2_img",
                                height: 100
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    width: 100,
                                    top: 0,
                                    skin: "game/返回主页.png",
                                    renderType: "mask",
                                    left: 0,
                                    height: 100
                                }
                            }]
                        }]
                    }]
                }, {
                    type: "Image",
                    props: {
                        visible: !1,
                        var: "white_img",
                        top: 0,
                        skin: "game/白屏.jpg",
                        right: 0,
                        left: 0,
                        bottom: 0
                    }
                }, {
                    type: "Image",
                    props: {
                        visible: !1,
                        var: "black_img",
                        top: -10,
                        skin: "game/Black_bg.png",
                        right: -10,
                        mouseThrough: !0,
                        left: -10,
                        bottom: -10
                    }
                }]
            }]
        },
        e;
    }(View),
    t.GameUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.GetGoldPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    y: -5,
                    x: -5,
                    var: "bg_img",
                    top: -5,
                    skin: "game/Black_bg.png",
                    right: -5,
                    left: -5,
                    bottom: -5,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    width: 674,
                    skin: "back/bg_ban.png",
                    height: 728,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 564,
                        x: 337,
                        var: "btn_getGold",
                        skin: "gunPanel/视频领取.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 55,
                        x: 608,
                        var: "btn_return",
                        skin: "gunPanel/关闭按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 207,
                        x: 275,
                        skin: "gunPanel/金币.png"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 366,
                        x: 21,
                        width: 631,
                        var: "lab_goldNum",
                        text: "+122.8B",
                        stroke: 5,
                        height: 62,
                        fontSize: 60,
                        font: "Helvetica",
                        color: "#ffffff",
                        align: "center"
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.GetGoldPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.GetNewGunPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "bg_img",
                    top: -5,
                    skin: "game/Black_bg.png",
                    right: -5,
                    left: -5,
                    bottom: -5,
                    alpha: .85
                }
            }, {
                type: "Box",
                props: {
                    y: 0,
                    x: 0,
                    width: 720,
                    var: "box_1",
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 362,
                        x: 360,
                        width: 602,
                        skin: "back/xiaoguo.png",
                        rotation: 360,
                        height: 593,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 3
                }, {
                    type: "Image",
                    props: {
                        y: 359,
                        x: 386,
                        width: 340,
                        var: "img_gunType",
                        skin: "gun/gun_1.png",
                        rotation: 0,
                        height: 301,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 654,
                        x: 99,
                        width: 520,
                        skin: "gunPanel/属性板.png",
                        height: 198
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 143,
                        x: 627,
                        width: 53,
                        var: "btn_cloneBox2",
                        skin: "gunPanel/关闭.png",
                        runtime: "MyButton",
                        pivotY: 22,
                        pivotX: 28,
                        height: 53
                    }
                }, {
                    type: "ProgressBar",
                    props: {
                        y: 679,
                        x: 255,
                        var: "pro_demage",
                        value: .7,
                        skin: "gunPanel/progress.png"
                    }
                }, {
                    type: "ProgressBar",
                    props: {
                        y: 742,
                        x: 255,
                        var: "pro_number",
                        value: .5,
                        skin: "gunPanel/progress.png"
                    }
                }, {
                    type: "ProgressBar",
                    props: {
                        y: 804,
                        x: 255,
                        var: "pro_longth",
                        value: .2,
                        skin: "gunPanel/progress.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 950,
                        x: 362,
                        width: 398,
                        var: "btn_confirm",
                        skin: "gunPanel/分享领.png",
                        runtime: "MyButton",
                        pivotY: 79,
                        pivotX: 201,
                        height: 173
                    },
                    child: [{
                        type: "Label",
                        props: {
                            y: 8,
                            x: 194,
                            var: "lab_num",
                            text: "60",
                            fontSize: 60,
                            color: "#ffffff",
                            align: "left"
                        }
                    }]
                }, {
                    type: "Label",
                    props: {
                        y: 673,
                        x: 119,
                        text: "Power",
                        fontSize: 30,
                        color: "#ffffff"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 564,
                        x: 162,
                        width: 396,
                        var: "lab_name",
                        text: "枪的名字",
                        height: 55,
                        fontSize: 50,
                        color: "#ffffff",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 735,
                        x: 119,
                        text: "Bullets",
                        fontSize: 30,
                        color: "#ffffff",
                        align: "right"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 796,
                        x: 119,
                        text: "Distance",
                        fontSize: 30,
                        color: "#ffffff"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 101,
                        x: 156,
                        width: 408,
                        text: "New Weapon",
                        height: 86,
                        fontSize: 70,
                        font: "SimHei",
                        color: "#ffffff",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 673,
                        x: 555,
                        var: "lab_demage",
                        text: "5",
                        fontSize: 30,
                        color: "#ffffff"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 735,
                        x: 555,
                        var: "lab_number",
                        text: "400",
                        fontSize: 30,
                        color: "#ffffff",
                        align: "right"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 796,
                        x: 555,
                        var: "lab_longth",
                        text: "20",
                        fontSize: 30,
                        color: "#ffffff"
                    }
                }]
            }],
            animations: [{
                nodes: [{
                    target: 3,
                    keyframes: {
                        rotation: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "rotation",
                            index: 0
                        }, {
                            value: 180,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "rotation",
                            index: 70
                        }, {
                            value: 360,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 3,
                            key: "rotation",
                            index: 140
                        }]
                    }
                }],
                name: "ani1",
                id: 1,
                frameRate: 24,
                action: 0
            }]
        },
        e;
    }(Dialog),
    t.GetNewGunPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.GMUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "img_bg",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    width: 649,
                    var: "box",
                    skin: "back/shangdian_di.png",
                    sizeGrid: "18,16,16,14",
                    height: 943,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "List",
                    props: {
                        y: 228,
                        x: 10,
                        width: 612,
                        var: "shopList",
                        spaceY: 10,
                        repeatX: 1,
                        height: 635
                    },
                    child: [{
                        type: "Box",
                        props: {
                            y: 0,
                            x: 86,
                            width: 448,
                            renderType: "render",
                            height: 80
                        },
                        child: [{
                            type: "Image",
                            props: {
                                top: 0,
                                skin: "gunPanel/属性板.png",
                                sizeGrid: "33,36,35,33",
                                right: 0,
                                name: "icon_img",
                                left: 150,
                                bottom: 0
                            }
                        }, {
                            type: "Label",
                            props: {
                                y: 21,
                                x: 251,
                                width: 92,
                                text: "label",
                                name: "name_lbl",
                                height: 25,
                                fontSize: 40,
                                color: "#efd6d6",
                                align: "center"
                            }
                        }, {
                            type: "Label",
                            props: {
                                y: 16,
                                x: 1,
                                width: 125,
                                text: "label",
                                name: "data_lbl",
                                height: 25,
                                fontSize: 40,
                                color: "#2a2a2a",
                                align: "center"
                            }
                        }]
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 89,
                        x: 615,
                        var: "close_btn",
                        skin: "gunPanel/关闭按钮.png",
                        rotation: 180
                    }
                }, {
                    type: "TextInput",
                    props: {
                        y: 119,
                        x: 140,
                        width: 363,
                        var: "input_text",
                        skin: "gunPanel/属性板.png",
                        sizeGrid: "42,45,59,49",
                        height: 82,
                        fontSize: 40
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.GMUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.LoadingUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 720,
                top: 0,
                right: 0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "back_img",
                    top: 0,
                    skin: "loading/dabeijing.jpg",
                    right: 0,
                    left: 0,
                    bottom: 0
                }
            }, {
                type: "Image",
                props: {
                    x: -85,
                    var: "bg_img",
                    skin: "loading/dalou.png",
                    bottom: 0
                }
            }, {
                type: "Image",
                props: {
                    y: -430,
                    x: 0,
                    var: "step_img",
                    skin: "loading/louti.png"
                }
            }, {
                type: "Image",
                props: {
                    top: 0,
                    skin: "loading/mengban.png",
                    right: 0,
                    left: 0,
                    bottom: 0
                }
            }, {
                type: "Image",
                props: {
                    y: 350,
                    x: 126,
                    skin: "loading/logo.png"
                }
            }, {
                type: "Image",
                props: {
                    y: 850,
                    x: 101,
                    skin: "loading/loading.png",
                    bottom: 370
                }
            }, {
                type: "Image",
                props: {
                    x: 82,
                    skin: "loading/jindutiao_di.png",
                    bottom: 300
                },
                child: [{
                    type: "ProgressBar",
                    props: {
                        y: 3,
                        x: 7,
                        var: "load_Progress",
                        skin: "loading/jindutiao02.png"
                    }
                }, {
                    type: "Animation",
                    props: {
                        y: 17,
                        x: 0,
                        var: "load_ani",
                        source: "ani/load.ani",
                        autoPlay: !0
                    }
                }]
            }]
        },
        e;
    }(View),
    t.LoadingUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.MainMenuUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                y: 0,
                x: 0,
                width: 720,
                top: 0,
                mouseThrough: !1,
                left: 0,
                height: 1280
            },
            child: [{
                type: "Image",
                props: {
                    var: "back_img",
                    top: 0,
                    skin: "back/beijing.png",
                    right: 0,
                    left: 0,
                    bottom: 0
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    var: "main_box",
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 39,
                        x: 575,
                        width: 124,
                        visible: !0,
                        var: "test_img",
                        skin: "gun/长按钮.png",
                        height: 78
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 460,
                        x: 411,
                        width: 290,
                        var: "img_shadow",
                        skin: "gun/gunShadow_1.png",
                        height: 134,
                        anchorY: 1,
                        anchorX: .5,
                        alpha: .7
                    },
                    compId: 410
                }, {
                    type: "Image",
                    props: {
                        y: 467,
                        x: 360,
                        width: 340,
                        var: "img_showGun",
                        skin: "gun/gun_10.png",
                        height: 301,
                        anchorY: 1,
                        anchorX: .5
                    },
                    compId: 387
                }, {
                    type: "Image",
                    props: {
                        y: 25,
                        x: 17,
                        skin: "gun/资源栏.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 203,
                        x: 658,
                        width: 62,
                        var: "btn_dial",
                        skin: "gun/转盘.png",
                        runtime: "MyButton",
                        height: 87,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 324,
                        x: 658,
                        var: "btn_roleSkin",
                        skin: "gun/皮肤.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 413,
                        x: 50,
                        width: 61,
                        visible: !1,
                        var: "btn_task",
                        skin: "gun/任务.png",
                        runtime: "MyButton",
                        height: 84,
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: -8,
                            x: 39,
                            var: "img_taskDot",
                            skin: "gunPanel/红色叹号.png"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 275,
                        x: 13,
                        width: 105,
                        var: "game1_img",
                        height: 105
                    },
                    child: [{
                        type: "Image",
                        props: {
                            width: 105,
                            top: 0,
                            skin: "game/返回主页.png",
                            renderType: "mask",
                            left: 0,
                            height: 105
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 400,
                        x: 12,
                        width: 105,
                        var: "game2_img",
                        height: 105
                    },
                    child: [{
                        type: "Image",
                        props: {
                            width: 105,
                            top: 0,
                            skin: "game/返回主页.png",
                            renderType: "mask",
                            left: 0,
                            height: 105
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 400,
                        x: 600,
                        width: 105,
                        var: "game3_img",
                        height: 105
                    },
                    compId: 473,
                    child: [{
                        type: "Image",
                        props: {
                            width: 105,
                            top: 0,
                            skin: "game/返回主页.png",
                            renderType: "mask",
                            left: 0,
                            height: 105
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 143,
                        x: -250,
                        width: 254,
                        var: "funcBox_img",
                        skin: "game/UIchouti1.png",
                        height: 118
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: -4,
                            x: 245,
                            var: "funcFold_img",
                            skin: "game/UIchouti2.png"
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 54,
                            x: 66,
                            var: "sound_btn",
                            skin: "gun/声音开.png",
                            runtime: "MyButton",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 52,
                            x: 166,
                            width: 59,
                            var: "btn_signIn",
                            skin: "gun/签到.png",
                            runtime: "MyButton",
                            height: 96,
                            anchorY: .5,
                            anchorX: .5
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 1,
                                x: 34,
                                var: "img_signDot",
                                skin: "gunPanel/红色叹号.png"
                            }
                        }]
                    }]
                }, {
                    type: "Label",
                    props: {
                        y: 78,
                        x: 407,
                        var: "lab_customs",
                        text: "1",
                        fontSize: 57,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        bold: !0,
                        align: "left"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 31,
                        x: 64,
                        var: "lab_gold",
                        fontSize: 30,
                        color: "#ffffff",
                        bold: !0
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 33,
                        x: 196,
                        var: "lab_perSecondGold",
                        fontSize: 26,
                        color: "#ffffff",
                        bold: !0
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 88,
                        x: 64,
                        var: "lab_diamond",
                        fontSize: 30,
                        color: "#ffffff",
                        bold: !0
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 500,
                        x: 360,
                        var: "lab_gunName",
                        text: "复古搜狐请",
                        fontSize: 40,
                        font: "SimHei",
                        color: "#ffffff",
                        bold: !0,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 75,
                        x: 255,
                        width: 116,
                        text: "Level",
                        height: 55,
                        fontSize: 57,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 267,
                        x: 661,
                        var: "img_dot",
                        skin: "gunPanel/红色叹号.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 153,
                        x: 663,
                        var: "img_dialDot",
                        skin: "gunPanel/红色叹号.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 350,
                        x: 652,
                        visible: !1,
                        var: "img_RoleSkin",
                        skin: "player/Hero_10.png",
                        scaleY: 0,
                        scaleX: 0,
                        pivotY: 0,
                        pivotX: 44,
                        anchorY: .5,
                        anchorX: .5
                    },
                    compId: 458
                }]
            }, {
                type: "Box",
                props: {
                    width: 720,
                    var: "main_box2",
                    height: 739,
                    bottom: 15
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 65,
                        x: 360,
                        var: "go_btn",
                        skin: "gun/开始按钮 .png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 65,
                        x: 203,
                        visible: !1,
                        var: "endless_btn",
                        skin: "gun/狙击摸式.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 670,
                        x: 85,
                        var: "img_dustbin",
                        skin: "gun/垃圾筐.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 671,
                        x: 210,
                        var: "btn_rapid",
                        skin: "gun/加速.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 74,
                            x: 23,
                            var: "img_rapid",
                            skin: "gun/加 速.png"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 671,
                        x: 627,
                        var: "btn_shop",
                        skin: "gun/商店.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 607,
                        x: 593,
                        var: "img_free",
                        skin: "gun/免费.png",
                        mouseThrough: !0,
                        mouseEnabled: !1
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 671,
                        x: 419,
                        var: "btn_buyGun",
                        skin: "gun/长按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 37,
                            x: 98,
                            skin: "gun/金币.png",
                            mouseThrough: !0,
                            mouseEnabled: !1
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 50,
                            x: 59,
                            width: 149,
                            var: "img_buyGun",
                            skin: "gun/gun_2.png",
                            mouseThrough: !0,
                            mouseEnabled: !1,
                            height: 132,
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 39,
                            x: 130,
                            width: 119,
                            var: "lab_buyGunMoney",
                            text: "100B",
                            height: 30,
                            fontSize: 30,
                            color: "#ffffff",
                            bold: !0,
                            align: "center"
                        }
                    }]
                }, {
                    type: "Label",
                    props: {
                        y: 689,
                        x: 160,
                        width: 102,
                        var: "lab_timer",
                        text: "00.59",
                        height: 28,
                        fontSize: 25,
                        color: "#ffffff",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 129,
                        x: 55,
                        var: "box_pedestal"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 129,
                        x: 55,
                        var: "box_gunArr"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 129,
                        x: 55,
                        var: "box_newPedestal"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 129,
                        x: 55,
                        var: "box_newGunArr"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 129,
                        x: 55,
                        var: "box_2"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 129,
                        x: 55,
                        var: "box_gun2"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: -5,
                        x: 617,
                        var: "fold_btn",
                        skin: "game/gamebox1.png"
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: -7,
                            x: 52,
                            var: "point_img",
                            skin: "gunPanel/红色叹号.png"
                        }
                    }]
                }, {
                    type: "Box",
                    props: {
                        y: 129,
                        x: 55,
                        var: "box_animation"
                    },
                    child: [{
                        type: "Image",
                        props: {
                            var: "img_guide",
                            skin: "gun/引导手.png"
                        }
                    }]
                }]
            }, {
                type: "Image",
                props: {
                    var: "box_greenHands",
                    top: -10,
                    skin: "game/Black_bg.png",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .6
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    var: "box_guidance",
                    height: 1280,
                    centerX: 0,
                    bottom: 0
                },
                child: [{
                    type: "Box",
                    props: {
                        y: 655,
                        x: 55,
                        var: "box_greenHands3"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 655,
                        x: 55,
                        var: "box_greenHands4"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 655,
                        x: 55,
                        var: "box_greenHands5"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 593,
                        x: 633,
                        var: "img_greenHands1",
                        skin: "gun/闯关模式.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 1197,
                        x: 419,
                        var: "img_greenHands2",
                        skin: "gun/长按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 37,
                            x: 98,
                            skin: "gun/金币.png",
                            mouseThrough: !0,
                            mouseEnabled: !1
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 53,
                            x: 53,
                            width: 94,
                            var: "img_gunSkin",
                            skin: "gun/gun_15.png",
                            mouseThrough: !0,
                            mouseEnabled: !1,
                            height: 83,
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 39,
                            x: 130,
                            width: 119,
                            var: "lab_money",
                            text: "100B",
                            height: 30,
                            fontSize: 30,
                            color: "#ffffff",
                            align: "center"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 719,
                        x: 519,
                        width: 68,
                        var: "img_hand",
                        skin: "gun/引导手.png",
                        scaleY: 1,
                        rotation: 45,
                        pivotY: 53,
                        pivotX: 36,
                        height: 73
                    },
                    compId: 443
                }]
            }, {
                type: "Box",
                props: {
                    y: -363,
                    x: -2,
                    width: 724,
                    mouseThrough: !0,
                    height: 1628,
                    centerX: 0,
                    bottom: 15
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 890,
                        x: 15,
                        var: "endPush"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 190,
                        x: 516,
                        var: "starPush"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: -143,
                        x: 20,
                        width: 110,
                        var: "btn_paradrop",
                        height: 105
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 6,
                            x: 1,
                            var: "par_2",
                            skin: "gun/空投2.png"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: -14,
                                x: -189,
                                var: "img_time",
                                skin: "gun/空投箱提醒效果.png"
                            }
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                skin: "gun/空投2.png",
                                renderType: "mask"
                            }
                        }]
                    }, {
                        type: "Image",
                        props: {
                            y: -76,
                            x: 57,
                            width: 171,
                            var: "par_1",
                            skin: "gun/空投1.png",
                            height: 186,
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: -60,
                            x: -44,
                            var: "par_3",
                            skin: "gun/空投3.png"
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 75,
                            x: 73,
                            width: 40,
                            var: "lab_paradrop",
                            height: 30,
                            fontSize: 30,
                            color: "#ffffff",
                            bold: !0,
                            align: "center"
                        }
                    }]
                }]
            }, {
                type: "Box",
                props: {
                    y: 450,
                    x: 721,
                    width: 506,
                    visible: !0,
                    var: "promote_box",
                    height: 470
                },
                child: [{
                    type: "Image",
                    props: {
                        y: -250,
                        x: -3,
                        width: 476,
                        var: "box_img",
                        skin: "back/gamebox2.png",
                        height: 680
                    }
                }, {
                    type: "List",
                    props: {
                        y: -191,
                        x: 80,
                        width: 379,
                        var: "promote_list",
                        vScrollBarSkin: " ",
                        spaceY: 5,
                        spaceX: 2,
                        repeatX: 3,
                        height: 572
                    },
                    child: [{
                        type: "Box",
                        props: {
                            y: -2,
                            x: 8,
                            width: 120,
                            renderType: "render",
                            height: 140
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 5,
                                width: 100,
                                name: "icon_img",
                                height: 100,
                                centerX: 0
                            },
                            child: [{
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 100,
                                    skin: "game/返回主页.png",
                                    renderType: "mask",
                                    height: 100
                                }
                            }]
                        }, {
                            type: "Label",
                            props: {
                                y: 110,
                                x: 6,
                                width: 109,
                                text: "label",
                                name: "name_lbl",
                                height: 25,
                                fontSize: 20,
                                color: "#ffffff",
                                align: "center"
                            }
                        }]
                    }]
                }, {
                    type: "Box",
                    props: {
                        y: 336,
                        x: -1,
                        width: 60,
                        var: "promoteBack_btn",
                        height: 60
                    }
                }]
            }, {
                type: "Image",
                props: {
                    y: -363,
                    x: -2,
                    visible: !1,
                    var: "promoteBg_img",
                    top: 0,
                    skin: "game/Black_bg.png",
                    sizeGrid: "17,23,13,21",
                    right: 0,
                    left: 0,
                    bottom: 0,
                    alpha: .85
                }
            }],
            animations: [{
                nodes: [{
                    target: 443,
                    keyframes: {
                        y: [{
                            value: 719,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "y",
                            index: 0
                        }, {
                            value: 646,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 16
                        }, {
                            value: 646,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 23
                        }, {
                            value: 646,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 29
                        }, {
                            value: 646,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 35
                        }, {
                            value: 719,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 50
                        }],
                        x: [{
                            value: 519,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "x",
                            index: 0
                        }, {
                            value: 623,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 16
                        }, {
                            value: 623,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 23
                        }, {
                            value: 623,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 29
                        }, {
                            value: 623,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 35
                        }, {
                            value: 519,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 50
                        }],
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 16
                        }, {
                            value: .8,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 23
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 29
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 35
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 50
                        }],
                        rotation: [{
                            value: 45,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "rotation",
                            index: 0
                        }, {
                            value: 45,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "rotation",
                            index: 23
                        }, {
                            value: 45,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "rotation",
                            index: 29
                        }, {
                            value: 45,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "rotation",
                            index: 35
                        }, {
                            value: 45,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "rotation",
                            index: 50
                        }]
                    }
                }],
                name: "ani1",
                id: 1,
                frameRate: 24,
                action: 0
            }, {
                nodes: [{
                    target: 443,
                    keyframes: {
                        y: [{
                            value: 1041,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "y",
                            index: 0
                        }, {
                            value: 1111,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 12
                        }, {
                            value: 1111,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "y",
                            index: 15
                        }, {
                            value: 1111,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 25
                        }, {
                            value: 1111,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 30
                        }, {
                            value: 1041,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 42
                        }],
                        x: [{
                            value: 437,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "x",
                            index: 0
                        }, {
                            value: 437,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 42
                        }],
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 15
                        }, {
                            value: .8,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 20
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 25
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 42
                        }],
                        rotation: [{
                            value: 180,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "rotation",
                            index: 0
                        }, {
                            value: 180,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "rotation",
                            index: 42
                        }]
                    }
                }],
                name: "ani2",
                id: 2,
                frameRate: 24,
                action: 0
            }, {
                nodes: [{
                    target: 443,
                    keyframes: {
                        y: [{
                            value: 790,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "y",
                            index: 0
                        }, {
                            value: 790,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 4
                        }, {
                            value: 790,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 9
                        }, {
                            value: 790,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 14
                        }],
                        x: [{
                            value: 301,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "x",
                            index: 0
                        }, {
                            value: 301,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 4
                        }, {
                            value: 301,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 9
                        }, {
                            value: 301,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 14
                        }, {
                            value: 122,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "x",
                            index: 30
                        }, {
                            value: 122,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 35
                        }, {
                            value: 122,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 40
                        }, {
                            value: 122,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 45
                        }],
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 4
                        }, {
                            value: .8,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 9
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 14
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 30
                        }, {
                            value: .8,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 35
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 40
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 45
                        }],
                        rotation: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "rotation",
                            index: 0
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "rotation",
                            index: 4
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "rotation",
                            index: 9
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "rotation",
                            index: 14
                        }]
                    }
                }],
                name: "ani3",
                id: 3,
                frameRate: 24,
                action: 0
            }, {
                nodes: [{
                    target: 443,
                    keyframes: {
                        y: [{
                            value: 719,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "y",
                            index: 0
                        }, {
                            value: 647,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 16
                        }, {
                            value: 647,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "y",
                            index: 20
                        }, {
                            value: 647,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 30
                        }, {
                            value: 647,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 35
                        }, {
                            value: 719,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "y",
                            index: 50
                        }],
                        x: [{
                            value: 519,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "x",
                            index: 0
                        }, {
                            value: 443,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 16
                        }, {
                            value: 443,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "x",
                            index: 20
                        }, {
                            value: 443,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 30
                        }, {
                            value: 443,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 35
                        }, {
                            value: 519,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "x",
                            index: 50
                        }],
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 16
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 20
                        }, {
                            value: .8,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "scaleY",
                            index: 25
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 30
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 35
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "scaleY",
                            index: 50
                        }],
                        rotation: [{
                            value: -45,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            key: "rotation",
                            index: 0
                        }, {
                            value: -45,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 443,
                            label: null,
                            key: "rotation",
                            index: 50
                        }]
                    }
                }],
                name: "ani1_0",
                id: 1,
                frameRate: 24,
                action: 0
            }, {
                nodes: [{
                    target: 387,
                    keyframes: {
                        y: [{
                            value: 467,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "y",
                            index: 0
                        }],
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1.025,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleY",
                            index: 20
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleY",
                            index: 40
                        }],
                        scaleX: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleX",
                            index: 0
                        }, {
                            value: 1.025,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleX",
                            index: 20
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleX",
                            index: 40
                        }],
                        anchorY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "anchorY",
                            index: 0
                        }]
                    }
                }, {
                    target: 410,
                    keyframes: {
                        y: [{
                            value: 460,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "y",
                            index: 0
                        }],
                        scaleY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1.025,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleY",
                            index: 20
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleY",
                            index: 40
                        }],
                        scaleX: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleX",
                            index: 0
                        }, {
                            value: 1.025,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleX",
                            index: 20
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleX",
                            index: 40
                        }],
                        anchorY: [{
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "anchorY",
                            index: 0
                        }]
                    }
                }],
                name: "ani4",
                id: 4,
                frameRate: 24,
                action: 0
            }, {
                nodes: [{
                    target: 387,
                    keyframes: {
                        y: [{
                            value: 316,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "y",
                            index: 0
                        }, {
                            value: 316,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "y",
                            index: 5
                        }, {
                            value: 467,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "y",
                            index: 6
                        }],
                        scaleY: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleY",
                            index: 5
                        }],
                        scaleX: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleX",
                            index: 0
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "scaleX",
                            index: 5
                        }],
                        anchorY: [{
                            value: .5,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "anchorY",
                            index: 0
                        }, {
                            value: .5,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "anchorY",
                            index: 5
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 387,
                            key: "anchorY",
                            index: 6
                        }]
                    }
                }, {
                    target: 410,
                    keyframes: {
                        y: [{
                            value: 393,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "y",
                            index: 0
                        }, {
                            value: 393,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "y",
                            index: 5
                        }, {
                            value: 460,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "y",
                            index: 6
                        }],
                        scaleY: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleY",
                            index: 5
                        }],
                        scaleX: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleX",
                            index: 0
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "scaleX",
                            index: 5
                        }],
                        anchorY: [{
                            value: .5,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "anchorY",
                            index: 0
                        }, {
                            value: .5,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "anchorY",
                            index: 5
                        }, {
                            value: 1,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 410,
                            key: "anchorY",
                            index: 6
                        }]
                    }
                }],
                name: "ani5",
                id: 5,
                frameRate: 24,
                action: 0
            }, {
                nodes: [{
                    target: 458,
                    keyframes: {
                        y: [{
                            value: 429,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "y",
                            index: 0
                        }, {
                            value: 422,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "y",
                            index: 3
                        }, {
                            value: 422,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "y",
                            index: 8
                        }, {
                            value: 350,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "y",
                            index: 23
                        }],
                        x: [{
                            value: 351,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "x",
                            index: 0
                        }, {
                            value: 360,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "x",
                            index: 3
                        }, {
                            value: 360,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "x",
                            index: 8
                        }, {
                            value: 652,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "x",
                            index: 23
                        }],
                        visible: [{
                            value: !0,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 458,
                            key: "visible",
                            index: 0
                        }, {
                            value: !1,
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 458,
                            key: "visible",
                            index: 24
                        }],
                        scaleY: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "scaleY",
                            index: 0
                        }, {
                            value: 2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "scaleY",
                            index: 3
                        }, {
                            value: 2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            label: null,
                            key: "scaleY",
                            index: 8
                        }, {
                            value: .3,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "scaleY",
                            index: 23
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "scaleY",
                            index: 24
                        }],
                        scaleX: [{
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "scaleX",
                            index: 0
                        }, {
                            value: 2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "scaleX",
                            index: 3
                        }, {
                            value: 2,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            label: null,
                            key: "scaleX",
                            index: 8
                        }, {
                            value: .3,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "scaleX",
                            index: 23
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "scaleX",
                            index: 24
                        }],
                        pivotY: [{
                            value: 65,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "pivotY",
                            index: 0
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "pivotY",
                            index: 3
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "pivotY",
                            index: 8
                        }, {
                            value: 0,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "pivotY",
                            index: 23
                        }],
                        pivotX: [{
                            value: 44,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "pivotX",
                            index: 0
                        }],
                        anchorY: [{
                            value: .5,
                            tweenMethod: "linearNone",
                            tween: !0,
                            target: 458,
                            key: "anchorY",
                            index: 0
                        }]
                    }
                }],
                name: "ani6",
                id: 6,
                frameRate: 24,
                action: 0
            }, {
                nodes: [{
                    target: 473,
                    keyframes: {
                        skin: [{
                            value: "game/图层 1.png",
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 473,
                            key: "skin",
                            index: 0
                        }, {
                            value: "game/图层 2.png",
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 473,
                            key: "skin",
                            index: 8
                        }, {
                            value: "game/图层 3.png",
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 473,
                            key: "skin",
                            index: 16
                        }, {
                            value: "game/图层 4.png",
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 473,
                            key: "skin",
                            index: 24
                        }, {
                            value: "game/图层 5.png",
                            tweenMethod: "linearNone",
                            tween: !1,
                            target: 473,
                            key: "skin",
                            index: 32
                        }]
                    }
                }],
                name: "ani7",
                id: 7,
                frameRate: 50,
                action: 2
            }]
        },
        e;
    }(View),
    t.MainMenuUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.MoreGameUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    top: 0,
                    skin: "game/dabeijing.png",
                    right: 0,
                    left: 0,
                    bottom: 0
                }
            }, {
                type: "Image",
                props: {
                    y: 0,
                    var: "back_img",
                    skin: "game/Black_bg.png",
                    sizeGrid: "20,32,13,27",
                    right: 0,
                    left: 0,
                    height: 180
                },
                child: [{
                    type: "Image",
                    props: {
                        x: 20,
                        var: "close_btn",
                        skin: "game/返回33.png",
                        scaleY: .7,
                        scaleX: .7,
                        bottom: 25
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 0,
                            x: 134,
                            var: "home_img",
                            skin: "game/主页.png"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 0,
                        x: 513,
                        width: 209,
                        var: "game_img",
                        height: 180
                    }
                }]
            }, {
                type: "List",
                props: {
                    x: 0,
                    width: 720,
                    var: "roleSkinList",
                    top: 180,
                    spaceY: 10,
                    spaceX: 8,
                    repeatY: 3,
                    bottom: 20
                }
            }]
        },
        e;
    }(View),
    t.MoreGameUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.OffLinePanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "bg_img",
                    top: -5,
                    skin: "game/Black_bg.png",
                    right: -5,
                    left: -5,
                    bottom: -5,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    y: 287,
                    x: 23,
                    width: 662,
                    skin: "back/lixian_di.png",
                    height: 760,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 33,
                        x: 90,
                        skin: "back/xiaoguo.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 491,
                        x: 331,
                        var: "btn_get",
                        skin: "gunPanel/离线奖励领取按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 632,
                        x: 331,
                        var: "btn_doubleGet",
                        skin: "gunPanel/双倍领取按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 55,
                        x: 585,
                        width: 87,
                        visible: !1,
                        var: "btn_return",
                        skin: "gunPanel/关闭按钮.png",
                        runtime: "MyButton",
                        pivotY: 37,
                        pivotX: 45,
                        height: 81
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 216,
                        x: 269,
                        skin: "gunPanel/金币.png"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 353,
                        x: 107,
                        width: 448,
                        var: "lab_offMoney",
                        text: "50.62B",
                        height: 70,
                        fontSize: 50,
                        font: "Microsoft YaHei",
                        color: "#ffffff",
                        align: "center"
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.OffLinePanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.RankUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "20.20,20,20",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    y: 144,
                    x: 35,
                    skin: "back/paihang_di.png",
                    sizeGrid: "498,0,295,0",
                    mouseThrough: !1,
                    mouseEnabled: !0,
                    centerY: -63,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 43,
                        x: 592,
                        var: "close_btn",
                        skin: "gunPanel/关闭按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 179,
                        x: 14,
                        width: 611,
                        var: "wxRank_box",
                        height: 610
                    },
                    child: [{
                        type: "Sprite",
                        props: {
                            y: 0,
                            x: 0,
                            width: 611,
                            var: "wxRank_sp",
                            height: 610
                        }
                    }]
                }, {
                    type: "Tab",
                    props: {
                        y: 117,
                        x: 14,
                        width: 611,
                        var: "rankSkinTab",
                        selectedIndex: 0,
                        height: 60
                    },
                    child: [{
                        type: "Button",
                        props: {
                            y: 0,
                            x: 0,
                            stateNum: 2,
                            skin: "gunPanel/滑块.png",
                            name: "item0",
                            labelStrokeColor: "#ffffff",
                            labelSize: 20,
                            labelPadding: "-3",
                            labelColors: "#ffffff"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 13,
                                x: 82,
                                skin: "gunPanel/挑战关卡.png"
                            }
                        }]
                    }, {
                        type: "Button",
                        props: {
                            y: 0,
                            x: 305,
                            stateNum: 2,
                            skin: "gunPanel/滑块.png",
                            name: "item1",
                            labelStrokeColor: "#ffffff",
                            labelSize: 20,
                            labelPadding: "-3",
                            labelColors: "#ffffff"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                y: 13,
                                x: 83,
                                skin: "gunPanel/累积金币.png"
                            }
                        }]
                    }]
                }]
            }]
        },
        e;
    }(Dialog),
    t.RankUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.RapidPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    y: -5,
                    x: -5,
                    var: "bg_img",
                    top: -5,
                    skin: "game/Black_bg.png",
                    right: -5,
                    left: -5,
                    bottom: -5,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    width: 659,
                    skin: "back/jiasubg.png",
                    sizeGrid: "18,16,16,14",
                    height: 760,
                    centerY: 0,
                    centerX: 0,
                    anchorY: .5,
                    anchorX: .5
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 614,
                        x: 331,
                        var: "btn_addRapid",
                        skin: "back/shipin_jiasu_200.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 438,
                        x: 331,
                        var: "btn_rapid",
                        skin: "back/jiasu60.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 41,
                        x: 601,
                        var: "btn_return",
                        skin: "gunPanel/关闭按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Tab",
                    props: {
                        y: 29,
                        x: -52,
                        width: 72,
                        visible: !1,
                        var: "tab_rapid",
                        selectedIndex: 0,
                        height: 370
                    },
                    child: [{
                        type: "Button",
                        props: {
                            y: 0,
                            x: 0,
                            stateNum: 2,
                            skin: "gunPanel/收益增速1.png",
                            name: "item0",
                            labelStrokeColor: "#ffffff",
                            labelColors: "#ffffff"
                        }
                    }, {
                        type: "Button",
                        props: {
                            y: 186,
                            x: 0,
                            stateNum: 2,
                            skin: "gunPanel/时间道具1.png",
                            name: "item1",
                            labelStrokeColor: "#ffffff",
                            labelColors: "#ffffff"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 78,
                        x: 222,
                        var: "img_skin",
                        skin: "gunPanel/2小时.png"
                    }
                }, {
                    type: "Box",
                    props: {
                        y: 312,
                        x: 161,
                        width: 340,
                        var: "box_timer",
                        height: 369
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 130,
                            x: 56,
                            width: 67,
                            skin: "gunPanel/金币.png",
                            height: 68
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 275,
                            x: 170,
                            width: 328,
                            var: "btn_diaChangeGold",
                            skin: "gunPanel/钻石按钮.png",
                            runtime: "MyButton",
                            pivotY: 66,
                            pivotX: 166,
                            height: 149
                        },
                        child: [{
                            type: "Label",
                            props: {
                                y: 37,
                                x: 155,
                                var: "lab_diamondNum",
                                text: "500",
                                fontSize: 50,
                                color: "#ffffff",
                                bold: !0
                            }
                        }]
                    }, {
                        type: "Label",
                        props: {
                            x: 63,
                            text: "2小时收益",
                            fontSize: 45,
                            color: "#ffffff"
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 75,
                            text: "立刻获得2小时枪收益",
                            fontSize: 35,
                            color: "#ffffff"
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 138,
                            x: 132,
                            var: "lab_goldNum",
                            text: "562M",
                            fontSize: 45,
                            color: "#ffffff",
                            bold: !0
                        }
                    }]
                }]
            }]
        },
        e;
    }(Dialog),
    t.RapidPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.RecentlyUseUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    y: 0,
                    x: 0,
                    width: 720,
                    skin: "game/dabeijing.png",
                    height: 1728
                }
            }, {
                type: "Label",
                props: {
                    y: -147,
                    x: 0,
                    width: 720,
                    text: "label",
                    height: 305,
                    bgColor: "#f0eeef"
                }
            }, {
                type: "Image",
                props: {
                    y: 73,
                    x: 26,
                    var: "close_btn",
                    skin: "game/返回键.png"
                }
            }, {
                type: "Label",
                props: {
                    y: 77.5,
                    x: 300,
                    text: "小程序",
                    fontSize: 40,
                    color: "#060606",
                    bold: !0
                }
            }, {
                type: "Label",
                props: {
                    y: 186,
                    x: 26,
                    text: "最近使用",
                    fontSize: 30,
                    color: "#898686",
                    bold: !0
                }
            }, {
                type: "List",
                props: {
                    y: 242,
                    x: 26,
                    width: 696,
                    var: "v_list",
                    spaceY: 20,
                    spaceX: 40,
                    selectedIndex: -1,
                    selectEnable: !0,
                    repeatY: 20,
                    repeatX: 1,
                    renderType: "render",
                    height: 1313
                }
            }]
        },
        e;
    }(View),
    t.RecentlyUseUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.RepetitionPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "bg_img",
                    top: -5,
                    skin: "game/Black_bg.png",
                    right: -5,
                    left: -3,
                    bottom: -5,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    y: 428,
                    skin: "back/plus50.png",
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 379,
                        x: 241,
                        var: "btn_return",
                        skin: "gunPanel/不，谢谢.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 263,
                        x: 306,
                        var: "btn_confirm",
                        skin: "gunPanel/视频领取.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 103,
                        x: 267,
                        var: "lab_number",
                        text: "+100",
                        fontSize: 50,
                        color: "#ffffff",
                        bold: !0
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.RepetitionPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.ReviveUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "20.20,20,20",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .7
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        skin: "back/fuhuodi.png",
                        mouseThrough: !1,
                        mouseEnabled: !0,
                        centerY: -170,
                        centerX: 6
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 276,
                            x: 132,
                            var: "hero_img",
                            skin: "player/Hero_1.png",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 431,
                        x: 252,
                        skin: "game/进度条.png"
                    },
                    child: [{
                        type: "Image",
                        props: {
                            var: "progress_img",
                            skin: "game/进度条2.png"
                        },
                        child: [{
                            type: "Pie",
                            props: {
                                y: 114,
                                x: 114,
                                startAngle: -90,
                                radius: 124.76086403134475,
                                lineWidth: 1,
                                fillColor: "#ff0000",
                                endAngle: 270
                            }
                        }]
                    }]
                }, {
                    type: "Box",
                    props: {
                        y: 954,
                        x: 259,
                        width: 203,
                        var: "close_btn",
                        height: 77
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 38,
                            x: 100,
                            skin: "game/不需要.png",
                            runtime: "MyButton",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 843,
                        x: 359,
                        var: "continue_Btn",
                        skin: "game/复活按钮.png",
                        runtime: "MyButton",
                        pivotY: 68,
                        pivotX: 201
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.ReviveUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.RoleSkinPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "View",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    top: -10,
                    skin: "back/di_xia.png",
                    right: -10,
                    left: -10,
                    bottom: -10
                }
            }, {
                type: "Image",
                props: {
                    y: -262,
                    var: "back_img",
                    skin: "back/bg_shang.png",
                    right: -10,
                    left: -10
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 324,
                        x: 76,
                        var: "close_btn",
                        skin: "gunPanel/关闭按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Tab",
                    props: {
                        y: 658,
                        x: 72,
                        width: 602,
                        var: "roleSkinTab",
                        selectedIndex: 0,
                        height: 47
                    },
                    child: [{
                        type: "Button",
                        props: {
                            y: 0,
                            x: 34,
                            stateNum: 2,
                            skin: "gunPanel/广告标签.png",
                            name: "item0",
                            labelStrokeColor: "#ffffff",
                            labelColors: "#ffffff"
                        }
                    }, {
                        type: "Button",
                        props: {
                            y: 0,
                            x: 237,
                            stateNum: 2,
                            skin: "gunPanel/签到标签.png",
                            name: "item1",
                            labelStrokeColor: "#ffffff",
                            labelColors: "#ffffff"
                        }
                    }, {
                        type: "Button",
                        props: {
                            y: 0,
                            x: 438,
                            stateNum: 2,
                            skin: "gunPanel/成就标签.png",
                            name: "item2",
                            labelStrokeColor: "#ffffff",
                            labelColors: "#ffffff"
                        }
                    }]
                }, {
                    type: "Image",
                    props: {
                        y: 656,
                        x: 618,
                        width: 25,
                        var: "img_item2",
                        skin: "gunPanel/红色叹号.png",
                        height: 25
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 656,
                        x: 417,
                        width: 25,
                        var: "img_item1",
                        skin: "gunPanel/红色叹号.png",
                        height: 25
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 656,
                        x: 215,
                        width: 25,
                        var: "img_item0",
                        skin: "gunPanel/红色叹号.png",
                        height: 25
                    }
                }, {
                    type: "List",
                    props: {
                        y: 732,
                        x: 33,
                        width: 673,
                        var: "roleSkinList",
                        spaceY: 50,
                        spaceX: 8,
                        repeatY: 2,
                        height: 576
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 542,
                        x: 372,
                        var: "img_roleSkin",
                        skin: "player/Hero_1.png",
                        scaleY: 2,
                        scaleX: 2,
                        anchorY: .5,
                        anchorX: .5
                    }
                }]
            }]
        },
        e;
    }(View),
    t.RoleSkinPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.ShieldTipUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .7
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 429,
                        x: 363,
                        var: "light_img",
                        skin: "back/xiaoguo.png",
                        mouseThrough: !1,
                        mouseEnabled: !0,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 350,
                        x: 289,
                        skin: "game/大盾牌.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 162,
                        x: 597,
                        var: "close_btn",
                        skin: "game/关闭.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 886,
                        x: 359,
                        var: "get_btn",
                        skin: "gunPanel/免费领取 .png",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 170,
                        x: 47,
                        width: 626,
                        var: "result_lbl",
                        text: "Get a shield",
                        height: 56,
                        fontSize: 60,
                        color: "#FFFFFF",
                        bold: !0,
                        align: "center"
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 716,
                        x: 30,
                        width: 657,
                        var: "money_lbl",
                        text: "Can withstand a damage",
                        height: 53,
                        fontSize: 45,
                        color: "#FFFFFF",
                        align: "center"
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.ShieldTipUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.ShopPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "img_bg",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    var: "box",
                    skin: "back/shangdian_di.png",
                    sizeGrid: "18,16,16,14",
                    centerY: -46,
                    centerX: 0
                },
                child: [{
                    type: "List",
                    props: {
                        y: 104,
                        x: 10,
                        width: 629,
                        var: "shopList",
                        vScrollBarSkin: "gun/vscroll.png",
                        spaceY: 30,
                        repeatX: 1,
                        height: 759
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 52,
                        x: 581,
                        var: "close_btn",
                        skin: "gunPanel/关闭按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.ShopPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.SignInPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "bg_img",
                    top: -5,
                    skin: "game/Black_bg.png",
                    right: -5,
                    left: -5,
                    bottom: -5,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    width: 685,
                    skin: "back/qiandao_bg.png",
                    height: 978,
                    centerY: -44,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 452,
                        x: 38,
                        var: "img_seventh",
                        skin: "back/diqitian.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 716,
                        x: 341,
                        var: "btn_get",
                        skin: "gunPanel/离线奖励领取按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 846,
                        x: 341,
                        var: "btn_doubleGet",
                        skin: "gunPanel/双倍领取按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 57,
                        x: 617,
                        var: "btn_return",
                        skin: "gunPanel/关闭按钮.png",
                        runtime: "MyButton",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 708,
                        x: 199,
                        var: "lab_gettion",
                        skin: "gunPanel/欢迎明天再来！.png"
                    }
                }, {
                    type: "List",
                    props: {
                        y: 143,
                        x: 36,
                        width: "100",
                        var: "signInList",
                        spaceY: -8,
                        spaceX: -9,
                        repeatY: 2,
                        repeatX: 3,
                        height: "100"
                    },
                    child: [{
                        type: "Box",
                        props: {
                            renderType: "render"
                        },
                        child: [{
                            type: "Image",
                            props: {
                                skin: "gunPanel/签到已领取.png"
                            }
                        }]
                    }]
                }]
            }]
        },
        e;
    }(Dialog),
    t.SignInPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.SnipeGoldTipUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .7
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 584,
                        x: 357,
                        var: "light_img",
                        skin: "back/juji.png",
                        anchorY: .5,
                        anchorX: .5
                    },
                    child: [{
                        type: "Image",
                        props: {
                            y: 59,
                            x: 596,
                            visible: !1,
                            var: "close_btn",
                            skin: "gunPanel/关闭按钮.png",
                            runtime: "MyButton",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 570,
                            x: 337,
                            visible: !0,
                            var: "double_btn",
                            skin: "gunPanel/分享双倍领取.png",
                            runtime: "MyButton",
                            anchorY: .5,
                            anchorX: .5
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 382,
                            x: 163,
                            var: "get_btn",
                            skin: "gunPanel/离线奖励领取按钮.png"
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 287,
                            x: 435,
                            width: 141,
                            var: "headShootMoney_lbl",
                            text: "133",
                            strokeColor: "#000000",
                            height: 44,
                            fontSize: 50,
                            color: "#FFFFFF",
                            bold: !0,
                            align: "left"
                        }
                    }, {
                        type: "Label",
                        props: {
                            y: 195,
                            x: 435,
                            width: 183,
                            var: "money_lbl",
                            text: "1234",
                            strokeColor: "#000000",
                            height: 47,
                            fontSize: 50,
                            color: "#FFFFFF",
                            bold: !0,
                            align: "left"
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 295,
                            x: 390,
                            skin: "game/金币.png"
                        }
                    }, {
                        type: "Image",
                        props: {
                            y: 201,
                            x: 390,
                            skin: "game/金币.png"
                        }
                    }]
                }]
            }]
        },
        e;
    }(Dialog),
    t.SnipeGoldTipUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.TaskPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "bg_img",
                    top: -5,
                    skin: "game/Black_bg.png",
                    right: -5,
                    left: -3,
                    bottom: -5,
                    alpha: .7
                }
            }, {
                type: "Image",
                props: {
                    y: 151,
                    x: 17,
                    width: 685,
                    skin: "back/renwu_bg.png",
                    height: 978,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "List",
                    props: {
                        y: 136,
                        x: 35,
                        width: 616,
                        var: "taskList",
                        spaceY: 6,
                        repeatX: 1,
                        height: 706
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 807,
                        x: 25,
                        skin: "back/renwu_bg1.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 50,
                        x: 626,
                        var: "btn_return",
                        skin: "gunPanel/关闭按钮.png",
                        anchorY: .5,
                        anchorX: .5
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.TaskPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            t.prototype.createChildren.call(this),
            this.createView(i.panel.TipsPanelUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                popupCenter: !0,
                mouseThrough: !0,
                mouseEnabled: !1,
                height: 1280,
                group: "contentLabel",
                centerY: 0,
                centerX: 0
            },
            child: [{
                type: "Box",
                props: {
                    y: 640,
                    x: 360,
                    width: 720,
                    var: "box",
                    height: 1280,
                    anchorY: .5,
                    anchorX: .5
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 587,
                        x: 0,
                        width: 720,
                        skin: "gun/tipsbg.png",
                        sizeGrid: "51,51,55,48",
                        mouseThrough: !0,
                        mouseEnabled: !1,
                        height: 106
                    }
                }, {
                    type: "Label",
                    props: {
                        y: 0,
                        x: 0,
                        wordWrap: !0,
                        width: 400,
                        var: "contentLabel",
                        valign: "middle",
                        top: 0,
                        text: "提示\\nas仨",
                        right: 0,
                        left: 0,
                        height: 200,
                        fontSize: 35,
                        font: "SimHei",
                        color: "#fbfbfb",
                        bottom: 0,
                        align: "center"
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.TipsPanelUI = e;
}(ui || (ui = {})),
function(i) {
    var t, e;
    t = i.panel || (i.panel = {}),
    e = function(t) {
        function e() {
            return t.call(this) || this;
        }
        return __extends(e, t),
        e.prototype.createChildren = function() {
            View.regComponent("MyButton", MyButton),
            t.prototype.createChildren.call(this),
            this.createView(i.panel.TryGunTipUI.uiView);
        }
        ,
        e.uiView = {
            type: "Dialog",
            props: {
                width: 720,
                top: 0,
                right: 0,
                popupCenter: !0,
                left: 0,
                height: 1280,
                bottom: 0
            },
            child: [{
                type: "Image",
                props: {
                    var: "background_img",
                    top: -10,
                    skin: "game/Black_bg.png",
                    sizeGrid: "27,39,20,29",
                    right: -10,
                    left: -10,
                    bottom: -10,
                    alpha: .7
                }
            }, {
                type: "Box",
                props: {
                    width: 720,
                    height: 1280,
                    centerY: 0,
                    centerX: 0
                },
                child: [{
                    type: "Image",
                    props: {
                        y: 915,
                        x: 256,
                        visible: !1,
                        var: "close_btn",
                        skin: "game/不了，谢谢.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 802,
                        x: 356,
                        width: 328,
                        visible: !1,
                        var: "get_btn",
                        skin: "game/分享立即使用.png",
                        runtime: "MyButton",
                        pivotY: 64,
                        pivotX: 160,
                        height: 149
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 472,
                        x: 360,
                        var: "light_img",
                        skin: "back/xiaoguo.png",
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 120,
                        x: 115,
                        skin: "back/free_1.png"
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 480,
                        x: 360,
                        var: "gun_img",
                        skin: "gun/gun_2.png",
                        scaleY: .8,
                        scaleX: .8,
                        anchorY: .5,
                        anchorX: .5
                    }
                }, {
                    type: "Image",
                    props: {
                        y: 805,
                        x: 360,
                        visible: !1,
                        var: "freeGun_btn",
                        skin: "gunPanel/确定新武器.png",
                        anchorY: .5,
                        anchorX: .5
                    }
                }]
            }]
        },
        e;
    }(Dialog),
    t.TryGunTipUI = e;
}(ui || (ui = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(n) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._awardDialPanel || (this._awardDialPanel = new ui.panel.AwardDialPanelUI(),
            this._awardDialPanel.onClosed = this.onclose.bind(this),
            this._awardDialPanel.onOpened = this.onopen.bind(this)),
            this._awardDialPanel;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(n.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(n.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(n.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(n.MODULE_UIDATA),
            this._awardDialPanel.btn_return.on(laya.events.Event.CLICK, this, this.close),
            this._awardDialPanel.btn_confirm.on(Laya.Event.CLICK, this, this.onConfirm),
            this._awardDialPanel.popupCenter = !0,
            this._awardDialPanel.show(),
            n.PlatForm.getInstance().showBannerAd(),
            this._awardDialPanel.btn_return.visible = !1,
            this.init();
        }
        ,
        t.prototype.init = function() {
            var t = n.DataUtils.getBuyGoldById(1e3 + this._playerModule.RoleInfo.MaxGunId);
            switch (this._uiDataModule.getDialAward) {
            case 0:
                this._awardDialPanel.img_icon.skin = "gunPanel/钻石.png",
                this._awardDialPanel.img_double.skin = "",
                this._awardDialPanel.btn_confirm.skin = "gunPanel/确定新武器.png",
                this._awardDialPanel.lab_goldNum.text = (200 * this._uiDataModule.doubleAward).toString();
                break;

            case 1:
                this._awardDialPanel.img_icon.skin = "gunPanel/金币.png",
                this._awardDialPanel.btn_confirm.skin = "gunPanel/确定新武器.png",
                this._awardDialPanel.img_double.skin = "",
                this._awardDialPanel.lab_goldNum.text = n.CommonUtil.moneyChange(.4 * t * this._uiDataModule.doubleAward);
                break;

            case 2:
                this._awardDialPanel.img_icon.skin = "gunPanel/转盘获得_翻倍图标.png",
                this._socialModule.getShareOrAd(n.ShareType.DialReward3) == n.RewardType.Share ? (n.CommonUtil.Log("share"),
                this._awardDialPanel.btn_confirm.skin = "gunPanel/分享领取.png") : (n.CommonUtil.Log("ad"),
                this._awardDialPanel.btn_confirm.skin = "gunPanel/视频领取.png"),
                this._awardDialPanel.img_double.skin = "gunPanel/下次奖励翻3倍.png",
                this._awardDialPanel.lab_goldNum.text = "",
                this._awardDialPanel.btn_return.visible = !0;
                if (!ishasAds)
                    this._awardDialPanel.btn_confirm.skin = "gunPanel/确定新武器.png"
                break;

            case 3:
                this._awardDialPanel.img_icon.skin = "gunPanel/钻石.png",
                this._awardDialPanel.btn_confirm.skin = "gunPanel/确定新武器.png",
                this._awardDialPanel.img_double.skin = "",
                this._awardDialPanel.lab_goldNum.text = (20 * this._uiDataModule.doubleAward).toString();
                break;

            case 4:
                this._awardDialPanel.img_icon.skin = "gunPanel/金币.png",
                this._awardDialPanel.btn_confirm.skin = "gunPanel/确定新武器.png",
                this._awardDialPanel.img_double.skin = "",
                this._awardDialPanel.lab_goldNum.text = n.CommonUtil.moneyChange(.2 * t * this._uiDataModule.doubleAward);
                break;

            case 5:
                this._awardDialPanel.img_icon.skin = "gunPanel/钻石.png",
                this._awardDialPanel.btn_confirm.skin = "gunPanel/确定新武器.png",
                this._awardDialPanel.img_double.skin = "",
                this._awardDialPanel.lab_goldNum.text = (100 * this._uiDataModule.doubleAward).toString();
                break;

            case 6:
                this._awardDialPanel.img_icon.skin = "gunPanel/转盘获得_翻倍图标.png",
                this._socialModule.getShareOrAd(n.ShareType.DialReward6) == n.RewardType.Share ? (n.CommonUtil.Log("share"),
                this._awardDialPanel.btn_confirm.skin = "gunPanel/分享领取.png") : (n.CommonUtil.Log("ad"),
                this._awardDialPanel.btn_confirm.skin = "gunPanel/视频领取.png"),
                this._awardDialPanel.img_double.skin = "gunPanel/下次奖励翻6倍.png",
                this._awardDialPanel.lab_goldNum.text = "",
                this._awardDialPanel.btn_return.visible = !0;
                if (!ishasAds)
                    this._awardDialPanel.btn_confirm.skin = "gunPanel/确定新武器.png"
                break;

            case 7:
                this._awardDialPanel.img_icon.skin = "gunPanel/金币.png",
                this._awardDialPanel.btn_confirm.skin = "gunPanel/确定新武器.png",
                this._awardDialPanel.img_double.skin = "",
                this._awardDialPanel.lab_goldNum.text = n.CommonUtil.moneyChange(.6 * t * this._uiDataModule.doubleAward);
            }
        }
        ,
        t.prototype.onHide = function() {
            this._awardDialPanel.btn_confirm.off(Laya.Event.CLICK, this, this.onConfirm),
            this._awardDialPanel.btn_return.off(laya.events.Event.CLICK, this, this.close),
            this._uiDataModule.IsDialOpen || n.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onConfirm = function() {
            var t = n.DataUtils.getBuyGoldById(1e3 + this._playerModule.RoleInfo.MaxGunId);
            if (2 == this._uiDataModule.getDialAward)
                ishasAds ? this._socialModule.doShareOrAd(n.ShareType.DialReward3, Laya.Handler.create(this, this.successCallBack)) : this.successCallBack("ok")
            else if (6 == this._uiDataModule.getDialAward)
                ishasAds ? this._socialModule.doShareOrAd(n.ShareType.DialReward6, Laya.Handler.create(this, this.successCallBack)) : this.successCallBack("ok")
            else {
                var e = new n.DiamondFlutterPanel();
                switch (Laya.stage.addChild(e),
                1 == this._uiDataModule.getDialAward || 4 == this._uiDataModule.getDialAward || 7 == this._uiDataModule.getDialAward ? e.gold() : e.diamond(),
                this._uiDataModule.getDialAward) {
                case 0:
                    this._playerModule.RoleInfo.Diamond += 200 * this._uiDataModule.doubleAward;
                    break;

                case 1:
                    this._playerModule.RoleInfo.Gold += .4 * t * this._uiDataModule.doubleAward,
                    this._playerModule.RoleInfo.AllGold += .4 * t * this._uiDataModule.doubleAward;
                    break;

                case 3:
                    this._playerModule.RoleInfo.Diamond += 20 * this._uiDataModule.doubleAward;
                    break;

                case 4:
                    this._playerModule.RoleInfo.Gold += .2 * t * this._uiDataModule.doubleAward,
                    this._playerModule.RoleInfo.AllGold += .2 * t * this._uiDataModule.doubleAward;
                    break;

                case 5:
                    this._playerModule.RoleInfo.Diamond += 100 * this._uiDataModule.doubleAward;
                    break;

                case 7:
                    this._playerModule.RoleInfo.Gold += .6 * t * this._uiDataModule.doubleAward,
                    this._playerModule.RoleInfo.AllGold += .6 * t * this._uiDataModule.doubleAward;
                }
                this._uiDataModule.doubleAward = 1,
                this.close();
            }
        }
        ,
        t.prototype.successCallBack = function(t) {
            n.CommonUtil.Log("result------" + t),
            "ok" == t && (this._uiDataModule.doubleAward = 3,
            2 == this._uiDataModule.getDialAward ? this._uiDataModule.doubleAward = 3 : 6 == this._uiDataModule.getDialAward && (this._uiDataModule.doubleAward = 6),
            this._playerModule.RoleInfo.tipsDescribe = "Gain Success",
            asgard.ui.UIManager.openView(n.UIRes.TIPS),
            this.close());
        }
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(n.UIRes.AWARDDIAL),
            n.SystemHelper.playSoundById(n.SoundId.Button);
        }
        ,
        t.prototype.close = function() {
            this._awardDialPanel.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    n.AwardDialPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(a) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e.SHOOT_ANGLE = 300,
            e.SHOOT_ANGLE_TIME = 1200,
            e._isDown = !1,
            e.isGunRecoil = !1,
            e._isRecoilUp = !1,
            e.isStartAim = !1,
            e.isOnHide = !1,
            e.recoilDistance = 0,
            e.recoilY = 0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.BattleMainUI()),
            this._pnl;
        }
        ,
        t.prototype.onInit = function() {
            this._aimImg = new Laya.Image(),
            this._aimImg.anchorX = .5,
            this._aimImg.anchorY = .5,
            this._aimImg.pos(300, 300),
            this._pnl.addChild(this._aimImg),
            this._aimImg.visible = !1;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(a.MODULE_PLAYER),
            this._uiDataModule = asgard.module.ModuleManager.getModule(a.MODULE_UIDATA),
            this._socialModule = asgard.module.ModuleManager.getModule(a.MODULE_SOCIAL),
            this._gameModule = asgard.module.ModuleManager.getModule(a.MODULE_GAME),
            this._pnl.game_box.on(Laya.Event.CLICK, this, this.tipClick);
            var t = data.StaticDataFactory.findChapter(this._playerModule.RoleInfo.Chapter)
              , e = 1;
            0 == this._uiDataModule.GameMode ? t && (e = t.MapId) : (5 == (e = Math.floor(9 * Math.random()) + 1) && (e = 6),
            this._uiDataModule.mapId = e),
            this._pnl.far1_img.skin = "map/yuan" + e + "-2.png",
            this._pnl.far2_img.skin = "map/yuan" + e + "-1.png",
            this._pnl.middle1_img.skin = 8 == e ? "" : "map/zhong" + e + "-2.png",
            this._pnl.middle2_img.skin = "map/zhong" + e + "-1.png",
            a.SpriteConst.STEP_BLOCK_IMG = "step/台阶1（" + a.SpriteConst.getMapNameById(e) + "）.png",
            a.SpriteConst.STEP_TRIANGLE_IMG = "step/台阶2（" + a.SpriteConst.getMapNameById(e) + "）.png",
            a.SpriteManager.getInstance().FarBg = this._pnl.far1_img,
            a.SpriteManager.getInstance().MiddleBg = this._pnl.middle1_img,
            a.SpriteManager.getInstance().newGame(),
            this._pnl.game_box.addChild(a.SpriteManager.getInstance().GameMap.SpriteRoot),
            this._pnl.game_box.addChild(a.SpriteManager.getInstance().GameMap.BulletStage),
            this._pnl.far1_img.y = a.SystemConst.REAL_HEIGHT - 2560,
            this._pnl.middle1_img.y = a.SystemConst.REAL_HEIGHT - 2560,
            Laya.timer.once(500, this, function() {
                a.SpriteManager.getInstance().MovePlayerToNextLevel();
            }),
            this._pnl.shoot_bg.cacheAs = "bitmap",
            this._pnl.shoot_bg.visible = !1,
            this._shootScope = new Laya.Sprite(),
            this._shootScope.blendMode = "destination-out",
            this._pnl.shoot_bg.addChild(this._shootScope);
            var i = data.StaticDataFactory.findGun(this._playerModule.RoleInfo.ShowGunIdId + 1e3);
            this._aimImg.skin = i ? "back/zhunxing" + i.SnipeType + ".png" : "back/准星.png",
            this._aimImg.visible = !1,
            this.moveSpeed = this.SHOOT_ANGLE / this.SHOOT_ANGLE_TIME * 1.2,
            1.1 < a.GameConst.REAL_STATIC ? this._pnl.shootAim_btn.bottom = 320 : this._pnl.shootAim_btn.bottom = 280,
            a.WeChat.bannerLoaded ? this._pnl.fireLight_img.bottom = a.GameConst.BannerHeight - 20 : this._pnl.fireLight_img.bottom = 0,
            asgard.events.EventsDispatcher.registerEventListener(a.GameEvents.EVENT_SHOOT_MODE_CHANGE, this, this.refreshShootMode),
            asgard.events.EventsDispatcher.registerEventListener(a.GameEvents.EVENT_WX_ON_SHOW, this, this.comeBack),
            asgard.events.EventsDispatcher.registerEventListener(a.GameEvents.EVENT_WX_ON_HIDE, this, this.wxOnhide);
        }
        ,
        t.prototype.refreshShootMode = function() {
            this._gameModule.IsSnipe && this._gameModule.PlayerGun.IsAiming ? (this._gameModule.SnipeAnimY = this._gameModule.MonsterHeadPoint.y + 210,
            this._gameModule.SnipeAnimX = 360,
            this._pnl.shoot_bg.visible = !0,
            this.isStartAim = !0) : (this._pnl.shoot_bg.visible = !1,
            this._aimImg.visible = !1,
            this._shootScope.graphics.clear(),
            !this._gameModule.IsSnipe && this._gameModule.PlayerGun.IsAiming && this._gameModule.PlayerGun.GunAim());
        }
        ,
        t.prototype.comeBack = function() {
            console.log("微信comeBack"),
            this._pnl && this._gameModule.PlayerGun.IsAiming && this._gameModule.IsSnipe && this._gameModule.CurrentMonster && this._gameModule.IsSnipe && this._gameModule.PlayerGun.IsAiming && (this._gameModule.SnipeAnimY = this._gameModule.MonsterHeadPoint.y + 210,
            this._gameModule.SnipeAnimX = 360,
            this._shootScope.graphics.clear(),
            this._shootScope.graphics.drawCircle(this._gameModule.SnipeAnimX, this._gameModule.SnipeAnimY, 197, "#000000"),
            this._pnl.shoot_bg.visible = !0,
            this._aimImg.pos(this._gameModule.SnipeAnimX, this._gameModule.SnipeAnimY),
            this._aimImg.visible = !0,
            this.isStartAim = !0);
        }
        ,
        t.prototype.wxOnhide = function() {}
        ,
        t.prototype.onFrame = function(t, e) {
            this._pnl && this._gameModule.PlayerGun.IsAiming && this._gameModule.IsSnipe && this._gameModule.CurrentMonster && !this.isOnHide && (this._gameModule.SnipeAnimX >= this._gameModule.CurrentMonster.Sprite.x && this._gameModule.CurrentIsStartLeft && (this.isStartAim = !1),
            this._gameModule.SnipeAnimX <= this._gameModule.CurrentMonster.Sprite.x && !this._gameModule.CurrentIsStartLeft && (this.isStartAim = !1),
            this.isStartAim && (this._gameModule.CurrentIsStartLeft ? this._gameModule.SnipeAnimX += this.moveSpeed * e * 1.5 : this._gameModule.SnipeAnimX -= this.moveSpeed * e * 1.5),
            this._aimImg.visible = !0,
            this._gameModule.SnipeAnimY <= this._gameModule.MonsterHeadPoint.y - 80 ? this._isDown = !0 : this._gameModule.SnipeAnimY >= this._gameModule.MonsterHeadPoint.y + 210 && (this._isDown = !1),
            this.isStartAim || (this._isDown ? this._gameModule.SnipeAnimY += this.moveSpeed * e : this._gameModule.SnipeAnimY -= this.moveSpeed * e),
            this.isStartAim ? (this._shootScope.graphics.clear(),
            this._shootScope.graphics.drawCircle(this._gameModule.SnipeAnimX, this._gameModule.SnipeAnimY, 197, "#000000"),
            this._aimImg.pos(this._gameModule.SnipeAnimX, this._gameModule.SnipeAnimY)) : (this._shootScope.graphics.clear(),
            this._shootScope.graphics.drawCircle(this._gameModule.CurrentMonster.Sprite.x, this._gameModule.SnipeAnimY, 197, "#000000"),
            this._aimImg.pos(this._gameModule.CurrentMonster.Sprite.x, this._gameModule.SnipeAnimY))),
            this.isGunRecoil && (this._isRecoilUp ? (this.recoilDistance += .65 * e,
            72 <= this.recoilDistance && (this._isRecoilUp = !1)) : (this.recoilDistance -= .15 * e,
            this.recoilDistance <= 0 && (this.isGunRecoil = !1)),
            this._gameModule.SnipeAnimY = this.recoilY - this.recoilDistance,
            this._shootScope.graphics.clear(),
            this._shootScope.graphics.drawCircle(this._gameModule.SnipeAnimX, this._gameModule.SnipeAnimY, 197, "#000000"),
            this._aimImg.pos(this._gameModule.SnipeAnimX, this._gameModule.SnipeAnimY));
        }
        ,
        t.prototype.onHide = function() {
            this._shootScope.graphics.clear(),
            asgard.events.EventsDispatcher.unregisterEventListener(a.GameEvents.EVENT_SHOOT_MODE_CHANGE, this, this.refreshShootMode),
            asgard.events.EventsDispatcher.unregisterEventListener(a.GameEvents.EVENT_WX_ON_SHOW, this, this.comeBack),
            asgard.events.EventsDispatcher.unregisterEventListener(a.GameEvents.EVENT_WX_ON_HIDE, this, this.wxOnhide);
        }
        ,
        t.prototype.testClick = function() {}
        ,
        t.prototype.tipClick = function() {
            var i = this;
            if (this._gameModule.IsSnipe && this._gameModule.PlayerGun.IsAiming) {
                this._gameModule.ShootBulletCount = 0,
                this._gameModule.ShootDamage = 0,
                this._gameModule.MonsterUseSkill = !1,
                a.SystemHelper.playSound(this._gameModule.PlayerGun.FireSound),
                this.lightShow(this._pnl.fireLight_img, 30);
                for (var t = function(e) {
                    n._gameModule.PlayerGun.ShootType == a.ShootType.JiGuanQiang ? Laya.timer.once(0 + 90 * e, n, function() {
                        var t = 20 * e;
                        i.ShootBack(t),
                        i.lightShow(i._pnl.fireLight_img, 30),
                        a.SystemHelper.stopSound(i._gameModule.PlayerGun.FireSound),
                        a.SystemHelper.playSound(i._gameModule.PlayerGun.FireSound);
                    }) : n._gameModule.PlayerGun.ShootType == a.ShootType.SanDan ? n.ShootBack(50 * (e - 1)) : n.ShootBack(0);
                }, n = this, e = 0; e < this._gameModule.PlayerGun.BulletCount; e++)
                    t(e);
            } else
                a.SpriteManager.getInstance().PlayerFire();
        }
        ,
        t.prototype.lightShow = function(t, e) {
            var i = this;
            Laya.Tween.clearAll(t),
            t.visible = !0,
            t.alpha = 0;
            Laya.Tween.to(t, {
                alpha: 1
            }, e, null, Laya.Handler.create(this, function() {
                Laya.timer.once(30, i, function() {
                    i.lightHide(t, e);
                });
            }));
        }
        ,
        t.prototype.lightHide = function(t, e) {
            Laya.Tween.clearAll(t),
            t.alpha = 1;
            Laya.Tween.to(t, {
                alpha: 0
            }, e, null, Laya.Handler.create(this, function() {
                t.visible = !1;
            }));
        }
        ,
        t.prototype.GunRecoil = function() {
            this._isDown = !1,
            this.isGunRecoil = !0,
            this._isRecoilUp = !0,
            this.recoilY = this._gameModule.SnipeAnimY,
            this._shootScope.graphics.clear(),
            this._shootScope.graphics.drawCircle(this._gameModule.CurrentMonster.Sprite.x, this._gameModule.SnipeAnimY, 197, "#000000"),
            this._aimImg.pos(this._gameModule.CurrentMonster.Sprite.x, this._gameModule.SnipeAnimY),
            this.recoilDistance = 0;
        }
        ,
        t.prototype.ShootBack = function(t) {
            var e = this._aimImg.y + t;
            e >= this._gameModule.MonsterHeadPoint.y && e <= this._gameModule.MonsterBodyPoint.y && !this._gameModule.CurrentMonster.IsFlashing ? 0 < this._gameModule.CurrentMonster.Hp && (this._gameModule.CurrentMonster.HasHelmet ? this._gameModule.ShootProtectSkill(a.MonsterSkill.Helmet, this._aimImg.x, e) : this._gameModule.CurrentMonster.HasManaShield ? this._gameModule.ShootProtectSkill(a.MonsterSkill.ManaShield, this._aimImg.x, e) : this._gameModule.CurrentMonster.HasUnBeatable ? this._gameModule.ShootProtectSkill(a.MonsterSkill.UnBeatable, this._aimImg.x, e) : this._gameModule.CurrentMonster.HasTank ? this._gameModule.ShootProtectSkill(a.MonsterSkill.Tank, this._aimImg.x, e) : this._gameModule.CurrentMonster.HasGlassShield && this._gameModule.CurrentMonster.IsGlassing ? this._gameModule.ShootProtectSkill(a.MonsterSkill.GlassShield, this._aimImg.x, e) : (a.CommonUtil.Log("爆头"),
            this._gameModule.ShootMonster(!0, this._aimImg.x, e),
            a.PlatForm.getInstance().vibrateShort(),
            Laya.timer.once(200, this, function() {
                a.SystemHelper.playSoundById(a.SoundId.HeadShoot, 1, .7);
            })),
            this._gameModule.CurrentMonster.hitBack()) : e >= this._gameModule.MonsterBodyPoint.y && e <= this._gameModule.MonsterBodyPoint.y + this._gameModule.CurrentMonster.Body.height && !this._gameModule.CurrentMonster.IsFlashing && !this._gameModule.CurrentMonster.HasTank ? 0 < this._gameModule.CurrentMonster.Hp && (this._gameModule.CurrentMonster.HasShield ? this._gameModule.ShootProtectSkill(a.MonsterSkill.Shield, this._aimImg.x, e) : this._gameModule.CurrentMonster.HasManaShield ? this._gameModule.ShootProtectSkill(a.MonsterSkill.ManaShield, this._aimImg.x, e) : this._gameModule.CurrentMonster.HasUnBeatable ? this._gameModule.ShootProtectSkill(a.MonsterSkill.UnBeatable, this._aimImg.x, e) : this._gameModule.CurrentMonster.HasGlassShield && this._gameModule.CurrentMonster.IsGlassing ? this._gameModule.ShootProtectSkill(a.MonsterSkill.GlassShield, this._aimImg.x, e) : (a.CommonUtil.Log("击中身子"),
            this._gameModule.ShootMonster(!1, this._aimImg.x, e),
            Laya.timer.once(200, this, function() {
                a.SystemHelper.playSoundById(a.SoundId.BodyShoot);
            })),
            this._gameModule.CurrentMonster.hitBack()) : e >= this._gameModule.MonsterBodyPoint.y && e <= this._gameModule.MonsterBodyPoint.y + 130 && this._gameModule.CurrentMonster.HasTank ? this._gameModule.ShootProtectSkill(a.MonsterSkill.Tank, this._aimImg.x, e) : this._gameModule.ShootBulletCount++,
            this._gameModule.PlayerGun.StopAim(),
            this.GunRecoil();
        }
        ,
        t.prototype.close = function() {
            a.SystemHelper.playSoundById(a.SoundId.Button);
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    a.BattlePanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.BulletAddTipUI(),
            this._pnl.onClosed = this.onclose.bind(this),
            this._pnl.onOpened = this.onopen.bind(this)),
            this._pnl;
        }
        ,
        t.prototype.onInit = function() {}
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._pnl.get_btn.on(laya.events.Event.CLICK, this, this.getClick),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.closeWindow),
            this._pnl.popupCenter = !0,
            this._pnl.show(),
            this._playerModule.RoleInfo.HasGetBulletCount <= 0 ? this._pnl.get_btn.skin = "gunPanel/免费领取 .png" : this._socialModule.getShareOrAd(e.ShareType.AddBullet) == e.RewardType.Share ? this._pnl.get_btn.skin = "gunPanel/分享领取.png" : this._pnl.get_btn.skin = "gunPanel/视频领取.png";
        }
        ,
        t.prototype.onHide = function() {
            this._pnl.get_btn.off(laya.events.Event.CLICK, this, this.getClick),
            this._pnl.close_btn.off(laya.events.Event.CLICK, this, this.closeWindow);
        }
        ,
        t.prototype.getClick = function() {
            0 < this._playerModule.RoleInfo.HasGetBulletCount ? this._socialModule.doShareOrAd(e.ShareType.FreeTry, Laya.Handler.create(this, this.successCallBack)) : this.successCallBack("ok");
        }
        ,
        t.prototype.successCallBack = function(t) {
            e.CommonUtil.Log("result------" + t),
            "ok" == t && (this._gameModule.BulletCount += 5,
            this._playerModule.RoleInfo.HasGetBulletCount++,
            this._gameModule.AddBulletsTimes += 1,
            this._playerModule.TrySaveGameData(),
            this.close());
        }
        ,
        t.prototype.closeWindow = function() {
            this.close(),
            asgard.ui.UIManager.openView(e.UIRes.ENDLOSE),
            asgard.ui.UIManager.openView(e.UIRes.RECENTLYUSE),
            e.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.ADDBULLET);
        }
        ,
        t.prototype.close = function() {
            this._pnl.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.BulletAddTipPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(o) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e.listIsTrue = !0,
            e.gunIndex = 0,
            e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._changeGunPanel || (this._changeGunPanel = new ui.panel.ChangeGunUI()),
            this._changeGunPanel;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(o.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(o.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(o.MODULE_SOCIAL),
            this._changeGunPanel.close_btn.on(laya.events.Event.CLICK, this, this.close),
            this._changeGunPanel.btn_employ.on(Laya.Event.CLICK, this, this.onEmploy),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_GOLD_REFRESH, this, this.addGold),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_DIAMOND_REFRESH, this, this.addDiamond),
            this.listIsTrue = !0,
            this.init();
            var t = this._playerModule.RoleInfo.ShowGunIdId - 1;
            this._changeGunPanel.rankList.tweenTo(t, 0),
            this.propertyChange(t),
            this.addGold(),
            this.addDiamond(),
            this._changeGunPanel.lab_perSecondGold.text = o.CommonUtil.moneyChange(this._playerModule.RoleInfo.SecondAddGold) + "/s",
            o.PlatForm.getInstance().showBannerAd();
        }
        ,
        t.prototype.Adaptive = function() {
            this._changeGunPanel.size(Laya.stage.width, Laya.stage.height),
            this._changeGunPanel.box.x = (Laya.stage.width - this._changeGunPanel.box.width) / 2,
            this._changeGunPanel.box.y = (Laya.stage.height - this._changeGunPanel.box.height) / 2;
        }
        ,
        t.prototype.onHide = function() {
            this._changeGunPanel.close_btn.off(laya.events.Event.CLICK, this, this.close),
            this._changeGunPanel.btn_employ.off(Laya.Event.CLICK, this, this.onEmploy),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_GOLD_REFRESH, this, this.addGold),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_DIAMOND_REFRESH, this, this.addDiamond),
            o.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.addGold = function() {
            var t = o.CommonUtil.moneyChange(this._playerModule.RoleInfo.Gold);
            0 < this._playerModule.RoleInfo.Gold ? this._changeGunPanel.lab_gold.text = t : this._changeGunPanel.lab_gold.text = "0";
        }
        ,
        t.prototype.addDiamond = function() {
            var t = o.CommonUtil.moneyChange(this._playerModule.RoleInfo.Diamond);
            0 < this._playerModule.RoleInfo.Diamond ? this._changeGunPanel.lab_diamond.text = t : this._changeGunPanel.lab_diamond.text = "0";
        }
        ,
        t.prototype.init = function() {
            this._changeGunPanel.rankList.hScrollBarSkin = "";
            for (var t, e = asgard.data.StaticDataManager.getSheetDatas(1), i = [], n = new Laya.ColorFilter([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]), a = 0; a < e.length; a++) {
                var s = "gun/gun_" + (t = e[a]).Level + ".png"
                  , r = "gun/gunShadow_" + t.Level + ".png"
                  , o = [];
                this.findGun(t.Level) || (o = [n]),
                i[a] = {
                    img_gunIcon: {
                        skin: s,
                        filters: o
                    },
                    img_gunBg: {
                        skin: r
                    }
                };
            }
            i.unshift({
                img_gunIcon: {
                    skin: null
                },
                img_gunBg: {
                    skin: null
                }
            }),
            i.push({
                img_gunIcon: {
                    skin: null
                },
                img_gunBg: {
                    skin: null
                }
            }),
            this._changeGunPanel.rankList.array = i,
            this._changeGunPanel.rankList.renderHandler = new Laya.Handler(this,this.Click),
            this._changeGunPanel.rankList.scrollBar.on(Laya.Event.END, this, this.onEnd);
        }
        ,
        t.prototype.Click = function(t, e) {
            this.listArr = this._changeGunPanel.rankList.cells;
            o.CommonUtil.getGlobalByPoint(this.listArr[0]).x;
            for (var i = 0; i < this.listArr.length; i++) {
                this.listArr[i];
                1 == i ? this.listArr[1].scale(1.5, 1.5) : this.listArr[i].scale(1, 1);
            }
            this.listIsTrue = !1;
        }
        ,
        t.prototype.onEnd = function() {
            this.listArr = this._changeGunPanel.rankList.cells;
            var t = 0;
            t = o.CommonUtil.getGlobalByPoint(this.listArr[0]).x < -15 ? 1 : 0,
            this._changeGunPanel.rankList.tweenTo(this.listArr[t].x / 256, 200, Laya.Handler.create(this, function() {
                for (var t = 0; t < this.listArr.length; t++) {
                    this.listArr[t];
                    1 == t ? Laya.Tween.to(this.listArr[1], {
                        scaleX: 1.5,
                        scaleY: 1.5
                    }, 500, Laya.Ease.circOut) : this.listArr[t].scale(1, 1);
                }
            })),
            this.propertyChange(this.listArr[t].x / 256);
        }
        ,
        t.prototype.propertyChange = function(t) {
            t++;
            var e = data.StaticDataFactory.findGun(1e3 + t)
              , i = this.findGun(t);
            e && (this._changeGunPanel.lab_name.text = "LV." + e.Level + "  " + e.Name,
            i ? this._playerModule.RoleInfo.ShowGunIdId == t ? (this._changeGunPanel.lab_employing.visible = !0,
            this._changeGunPanel.btn_employ.visible = !1,
            this._changeGunPanel.btn_employ.disabled = !1) : (this._changeGunPanel.lab_employing.visible = !1,
            this._changeGunPanel.btn_employ.disabled = !1,
            this._changeGunPanel.btn_employ.visible = !0) : (this._changeGunPanel.lab_employing.visible = !1,
            this._changeGunPanel.btn_employ.visible = !0,
            this._changeGunPanel.btn_employ.disabled = !0),
            this.gunIndex = t,
            Laya.Tween.to(this._changeGunPanel.pro_bulletCount, {
                value: e.BulletCount / 10
            }, 800, Laya.Ease.cubicOut),
            Laya.Tween.to(this._changeGunPanel.pro_demage, {
                value: e.Demage / 600
            }, 800, Laya.Ease.cubicOut),
            Laya.Tween.to(this._changeGunPanel.pro_longth, {
                value: e.Longth / 10
            }, 800, Laya.Ease.cubicOut),
            this._changeGunPanel.lab_longth.text = e.Longth.toString(),
            this._changeGunPanel.lab_demage.text = e.Demage.toString(),
            this._changeGunPanel.lab_bulletCount.text = e.BulletCount.toString());
        }
        ,
        t.prototype.onEmploy = function() {
            asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_CHANGEGUN, this.gunIndex),
            this._playerModule.RoleInfo.showNewGun || (o.PlatForm.getInstance().aldSendEvent("新用户首次换枪成功"),
            this._playerModule.RoleInfo.showNewGun = !0),
            this.close();
        }
        ,
        t.prototype.findGun = function(t) {
            for (var e = this._playerModule.RoleInfo.gunBuyNum, i = 0; i < e.length; i++) {
                var n = e[i];
                if (n.id == t && n.isTrue)
                    return !0;
            }
            return !1;
        }
        ,
        t.prototype.findGunMoney = function(t) {
            for (var e = o.DataUtils.getBuyGoldById(1e3 + t), i = this._playerModule.RoleInfo.gunBuyNum, n = data.StaticDataFactory.findGun(1e3 + t), a = 0; a < i.length; a++) {
                var s = i[a];
                if (s.id == t)
                    for (var r = 0; r < s.buyNum; r++)
                        e *= n.AddGold;
            }
            return e;
        }
        ,
        t.prototype.findGunJewel = function(t) {
            for (var e = data.StaticDataFactory.findGun(1e3 + t).StartJewel, i = this._playerModule.RoleInfo.gunBuyNum, n = data.StaticDataFactory.findGun(1e3 + t), a = 0; a < i.length; a++) {
                var s = i[a];
                if (s.id == t)
                    for (var r = 0; r < s.buyJewelNum; r++)
                        e += n.AddJewel;
            }
            return e;
        }
        ,
        t.prototype.vacancyGun = function() {
            for (var t = 0; t < this._playerModule.RoleInfo.ShowGunArr.length; t++) {
                if (0 == this._playerModule.RoleInfo.ShowGunArr[t])
                    return t;
            }
            return "false";
        }
        ,
        t.prototype.buyGunBuyNum = function(t, e) {
            for (var i = this._playerModule.RoleInfo.gunBuyNum, n = 0; n < i.length; n++) {
                var a = i[n];
                a.id == t && ("money" == e ? a.buyNum++ : a.buyJewelNum++);
            }
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {}
        ,
        t.prototype.close = function() {
            asgard.ui.UIManager.closeView(o.UIRes.CHANGEGUN),
            o.SystemHelper.playSoundById(o.SoundId.Button);
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    o.ChangeGunPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var n = Laya.Event
      , t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e.rolationArr = [45, 90, 135, 180, 225, 270, 315, 360],
            e.istrueClick = !0,
            e._isTip = !0,
            e._dialIndex = 0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._DialpPnl || (this._DialpPnl = new ui.panel.DialUI(),
            this._DialpPnl.onClosed = this.onclose.bind(this),
            this._DialpPnl.onOpened = this.onopen.bind(this)),
            this._DialpPnl;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(e.MODULE_UIDATA),
            this._DialpPnl.close_btn.on(n.CLICK, this, this.close),
            this._DialpPnl.free_btn.on(n.CLICK, this, this.freeClick),
            this._DialpPnl.btn_addNum.on(n.CLICK, this, this.onAddNum),
            this._DialpPnl.dial_img.rotation = 0,
            this._DialpPnl.show(),
            this.prepareData(),
            this.init(),
            e.PlatForm.getInstance().showBannerAd(),
            this._uiDataModule.IsDialOpen = !0
            // e.PlatformData.Instance.ShareSwitch ? this._DialpPnl.btn_addNum.visible = !0 : this._DialpPnl.btn_addNum.visible = !1;
            //增加转盘次数按钮
            ishasAds ? this._DialpPnl.btn_addNum.visible = true : this._DialpPnl.btn_addNum.visible = false;

        }
        ,
        t.prototype.onHide = function() {
            e.PlatForm.getInstance().hideBannerAd(),
            this._DialpPnl.close_btn.off(n.CLICK, this, this.close),
            this._DialpPnl.btn_addNum.off(n.CLICK, this, this.onAddNum),
            this._DialpPnl.free_btn.off(n.CLICK, this, this.freeClick);
        }
        ,
        t.prototype.onAddNum = function() {
            this._socialModule.getShareOrAd(e.ShareType.Dial),
            this._socialModule.doShareOrAd(e.ShareType.Dial, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        t.prototype.successCallBack = function(t) {
            e.CommonUtil.Log("result------" + t),
            "ok" == t && (this._playerModule.RoleInfo.DialNum += 5,
            this.init(),
            this._playerModule.RoleInfo.tipsDescribe = "Gain Success",
            asgard.ui.UIManager.openView(e.UIRes.TIPS));
        }
        ,
        t.prototype.prepareData = function() {
            var t;
            t = 1 == this._playerModule.RoleInfo.DialNum ? [10, 20, 10, 10, 20, 10, 10, 10] : [5, 10, 5, 10, 10, 10, 40, 10],
            this._dialIndex = e.NumberUtils.randomWeightByWeightArr(t);
        }
        ,
        t.prototype.initDial = function() {
            this._DialpPnl.dial_img.rotation -= 1800;
        }
        ,
        t.prototype.startEffect = function() {
            var t = this;
            this.istrueClick && (this._playerModule.RoleInfo.DialNum--,
            this.istrueClick = !1,
            this.prepareData(),
            Laya.Tween.to(this._DialpPnl.dial_img, {
                rotation: 1800 + this.rolationArr[this._dialIndex]
            }, 2e3, Laya.Ease.circInOut, Laya.Handler.create(this, function() {
                t.getAward(t._dialIndex),
                t.getReward();
            })),
            this.init());
        }
        ,
        t.prototype.getReward = function() {
            this.initDial(),
            this.prepareData();
        }
        ,
        t.prototype.init = function() {
            0 < this._playerModule.RoleInfo.DialNum ? this._DialpPnl.free_btn.disabled = !1 : this._DialpPnl.free_btn.disabled = !0,
            this._playerModule.RoleInfo.dialDot = !0,
            this._DialpPnl.lab_surplusNum.text = "Left:" + this._playerModule.RoleInfo.DialNum,
            this._playerModule.TrySaveGameData();
        }
        ,
        t.prototype.getAward = function(t) {
            this.istrueClick = !0;
            this._uiDataModule.getDialAward = t;

            asgard.ui.UIManager.openView(e.UIRes.AWARDDIAL);

        }
        ,
        t.prototype.freeClick = function() {
            e.PlatForm.getInstance().aldSendEvent("点击抽奖按钮"),
            this.startEffect();
        }
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.DIAL);
        }
        ,
        t.prototype.close = function() {
            this._DialpPnl.close(),
            this._uiDataModule.IsDialOpen = !1;
        }
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onopen = function() {}
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.DialPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._uiDataModule = asgard.module.ModuleManager.getModule(i.MODULE_UIDATA),
            t._playerModule = asgard.module.ModuleManager.getModule(i.MODULE_PLAYER),
            t.onShow(),
            t;
        }
        return __extends(t, e),
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(i.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(i.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(i.MODULE_SOCIAL),
            Laya.timer.once(2e3, this, this.onclose);
        }
        ,
        t.prototype.diamond = function() {
            this.ani1.play(0, !1);
        }
        ,
        t.prototype.gold = function() {
            this.ani2.play(0, !1);
        }
        ,
        t.prototype.onclose = function() {
            this.removeSelf();
        }
        ,
        t;
    }(ui.panel.DiamondFlutterPanelUI);
    i.DiamondFlutterPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function r(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e._rankShowFame = 0,
            e._addMoney = 0,
            e._headShootMoney = 0,
            e._addDiamond = 0,
            e;
        }
        return __extends(r, i),
        r.prototype.createView = function() {
            return this._endTipPnl || (this._endTipPnl = new ui.panel.EndLoseTipUI(),
            this._endTipPnl.onClosed = this.onclose.bind(this),
            this._endTipPnl.onOpened = this.onopen.bind(this)),
            this._endTipPnl;
        }
        ,
        r.prototype.onInit = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER);
        }
        ,
        r.prototype.onShow = function() {
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._endTipPnl.double_btn.on(laya.events.Event.CLICK, this, this.doubleClick),
            this._endTipPnl.get_btn.on(laya.events.Event.CLICK, this, this.getClick),
            this._endTipPnl.home_btn.on(laya.events.Event.CLICK, this, this.closeClick),
            this._endTipPnl.replay_btn.on(laya.events.Event.CLICK, this, this.replayClick),
            this._endTipPnl.Chapter_lbl.text = "Level" + this._playerModule.RoleInfo.Chapter,
            this._headShootMoney = 45 * this._playerModule.RoleInfo.SecondAddGold * this._gameModule.HeadShootTimes * .1,
            this._endTipPnl.headShootTimes_lbl.text = e.CommonUtil.moneyChange(this._headShootMoney),
            this._endTipPnl.result_lbl.text = "Fail",
            this._socialModule.getShareOrAd(e.ShareType.EndDoubleReward) == e.RewardType.Share ? this._endTipPnl.double_btn.skin = "gunPanel/分享双倍领取.png" : this._endTipPnl.double_btn.skin = "gunPanel/双倍领取按钮.png",
            this._endTipPnl.popupCenter = !0,
            this._endTipPnl.show(),
            e.PlatForm.getInstance().showBannerAd(),
            this.refreshList(),
            asgard.events.EventsDispatcher.registerEventListener(e.GameEvents.EVENT_BACK_HOME, this, this.goHome),
            this._playerModule.RoleInfo.Gold += this._addMoney + this._headShootMoney,
            this._playerModule.RoleInfo.AllGold += this._addMoney + this._headShootMoney,
            this._playerModule.RoleInfo.Diamond += this._addDiamond,
            this._playerModule.TrySaveGameData();
            ishasAds ? this._endTipPnl.double_btn.visible = true : this._endTipPnl.double_btn.visible = false;

        }
        ,
        r.prototype.aniUrls = function(t, e) {
            var i = [];
            return i;
        }
        ,
        r.prototype.replayClick = function() {
            this.goHome(2),
            asgard.ui.UIManager.openView(e.UIRes.BATTLE),
            asgard.ui.UIManager.openView(e.UIRes.GAME);
        }
        ,
        r.prototype.refreshList = function() {
            r.gamesArr = [];
            // var t = [];
            // if (8 <= this._socialModule.MoreGameArr.length)
            //     for (; t.length < 8; ) {
            //         var e = Math.floor(10 * Math.random());
            //         t.indexOf(e) < 0 && t.push(e);
            //     }
            // else
            //     for (var i = 0; i < 10; i++)
            //         t.push(i);
            // for (i = 0; i < t.length; i++)
            //     r.gamesArr.push(this._socialModule.MoreGameArr[t[i]]);
            this._endTipPnl.promote_list.renderHandler = new Laya.Handler(this,this.updateList),
            this._endTipPnl.promote_list.array = [];
        }
        ,
        r.prototype.updateList = function(t, e) {
            var i = t.getChildByName("icon_img")
              , n = t.getChildByName("name_lbl")
              , a = r.gamesArr[e];
            if (i.removeChildren(),
            a) {
                if (i.skin = a.IconUrl,
                n.text = a.Name,
                1 == a.IsGif) {
                    var s = new Laya.Animation();
                    s.scale(i.width / 92, i.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(a.PicName + "_", a.PngCount)).play(),
                    i.addChild(s);
                }
                t.on(Laya.Event.CLICK, this, this.gameClick, [e]);
            }
        }
        ,
        r.prototype.gameClick = function(t) {
            r.gamesArr[t] && (console.log("点击了跳转： " + r.gamesArr[t].Name),
            IsWXGame() && wx.navigateToMiniProgram({
                appId: r.gamesArr[t].Id,
                path: r.gamesArr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("失败_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("失败_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_成功"),
                    asgard.ui.UIManager.openView(e.UIRes.EXITPANEL);
                },
                fail: function() {
                    console.log("失败_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("失败_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_失败");
                }
            }));
        }
        ,
        r.prototype.onHide = function() {
            this._endTipPnl.get_btn.off(laya.events.Event.CLICK, this, this.getClick),
            this._endTipPnl.double_btn.off(laya.events.Event.CLICK, this, this.doubleClick),
            this._endTipPnl.home_btn.off(laya.events.Event.CLICK, this, this.closeClick),
            this._endTipPnl.replay_btn.off(laya.events.Event.CLICK, this, this.replayClick),
            asgard.events.EventsDispatcher.unregisterEventListener(e.GameEvents.EVENT_BACK_HOME, this, this.goHome);
        }
        ,
        r.prototype.closeClick = function() {
            this.goHome(2),
            e.PlatForm.getInstance().hideBannerAd();
        }
        ,
        r.prototype.doubleClick = function() {
            this._socialModule.doShareOrAd(e.ShareType.EndDoubleReward, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        r.prototype.successCallBack = function(t) {
            e.CommonUtil.Log("result------" + t),
            "ok" == t && (this._playerModule.RoleInfo.Gold += 2 * (this._addMoney + this._headShootMoney),
            this._playerModule.RoleInfo.AllGold += 2 * (this._addMoney + this._headShootMoney),
            this._playerModule.TrySaveGameData(),
            this.closeWindow());
        }
        ,
        r.prototype.closeWindow = function() {
            e.SystemHelper.stopMusic(),
            e.PlatformData.Instance.ShareSwitch && asgard.ui.UIManager.openView(e.UIRes.MOREGAME),
            e.PlatForm.getInstance().hideBannerAd();
        }
        ,
        r.prototype.goHome = function(t) {
            asgard.ui.UIManager.closeView(e.UIRes.GAME),
            asgard.ui.UIManager.closeView(e.UIRes.BATTLE),
            asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_REFRESH_MAIN_MENU),
            this.close(),
            e.SystemHelper.playSoundById(e.SoundId.Button);
        }
        ,
        r.prototype.getClick = function() {
            this._playerModule.RoleInfo.Gold += this._addMoney + this._headShootMoney,
            this._playerModule.RoleInfo.AllGold += this._addMoney + this._headShootMoney,
            this._playerModule.TrySaveGameData(),
            this.closeWindow();
        }
        ,
        r.prototype.onopen = function() {}
        ,
        r.prototype.onFrame = function(t, e) {}
        ,
        r.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.ENDLOSE);
        }
        ,
        r.prototype.close = function() {
            this._endTipPnl.close();
        }
        ,
        r;
    }(asgard.ui.BaseUIPanel);
    e.EndLoseTipPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(o) {
    var t = function(i) {
        function r(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e._isCloseClick = !1,
            e._rankShowFame = 0,
            e._addMoney = 0,
            e;
        }
        return __extends(r, i),
        r.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.EndRewardUI(),
            this._pnl.onClosed = this.onclose.bind(this),
            this._pnl.onOpened = this.onopen.bind(this)),
            this._pnl;
        }
        ,
        r.prototype.onShow = function() {
            switch (this._playerModule = asgard.module.ModuleManager.getModule(o.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(o.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(o.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(o.MODULE_UIDATA),
            this._isCloseClick = !1,
            this._pnl.get_btn.on(laya.events.Event.CLICK, this, this.doubleClick),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.closeClick),
            this._pnl.show(),
            this._uiDataModule.EndCardInfo.rewardType) {
            case 1:
                this._pnl.reward_img.skin = "game/一堆金币.png",
                this._pnl.count_lbl.text = "+" + o.CommonUtil.moneyChange(this._uiDataModule.EndCardInfo.rewardCount);
                break;

            case 2:
                this._pnl.reward_img.skin = "game/一堆钻石.png",
                this._pnl.count_lbl.text = "+" + this._uiDataModule.EndCardInfo.rewardCount;
                break;

            case 3:
                this._pnl.reward_img.skin = "player/Hero_" + this._uiDataModule.EndCardInfo.rewardCount + ".png";
                var t = data.StaticDataFactory.findRoleSkin(this._uiDataModule.EndCardInfo.rewardCount);
                t && (this._pnl.count_lbl.text = t.Name);
            }
            this._pnl.card_img.skin = this._uiDataModule.EndCardImgStr,
            1 < this._uiDataModule.ClickCardCount ? (this._pnl.get_btn.skin = "gunPanel/离线奖励领取按钮.png",
            this._pnl.close_btn.visible = !1) : (this._socialModule.getShareOrAd(o.ShareType.EndDoubleReward) == o.RewardType.Share ? this._pnl.get_btn.skin = "gunPanel/分享双倍领取.png" : this._pnl.get_btn.skin = "gunPanel/双倍领取按钮.png",
            this._pnl.close_btn.visible = !0),
            this.refreshList();
            ishasAds ? this._pnl.get_btn.visible = true : this._pnl.get_btn.visible = false;
        }
        ,
        r.prototype.aniUrls = function(t, e) {
            var i = [];
            return i;
        }
        ,
        r.prototype.refreshList = function() {
            r.gamesArr = [];
            var t = [];
            if (6 <= this._socialModule.MoreGameArr.length)
                for (; t.length < 6; ) {
                    var e = Math.floor(10 * Math.random());
                    t.indexOf(e) < 0 && t.push(e);
                }
            else
                for (var i = 0; i < 10; i++)
                    t.push(i);
            for (i = 0; i < t.length; i++)
                r.gamesArr.push(this._socialModule.MoreGameArr[t[i]]);
            var n = r.gamesArr[0]
              , a = r.gamesArr[1];
            if (n && o.PlatformData.Instance.ShareSwitch) {
                if (this._pnl.game1_img.skin = n.IconUrl,
                this._pnl.game1_img.removeChildren(),
                n.IsGif)
                    (s = new Laya.Animation()).scale(this._pnl.game1_img.width / 92, this._pnl.game1_img.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(n.PicName + "_", n.PngCount)).play(),
                    this._pnl.game1_img.addChild(s);
                this._pnl.game1_img.visible = !0;
            } else
                this._pnl.game1_img.visible = !1;
            if (a && o.PlatformData.Instance.ShareSwitch) {
                var s;
                if (this._pnl.game2_img.skin = a.IconUrl,
                this._pnl.game2_img.removeChildren(),
                a.IsGif)
                    (s = new Laya.Animation()).scale(this._pnl.game2_img.width / 92, this._pnl.game2_img.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(a.PicName + "_", a.PngCount)).play(),
                    this._pnl.game2_img.addChild(s);
                this._pnl.game2_img.visible = !0;
            } else
                this._pnl.game2_img.visible = !1;
            this._pnl.game1_img.on(Laya.Event.CLICK, this, this.gameClick, [0]),
            this._pnl.game2_img.on(Laya.Event.CLICK, this, this.gameClick, [1]);
        }
        ,
        r.prototype.gameClick = function(t) {
            r.gamesArr[t] && (console.log("点击了跳转： " + r.gamesArr[t].Name),
            IsWXGame() && wx.navigateToMiniProgram({
                appId: r.gamesArr[t].Id,
                path: r.gamesArr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("通关_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    o.PlatForm.getInstance().aldSendEvent("通关_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    o.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_成功"),
                    o.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("通关_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    o.PlatForm.getInstance().aldSendEvent("通关_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    o.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_失败"),
                    o.PlatForm.getInstance().aldSendEvent("跳转_失败"),
                    asgard.ui.UIManager.openView(o.UIRes.EXITPANEL);
                }
            }));
        }
        ,
        r.prototype.doubleClick = function() {
            1 == this._uiDataModule.ClickCardCount ? this._socialModule.doShareOrAd(o.ShareType.EndDoubleReward, Laya.Handler.create(this, this.successCallBack)) : this.closeClick();
        }
        ,
        r.prototype.successCallBack = function(t) {
            o.CommonUtil.Log("result------" + t),
            "ok" == t && (1 == this._uiDataModule.EndCardInfo.rewardType ? this._playerModule.RoleInfo.Gold += this._uiDataModule.EndCardInfo.rewardCount : 2 == this._uiDataModule.EndCardInfo.rewardType && (this._playerModule.RoleInfo.Diamond += this._uiDataModule.EndCardInfo.rewardCount),
            this._playerModule.TrySaveGameData(),
            this.closeClick());
        }
        ,
        r.prototype.onHide = function() {
            this._pnl.get_btn.off(laya.events.Event.CLICK, this, this.doubleClick),
            this._pnl.close_btn.off(laya.events.Event.CLICK, this, this.closeClick);
        }
        ,
        r.prototype.sendShareInfo = function(t) {}
        ,
        r.prototype.closeClick = function() {
            this.close(),
            o.SystemHelper.playSoundById(o.SoundId.Button);
        }
        ,
        r.prototype.onopen = function() {}
        ,
        r.prototype.onFrame = function(t, e) {
            this._pnl;
        }
        ,
        r.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(o.UIRes.ENDREWARD);
        }
        ,
        r.prototype.close = function() {
            this._pnl.close();
        }
        ,
        r;
    }(asgard.ui.BaseUIPanel);
    o.EndRewardTipPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e._rankShowFame = 0,
            e._addMoney = 0,
            e._headShootMoney = 0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._endTipPnl || (this._endTipPnl = new ui.panel.EndSnipeTipUI(),
            this._endTipPnl.onClosed = this.onclose.bind(this),
            this._endTipPnl.onOpened = this.onopen.bind(this)),
            this._endTipPnl;
        }
        ,
        t.prototype.onInit = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER);
        }
        ,
        t.prototype.onShow = function() {
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._endTipPnl.home_btn.on(laya.events.Event.CLICK, this, this.closeClick),
            this._endTipPnl.share_btn.on(laya.events.Event.CLICK, this, this.shareClick),
            this._headShootMoney = 5 * this._playerModule.RoleInfo.SecondAddGold * this._gameModule.HeadShootTimes,
            this._endTipPnl.headShootTimes_lbl.text = e.CommonUtil.moneyChange(this._headShootMoney),
            this._addMoney = 0,
            this._addMoney = 5 * this._playerModule.RoleInfo.SecondAddGold * this._playerModule.RoleInfo.KillCount,
            this._endTipPnl.money_lbl.text = e.CommonUtil.moneyChange(this._addMoney),
            this._endTipPnl.current_lbl.text = "" + this._playerModule.RoleInfo.KillCount,
            this._endTipPnl.hight_lbl.text = "" + this._playerModule.RoleInfo.HighKillCount,
            this._endTipPnl.popupCenter = !0,
            this._endTipPnl.show(),
            e.PlatForm.getInstance().showBannerAd(),
            this._playerModule.RoleInfo.KillCount = 0,
            this._playerModule.RoleInfo.IsContiue = 0,
            this._playerModule.TrySaveGameData(),
            asgard.events.EventsDispatcher.registerEventListener(e.GameEvents.EVENT_CLOSE_SNIPE_END, this, this.closeClick);
        }
        ,
        t.prototype.onHide = function() {
            this._endTipPnl.home_btn.off(laya.events.Event.CLICK, this, this.closeClick),
            this._endTipPnl.share_btn.off(laya.events.Event.CLICK, this, this.shareClick),
            asgard.events.EventsDispatcher.unregisterEventListener(e.GameEvents.EVENT_CLOSE_SNIPE_END, this, this.closeClick);
        }
        ,
        t.prototype.shareClick = function() {
            console.log("点击炫耀一下"),
            e.PlatForm.getInstance().aldSendEvent("点击炫耀一下"),
            this._socialModule.getShareInfo(e.ShareType.SnipeShare);
        }
        ,
        t.prototype.closeClick = function() {
            e.SystemHelper.stopMusic(),
            asgard.ui.UIManager.closeView(e.UIRes.GAME),
            asgard.ui.UIManager.closeView(e.UIRes.BATTLE),
            e.PlatForm.getInstance().hideBannerAd(),
            asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_REFRESH_MAIN_MENU),
            this.close(),
            this._gameModule.IsSnipe && 0 < this._gameModule.KillCount && asgard.ui.UIManager.openView(e.UIRes.SNIPEGOLD);
        }
        ,
        t.prototype.replayClick = function() {
            this.close(),
            e.SpriteManager.getInstance().playerRevive();
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.ENDSNIPE);
        }
        ,
        t.prototype.close = function() {
            this._endTipPnl.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.EndSnipeTipPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(l) {
    var u = function(t) {
        this.rewardType = 0,
        this.rewardCount = 0,
        this.cardImg = "",
        this.isUsed = !1,
        this.cardIndex = t;
    };
    l.CardInfo = u;
    var t = function(i) {
        function r(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e._rankShowFame = 0,
            e._addMoney = 0,
            e._headShootMoney = 0,
            e._addDiamond = 0,
            e._cardClickCount = 0,
            e._needAd = !1,
            e._clickIndex = 1,
            e;
        }
        return __extends(r, i),
        r.prototype.createView = function() {
            return this._endTipPnl || (this._endTipPnl = new ui.panel.EndTipUI(),
            this._endTipPnl.onClosed = this.onclose.bind(this),
            this._endTipPnl.onOpened = this.onopen.bind(this)),
            this._endTipPnl;
        }
        ,
        r.prototype.onInit = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(l.MODULE_PLAYER);
        }
        ,
        r.prototype.onShow = function() {
            this._gameModule = asgard.module.ModuleManager.getModule(l.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(l.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(l.MODULE_UIDATA),
            this._endTipPnl.home_btn.on(laya.events.Event.CLICK, this, this.closeClick),
            this._endTipPnl.Chapter_lbl.text = "Level" + this._playerModule.RoleInfo.Chapter,
            this._endTipPnl.home_btn.skin = "game/剩余次数.png",
            this._endTipPnl.clickTip_lbl.visible = !0,
            this._endTipPnl.allTip_lbl.visible = !1,
            this._headShootMoney = 45 * this._playerModule.RoleInfo.SecondAddGold * this._gameModule.HeadShootTimes * .1,
            this._endTipPnl.headShootTimes_lbl.text = l.CommonUtil.moneyChange(this._headShootMoney),
            this._endTipPnl.result_lbl.text = "Level Up",
            this._addMoney = 0,
            this._addDiamond = 0,
            this._addMoney = 45 * this._playerModule.RoleInfo.SecondAddGold,
            l.PlatForm.getInstance().aldSendEvent("通过关卡" + this._playerModule.RoleInfo.Chapter),
            this._endTipPnl.popupCenter = !0,
            this._endTipPnl.show(),
            l.PlatForm.getInstance().showBannerAd(),
            this.showCardAni(),
            this._endTipPnl.home_btn.visible = !1,
            this._uiDataModule.ClickCardCount = 0,
            this.refreshList(),
            asgard.events.EventsDispatcher.registerEventListener(l.GameEvents.EVENT_BACK_HOME, this, this.goHome);
        }
        ,
        r.prototype.onHide = function() {
            this._endTipPnl.home_btn.off(laya.events.Event.CLICK, this, this.closeClick),
            this._endTipPnl.card1_img.off(laya.events.Event.CLICK, this, this.cardClick),
            this._endTipPnl.card2_img.off(laya.events.Event.CLICK, this, this.cardClick),
            this._endTipPnl.card3_img.off(laya.events.Event.CLICK, this, this.cardClick),
            asgard.events.EventsDispatcher.unregisterEventListener(l.GameEvents.EVENT_BACK_HOME, this, this.goHome);
        }
        ,
        r.prototype.closeClick = function() {
            this._playerModule.TrySaveGameData(),
            this.goHome(1),
            l.PlatForm.getInstance().hideBannerAd();
        }
        ,
        r.prototype.goHome = function(t) {
            asgard.ui.UIManager.closeView(l.UIRes.GAME),
            asgard.ui.UIManager.closeView(l.UIRes.BATTLE),
            asgard.events.EventsDispatcher.eventNotify(l.GameEvents.EVENT_REFRESH_MAIN_MENU),
            3 <= this._cardClickCount && 3 == this._card3Info.rewardType && asgard.events.EventsDispatcher.eventNotify(l.GameEvents.EVENT_ROLESKIN, this._card3Info.rewardCount),
            this.close(),
            l.PlatformData.Instance.ShareSwitch && asgard.ui.UIManager.openView(l.UIRes.RECENTLYUSE);
        }
        ,
        r.prototype.aniUrls = function(t, e) {
            var i = [];
            return i;
        }
        ,
        r.prototype.refreshList = function() {
            r.gamesArr = [];
            var t = [];
            if (6 <= this._socialModule.MoreGameArr.length)
                for (; t.length < 6; ) {
                    var e = Math.floor(10 * Math.random());
                    t.indexOf(e) < 0 && t.push(e);
                }
            else
                for (var i = 0; i < 10; i++)
                    t.push(i);
            for (i = 0; i < t.length; i++)
                r.gamesArr.push(this._socialModule.MoreGameArr[t[i]]);
            var n = r.gamesArr[0]
              , a = r.gamesArr[1];
            if (n && l.PlatformData.Instance.ShareSwitch) {
                if (this._endTipPnl.game1_img.skin = n.IconUrl,
                this._endTipPnl.game1_img.removeChildren(),
                n.IsGif)
                    (s = new Laya.Animation()).scale(this._endTipPnl.game1_img.width / 92, this._endTipPnl.game1_img.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(n.PicName + "_", n.PngCount)).play(),
                    this._endTipPnl.game1_img.addChild(s);
                this._endTipPnl.game1_img.visible = !0;
            } else
                this._endTipPnl.game1_img.visible = !1;
            if (a && l.PlatformData.Instance.ShareSwitch) {
                var s;
                if (this._endTipPnl.game2_img.skin = a.IconUrl,
                this._endTipPnl.game2_img.removeChildren(),
                a.IsGif)
                    (s = new Laya.Animation()).scale(this._endTipPnl.game2_img.width / 92, this._endTipPnl.game2_img.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(a.PicName + "_", a.PngCount)).play(),
                    this._endTipPnl.game2_img.addChild(s);
                this._endTipPnl.game2_img.visible = !0;
            } else
                this._endTipPnl.game2_img.visible = !1;
            this._endTipPnl.game1_img.on(Laya.Event.CLICK, this, this.gameClick, [0]),
            this._endTipPnl.game2_img.on(Laya.Event.CLICK, this, this.gameClick, [1]);
        }
        ,
        r.prototype.gameClick = function(t) {
            r.gamesArr[t] && (console.log("点击了跳转： " + r.gamesArr[t].Name),
            IsWXGame() && wx.navigateToMiniProgram({
                appId: r.gamesArr[t].Id,
                path: r.gamesArr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("通关_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    l.PlatForm.getInstance().aldSendEvent("通关_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    l.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_成功"),
                    l.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("通关_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    l.PlatForm.getInstance().aldSendEvent("通关_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    l.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_失败"),
                    l.PlatForm.getInstance().aldSendEvent("跳转_失败"),
                    asgard.ui.UIManager.openView(l.UIRes.EXITPANEL);
                }
            }));
        }
        ,
        r.prototype.showCardAni = function() {
            var t = this;
            this._card1Info = new u(1),
            this._card2Info = new u(2),
            this._card3Info = new u(3),
            this._cardClickCount = 0,
            this._card1Info.rewardCount = 45 * this._playerModule.RoleInfo.SecondAddGold,
            this._card1Info.rewardType = 1,
            Math.random() < .5 ? this._card2Info.rewardCount = 10 : this._card2Info.rewardCount = 25,
            this._card2Info.rewardType = 2;
            for (var e = this.findType(3), i = [], n = 0; n < e.length; n++) {
                for (var a = e[n], s = !1, r = 0; r < this._playerModule.RoleInfo.roleSkinArr.length; r++) {
                    this._playerModule.RoleInfo.roleSkinArr[r].id == a.Id && (s = !0);
                }
                s || i.push(a);
            }
            if (i.length <= 0 || this._playerModule.RoleInfo.Chapter <= 5)
                this._playerModule.RoleInfo.Chapter <= 5 ? this._card3Info.rewardCount = 10 : this._card3Info.rewardCount = 100,
                this._card3Info.rewardType = 2;
            else if (Math.random() < .8)
                this._card3Info.rewardCount = 100,
                this._card3Info.rewardType = 2;
            else {
                this._card3Info.rewardType = 3;
                var o = i[Math.floor(Math.random() * i.length)];
                this._card3Info.rewardCount = o.Id;
            }
            if (this._endTipPnl.card1Reward_img.visible = !1,
            this._endTipPnl.card2Reward_img.visible = !1,
            this._endTipPnl.card3Reward_img.visible = !1,
            this._endTipPnl.card1tip_img.visible = !1,
            this._endTipPnl.card2tip_img.visible = !1,
            this._endTipPnl.card3tip_img.visible = !1,
            this._endTipPnl.card1_lbl.visible = !1,
            this._endTipPnl.card2_lbl.visible = !1,
            this._endTipPnl.card3_lbl.visible = !1,
            this._endTipPnl.card1_img.mouseEnabled = !1,
            this._endTipPnl.card2_img.mouseEnabled = !1,
            this._endTipPnl.card3_img.mouseEnabled = !1,
            this._endTipPnl.card1_img.skin = "back/lan.png",
            this._endTipPnl.card2_img.skin = "back/jin.png",
            this._endTipPnl.card3_img.skin = "back/zi.png",
            this._endTipPnl.card1Reward_img.skin = "game/一堆金币.png",
            this._endTipPnl.card2Reward_img.skin = "game/一堆钻石.png",
            this._endTipPnl.card1_lbl.text = "+" + l.CommonUtil.moneyChange(this._card1Info.rewardCount),
            this._endTipPnl.card2_lbl.text = "+" + this._card2Info.rewardCount,
            3 == this._card3Info.rewardType) {
                this._endTipPnl.card3Reward_img.skin = "player/Hero_" + this._card3Info.rewardCount + ".png";
                var h = data.StaticDataFactory.findRoleSkin(this._card3Info.rewardCount);
                h && (this._endTipPnl.card3_lbl.text = h.Name);
            } else
                this._endTipPnl.card3Reward_img.skin = "game/一堆钻石.png",
                this._endTipPnl.card3_lbl.text = "+" + this._card3Info.rewardCount;
            this._endTipPnl.card1Reward_img.visible = !0,
            this._endTipPnl.card2Reward_img.visible = !0,
            this._endTipPnl.card3Reward_img.visible = !0,
            this._endTipPnl.card1_lbl.visible = !0,
            this._endTipPnl.card2_lbl.visible = !0,
            this._endTipPnl.card3_lbl.visible = !0,
            this._endTipPnl.card1_img.on(laya.events.Event.CLICK, this, this.cardClick, [1]),
            this._endTipPnl.card2_img.on(laya.events.Event.CLICK, this, this.cardClick, [2]),
            this._endTipPnl.card3_img.on(laya.events.Event.CLICK, this, this.cardClick, [3]),
            this._endTipPnl.card1_img.visible = this._endTipPnl.card2_img.visible = this._endTipPnl.card3_img.visible = true,
            Laya.timer.once(1e3, this, function() {
                Laya.Tween.to(t._endTipPnl.card1_img, {
                    scaleX: .02
                }, 200, null, Laya.Handler.create(t, function() {
                    t._endTipPnl.card1_img.skin = "back/kapai.png",
                    t._endTipPnl.card1tip_img.skin = "game/免费开启.png",
                    t._endTipPnl.card1Reward_img.visible = !1,
                    t._endTipPnl.card1_lbl.visible = !1,
                    Laya.Tween.to(t._endTipPnl.card1_img, {
                        scaleX: 1
                    }, 200, null, Laya.Handler.create(t, function() {}));
                }));
            }),
            Laya.timer.once(1e3, this, function() {
                Laya.Tween.to(t._endTipPnl.card2_img, {
                    scaleX: .02
                }, 200, null, Laya.Handler.create(t, function() {
                    t._endTipPnl.card2_img.skin = "back/kapai.png",
                    t._endTipPnl.card2tip_img.skin = "game/免费开启.png",
                    t._endTipPnl.card2Reward_img.visible = !1,
                    t._endTipPnl.card2_lbl.visible = !1,
                    Laya.Tween.to(t._endTipPnl.card2_img, {
                        scaleX: 1
                    }, 200, null, Laya.Handler.create(t, function() {}));
                }));
            }),
            Laya.timer.once(1e3, this, function() {
                Laya.Tween.to(t._endTipPnl.card3_img, {
                    scaleX: .02
                }, 200, null, Laya.Handler.create(t, function() {
                    t._endTipPnl.card3_img.skin = "back/kapai.png",
                    t._endTipPnl.card3tip_img.skin = "game/免费开启.png",
                    t._endTipPnl.card3Reward_img.visible = !1,
                    t._endTipPnl.card3_lbl.visible = !1,
                    Laya.Tween.to(t._endTipPnl.card3_img, {
                        scaleX: 1
                    }, 200, null, Laya.Handler.create(t, function() {
                        Laya.timer.once(350, t, function() {
                            Laya.Tween.to(t._endTipPnl.card1_img, {
                                x: 585
                            }, 100, null, Laya.Handler.create(t, function() {
                                Laya.Tween.to(t._endTipPnl.card2_img, {
                                    x: 135
                                }, 100, null, Laya.Handler.create(t, function() {
                                    Laya.Tween.to(t._endTipPnl.card3_img, {
                                        x: 360
                                    }, 100, null, Laya.Handler.create(t, function() {
                                        Laya.Tween.to(t._endTipPnl.card1_img, {
                                            x: 360
                                        }, 100, null, Laya.Handler.create(t, function() {
                                            Laya.Tween.to(t._endTipPnl.card2_img, {
                                                x: 360
                                            }, 100, null, Laya.Handler.create(t, function() {
                                                Laya.Tween.to(t._endTipPnl.card3_img, {
                                                    x: 585
                                                }, 100, null, Laya.Handler.create(t, function() {
                                                    Laya.Tween.to(t._endTipPnl.card1_img, {
                                                        x: 135
                                                    }, 100, null, Laya.Handler.create(t, function() {
                                                        Laya.Tween.to(t._endTipPnl.card2_img, {
                                                            x: 585
                                                        }, 100, null, Laya.Handler.create(t, function() {
                                                            Laya.Tween.to(t._endTipPnl.card2_img, {
                                                                x: 360
                                                            }, 100, null, Laya.Handler.create(t, function() {
                                                                Laya.timer.once(150, t, function() {
                                                                    t._endTipPnl.card1_img.mouseEnabled = !0,
                                                                    t._endTipPnl.card2_img.mouseEnabled = !0,
                                                                    t._endTipPnl.card3_img.mouseEnabled = !0,
                                                                    t._endTipPnl.card1tip_img.visible = !0,
                                                                    t._endTipPnl.card2tip_img.visible = !0,
                                                                    t._endTipPnl.card3tip_img.visible = !0;
                                                                });
                                                            }));
                                                        }));
                                                    }));
                                                }));
                                            }));
                                        }));
                                    }));
                                }));
                            }));
                        });
                    }));
                }));
            });
        }
        ,
        r.prototype.doCardClick = function(t) {
            var e, i, n, a, s, r = this;
            switch (t) {
            case 1:
                e = this._endTipPnl.card1_img,
                i = this._endTipPnl.card1Reward_img,
                n = this._endTipPnl.card1tip_img,
                a = this._endTipPnl.card1_lbl;
                break;

            case 2:
                e = this._endTipPnl.card2_img,
                i = this._endTipPnl.card2Reward_img,
                n = this._endTipPnl.card2tip_img,
                a = this._endTipPnl.card2_lbl;
                break;

            case 3:
                e = this._endTipPnl.card3_img,
                i = this._endTipPnl.card3Reward_img,
                n = this._endTipPnl.card3tip_img,
                a = this._endTipPnl.card3_lbl;
            }
            if (e.mouseEnabled = !1,
            this._cardClickCount++,
            this._uiDataModule.ClickCardCount++,
            1 == this._cardClickCount ? (this._needAd = !0,
            1 < this._playerModule.RoleInfo.Chapter && (this._endTipPnl.card1tip_img.skin = "game/视频开启.png",
            this._endTipPnl.card2tip_img.skin = "game/视频开启.png",
            this._endTipPnl.card3tip_img.skin = "game/视频开启.png"),
            s = Math.random() < .5 ? this._card1Info : this._card2Info,
            this._endTipPnl.home_btn.visible = !0) : 2 == this._cardClickCount ? s = Math.random() < .2 ? this._card3Info : this._card1Info.isUsed ? this._card2Info : this._card1Info : 3 == this._cardClickCount && (s = 0 == this._card3Info.isUsed ? this._card3Info : this._card1Info.isUsed ? this._card2Info : this._card1Info,
            this._endTipPnl.home_btn.skin = "gunPanel/确定.png",
            this._endTipPnl.allTip_lbl.visible = !0,
            this._endTipPnl.clickTip_lbl.visible = !1),
            s.isUsed = !0,
            1 == s.rewardType)
                i.skin = "game/一堆金币.png",
                a.text = "+" + l.CommonUtil.moneyChange(s.rewardCount),
                this._playerModule.RoleInfo.Gold += s.rewardCount;
            else if (2 == s.rewardType)
                i.skin = "game/一堆钻石.png",
                a.text = "+" + s.rewardCount,
                this._playerModule.RoleInfo.Diamond += s.rewardCount;
            else {
                i.skin = "player/Hero_" + this._card3Info.rewardCount + ".png";
                var o = data.StaticDataFactory.findRoleSkin(s.rewardCount);
                o && (a.text = o.Name),
                this._playerModule.roleSkin(this._card3Info.rewardCount);
            }
            this._playerModule.TrySaveGameData(),
            Laya.Tween.to(e, {
                scaleX: .02
            }, 200, null, Laya.Handler.create(this, function() {
                1 == s.cardIndex ? e.skin = "back/lan.png" : 2 == s.cardIndex ? e.skin = "back/jin.png" : e.skin = "back/zi.png",
                i.visible = !0,
                a.visible = !0,
                n.visible = !1,
                r._uiDataModule.EndCardInfo = s,
                r._uiDataModule.EndCardImgStr = e.skin,
                Laya.Tween.to(e, {
                    scaleX: 1
                }, 200, null, Laya.Handler.create(r, function() {
                    asgard.ui.UIManager.openView(l.UIRes.ENDREWARD);
                }));
            }));
        }
        ,
        r.prototype.cardClick = function(t) {
            if (!ishasAds) {
                if (t == 1) {
                    this._endTipPnl.card2_img.visible = this._endTipPnl.card3_img.visible = false;
                }
                if (t == 2) {
                    this._endTipPnl.card1_img.visible = this._endTipPnl.card3_img.visible = false;
                }
                if (t == 3) {
                    this._endTipPnl.card1_img.visible = this._endTipPnl.card2_img.visible = false;
                }
            }

            console.log(t),
            this._clickIndex = t,
            1 <= this._cardClickCount && 1 < this._playerModule.RoleInfo.Chapter ? (this._socialModule.getShareOrAd(l.ShareType.AdCard),
            console.log("AdCard: " + this._socialModule.getShareOrAd(l.ShareType.AdCard)),
            this._socialModule.doShareOrAd(l.ShareType.AdCard, Laya.Handler.create(this, this.successCallBack))) : this.doCardClick(t);
        }
        ,
        r.prototype.successCallBack = function(t) {
            l.CommonUtil.Log("result------" + t),
            "ok" == t && this.doCardClick(this._clickIndex);
        }
        ,
        r.prototype.findType = function(t) {
            for (var e = asgard.data.StaticDataManager.getSheetDatas(9), i = [], n = 0; n < e.length; n++) {
                e[n].Type == t && i.push(e[n]);
            }
            return i;
        }
        ,
        r.prototype.replayClick = function() {
            this.close(),
            l.SpriteManager.getInstance().playerRevive();
        }
        ,
        r.prototype.onopen = function() {}
        ,
        r.prototype.onFrame = function(t, e) {}
        ,
        r.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(l.UIRes.END);
        }
        ,
        r.prototype.close = function() {
            this._endTipPnl.close();
        }
        ,
        r;
    }(asgard.ui.BaseUIPanel);
    l.EndTipPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function r(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(r, i),
        r.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.ExitPanelUI()),
            this._pnl;
        }
        ,
        r.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            IsWXGame(),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.close),
            this._pnl.v_list.vScrollBarSkin = "",
            this._pnl.v_list.array = [1],
            this._pnl.v_list.scrollBar.elasticBackTime = 500,
            this._pnl.v_list.scrollBar.elasticDistance = 100,
            this._pnl.v_list.itemRender = ui.item.ExitPanelItemUI,
            this._pnl.v_list.renderHandler = new Laya.Handler(this,this.updateItem),
            r.game1Arr = [];
            for (var t = 0; t < 10; t++)
                r.game1Arr.push(this._socialModule.MoreGameArr[t]);
        }
        ,
        r.prototype.updateItem = function(t, e) {
            0 == e && (t.item_list.renderHandler = new Laya.Handler(this,this.item1List),
            t.item_list.array = r.game1Arr);
        }
        ,
        r.prototype.item1List = function(t, e) {
            var i = t.getChildByName("item_icon")
              , n = t.getChildByName("item_name")
              , a = (t.getChildByName("xing"),
            r.game1Arr[e]);
            if (a) {
                if (i.skin = a.IconUrl,
                a.IsGif) {
                    var s = new Laya.Animation();
                    s.scale(i.width / 100, i.width / 100),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(a.PicName + "_", a.PngCount)).play(),
                    i.addChild(s);
                }
                n.text = a.Name,
                t.on(Laya.Event.CLICK, this, this.gameShowClick1, [e]);
            }
        }
        ,
        r.prototype.aniUrls = function(t, e) {
            var i = [];
            return i;
        }
        ,
        r.prototype.gameShowClick1 = function(t) {
            r.game1Arr[t] && IsWXGame() && wx.navigateToMiniProgram({
                appId: r.game1Arr[t].Id,
                path: r.game1Arr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("最近使用_跳转到_" + r.game1Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("最近使用_跳转到_" + r.game1Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + r.game1Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("最近使用_跳转到_" + r.game1Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("最近使用_跳转到_" + r.game1Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + r.game1Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_失败");
                }
            });
        }
        ,
        r.prototype.gameClick = function() {
            0 < this._socialModule.MoreGameArr.length && IsWXGame() && wx.navigateToMiniProgram({
                appId: this._socialModule.MoreGameArr[0].Id,
                path: this._socialModule.MoreGameArr[0].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {},
                fail: function() {}
            });
        }
        ,
        r.prototype.onopen = function() {}
        ,
        r.prototype.onFrame = function(t, e) {}
        ,
        r.prototype.onclose = function() {}
        ,
        r.prototype.close = function() {
            asgard.ui.UIManager.closeView(e.UIRes.EXITPANEL);
        }
        ,
        r.prototype.goHome = function() {
            asgard.ui.UIManager.closeView(e.UIRes.EXITPANEL),
            asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_BACK_HOME);
        }
        ,
        r;
    }(asgard.ui.BaseUIPanel);
    e.ExitPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(o) {
    var t = function(i) {
        function r(t) {
            var e = i.call(this, t) || this;
            return e._resurgeTime = 1e3,
            e._rotationDelay = 3e3,
            e._rankShowFame = 0,
            e._currentSkipIndex = 0,
            e._rotationDelayTime = 0,
            e;
        }
        return __extends(r, i),
        r.prototype.createView = function() {
            return this._gamePnl || (this._gamePnl = new ui.panel.GameUI()),
            this._gamePnl;
        }
        ,
        r.prototype.onInit = function() {
            this._spriteManager = o.SpriteManager.getInstance();
        }
        ,
        r.prototype.onShow = function() {
            var t = this;
            1.1 < o.GameConst.REAL_STATIC ? (this._gamePnl.handle_box.y = 160,
            this._gamePnl.shadow_img.height = 530) : (this._gamePnl.handle_box.y = 100,
            this._gamePnl.shadow_img.height = 430),
            this._playerModule = asgard.module.ModuleManager.getModule(o.MODULE_PLAYER),
            this._uiDataModule = asgard.module.ModuleManager.getModule(o.MODULE_UIDATA),
            this._socialModule = asgard.module.ModuleManager.getModule(o.MODULE_SOCIAL),
            this._gameModule = asgard.module.ModuleManager.getModule(o.MODULE_GAME),
            this._gamePnl.close_btn.on(Laya.Event.CLICK, this, this.close),
            this._uiDataModule.GameIsOpen = !0,
            this._gamePnl.bossWarning_img.visible = !1,
            this._gamePnl.hp_img.visible = !1,
            this._gamePnl.hp_mask.width = 346,
            this._gamePnl.headShoot_box.y = 400,
            this._gamePnl.headShoot_box.alpha = 0,
            this._playerModule.RoleInfo.Gold <= 0 ? this._gamePnl.gold_lbl.text = "0" : this._gamePnl.gold_lbl.text = o.CommonUtil.moneyChange(this._playerModule.RoleInfo.Gold),
            this._playerModule.RoleInfo.Diamond <= 0 ? this._gamePnl.diamond_lbl.text = "0" : this._gamePnl.diamond_lbl.text = o.CommonUtil.moneyChange(this._playerModule.RoleInfo.Diamond),
            Laya.timer.loop(6e3, this, this.refreshList),
            this._gamePnl.level_lbl.visible = !1,
            this._gamePnl.level_img.visible = !1,
            this._gamePnl.newPlayer_lbl.visible = !1,
            this._gamePnl.snipeTitle_img.visible = !1,
            this._gamePnl.kill_img.visible = !1,
            this._gamePnl.bullet_box.visible = !1,
            1 == this._uiDataModule.GameMode ? (this._gamePnl.snipeTitle_img.visible = !0,
            this._gamePnl.kill_img.visible = !0) : (this._gamePnl.bullet_box.visible = !0,
            0 == this._playerModule.RoleInfo.Chapter ? this._gamePnl.newPlayer_lbl.visible = !0 : (this._gamePnl.level_lbl.visible = !0,
            this._gamePnl.level_img.visible = !0)),
            this.refreshLevel(),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_REFRESH_SCORE, this, this.refreshLevel),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_HEAD_SHOOT, this, this.headShoot),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_BOSS_APPEAR, this, this.bossApear),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_MONSTER_HP_CHANGE, this, this.bossHpChange),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_MONSTER_ADD_HP, this, this.bossAddHp),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_WX_ON_SHOW, this, this.recoverSound),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_KILL_COUNT_CHANGE, this, this.refreshKillCount),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_BOSS_DIE, this, this.hideBossTip),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_REFRESH_GAME_LIST, this, this.refreshList),
            asgard.events.EventsDispatcher.registerEventListener(o.GameEvents.EVENT_CHAPTER_BULLET_COUNT, this, this.refreshBulletCount),
            this._gamePnl.black_img.visible = !0,
            this._gamePnl.black_img.alpha = 1,
            Laya.Tween.to(this._gamePnl.black_img, {
                alpha: 0
            }, 700, null, new Laya.Handler(this,function() {
                t._gamePnl.black_img.visible = !1;
            }
            )),
            this.refreshBulletCount(),
            this.refreshKillCount(),
            o.PlatForm.getInstance().showBannerAd(),
            this.refreshList();
        }
        ,
        r.prototype.onHide = function() {
            o.PlatForm.getInstance().hideBannerAd(),
            this._gamePnl.close_btn.off(Laya.Event.CLICK, this, this.close),
            this._gamePnl.game1_img.off(Laya.Event.CLICK, this, this.gameClick),
            this._gamePnl.game2_img.off(Laya.Event.CLICK, this, this.gameClick),
            Laya.timer.clear(this, this.refreshList),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_REFRESH_SCORE, this, this.refreshLevel),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_HEAD_SHOOT, this, this.headShoot),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_BOSS_APPEAR, this, this.bossApear),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_BOSS_DIE, this, this.hideBossTip),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_MONSTER_HP_CHANGE, this, this.bossHpChange),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_MONSTER_ADD_HP, this, this.bossAddHp),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_WX_ON_SHOW, this, this.recoverSound),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_CHAPTER_BULLET_COUNT, this, this.refreshBulletCount),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_KILL_COUNT_CHANGE, this, this.refreshKillCount),
            asgard.events.EventsDispatcher.unregisterEventListener(o.GameEvents.EVENT_REFRESH_GAME_LIST, this, this.refreshList),
            Laya.timer.clear(this, this.BigAndSmall);
        }
        ,
        r.prototype.aniUrls = function(t, e) {
            var i = [];
            return i;
        }
        ,
        r.prototype.refreshList = function() {
            r.gamesArr = [];
            var t = [];
            if (2 <= this._socialModule.MoreGameArr.length)
                for (; t.length < 2; ) {
                    var e = Math.floor(10 * Math.random());
                    t.indexOf(e) < 0 && t.push(e);
                }
            else
                for (var i = 0; i < 10; i++)
                    t.push(i);
            for (i = 0; i < t.length; i++)
                r.gamesArr.push(this._socialModule.MoreGameArr[t[i]]);
            var n = r.gamesArr[0]
              , a = r.gamesArr[1];
            if (n && o.PlatformData.Instance.ShareSwitch) {
                if (this._gamePnl.game1_img.skin = n.IconUrl,
                this._gamePnl.game1_img.removeChildren(),
                n.IsGif)
                    (s = new Laya.Animation()).scale(this._gamePnl.game1_img.width / 92, this._gamePnl.game1_img.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(n.PicName + "_", n.PngCount)).play(),
                    this._gamePnl.game1_img.addChild(s);
                this._gamePnl.game1_img.visible = !0;
            } else
                this._gamePnl.game1_img.visible = !1;
            if (a && o.PlatformData.Instance.ShareSwitch) {
                var s;
                if (this._gamePnl.game2_img.skin = a.IconUrl,
                this._gamePnl.game2_img.removeChildren(),
                a.IsGif)
                    (s = new Laya.Animation()).scale(this._gamePnl.game2_img.width / 92, this._gamePnl.game2_img.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(a.PicName + "_", a.PngCount)).play(),
                    this._gamePnl.game2_img.addChild(s);
                this._gamePnl.game2_img.visible = !0;
            } else
                this._gamePnl.game2_img.visible = !1;
            this._gamePnl.game1_img.on(Laya.Event.CLICK, this, this.gameClick, [0]),
            this._gamePnl.game2_img.on(Laya.Event.CLICK, this, this.gameClick, [1]);
        }
        ,
        r.prototype.gameClick = function(t) {
            r.gamesArr[t] && (console.log("点击了跳转： " + r.gamesArr[t].Name),
            IsWXGame() && wx.navigateToMiniProgram({
                appId: r.gamesArr[t].Id,
                path: r.gamesArr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("射击页_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    o.PlatForm.getInstance().aldSendEvent("射击页_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    o.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_成功"),
                    o.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("射击页_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    o.PlatForm.getInstance().aldSendEvent("射击页_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    o.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_失败"),
                    o.PlatForm.getInstance().aldSendEvent("跳转_失败"),
                    asgard.ui.UIManager.openView(o.UIRes.EXITPANEL);
                }
            }));
        }
        ,
        r.prototype.refreshKillCount = function() {
            this._gamePnl.kill_lbl.text = "X" + this._playerModule.RoleInfo.KillCount;
        }
        ,
        r.prototype.refreshBulletCount = function() {
            this._gamePnl.bulletCount_lbl.text = "X" + this._gameModule.BulletCount,
            this._gameModule.BulletCount <= 3 && Laya.timer.loop(1100, this, this.BigAndSmall);
        }
        ,
        r.prototype.BigAndSmall = function() {
            var t = this;
            Laya.Tween.to(this._gamePnl.bullet_box, {
                scaleX: 1.1,
                scaleY: 1.1
            }, 200, null, new Laya.Handler(this,function() {
                Laya.Tween.to(t._gamePnl.bullet_box, {
                    scaleX: 1,
                    scaleY: 1
                }, 200, null, new Laya.Handler(t,function() {}
                ));
            }
            ));
        }
        ,
        r.prototype.recoverSound = function() {
            this._uiDataModule.GameIsOpen && o.SystemHelper.playMusic("sound/bgm_1.mp3", 0);
        }
        ,
        r.prototype.bossAddHp = function() {
            var t = 346 * this._gameModule.CurrentMonster.Hp / this._gameModule.CurrentMonsterAllHp;
            Laya.Tween.to(this._gamePnl.hp_mask, {
                width: t
            }, 1e3);
        }
        ,
        r.prototype.bossHpChange = function() {
            var t = 346 * this._gameModule.CurrentMonster.Hp / this._gameModule.CurrentMonsterAllHp;
            Laya.Tween.to(this._gamePnl.hp_mask, {
                width: t
            }, 250);
        }
        ,
        r.prototype.hideBossTip = function() {
            this._gamePnl.bossWarning_img.visible = !1,
            this._gamePnl.hp_img.visible = !1,
            this._gamePnl.hp_mask.width = 346;
        }
        ,
        r.prototype.bossApear = function() {
            var t = this;
            this._gamePnl.hp_img.visible = !0,
            this._gamePnl.hp_mask.width = 346,
            o.SystemHelper.playSoundById(o.SoundId.BossWarning),
            this._gamePnl.bossWarning_img.visible = !0,
            this._gamePnl.bossWarning_img.alpha = 0,
            this._gamePnl.name_lbl.text = this._gameModule.CurrentMonster.Name,
            Laya.Tween.to(this._gamePnl.bossWarning_img, {
                alpha: 1
            }, 300, null, new Laya.Handler(this,function() {
                Laya.Tween.to(t._gamePnl.bossWarning_img, {
                    alpha: 0
                }, 300, null, new Laya.Handler(t,function() {
                    Laya.Tween.to(t._gamePnl.bossWarning_img, {
                        alpha: 1
                    }, 300, null, new Laya.Handler(t,function() {
                        Laya.Tween.to(t._gamePnl.bossWarning_img, {
                            alpha: 0
                        }, 300, null, new Laya.Handler(t,function() {
                            t._gamePnl.bossWarning_img.visible = !1;
                        }
                        ));
                    }
                    ));
                }
                ));
            }
            ));
        }
        ,
        r.prototype.headShoot = function() {
            var t = this;
            this._gamePnl.white_img.visible = !0,
            this._gamePnl.white_img.alpha = .5,
            Laya.Tween.to(this._gamePnl.white_img, {
                alpha: 0
            }, 80, null, new Laya.Handler(this,function() {
                t._gamePnl.white_img.alpha = .5,
                t._gamePnl.white_img.visible = !1;
            }
            )),
            this._gamePnl.headShoot_lbl.text = "Head Shoot +" + this._gameModule.HeadShootTimes,
            Laya.Tween.to(this._gamePnl.headShoot_box, {
                y: 330,
                alpha: 1
            }, 400, null, new Laya.Handler(this,function() {
                Laya.Tween.to(t._gamePnl.headShoot_box, {
                    y: 250
                }, 800, null, new Laya.Handler(t,function() {
                    t._gamePnl.headShoot_box.y = 400,
                    t._gamePnl.headShoot_box.alpha = 0;
                }
                ));
            }
            ));
        }
        ,
        r.prototype.refreshLevel = function() {
            var t = this._playerModule.RoleInfo.Chapter + "";
            this._gamePnl.level_lbl.text = t;
        }
        ,
        r.prototype.videoEnd = function(t) {
            "ok" == t || console.log("视频播放失败");
        }
        ,
        r.prototype.close = function() {
            this._uiDataModule.CanQuitBtn && (o.SystemHelper.playSoundById(o.SoundId.Button),
            asgard.ui.UIManager.closeView(o.UIRes.BATTLE),
            asgard.ui.UIManager.closeView(o.UIRes.GAME),
            asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_REFRESH_MAIN_MENU),
            o.SystemHelper.stopMusic(),
            this._uiDataModule.GameIsOpen = !1,
            this._gameModule.IsSnipe && 0 < this._gameModule.KillCount && asgard.ui.UIManager.openView(o.UIRes.SNIPEGOLD));
        }
        ,
        r.prototype.onFrame = function(t, e) {
            this._spriteManager.onFrame(t, e),
            this._gamePnl;
        }
        ,
        r;
    }(asgard.ui.BaseUIPanel);
    o.GamePanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(o) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._getGoldPanel || (this._getGoldPanel = new ui.panel.GetGoldPanelUI(),
            this._getGoldPanel.onClosed = this.onclose.bind(this),
            this._getGoldPanel.onOpened = this.onopen.bind(this)),
            this._getGoldPanel;
        }
        ,
        t.prototype.onShow = function() {
            o.PlatForm.getInstance().aldSendEvent("弹出免费金币界面次数"),
            this._playerModule = asgard.module.ModuleManager.getModule(o.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(o.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(o.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(o.MODULE_UIDATA),
            this._getGoldPanel.btn_return.on(laya.events.Event.CLICK, this, this.close),
            this._getGoldPanel.btn_getGold.on(Laya.Event.CLICK, this, this.onGetGold),
            this._getGoldPanel.popupCenter = !0,
            this._getGoldPanel.show(),
            this.init();
            ishasAds ? this._getGoldPanel.btn_getGold.visible = true : this._getGoldPanel.btn_getGold.visible = false;
        }
        ,
        t.prototype.init = function() {
            var t = 0;
            t = this._playerModule.RoleInfo.GetGoldNum < 3 ? 1 : this._playerModule.RoleInfo.GetGoldNum < 5 ? .5 : .3;
            var e = 0;
            e = 0 < this._playerModule.RoleInfo.MaxGunId - 4 ? this._playerModule.RoleInfo.MaxGunId - 4 : 1;
            var i = this.findGunMoney(e);
            this.getGoldNum = i * t,
            this._getGoldPanel.lab_goldNum.text = o.CommonUtil.moneyChange(this.getGoldNum),
            this._socialModule.getShareOrAd(o.ShareType.GoldNotEnough) == o.RewardType.Share ? (console.log("share"),
            this._getGoldPanel.btn_getGold.skin = "gunPanel/分享领取.png") : (console.log("ad"),
            this._getGoldPanel.btn_getGold.skin = "gunPanel/视频领取.png");
        }
        ,
        t.prototype.findGunMoney = function(t) {
            for (var e = o.DataUtils.getBuyGoldById(1e3 + t), i = this._playerModule.RoleInfo.gunBuyNum, n = data.StaticDataFactory.findGun(1e3 + t), a = 0; a < i.length; a++) {
                var s = i[a];
                if (s.id == t)
                    for (var r = 0; r < s.buyNum; r++)
                        e *= n.AddGold;
            }
            return e;
        }
        ,
        t.prototype.onHide = function() {
            this._getGoldPanel.btn_getGold.off(Laya.Event.CLICK, this, this.onGetGold),
            this._getGoldPanel.btn_return.off(laya.events.Event.CLICK, this, this.close);
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onGetGold = function() {
            this._socialModule.doShareOrAd(o.ShareType.GoldNotEnough, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        t.prototype.successCallBack = function(t) {
            if (o.CommonUtil.Log("result------" + t),
            "ok" == t) {
                var e = new o.DiamondFlutterPanel();
                e.gold(),
                Laya.stage.addChild(e),
                this._playerModule.RoleInfo.GetGoldNum++,
                this._playerModule.RoleInfo.Gold += this.getGoldNum,
                this._playerModule.RoleInfo.AllGold += this.getGoldNum,
                this.close(),
                this._playerModule.RoleInfo.tipsDescribe = "Gain Success",
                asgard.ui.UIManager.openView(o.UIRes.TIPS),
                this.close();
            }
        }
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(o.UIRes.GETGOLD);
        }
        ,
        t.prototype.close = function() {
            this._getGoldPanel.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    o.GetGoldPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(n) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._getNewGunPanel || (this._getNewGunPanel = new ui.panel.GetNewGunPanelUI(),
            this._getNewGunPanel.onClosed = this.onclose.bind(this),
            this._getNewGunPanel.onOpened = this.onopen.bind(this)),
            this._getNewGunPanel;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(n.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(n.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(n.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(n.MODULE_UIDATA),
            this._getNewGunPanel.btn_confirm.on(laya.events.Event.CLICK, this, this.onConfirm),
            this._getNewGunPanel.btn_cloneBox2.on(laya.events.Event.CLICK, this, this.box2),
            this._getNewGunPanel.popupCenter = !0,
            this._getNewGunPanel.show(),
            this._getNewGunPanel.box_1.visible = !0,
            this._getNewGunPanel.ani1.play(0, !0),
            this.init(),
            n.PlatForm.getInstance().showBannerAd();
            //if (this._playerModule.RoleInfo.MaxGunId > 7) 
            //{
            //ishasAds?this._getNewGunPanel.btn_confirm.visible = true:this._getNewGunPanel.btn_confirm.visible = false;
            //}
        }
        ,
        t.prototype.onHide = function() {
            this._getNewGunPanel.btn_confirm.off(laya.events.Event.CLICK, this, this.onConfirm),
            this._getNewGunPanel.btn_cloneBox2.off(laya.events.Event.CLICK, this, this.box2),
            n.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.init = function() {
            n.PlatForm.getInstance().aldSendEvent("解锁新枪钻石获得界面出现"),
            n.SystemHelper.playSoundById(n.SoundId.MergeNewLevel),
            this._getNewGunPanel.pro_demage.value = 0,
            this._getNewGunPanel.pro_longth.value = 0,
            this._getNewGunPanel.pro_number.value = 0,
            this.gunDate = data.StaticDataFactory.findGun(1e3 + this._playerModule.RoleInfo.MaxGunId),
            Laya.Tween.to(this._getNewGunPanel.pro_demage, {
                value: this.gunDate.Demage / 600
            }, 1500, Laya.Ease.cubicOut),
            Laya.Tween.to(this._getNewGunPanel.pro_longth, {
                value: this.gunDate.Longth / 10
            }, 1500, Laya.Ease.cubicOut),
            Laya.Tween.to(this._getNewGunPanel.pro_number, {
                value: this.gunDate.BulletCount / 10
            }, 1500, Laya.Ease.cubicOut),
            this._getNewGunPanel.img_gunType.skin = "gun/gun_" + (this._playerModule.RoleInfo.MaxGunId - 1) + ".png",
            this._getNewGunPanel.img_gunType.alpha = .5,
            this._getNewGunPanel.lab_num.text = this.gunDate.AwardJewel.toString(),
            this._getNewGunPanel.lab_name.text = "LV." + this.gunDate.Level + "  " + this.gunDate.Name,
            this._getNewGunPanel.lab_demage.text = this.gunDate.Demage.toString(),
            this._getNewGunPanel.lab_longth.text = this.gunDate.Longth.toString(),
            this._getNewGunPanel.lab_number.text = this.gunDate.BulletCount.toString(),
            (7 < this._playerModule.RoleInfo.MaxGunId && ishasAds) ? this._socialModule.getShareOrAd(n.ShareType.NewGunReward) == n.RewardType.Share ? (n.CommonUtil.Log("share"),
            this._getNewGunPanel.btn_confirm.skin = "gunPanel/分享领.png") : (n.CommonUtil.Log("ad"),
            this._getNewGunPanel.btn_confirm.skin = "gunPanel/广告领.png") : this._getNewGunPanel.btn_confirm.skin = "gunPanel/普通领.png";
            var t = Laya.Pool.getItemByClass("img", n.GunMoveItemPanl);
            t.gunType(this._playerModule.RoleInfo.MaxGunId - 1),
            t.pos(this._getNewGunPanel.img_gunType.x, this._getNewGunPanel.img_gunType.y),
            this._getNewGunPanel.box_1.addChild(t),
            this.gunShow(t);
        }
        ,
        t.prototype.gunShow = function(t) {
            var e = this;
            Laya.timer.once(450, this, function() {
                n.CommonUtil.shake(e._getNewGunPanel.img_gunType),
                e.PlayAnimation("compound", e._getNewGunPanel.img_gunType, e._getNewGunPanel.img_gunType.x - e._getNewGunPanel.img_gunType.width / 2 - 15, e._getNewGunPanel.img_gunType.y - e._getNewGunPanel.img_gunType.height / 2 - 20, 1.5),
                e._getNewGunPanel.img_gunType.skin = "gun/gun_" + e._playerModule.RoleInfo.MaxGunId + ".png",
                e._getNewGunPanel.img_gunType.alpha = 1,
                t.removeSelf(),
                Laya.Pool.recover("img", t);
            });
        }
        ,
        t.prototype.onConfirm = function() {
            if (this._playerModule.RoleInfo.MaxGunId <= 7 || ishasAds == false) {
                this._playerModule.RoleInfo.Diamond += this.gunDate.AwardJewel;
                var t = new n.DiamondFlutterPanel();
                t.diamond(),
                Laya.stage.addChild(t),
                this.close();
            } else
                this._socialModule.doShareOrAd(n.ShareType.NewGunReward, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        t.prototype.successCallBack = function(t) {
            if (n.CommonUtil.Log("result------" + t),
            "ok" == t) {
                this._playerModule.RoleInfo.Diamond += this.gunDate.AwardJewel;
                var e = new n.DiamondFlutterPanel();
                e.diamond(),
                Laya.stage.addChild(e),
                this.close();
            }
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(n.UIRes.GETNEWGUN),
            n.SystemHelper.playSoundById(n.SoundId.Button);
        }
        ,
        t.prototype.box2 = function() {
            n.PlatForm.getInstance().aldSendEvent("解锁新枪钻石获得界面出现点击x关闭按钮"),
            this.close();
        }
        ,
        t.prototype.close = function() {
            this._getNewGunPanel.close();
        }
        ,
        t.prototype.PlayAnimation = function(t, e, i, n, a) {
            void 0 === a && (a = 1);
            var s = new Laya.Animation();
            s.loadAtlas("res/animation/" + t + ".atlas", Laya.Handler.create(this, function() {
                s.play(0, !1);
            })),
            s.pos(i, n),
            s.scale(a, a),
            s.on(Laya.Event.COMPLETE, this, function() {
                s.gotoAndStop(s.frames.length - 1),
                Laya.timer.once(0, this, function() {
                    s.removeSelf();
                });
            }),
            this._getNewGunPanel.box_1.addChild(s);
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    n.GetNewGunPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e._btnLabel = "",
            e._funcTionList = [],
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.GMUI(),
            this._pnl.onClosed = this.onclose.bind(this),
            this._pnl.onOpened = this.onopen.bind(this)),
            this._pnl;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(e.MODULE_UIDATA),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.close),
            this._funcTionList = ["选枪", "选关", "选皮肤", "清号", "加金币"],
            this.refreshList(),
            this._pnl.popupCenter = !0,
            this._pnl.show(),
            e.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.refreshList = function() {
            this._pnl.shopList.renderHandler = new Laya.Handler(this,this.updateList),
            this._pnl.shopList.array = this._funcTionList;
        }
        ,
        t.prototype.updateList = function(t, e) {
            t.getChildByName("icon_img");
            var i = t.getChildByName("name_lbl")
              , n = t.getChildByName("data_lbl");
            i.text = this._funcTionList[e],
            0 == e ? n.text = this._playerModule.RoleInfo.ShowGunIdId + "" : 1 == e ? n.text = this._playerModule.RoleInfo.Chapter + "" : 2 == e ? n.text = this._playerModule.RoleInfo.SelectedPlayerId + "" : 3 == e ? n.text = "清号" : 4 == e && (n.text = "加金币"),
            t.on(Laya.Event.CLICK, this, this.testClick, [e]);
        }
        ,
        t.prototype.testClick = function(t) {
            switch (t) {
            case 0:
                this._playerModule.RoleInfo.ShowGunIdId = Number(this._pnl.input_text.text);
                break;

            case 1:
                this._playerModule.RoleInfo.Chapter = Number(this._pnl.input_text.text);
                break;

            case 2:
                this._playerModule.RoleInfo.SelectedPlayerId = Number(this._pnl.input_text.text);
                break;

            case 3:
                this._playerModule.initRoleInfo(),
                this._playerModule.TrySaveGameData();
                break;

            case 4:
                this._playerModule.RoleInfo.Gold += 1e14;
            }
            this._pnl.shopList.refresh();
        }
        ,
        t.prototype.onHide = function() {
            this._pnl.close_btn.off(laya.events.Event.CLICK, this, this.close);
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.GM);
        }
        ,
        t.prototype.close = function() {
            this._pnl.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.GMTipPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(_) {
    var t = function(i) {
        function r(t) {
            var e = i.call(this, t) || this;
            return e.row = 3,
            e.col = 4,
            e.intervalX = 160,
            e.intervalY = 160,
            e.gunArr = [],
            e.pedestalArr = [],
            e.istrueClick = !0,
            e.isNewTrue = !0,
            e.buyGunId = 1001,
            e.addIstrue = 0,
            e.freeGunTimer = 0,
            e.isTrueGuide = !1,
            e.guideTimer = 0,
            e.paradropTimer = 0,
            e.parIdArr = [],
            e.readomIndex = [],
            e.awardNum = 14,
            e.istruePar = !1,
            e.isClick = !1,
            e.paradropIdArr = [],
            e._isMoving = !1,
            e._isIn = !0,
            e._startScroll = !1,
            e;
        }
        return __extends(r, i),
        r.prototype.createView = function() {
            return this._mainPnl || (this._mainPnl = new ui.panel.MainMenuUI()),
            this._mainPnl;
        }
        ,
        r.prototype.onInit = function() {
            this.Adaptive(),
            this._playerModule = asgard.module.ModuleManager.getModule(_.MODULE_PLAYER),
            this._uiDataModule = asgard.module.ModuleManager.getModule(_.MODULE_UIDATA),
            this._socialModule = asgard.module.ModuleManager.getModule(_.MODULE_SOCIAL),
            this._gameModule = asgard.module.ModuleManager.getModule(_.MODULE_GAME);
            var t = new _.ResLoadList();
            t.appendRessourceArr(_.CommonRes.getLaterUILoadList()),
            0 < t.Count && _.ResLoader.load(t),
            _.PlatForm.getInstance().aldSendEvent("用户成功加载主页");
        }
        ,
        r.prototype.onShow = function() {
            this.init(),
            this.isGuidance();
            data.StaticDataFactory.findGun(1001);
            1.1 < _.GameConst.REAL_STATIC ? this._mainPnl.main_box.y = 80 : this._mainPnl.main_box.y = 0;
            var t = _.PlatformData.Instance.IsIphoneX;
            if (this._mainPnl.main_box2.bottom = t ? 25 : 10,
            this._mainPnl.endPush.y = 890 - .7 * _.GameConst.HEIGHT_CHANGE,
            this._mainPnl.go_btn.y = 65 - .7 * _.GameConst.HEIGHT_CHANGE,
            this._mainPnl.fold_btn.y = -5 - .7 * _.GameConst.HEIGHT_CHANGE,
            this.funFoldIsOpen = !1,
            this._mainPnl.btn_buyGun.on(Laya.Event.CLICK, this, this.onBuyGunWay),
            this._mainPnl.img_greenHands2.on(Laya.Event.CLICK, this, this.onBuyGunWay),
            this._mainPnl.img_dustbin.on(Laya.Event.MOUSE_UP, this, this.onDustbinWay),
            this._mainPnl.img_dustbin.on(Laya.Event.CLICK, this, this.clickDust),
            this._mainPnl.img_dustbin.on(Laya.Event.MOUSE_MOVE, this, this.onMoveDust),
            this._mainPnl.img_dustbin.on(Laya.Event.MOUSE_OUT, this, this.onOutDust),
            this._mainPnl.img_showGun.on(Laya.Event.CLICK, this, this.onShowGun),
            this._mainPnl.img_showGun.on(Laya.Event.MOUSE_UP, this, this.upChangeGun),
            this._mainPnl.btn_shop.on(Laya.Event.CLICK, this, this.onShowShop),
            this._mainPnl.btn_task.on(Laya.Event.CLICK, this, this.onTask),
            this._mainPnl.btn_rapid.on(Laya.Event.CLICK, this, this.onRapid),
            this._mainPnl.btn_dial.on(Laya.Event.CLICK, this, this.onDial),
            this._mainPnl.btn_signIn.on(Laya.Event.CLICK, this, this.onSignIn),
            this._mainPnl.btn_roleSkin.on(Laya.Event.CLICK, this, this.onRoleSkin),
            this._mainPnl.btn_paradrop.on(Laya.Event.CLICK, this, this.paradropWay),
            //IsWXGame() && console.log("wx.getMenuButtonBoundingClientRect().top:  " + wx.getMenuButtonBoundingClientRect().top), 
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_FREESHOP, this, this.freeShopGunWay),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_SHOP, this, this.shopGunWay),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_CHANGEGUN, this, this.showGunWay),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_SECONDADDGOLD, this, this.secondAddGold),
            asgard.events.EventsDispatcher.registerEventListener(1029, this, this.finishTask),
            this._mainPnl.img_greenHands1.on(Laya.Event.CLICK, this, this.playGame),
            this._mainPnl.go_btn.on(Laya.Event.CLICK, this, this.playGame),
            this._mainPnl.endless_btn.on(Laya.Event.CLICK, this, this.snipeGame),
            this._mainPnl.test_img.on(Laya.Event.CLICK, this, this.testClick),
            this._mainPnl.fold_btn.on(Laya.Event.CLICK, this, this.foldClick),
            this._mainPnl.sound_btn.on(Laya.Event.CLICK, this, this.soundBtnClick),
            this._mainPnl.promoteBg_img.on(Laya.Event.CLICK, this, this.promoteClose),
            this._mainPnl.promoteBack_btn.on(Laya.Event.CLICK, this, this.promoteClose),
            this._mainPnl.funcFold_img.on(Laya.Event.CLICK, this, this.funcFoldClick),
            this._mainPnl.game3_img.on(Laya.Event.CLICK, this, this.game3Click),
            this._mainPnl.game3_img.visible = !1,
            this._mainPnl.fold_btn.visible = !1,
            this.refreshList(),
            Laya.timer.loop(6e3, this, this.refreshGame),
            this._mainPnl.promoteBg_img.visible = !1,
            /*IsWXGame() ? this._mainPnl.test_img.visible = !1 : this._mainPnl.test_img.visible = !0, //GM按钮 测试按钮*/
            this._mainPnl.test_img.visible = !1,
            this._isIn = !0,
            this._mainPnl.promote_box.x = 721,
            this.refreshSoundBtnSkin(),
            this._mainPnl.promote_box.zOrder = 300,
            this._mainPnl.funcBox_img.x = -250,
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_REFRESH_GAME_LIST, this, this.refreshList),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_REFRESH_VERSION, this, this.CheckNewVersion),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_LOGIN_LOG, this, this.loginLogCallBack),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_GET_SHARE_COUNT, this, this.getShareCountCallBack),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_GOLD_REFRESH, this, this.addGold),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_DIAMOND_REFRESH, this, this.addDiamond),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_REFRESH_MAIN_MENU, this, this.showMainMenu),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_REFRESH_SCORE, this, this.refreshLevel),
            asgard.events.EventsDispatcher.registerEventListener(_.GameEvents.EVENT_ROLESKIN, this, this.roleSkini),
            IsWXGame() && 0 == this._uiDataModule.mainMenuShowCount ? (this._socialModule.loginLog(),
            this._socialModule.GetShareBackCount()) : 1 == this._playerModule.RoleInfo.IsNew && (this._playerModule.RoleInfo.showSigninIsTrue = !0,
            this._uiDataModule.IsNewPlayer = !0,
            this._playerModule.RoleInfo.IsNew = 0,
            this._playerModule.TrySaveGameData()),
            this._uiDataModule.mainMenuShowCount++,
            this._mainPnl.promote_box.visible = !0 /*IsWXGame() && (1104 == _.PlatformData.Instance.OnShowQuery.scene || 1103 == _.PlatformData.Instance.OnShowQuery.scene)*/
            ) {
                var e = asgard.module.ModuleManager.getModule(_.MODULE_PLAYER);
                e.RoleInfo.HaveAddMyGame = 1,
                e.TrySaveGameData();
            }
        }
        ,
        r.prototype.onHide = function() {
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_REFRESH_VERSION, this, this.CheckNewVersion),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_REFRESH_GAME_LIST, this, this.refreshList),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_LOGIN_LOG, this, this.loginLogCallBack),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_REFRESH_MAIN_MENU, this, this.showMainMenu),
            asgard.events.EventsDispatcher.unregisterEventListener(1029, this, this.finishTask),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_REFRESH_SCORE, this, this.refreshLevel),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_GET_SHARE_COUNT, this, this.getShareCountCallBack),
            Laya.timer.clear(this, this.refreshList),
            this._mainPnl.game1_img.off(Laya.Event.CLICK, this, this.gameShowClick),
            this._mainPnl.game2_img.off(Laya.Event.CLICK, this, this.gameShowClick),
            this._mainPnl.game3_img.off(Laya.Event.CLICK, this, this.game3Click),
            this._mainPnl.img_greenHands1.off(Laya.Event.CLICK, this, this.playGame),
            this._mainPnl.go_btn.off(Laya.Event.CLICK, this, this.playGame),
            this._mainPnl.endless_btn.off(Laya.Event.CLICK, this, this.snipeGame),
            this._mainPnl.fold_btn.off(Laya.Event.CLICK, this, this.foldClick),
            this._mainPnl.sound_btn.off(Laya.Event.CLICK, this, this.soundBtnClick),
            this._mainPnl.test_img.off(Laya.Event.CLICK, this, this.testClick),
            this._mainPnl.btn_shop.off(Laya.Event.CLICK, this, this.onShowShop),
            this._mainPnl.promoteBg_img.off(Laya.Event.CLICK, this, this.promoteClose),
            this._mainPnl.promoteBack_btn.off(Laya.Event.CLICK, this, this.promoteClose),
            this._mainPnl.funcFold_img.off(Laya.Event.CLICK, this, this.funcFoldClick),
            this._mainPnl.img_dustbin.off(Laya.Event.CLICK, this, this.clickDust),
            this._mainPnl.btn_buyGun.off(Laya.Event.CLICK, this, this.onBuyGunWay),
            this._mainPnl.img_dustbin.off(Laya.Event.MOUSE_UP, this, this.onDustbinWay),
            this._mainPnl.img_dustbin.off(Laya.Event.MOUSE_OUT, this, this.onOutDust),
            this._mainPnl.img_dustbin.off(Laya.Event.MOUSE_MOVE, this, this.onMoveDust),
            this._mainPnl.btn_rapid.off(Laya.Event.CLICK, this, this.onRapid),
            this._mainPnl.btn_task.off(Laya.Event.CLICK, this, this.onTask),
            this._mainPnl.btn_dial.off(Laya.Event.CLICK, this, this.onDial),
            this._mainPnl.img_showGun.off(Laya.Event.CLICK, this, this.onShowGun),
            this._mainPnl.btn_roleSkin.off(Laya.Event.CLICK, this, this.onRoleSkin),
            this._mainPnl.btn_signIn.off(Laya.Event.CLICK, this, this.onSignIn),
            this._mainPnl.img_greenHands2.off(Laya.Event.CLICK, this, this.onBuyGunWay),
            this._mainPnl.btn_paradrop.off(Laya.Event.CLICK, this, this.paradropWay),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_SHOP, this, this.shopGunWay),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_FREESHOP, this, this.freeShopGunWay),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_CHANGEGUN, this, this.showGunWay),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_GOLD_REFRESH, this, this.addGold),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_DIAMOND_REFRESH, this, this.addDiamond),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_SECONDADDGOLD, this, this.secondAddGold),
            asgard.events.EventsDispatcher.unregisterEventListener(_.GameEvents.EVENT_ROLESKIN, this, this.roleSkini);
        }
        ,
        r.prototype.game3Click = function() {
            asgard.ui.UIManager.openView(_.UIRes.MOREGAME);
        }
        ,
        r.prototype.funcFoldClick = function() {
            this.funFoldIsOpen ? (Laya.Tween.to(this._mainPnl.funcBox_img, {
                x: -250
            }, 150),
            this._mainPnl.funcFold_img.skin = "game/UIchouti2.png") : (Laya.Tween.to(this._mainPnl.funcBox_img, {
                x: -2
            }, 150),
            this._mainPnl.funcFold_img.skin = "game/UIchouti3.png"),
            this.funFoldIsOpen = !this.funFoldIsOpen;
        }
        ,
        r.prototype.refreshLevel = function() {
            this._mainPnl.lab_customs.text = this._playerModule.RoleInfo.Chapter.toString();
        }
        ,
        r.prototype.showMainMenu = function() {
            10 < this._playerModule.RoleInfo.Chapter ? this._mainPnl.endless_btn.skin = "gun/狙击摸式.png" : this._mainPnl.endless_btn.skin = "gun/狙击摸式未解锁.png",
            this.isTrueGuide = !1,
            this._mainPnl.img_guide.visible = !1,
            this.guideTimer = 0,
            this._mainPnl.visible = !0,
            this._mainPnl.lab_customs.text = this._playerModule.RoleInfo.Chapter.toString(),
            this.showDot(),
            this._playerModule.RoleInfo.IsFinishGuidance && (this._mainPnl.go_btn.visible = !0,
            this._mainPnl.btn_buyGun.visible = !0,
            this._mainPnl.box_greenHands.visible = !1,
            this._mainPnl.box_guidance.visible = !1,
            this._mainPnl.img_hand.visible = !1),
            4 <= this._playerModule.RoleInfo.procedureFinish && (this._mainPnl.go_btn.visible = !0,
            this._mainPnl.btn_buyGun.visible = !0,
            this._mainPnl.box_greenHands.visible = !1,
            this._mainPnl.box_guidance.visible = !1,
            this._mainPnl.img_hand.visible = !1),
            _.RankManager.syncRankData();
        }
        ,
        r.prototype.dialClick = function() {
            asgard.ui.UIManager.openView(_.UIRes.DIAL);
        }
        ,
        r.prototype.onShowShop = function() {
            asgard.ui.UIManager.openView(_.UIRes.SHOP);
        }
        ,
        r.prototype.showDot = function() {
            this._mainPnl.img_dot.visible = !1;
            for (var t = this._playerModule.RoleInfo.roleSkinArr, e = 0; e < t.length; e++) {
                t[e].redDot || (this._mainPnl.img_dot.visible = !0);
            }
        }
        ,
        r.prototype.showRoleSkin = function() {
            this.gunItemArr = this.findType(3);
            for (var t = 0; t < this.gunItemArr.length; t++) {
                var e = this.gunItemArr[t];
                e.Condition < this._playerModule.RoleInfo.Chapter && (this.istrueExist(e.Id) || (this._playerModule.RoleInfo.roleSkinArr.push({
                    id: e.Id,
                    istrue: !0,
                    redDot: !1,
                    pitchOn: !1,
                    type: e.Type
                }),
                this.roleSkini(e.Id)));
            }
        }
        ,
        r.prototype.roleSkini = function(t) {
            this._mainPnl.img_RoleSkin.skin = "player/Hero_" + t + ".png",
            this._mainPnl.ani6.play(0, !1);
        }
        ,
        r.prototype.istrueExist = function(t) {
            for (var e = this._playerModule.RoleInfo.roleSkinArr, i = 0; i < e.length; i++) {
                if (e[i].id == t)
                    return !0;
            }
            return !1;
        }
        ,
        r.prototype.findType = function(t) {
            for (var e = asgard.data.StaticDataManager.getSheetDatas(9), i = [], n = 0; n < e.length; n++) {
                e[n].Type == t && i.push(e[n]);
            }
            return i;
        }
        ,
        r.prototype.Adaptive = function() {
            this._mainPnl.size(Laya.stage.width, Laya.stage.height),
            this._mainPnl.back_img.width = Laya.stage.width,
            this._mainPnl.back_img.height = Laya.stage.height,
            this._mainPnl.main_box.x = (Laya.stage.width - this._mainPnl.main_box.width) / 2,
            this._mainPnl.main_box.y = (Laya.stage.height - this._mainPnl.main_box.height) / 2,
            this._mainPnl.main_box2.x = (Laya.stage.width - this._mainPnl.main_box2.width) / 2;
        }
        ,
        r.prototype.gunNewInit = function() {
            3 != this._playerModule.RoleInfo.procedureFinish && (this.gunArr = [],
            this.pedestalArr = [],
            this._playerModule.RoleInfo.ShowGunArr = []);
            for (var t = this._playerModule.RoleInfo.ShowGunArr, e = 0, i = 0, n = 0; n < this.row; n++)
                for (var a = 0; a < this.col; a++)
                    e++,
                    this.gunItem = new _.GunItemPanl(),
                    this.pedestal = new _.PedestalItemPanel(),
                    0 < t.length && 0 != t[i] ? this.gunItem.gunType(data.StaticDataFactory.findGun(1e3 + t[i])) : t.length < 1 && i < 1 ? this.gunItem.gunType(data.StaticDataFactory.findGun(1001)) : this.gunItem.gunType({
                        Level: 0
                    }),
                    i++,
                    this.gunItem.pos(a * this.intervalX, n * this.intervalY),
                    this.gunItem.zOrder = n * this.col + a,
                    this.gunItem.on(Laya.Event.MOUSE_DOWN, this, this.mouseClick),
                    e <= 2 ? this._mainPnl.box_greenHands4.addChild(this.gunItem) : this._mainPnl.box_gun2.addChild(this.gunItem),
                    this.gunArr.push(this.gunItem),
                    0 == this.gunItem.gun_Data.Level ? (this.gunItem.lab_grade.text = "",
                    this.gunItem.img_bg.visible = !1) : (this.gunItem.lab_grade.text = this.gunItem.gun_Data.Level.toString(),
                    this.gunItem.img_bg.visible = !0),
                    this.pedestal.pos(a * this.intervalX, n * this.intervalY + 60),
                    e <= 2 ? this._mainPnl.box_greenHands3.addChild(this.pedestal) : this._mainPnl.box_2.addChild(this.pedestal),
                    this.pedestalArr.push(this.pedestal);
        }
        ,
        r.prototype.gunInit = function() {
            for (var t = this._playerModule.RoleInfo.ShowGunArr, e = 0, i = 0; i < this.row; i++)
                for (var n = 0; n < this.col; n++)
                    this.gunItem = new _.GunItemPanl(),
                    this.pedestal = new _.PedestalItemPanel(),
                    0 < t.length && 0 != t[e] ? this.gunItem.gunType(data.StaticDataFactory.findGun(1e3 + t[e])) : 0 == t.length && 0 == e ? this.gunItem.gunType(data.StaticDataFactory.findGun(1001)) : this.gunItem.gunType({
                        Level: 0
                    }),
                    e++,
                    this.gunItem.pos(n * this.intervalX, i * this.intervalY),
                    this.gunItem.zOrder = i * this.col + n,
                    this.gunItem.on(Laya.Event.MOUSE_DOWN, this, this.mouseClick),
                    this._mainPnl.box_gunArr.addChild(this.gunItem),
                    this.gunArr.push(this.gunItem),
                    0 == this.gunItem.gun_Data.Level ? (this.gunItem.lab_grade.text = "",
                    this.gunItem.img_bg.visible = !1) : (this.gunItem.lab_grade.text = this.gunItem.gun_Data.Level.toString(),
                    this.gunItem.img_bg.visible = !0),
                    this.pedestal.pos(n * this.intervalX, i * this.intervalY + 60),
                    this._mainPnl.box_pedestal.addChild(this.pedestal),
                    this.pedestalArr.push(this.pedestal);
        }
        ,
        r.prototype.init = function() {
            10 < this._playerModule.RoleInfo.Chapter ? (this._mainPnl.endless_btn.skin = "gun/狙击摸式.png",
            console.log("狙击未开启")) : this._mainPnl.endless_btn.skin = "gun/狙击摸式未解锁.png",
            this._playerModule.RoleInfo.IsFinishGuidance = !0,
            this._playerModule.RoleInfo.freeGunIstrue ? this._mainPnl.img_free.visible = !0 : this._mainPnl.img_free.visible = !1,
            this._mainPnl.img_guide.visible = !1,
            this.awardNum = 14,
            this.istruePar = !1,
            this._mainPnl.lab_customs.text = this._playerModule.RoleInfo.Chapter.toString(),
            this._mainPnl.lab_timer.text = "",
            this._playerModule.RoleInfo.IsFinishGuidance && (this._mainPnl.box_greenHands.visible = !1,
            this._mainPnl.box_guidance.visible = !1),
            this.gunInit(),
            this.updateGunId(),
            this.showGunWay(this.buyGunId % 1e3, !1),
            this.buyGunMessage(this.buyGunId % 1e3),
            this.addGold(),
            this.addDiamond(),
            this.secondAddGold(),
            this._playerModule.RoleInfo.showOffneIsTrue && this.showOffne(),
            1 == this._playerModule.RoleInfo.IsNew && (this._playerModule.RoleInfo.showSigninIsTrue = !0),
            this._playerModule.RoleInfo.showSigninIsTrue && Laya.timer.once(1e3, this, this.showSignin),
            this.showDot(),
            _.RankManager.syncRankData(),
            this._mainPnl.ani4.play(0, !0),
            this.finishTask(),
            this.taskDot();
        }
        ,
        r.prototype.isNewUser = function() {
            switch (this._mainPnl.img_hand.visible = !0,
            this._playerModule.RoleInfo.procedureFinish) {
            case 1:
                this._mainPnl.ani1.play(0, !0),
                this._mainPnl.go_btn.visible = !1,
                this._mainPnl.btn_buyGun.visible = !0,
                this._mainPnl.img_greenHands1.visible = !0,
                this._mainPnl.img_greenHands2.visible = !1,
                this._mainPnl.box_greenHands3.visible = !1,
                this._mainPnl.box_greenHands4.visible = !1,
                this._mainPnl.box_greenHands5.visible = !1;
                break;

            case 2:
                this._mainPnl.ani1.gotoAndStop(0),
                this._mainPnl.ani2.play(0, !0),
                this._mainPnl.go_btn.visible = !0,
                this._mainPnl.btn_buyGun.visible = !1,
                this._mainPnl.box_newGunArr.removeSelf(),
                this._mainPnl.box_newPedestal.removeSelf(),
                this._mainPnl.img_greenHands1.visible = !1,
                this._mainPnl.img_greenHands2.visible = !0,
                this._mainPnl.box_greenHands3.visible = !0,
                this._mainPnl.box_greenHands4.visible = !0,
                this.gunNewInit();
                break;

            case 3:
                this._mainPnl.ani2.stop(),
                this._mainPnl.ani3.play(0, !0),
                this._mainPnl.go_btn.visible = !0,
                this._mainPnl.btn_buyGun.visible = !0,
                this._mainPnl.img_greenHands1.visible = !1,
                this._mainPnl.img_greenHands2.visible = !1,
                this._mainPnl.box_greenHands3.visible = !0,
                this._mainPnl.box_greenHands4.visible = !0;
                break;

            case 4:
                this._mainPnl.go_btn.visible = !1,
                this._mainPnl.btn_buyGun.visible = !0,
                this._mainPnl.ani3.stop(),
                this._mainPnl.ani1_0.play(0, !0),
                this._mainPnl.img_greenHands1.visible = !0,
                this._mainPnl.img_greenHands2.visible = !1,
                this._mainPnl.box_greenHands3.visible = !1,
                this._mainPnl.box_greenHands4.visible = !1,
                this._mainPnl.box_greenHands5.visible = !1,
                this._playerModule.RoleInfo.IsFinishGuidance = !0,
                this._uiDataModule.IsNewPlayer = !0,
                this._playerModule.RoleInfo.IsNew = 0,
                this.gunArr = [],
                this.pedestalArr = [],
                this._mainPnl.box_2.removeSelf(),
                this._mainPnl.box_gun2.removeSelf(),
                this.gunInit();
            }
            this._playerModule.TrySaveGameData();
        }
        ,
        r.prototype.showSignin = function() {
            this._playerModule.RoleInfo.IstureSignIn = !1,
            asgard.ui.UIManager.openView(_.UIRes.SIGNIN),
            6 < this._playerModule.RoleInfo.SignInNum && (this._playerModule.RoleInfo.SignInNum = 0);
        }
        ,
        r.prototype.showOffne = function() {
            asgard.ui.UIManager.openView(_.UIRes.OFFLINE);
        }
        ,
        r.prototype.mouseClick = function(t) {
            var e = t.currentTarget;
            0 != e.gun_Data.Level && this.istrueClick && (this.istrueClick = !1,
            this.isTrueGuide = !1,
            this._mainPnl.img_guide.visible = !1,
            this.guideTimer = 0,
            this._playerModule.RoleInfo.IsFinishGuidance ? (e.img_gunItem.x = t.stageX - e.x - this._mainPnl.x - this._mainPnl.box_gunArr.x - this._mainPnl.main_box2.x,
            e.img_gunItem.y = t.stageY - e.y - this._mainPnl.y - this._mainPnl.box_gunArr.y - this._mainPnl.main_box2.y) : (e.img_gunItem.x = t.stageX - e.x - this._mainPnl.x - this._mainPnl.box_greenHands4.x - this._mainPnl.box_guidance.x,
            e.img_gunItem.y = t.stageY - e.y - this._mainPnl.y - this._mainPnl.box_greenHands4.y - this._mainPnl.box_guidance.y),
            e.zOrder = 99999,
            this.sameGunPlayAni(e, e.gun_Data.Level, !0),
            this.onGunMinX = e.x,
            this.onGunMaxY = e.y,
            this.onGunItem = e,
            this.onGunItem.img_gunItem.startDrag(),
            this._mainPnl.img_dustbin.skin = "gun/垃圾筐打开.png",
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onUpDrag),
            Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.onUpDrag));
        }
        ,
        r.prototype.onUpDrag = function() {
            var t, e;
            this.isTrueGuide = !1,
            this._mainPnl.img_guide.visible = !1,
            this.guideTimer = 0,
            this.onClickTimer = 0,
            this.sameGunPlayAni(this.onGunItem, this.onGunItem.gun_Data.Level, !1);
            this.onGunItem.img_gunItem.localToGlobal(new Laya.Point(0,0));
            for (var i = 0; i < this.gunArr.length; i++) {
                if (this.card = this.gunArr[i],
                e = this._playerModule.RoleInfo.IsFinishGuidance ? (t = this._mainPnl.x + this._mainPnl.box_gunArr.x + this._mainPnl.main_box2.x + this.card.x + 50,
                this._mainPnl.y + this._mainPnl.box_gunArr.y + this._mainPnl.main_box2.y + this.card.y + 60) : (t = this._mainPnl.x + this._mainPnl.box_greenHands4.x + this._mainPnl.box_guidance.x + this.card.x + 50,
                this._mainPnl.y + this._mainPnl.box_greenHands4.y + this._mainPnl.box_guidance.y + this.card.y + 60),
                this.onGunItem.img_gunItem.hitTestPoint(t, e) && this.card != this.onGunItem) {
                    this.card = this.gunArr[i];
                    break;
                }
                this.card = null;
            }
            if (null != this.card)
                if (0 == this.card.gun_Data.Level)
                    this.card.gunType(this.onGunItem.gun_Data),
                    this.onGunItem.gunType({
                        Level: 0
                    }),
                    this.onGunItem.img_gunItem.x = this.onGunItem.img_gunItem.width / 2,
                    this.onGunItem.img_gunItem.y = this.onGunItem.img_gunItem.height / 2,
                    this.istrueClick = !0;
                else if (this.card.gun_Data.Level == this.onGunItem.gun_Data.Level) {
                    var n = this.onGunItem.x
                      , a = this.onGunItem.y;
                    this.onGunItem.x = this.card.x,
                    this.onGunItem.y = this.card.y,
                    this.onGunItem.img_gunItem.x = this.onGunItem.img_gunItem.width / 2,
                    this.onGunItem.img_gunItem.y = this.onGunItem.img_gunItem.height / 2,
                    Laya.SoundManager.playSound("sound/Merge.mp3");
                    var s = 1e3 + this.card.gun_Data.Level + 1
                      , r = data.StaticDataFactory.findGun(s);
                    this.card.gunType(r),
                    this.onGunItem.gunType({
                        Level: 0
                    }),
                    this.onGunItem.x = n,
                    this.onGunItem.y = a,
                    this.showGunWay(this.card.gun_Data.Level, !1),
                    _.CommonUtil.shake(this.card.img_gunItem),
                    _.CommonUtil.shake(this.card.img_gun),
                    this._playerModule.RoleInfo.EveryDayCompound++,
                    this.istrueClick = !0;
                } else {
                    var o = this.card.gun_Data;
                    this.card.gunType(this.onGunItem.gun_Data),
                    this.onGunItem.gunType(o),
                    this.onGunItem.img_gunItem.x = this.onGunItem.img_gunItem.width / 2,
                    this.onGunItem.img_gunItem.y = this.onGunItem.img_gunItem.height / 2,
                    this.istrueClick = !0;
                }
            else
                Laya.Tween.to(this.onGunItem.img_gunItem, {
                    x: this.onGunItem.img_gunItem.width / 2,
                    y: this.onGunItem.img_gunItem.height / 2
                }, 100, null, Laya.Handler.create(this, function() {
                    this.istrueClick = !0;
                }));
            this.onGunItem = null,
            this._mainPnl.img_dustbin.skin = "gun/垃圾筐.png",
            Laya.stage.off(Laya.Event.MOUSE_UP, this, this.onUpDrag),
            Laya.stage.off(Laya.Event.MOUSE_OUT, this, this.onUpDrag),
            Laya.timer.once(this.onClickTimer, this, this.getGunArrId),
            Laya.timer.once(this.onClickTimer, this, this.onClickIstrue),
            Laya.timer.once(this.onClickTimer, this, this.pedestalShow),
            Laya.timer.once(this.onClickTimer, this, this.zorderSort);
        }
        ,
        r.prototype.onClickIstrue = function() {
            this.istrueClick = !0;
        }
        ,
        r.prototype.zorderSort = function() {
            for (var t = 0; t < this.gunArr.length; t++) {
                this.gunArr[t].zOrder = t;
            }
        }
        ,
        r.prototype.gunShow = function(t, e) {
            var i = this;
            Laya.timer.once(400, this, function() {
                t.visible = !0,
                _.CommonUtil.shake(i.card.img_gunItem),
                _.CommonUtil.shake(i.card.img_gun),
                e.removeSelf(),
                Laya.Pool.recover("img", e);
            });
        }
        ,
        r.prototype.PlayAnimation = function(t, e, i, n, a) {
            void 0 === a && (a = 1);
            var s = new Laya.Animation();
            s.loadAtlas("res/animation/" + t + ".atlas", Laya.Handler.create(this, function() {
                s.play(0, !1);
            })),
            s.pos(i, n),
            s.scale(a, a),
            s.on(Laya.Event.COMPLETE, this, function() {
                s.gotoAndStop(s.frames.length - 1),
                Laya.timer.once(0, this, function() {
                    s.removeSelf();
                });
            }),
            e == this._mainPnl.img_showGun ? this._mainPnl.img_showGun.addChild(s) : this._mainPnl.box_animation.addChild(s);
        }
        ,
        r.prototype.pedestalShow = function() {
            for (var t = 0; t < this.gunArr.length; t++) {
                var e = this.gunArr[t];
                0 == e.gun_Data.Level ? this.gunArr[t].hide() : this.gunArr[t].show(e.gun_Data.Level);
            }
        }
        ,
        r.prototype.getGunArrId = function() {
            for (var t = [], e = 0; e < this.gunArr.length; e++) {
                var i = this.gunArr[e];
                t.push(i.gun_Data.Level);
            }
            this._playerModule.RoleInfo.ShowGunArr = t,
            this._playerModule.TrySaveGameData(),
            this.secondAddGold();
        }
        ,
        r.prototype.onMoveDust = function() {
            this._mainPnl.img_dustbin.skin = "gun/垃圾筐打开.png";
        }
        ,
        r.prototype.onOutDust = function() {
            this._mainPnl.img_dustbin.skin = "gun/垃圾筐.png";
        }
        ,
        r.prototype.clickDust = function() {
            this._playerModule.RoleInfo.tipsDescribe = "Drag the gun here and recycle it";
            var t = new _.TipsPanes();
            Laya.stage.addChild(t);
        }
        ,
        r.prototype.onDustbinWay = function() {
            this.onGunItem && (_.SystemHelper.playSoundById(_.SoundId.Buy),
            this.sameGunPlayAni(this.onGunItem, this.onGunItem.gun_Data.Level, !1),
            this.onGunItem.img_gunItem.x = 0,
            this.onGunItem.img_gunItem.y = 0,
            this._playerModule.RoleInfo.Gold += _.DataUtils.getSellGoldById(1e3 + this.onGunItem.gun_Data.Level),
            this._playerModule.RoleInfo.AllGold += _.DataUtils.getSellGoldById(1e3 + this.onGunItem.gun_Data.Level),
            this.onGunItem.gunType({
                Level: 0
            }),
            _.PlatForm.getInstance().aldSendEvent("拆解枪获得货币的次数"));
        }
        ,
        r.prototype.upChangeGun = function() {
            this.onGunItem && this._playerModule.RoleInfo.ShowGunIdId != this.onGunItem.gun_Data.Level && (this._playerModule.RoleInfo.dragChangeGun || (_.PlatForm.getInstance().aldSendEvent("新用户首次拖动枪支换枪"),
            this._playerModule.RoleInfo.dragChangeGun = !0),
            this._mainPnl.ani4.gotoAndStop(0),
            this._mainPnl.ani5.play(0, !1),
            this._playerModule.RoleInfo.ShowGunIdId = this.onGunItem.gun_Data.Level,
            this.sameGunPlayAni(this.onGunItem, this.onGunItem.gun_Data.Level, !1),
            this._mainPnl.img_showGun.skin = "gun/gun_" + this.onGunItem.gun_Data.Level + ".png",
            this._mainPnl.img_shadow.skin = "gun/gunShadow_" + this.onGunItem.gun_Data.Level + ".png",
            this._mainPnl.lab_gunName.text = "LV." + this.onGunItem.gun_Data.Level + " " + this.onGunItem.gun_Data.Name,
            this._mainPnl.img_showGun.scale(0, 0),
            this._mainPnl.img_shadow.scale(0, 0),
            Laya.Tween.to(this._mainPnl.img_shadow, {}, 500, Laya.Ease.circOut, Laya.Handler.create(this, function() {
                this._mainPnl.ani4.play(0, !0);
            })));
        }
        ,
        r.prototype.vacancyGun = function() {
            for (var t = 0; t < this.gunArr.length; t++) {
                if (0 == this.gunArr[t].gun_Data.Level)
                    return t;
            }
            return "false";
        }
        ,
        r.prototype.sameGunPlayAni = function(t, e, i) {
            for (var n = 0; n < this.gunArr.length; n++) {
                var a = this.gunArr[n]
                  , s = this.pedestalArr[n];
                a.gun_Data.Level == e && t != a && (i ? (a.playAni(),
                s.playAni()) : (a.ani1.gotoAndStop(0),
                s.ani1.gotoAndStop(0),
                s.img_guang.visible = !1));
            }
        }
        ,
        r.prototype.showGunWay = function(t, e) {
            void 0 === e && (e = !0),
            e ? this._playerModule.RoleInfo.ShowGunIdId = t : this._playerModule.RoleInfo.MaxGunId < t && (_.PlatForm.getInstance().vibrateShort(),
            this._playerModule.RoleInfo.MaxGunId = t,
            this._playerModule.RoleInfo.ShowGunIdId = t,
            this._playerModule.RoleInfo.gunBuyNum.push({
                id: t,
                isTrue: !0,
                buyNum: 0,
                buyJewelNum: 0
            }),
            this._playerModule.RoleInfo.GetGoldNum = 0,
            _.PlatForm.getInstance().aldSendEvent("完成" + this._playerModule.RoleInfo.MaxGunId + "级枪合成"),
            asgard.ui.UIManager.openView(_.UIRes.GETNEWGUN));
            var i = data.StaticDataFactory.findGun(1e3 + this._playerModule.RoleInfo.ShowGunIdId);
            this._mainPnl.img_showGun.skin = "gun/gun_" + this._playerModule.RoleInfo.ShowGunIdId + ".png",
            this._mainPnl.img_shadow.skin = "gun/gunShadow_" + this._playerModule.RoleInfo.ShowGunIdId + ".png",
            this._mainPnl.lab_gunName.text = "LV." + i.Level + " " + i.Name;
        }
        ,
        r.prototype.findGunMoney = function(t) {
            for (var e = _.DataUtils.getBuyGoldById(1e3 + t), i = this._playerModule.RoleInfo.gunBuyNum, n = data.StaticDataFactory.findGun(1e3 + t), a = 0; a < i.length; a++) {
                var s = i[a];
                if (s.id == t)
                    for (var r = 0; r < s.buyNum; r++)
                        e *= n.AddGold;
            }
            return e;
        }
        ,
        r.prototype.onBuyGunWay = function() {
            this.istrueClick = !0,
            this.isTrueGuide = !1,
            this._mainPnl.img_guide.visible = !1,
            this.guideTimer = 0;
            var t = data.StaticDataFactory.findGun(this.buyGunId)
              , e = this.vacancyGun();
            if ("false" != e)
                this._playerModule.RoleInfo.Gold >= this.findGunMoney(this.buyGunId % 1e3) && 0 < this._playerModule.RoleInfo.Gold ? (this.gunArr[e].gunTween(t),
                this.gunArr[e].show(t.Level),
                this.changeGunBuyNum(t.Level),
                this.getGunArrId(),
                this.updateGunId(),
                this._playerModule.RoleInfo.Gold -= this.findGunMoney(this.buyGunId % 1e3),
                this._playerModule.RoleInfo.Gold < 0 && (this._playerModule.RoleInfo.Gold = 0),
                Laya.SoundManager.playSound("sound/BuyCar.mp3")) : asgard.ui.UIManager.openView(_.UIRes.GETGOLD);
            else {
                this._playerModule.RoleInfo.tipsDescribe = "The arsenal is full, please combine or drag the guns";
                var i = new _.TipsPanes();
                Laya.stage.addChild(i);
            }
        }
        ,
        r.prototype.updateGunId = function() {
            this.buyGunId = this.optimalBuyGunMoney();
            var t = data.StaticDataFactory.findGun(this.buyGunId);
            this.buyGunMessage(t.Level);
        }
        ,
        r.prototype.optimalBuyGunMoney = function() {
            var t = this._playerModule.RoleInfo.MaxGunId
              , e = this._playerModule.RoleInfo.gunBuyNum
              , i = [];
            if (t < 6)
                return 1001;
            for (var n = 0; n < e.length; n++) {
                var a = e[n]
                  , s = data.StaticDataFactory.findGun(1e3 + a.id)
                  , r = _.DataUtils.getBuyGoldById(1e3 + a.id);
                switch (a.id) {
                case t - 4:
                    for (var o = 0; o < a.buyNum; o++)
                        r *= s.AddGold;
                    i.push({
                        id: a.id,
                        gunIdMoney: r
                    });
                    break;

                case t - 5:
                    for (var h = 0; h < a.buyNum; h++)
                        r *= s.AddGold;
                    r *= 2,
                    i.push({
                        id: a.id,
                        gunIdMoney: r
                    });
                    break;

                case t - 6:
                    for (var l = 0; l < a.buyNum; l++)
                        r *= s.AddGold;
                    r *= 4,
                    i.push({
                        id: a.id,
                        gunIdMoney: r
                    });
                    break;

                case t - 7:
                    for (var u = 0; u < a.buyNum; u++)
                        r *= s.AddGold;
                    r *= 8,
                    i.push({
                        id: a.id,
                        gunIdMoney: r
                    });
                    break;

                case t - 8:
                    for (var c = 0; c < a.buyNum; c++)
                        r *= s.AddGold;
                    r *= 16,
                    i.push({
                        id: a.id,
                        gunIdMoney: r
                    });
                    break;

                case t - 9:
                    for (var d = 0; d < a.buyNum; d++)
                        r *= s.AddGold;
                    r *= 32,
                    i.push({
                        id: a.id,
                        gunIdMoney: r
                    });
                }
            }
            return 1e3 + this.MaxLevel(i);
        }
        ,
        r.prototype.MaxLevel = function(t) {
            return t.sort(function(t, e) {
                return t.gunIdMoney > e.gunIdMoney ? 1 : t.gunIdMoney < e.gunIdMoney ? -1 : 0;
            }),
            0 < t.length ? t[0].id : 1;
        }
        ,
        r.prototype.buyGunMessage = function(t) {
            for (var e = 1e3 + t, i = this._playerModule.RoleInfo.gunBuyNum, n = data.StaticDataFactory.findGun(e), a = _.DataUtils.getBuyGoldById(e), s = 0; s < i.length; s++) {
                var r = i[s];
                if (r.id == t)
                    for (var o = 0; o < r.buyNum; o++)
                        a *= n.AddGold;
            }
            var h = _.CommonUtil.moneyChange(a);
            this._mainPnl.lab_buyGunMoney.text = h,
            this._mainPnl.img_buyGun.skin = "gun/gun_" + t + ".png",
            this._playerModule.RoleInfo.IsFinishGuidance || (this._mainPnl.img_gunSkin.skin = "gun/gun_" + t + ".png",
            this._mainPnl.lab_money.text = h);
        }
        ,
        r.prototype.changeGunBuyNum = function(t) {
            for (var e = this._playerModule.RoleInfo.gunBuyNum, i = 0; i < e.length; i++) {
                var n = e[i];
                n.id == t && (n.buyNum++,
                _.CommonUtil.Log("生成后增加的次数：" + n.buyNum));
            }
        }
        ,
        r.prototype.onShowGun = function() {
            _.PlatForm.getInstance().aldSendEvent("点击选择界面按钮"),
            this._playerModule.RoleInfo.newChangeGun || (_.PlatForm.getInstance().aldSendEvent("新用户首次打开换枪界面"),
            this._playerModule.RoleInfo.newChangeGun = !0),
            asgard.ui.UIManager.openView(_.UIRes.CHANGEGUN);
        }
        ,
        r.prototype.onRapid = function() {
            asgard.ui.UIManager.openView(_.UIRes.RAPID);
        }
        ,
        r.prototype.onTask = function() {
            _.PlatForm.getInstance().aldSendEvent("打开任务界面"),
            asgard.ui.UIManager.openView(_.UIRes.TASK);
        }
        ,
        r.prototype.onDial = function() {
            _.PlatForm.getInstance().aldSendEvent("打开转盘界面"),
            asgard.ui.UIManager.openView(_.UIRes.DIAL);
        }
        ,
        r.prototype.onSignIn = function() {
            this._playerModule.RoleInfo.newSign || (_.PlatForm.getInstance().aldSendEvent("新用户首次打开签到界面"),
            this._playerModule.RoleInfo.newSign = !0),
            asgard.ui.UIManager.openView(_.UIRes.SIGNIN);
        }
        ,
        r.prototype.onRoleSkin = function() {
            this._playerModule.RoleInfo.newRoleSkin || (_.PlatForm.getInstance().aldSendEvent("新用户首次打开皮肤界面"),
            this._playerModule.RoleInfo.newRoleSkin = !0),
            asgard.ui.UIManager.openView(_.UIRes.ROLESKIN);
        }
        ,
        r.prototype.shopGunWay = function(t) {
            this.istrueClick = !0;
            var e = data.StaticDataFactory.findGun(1e3 + t)
              , i = this.vacancyGun();
            "false" != i && (_.SystemHelper.playSoundById(_.SoundId.Buy),
            this.gunArr[i].gunTween(e),
            this.gunArr[i].show(e.Level),
            this.changeGunBuyNum(e.Level),
            this.getGunArrId());
        }
        ,
        r.prototype.freeShopGunWay = function(t) {
            this.istrueClick = !0;
            var e = data.StaticDataFactory.findGun(1e3 + t)
              , i = this.vacancyGun();
            "false" != i && (_.SystemHelper.playSoundById(_.SoundId.Buy),
            this.gunArr[i].gunTween(e),
            this.gunArr[i].show(e.Level),
            this.getGunArrId());
        }
        ,
        r.prototype.addGold = function() {
            var t = _.CommonUtil.moneyChange(this._playerModule.RoleInfo.Gold);
            0 < this._playerModule.RoleInfo.Gold ? this._mainPnl.lab_gold.text = t : this._mainPnl.lab_gold.text = "0";
        }
        ,
        r.prototype.addDiamond = function() {
            var t = _.CommonUtil.moneyChange(this._playerModule.RoleInfo.Diamond);
            this._mainPnl.lab_diamond.text = t;
        }
        ,
        r.prototype.secondAddGold = function() {
            var t = 0;
            this._uiDataModule.isTrueRapid ? this.isReapidDonle = 2 : this.isReapidDonle = 1;
            for (var e = 0; e < this.gunArr.length; e++) {
                var i = this.gunArr[e];
                0 != i.gun_Data.Level && (t += _.DataUtils.getEarnPerSecondById(1e3 + i.gun_Data.Level) * this.isReapidDonle * i.gun_Data.EarnSpace);
            }
            this._playerModule.RoleInfo.SecondAddGold = t,
            this._mainPnl.lab_perSecondGold.text = _.CommonUtil.moneyChange(t) + "/s";
        }
        ,
        r.prototype.onLoadConfigFail = function(t) {
            _.CommonUtil.Log("loadConfigFail:", t);
        }
        ,
        r.prototype.getShareCountCallBack = function() {
            this._playerModule.RoleInfo.ShareScore < this._socialModule.ShareBackCount && (this._playerModule.RoleInfo.ShareScore += 170 * (this._socialModule.ShareBackCount - this._playerModule.RoleInfo.ShareScore),
            this._playerModule.RoleInfo.ShareBackCount = this._socialModule.ShareBackCount,
            this._playerModule.TrySaveGameData());
        }
        ,
        r.prototype.loginLogCallBack = function() {
            1 == this._playerModule.RoleInfo.IsNew && (_.PlatForm.getInstance().aldSendEvent("当天新用户登陆"),
            this._playerModule.RoleInfo.showSigninIsTrue = !0,
            this._uiDataModule.IsNewPlayer = !0,
            this._playerModule.RoleInfo.IsNew = 0,
            this._playerModule.TrySaveGameData());
        }
        ,
        r.prototype.testClick = function() {
            asgard.ui.UIManager.openView(_.UIRes.GM);
        }
        ,
        r.prototype.refreshSoundBtnSkin = function() {
            this._gameModule.HasSound ? this._mainPnl.sound_btn.skin = "gun/声音开.png" : this._mainPnl.sound_btn.skin = "gun/声音关.png";
        }
        ,
        r.prototype.soundBtnClick = function() {
            _.SystemHelper.playSoundById(_.SoundId.Button),
            this._gameModule.HasSound = !this._gameModule.HasSound,
            _.SystemConst.SOUND_ACTIVE = this._gameModule.HasSound,
            this.refreshSoundBtnSkin(),
            _.SystemConst.SOUND_ACTIVE ? Laya.SoundManager.muted = !1 : (_.SystemHelper.stopMusic(),
            _.SystemHelper.stopAllSound(),
            Laya.SoundManager.muted = !0);
        }
        ,
        r.prototype.rankBtnClick = function() {
            _.PlatForm.getInstance().aldSendEvent("点击进入排行榜"),
            _.SystemHelper.playSoundById(_.SoundId.Button),
            asgard.ui.UIManager.openView(_.UIRes.RANK);
        }
        ,
        r.prototype.foldClick = function() {
            asgard.ui.UIManager.openView(_.UIRes.RECENTLYUSE);
        }
        ,
        r.prototype.foldClick1 = function() {
            var t = this;
            _.SystemHelper.playSoundById(_.SoundId.Button),
            this._isMoving || (this._isMoving = !0,
            this._isIn && (this._mainPnl.promoteBg_img.visible = !0,
            Laya.Tween.to(this._mainPnl.promote_box, {
                x: 250
            }, 300, null, Laya.Handler.create(this, function() {
                t._isMoving = !1,
                t._isIn = !1;
            }))));
        }
        ,
        r.prototype.promoteClose = function() {
            var t = this;
            Laya.Tween.to(this._mainPnl.promote_box, {
                x: 721
            }, 300, null, Laya.Handler.create(this, function() {
                t._isMoving = !1,
                t._isIn = !0,
                t._mainPnl.promoteBg_img.visible = !1;
            }));
        }
        ,
        r.prototype.refreshList = function() {
            _.PlatformData.Instance.ShareSwitch && (this._mainPnl.game3_img.visible = !0,
            this._mainPnl.fold_btn.visible = !0),
            this._mainPnl.promote_list.renderHandler = new Laya.Handler(this,this.updateList),
            this._mainPnl.promote_list.array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
            r.gamesBoxArr = this._socialModule.MoreGameArr,
            this.refreshGame();
        }
        ,
        r.prototype.refreshGame = function() {
            r.gamesArr = [];
            var t = [];
            if (2 <= this._socialModule.MoreGameArr.length)
                for (; t.length < 2; ) {
                    var e = Math.floor(10 * Math.random());
                    t.indexOf(e) < 0 && t.push(e);
                }
            else
                for (var i = 0; i < 10; i++)
                    t.push(i);
            for (i = 0; i < t.length; i++)
                r.gamesArr.push(this._socialModule.MoreGameArr[t[i]]);
            var n = r.gamesArr[0]
              , a = r.gamesArr[1];
            if (n && _.PlatformData.Instance.ShareSwitch) {
                if (this._mainPnl.game1_img.skin = n.IconUrl,
                this._mainPnl.game1_img.removeChildren(),
                n.IsGif)
                    (s = new Laya.Animation()).scale(this._mainPnl.game1_img.width / 92, this._mainPnl.game1_img.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(n.PicName + "_", n.PngCount)).play(),
                    this._mainPnl.game1_img.addChild(s);
                this._mainPnl.game1_img.visible = !0;
            } else
                this._mainPnl.game1_img.visible = !1;
            if (a && _.PlatformData.Instance.ShareSwitch) {
                var s;
                if (this._mainPnl.game2_img.skin = a.IconUrl,
                this._mainPnl.game2_img.removeChildren(),
                a.IsGif)
                    (s = new Laya.Animation()).scale(this._mainPnl.game2_img.width / 92, this._mainPnl.game2_img.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(a.PicName + "_", a.PngCount)).play(),
                    this._mainPnl.game2_img.addChild(s);
                this._mainPnl.game2_img.visible = !0;
            } else
                this._mainPnl.game2_img.visible = !1;
            this._mainPnl.game1_img.on(Laya.Event.CLICK, this, this.gameShowClick, [0]),
            this._mainPnl.game2_img.on(Laya.Event.CLICK, this, this.gameShowClick, [1]);
        }
        ,
        r.prototype.aniUrls = function(t, e) {
            var i = [];
            return i;
        }
        ,
        r.prototype.updateList = function(t, e) {
            var i = t.getChildByName("icon_img")
              , n = t.getChildByName("name_lbl")
              , a = this._socialModule.MoreGameArr[e];
            if (a) {
                if (i.skin = a.IconUrl,
                n.text = a.Name,
                1 == a.IsGif) {
                    var s = new Laya.Animation();
                    s.scale(i.width / 92, i.width / 92),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(a.PicName + "_", a.PngCount)).play(),
                    i.addChild(s);
                }
                t.on(Laya.Event.CLICK, this, this.gameClick, [e]);
            }
        }
        ,
        r.prototype.gameShowClick = function(t) {
            r.gamesArr[t] && (console.log("点击了跳转： " + r.gamesArr[t].Name),
            IsWXGame() && wx.navigateToMiniProgram({
                appId: r.gamesArr[t].Id,
                path: r.gamesArr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("首页_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    _.PlatForm.getInstance().aldSendEvent("首页_跳转到_" + r.gamesArr[t].Name + "_成功"),
                    _.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_成功"),
                    _.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("首页_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    _.PlatForm.getInstance().aldSendEvent("首页_跳转到_" + r.gamesArr[t].Name + "_失败"),
                    _.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesArr[t].Name + "_失败"),
                    _.PlatForm.getInstance().aldSendEvent("跳转_失败"),
                    asgard.ui.UIManager.openView(_.UIRes.EXITPANEL);
                }
            }));
        }
        ,
        r.prototype.gameClick = function(t) {
            r.gamesBoxArr[t] && (console.log("点击了跳转： " + r.gamesBoxArr[t].Name),
            IsWXGame() && wx.navigateToMiniProgram({
                appId: r.gamesBoxArr[t].Id,
                path: r.gamesBoxArr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    _.CommonUtil.Log("跳转成功"),
                    _.PlatForm.getInstance().aldSendEvent("抽屉_跳转到_" + r.gamesBoxArr[t].Name + "_成功"),
                    _.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesBoxArr[t].Name + "_成功"),
                    _.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("抽屉_跳转到_" + r.gamesBoxArr[t].Name + "_失败"),
                    _.PlatForm.getInstance().aldSendEvent("抽屉_跳转到_" + r.gamesBoxArr[t].Name + "_失败"),
                    _.PlatForm.getInstance().aldSendEvent("跳转到_" + r.gamesBoxArr[t].Name + "_失败"),
                    _.PlatForm.getInstance().aldSendEvent("跳转_失败"),
                    asgard.ui.UIManager.openView(_.UIRes.EXITPANEL);
                }
            }));
        }
        ,
        r.prototype.CheckNewVersion = function() {}
        ,
        r.prototype.playGame = function() {
            if (!Window.IS_First) {
                Window.IS_First = true;
                this.playGame2();
            }
            else {
                var self = this;
                setLoadingVisible(true, true, function () {
                    self.playGame2();
                })
            }
        }
        ,
        r.prototype.playGame2 = function() {
            _.PlatForm.getInstance().aldSendEvent("点击开始任务按钮"),
            this._playerModule.RoleInfo.IsFinishGuidance = !0,
            this._uiDataModule.GameMode = 0,
            this._mainPnl.visible = !1,
            asgard.ui.UIManager.openView(_.UIRes.BATTLE),
            asgard.ui.UIManager.openView(_.UIRes.GAME);
        }
        ,
        r.prototype.snipeGame = function() {
            if (10 < this._playerModule.RoleInfo.Chapter)
                _.PlatForm.getInstance().aldSendEvent("点击狙击模式按钮"),
                this._uiDataModule.GameMode = 1,
                this._mainPnl.visible = !1,
                asgard.ui.UIManager.openView(_.UIRes.BATTLE),
                asgard.ui.UIManager.openView(_.UIRes.GAME);
            else {
                this._playerModule.RoleInfo.tipsDescribe = "达到10关以上才可解锁哦！";
                var t = new _.TipsPanes();
                Laya.stage.addChild(t);
            }
        }
        ,
        r.prototype.onFrame = function(t, e) {
            if (this._mainPnl)
                for (var i = 0; i < this.gunArr.length; i++) {
                    var n = this.gunArr[i];
                    0 != n.gun_Data.Level && n.onFrame(t, e);
                }
            this._uiDataModule.isTrueRapid && (this._mainPnl.img_rapid.visible = !1,
            this._mainPnl.lab_timer.text = _.CommonUtil.timeToStr_M_S(this._uiDataModule.speedUpTimer),
            this.addIstrue += e,
            1e3 <= this.addIstrue && (this._uiDataModule.speedUpTimer -= this.addIstrue,
            this.addIstrue = 0,
            this._uiDataModule.speedUpTimer < 1e3 && (this._mainPnl.img_rapid.visible = !0,
            this._mainPnl.lab_timer.text = "",
            this._uiDataModule.isTrueRapid = !1))),
            !this._playerModule.RoleInfo.freeGunIstrue && 7 <= this._playerModule.RoleInfo.MaxGunId && !this._playerModule.NoAd && (this.freeGunTimer += e,
            9e4 <= this.freeGunTimer ? (this.freeGunTimer = 0,
            this._mainPnl.img_free.visible = !0,
            this._playerModule.RoleInfo.freeGunIstrue = !0) : this._mainPnl.img_free.visible = !1),
            this._playerModule.RoleInfo.dialDot ? this._mainPnl.img_dialDot.visible = !1 : this._mainPnl.img_dialDot.visible = !0,
            this._playerModule.RoleInfo.signDot ? this._mainPnl.img_signDot.visible = !1 : this._mainPnl.img_signDot.visible = !0,
            !this.istruePar && 7 <= this._playerModule.RoleInfo.MaxGunId ? (this.paradropTimer += e,
            6e4 <= this.paradropTimer && (this.istruePar = !0,
            this.paradropTimer = 0,
            this.bezier())) : this.awardNum < 0 && (this.awardNum = 14,
            Laya.timer.clear(this, this.imgTime),
            this._mainPnl.btn_paradrop.visible = !1,
            this.istruePar = !1);
        }
        ,
        r.prototype.deuceDistance = function() {
            for (var t = 0; t < this.gunArr.length; t++) {
                var e = this.gunArr[t];
                if (0 != e.gun_Data.Level)
                    for (var i = t + 1; i < this.gunArr.length; i++) {
                        var n = this.gunArr[i];
                        if (e.gun_Data.Level == n.gun_Data.Level && 0 != n.gun_Data.Level)
                            return [{
                                X1: e.x,
                                Y1: e.y
                            }, {
                                X2: n.x,
                                Y2: n.y
                            }];
                    }
            }
            return !1;
        }
        ,
        r.prototype.bezier = function() {
            this.isClick = !1,
            this._mainPnl.lab_paradrop.text = "",
            this._mainPnl.par_1.visible = !0,
            this._mainPnl.par_2.visible = !0,
            this._mainPnl.par_3.visible = !1,
            _.PlatForm.getInstance().aldSendEvent("空投箱累计出现次数");
            var t = new Laya.Point()
              , e = new Laya.Point();
            t.setTo(this._mainPnl.starPush.x, this._mainPnl.starPush.y),
            e.setTo(this._mainPnl.endPush.x, this._mainPnl.endPush.y),
            this.pathArr = _.CommonUtil.bezierPath(t, e, 3, 200, 200),
            Laya.timer.frameLoop(1, this, this.paradrop);
        }
        ,
        r.prototype.paradrop = function() {
            var t = this.pathArr.shift();
            this._mainPnl.btn_paradrop.pos(t[0], t[1]),
            this._mainPnl.btn_paradrop.visible = !0,
            this.pathArr.length <= 0 && (this.isClick ? (this._mainPnl.par_1.visible = !1,
            this._mainPnl.par_2.visible = !1,
            this._mainPnl.par_3.visible = !0) : (this._mainPnl.par_1.visible = !1,
            this._mainPnl.par_2.visible = !0,
            this._mainPnl.par_3.visible = !1),
            Laya.timer.loop(3e3, this, this.imgTime),
            Laya.timer.clear(this, this.paradrop));
        }
        ,
        r.prototype.paradropWay = function() {
            if ("false" != this.vacancyGun())
                this.isClick ? this.clickOk() : (this._socialModule.getShareOrAd(_.ShareType.NpcBox),
                this._socialModule.doShareOrAd(_.ShareType.NpcBox, Laya.Handler.create(this, this.successCallBack)));
            else {
                this._playerModule.RoleInfo.tipsDescribe = "The arsenal is full, please combine or drag the guns";
                var t = new _.TipsPanes();
                Laya.stage.addChild(t);
            }
        }
        ,
        r.prototype.successCallBack = function(t) {
            _.CommonUtil.Log("result------" + t),
            "ok" == t && (this.parIdArr = this.parArithmetic(this._playerModule.RoleInfo.MaxGunId),
            this.readomIndex = _.CommonUtil.getRandom(0, this.parIdArr.length - 1, this.parIdArr.length),
            this.awardNum = this.parIdArr.length - 1,
            this.clickOk(),
            this._mainPnl.lab_paradrop.text = "" + (this.awardNum + 1),
            this._playerModule.RoleInfo.tipsDescribe = "Gain Success",
            asgard.ui.UIManager.openView(_.UIRes.TIPS),
            this.isClick = !0);
        }
        ,
        r.prototype.clickOk = function() {
            this._mainPnl.par_1.visible = !1,
            this._mainPnl.par_2.visible = !1,
            this._mainPnl.par_3.visible = !0,
            Laya.SoundManager.playSound("sound/BuyCar.mp3");
            var t = this.parIdArr[this.readomIndex[this.awardNum]]
              , e = data.StaticDataFactory.findGun(1e3 + t)
              , i = this.vacancyGun();
            this.gunArr[i].gunTween(e),
            this.gunArr[i].show(e.Level),
            this.awardNum--,
            this._mainPnl.lab_paradrop.text = "" + (this.awardNum + 1);
        }
        ,
        r.prototype.imgTime = function() {
            Laya.Tween.to(this._mainPnl.img_time, {
                x: 129
            }, 1e3, null, Laya.Handler.create(this, function() {
                this._mainPnl.img_time.x = -226;
            }));
        }
        ,
        r.prototype.parArithmetic = function(t) {
            this.paradropIdArr = [];
            for (var e = 6; e < 9 && 1 < t - e; e++)
                this.paradropIdArr.push(t - e);
            if (this.paradropIdArr.length <= 11)
                for (var i = this.paradropIdArr.length, n = 0; n < 11 - i; n++)
                    this.paradropIdArr.push(t - e);
            for (var a = 0; a < this.gunArr.length; a++) {
                var s = this.gunArr[a];
                9 < t - s.gun_Data.Level && this.paradropIdArr.length < 16 && 0 != s.gun_Data.Level && this.paradropIdArr.push(s.gun_Data.Level);
            }
            return this.paradropIdArr;
        }
        ,
        r.prototype.onGunFire = function() {}
        ,
        r.prototype.isGuidance = function() {
            this._playerModule.RoleInfo.IsFinishGuidance || (this._mainPnl.ani1.play(0, !0),
            this._mainPnl.go_btn.visible = !1,
            this._mainPnl.btn_buyGun.visible = !0,
            this._mainPnl.img_greenHands1.visible = !0,
            this._mainPnl.img_greenHands2.visible = !1,
            this._mainPnl.box_greenHands3.visible = !1,
            this._mainPnl.box_greenHands4.visible = !1,
            this._mainPnl.box_greenHands5.visible = !1);
        }
        ,
        r.prototype.barCode = function(t) {
            for (var e = 0; e < 9; e++)
                console.log(parseInt(t.charAt(e)));
        }
        ,
        r.prototype.finishTask = function() {
            for (var t, e = asgard.data.StaticDataManager.getSheetDatas(11), i = 0; i < this._playerModule.RoleInfo.IstrueTaskArr.length; i++) {
                if (0 == this._playerModule.RoleInfo.IstrueTaskArr[i])
                    switch ((t = e[i]).Tepe) {
                    case 1:
                        this._playerModule.RoleInfo.IstrueTaskArr[i] = 1;
                        break;

                    case 2:
                        this._playerModule.RoleInfo.EveryDayCompound >= t.Target && (this._playerModule.RoleInfo.IstrueTaskArr[i] = 1);
                        break;

                    case 3:
                        this._playerModule.RoleInfo.EveryDayKillCount >= t.Target && (this._playerModule.RoleInfo.IstrueTaskArr[i] = 1);
                        break;

                    case 4:
                        this._playerModule.RoleInfo.EveryDayShareCount >= t.Target && (this._playerModule.RoleInfo.IstrueTaskArr[i] = 1);
                        break;

                    case 5:
                        this._playerModule.RoleInfo.EveryDayAdCount >= t.Target && (this._playerModule.RoleInfo.IstrueTaskArr[i] = 1);
                        break;

                    case 6:
                        this.istrueTask() && (this._playerModule.RoleInfo.IstrueTaskArr[i] = 1);
                        break;

                    case 7:
                        this._playerModule.RoleInfo.EventDayWinNum >= t.Target && (this._playerModule.RoleInfo.IstrueTaskArr[i] = 1);
                    }
            }
            this.taskDot(),
            this._playerModule.TrySaveGameData();
        }
        ,
        r.prototype.istrueTask = function() {
            for (var t = 0, e = 0; e < this._playerModule.RoleInfo.IstrueTaskArr.length - 1; e++) {
                0 != this._playerModule.RoleInfo.IstrueTaskArr[e] && t++;
            }
            return 12 <= t;
        }
        ,
        r.prototype.taskDot = function() {
            for (var t = 0; t < this._playerModule.RoleInfo.IstrueTaskArr.length; t++) {
                if (1 == this._playerModule.RoleInfo.IstrueTaskArr[t])
                    return void (this._mainPnl.img_taskDot.visible = !0);
            }
            this._mainPnl.img_taskDot.visible = !1;
        }
        ,
        r;
    }(asgard.ui.BaseUIPanel);
    _.MainMenuPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function o(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(o, i),
        o.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.MoreGameUI()),
            this._pnl;
        }
        ,
        o.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            IsWXGame() && (this._pnl.back_img.height = wx.getMenuButtonBoundingClientRect().top + 120,
            console.log("wx.getMenuButtonBoundingClientRect().top:  " + this._pnl.back_img.height),
            this._pnl.roleSkinList.top = this._pnl.back_img.height),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.close),
            this._pnl.home_img.on(laya.events.Event.CLICK, this, this.goHome),
            this._pnl.game_img.on(laya.events.Event.CLICK, this, this.gameClick),
            this._pnl.roleSkinList.vScrollBarSkin = "",
            this._pnl.roleSkinList.array = [1, 2, 3],
            this._pnl.roleSkinList.scrollBar.elasticBackTime = 500,
            this._pnl.roleSkinList.scrollBar.elasticDistance = 100,
            this._pnl.roleSkinList.itemRender = ui.item.MoreGameItemUI,
            this._pnl.roleSkinList.renderHandler = new Laya.Handler(this,this.updateItem),
            o.game1Arr = [],
            o.game2Arr = [],
            o.game3Arr = [];
            for (var t = 0; t < 8; t++)
                o.game1Arr.push(this._socialModule.MoreGameArr[t]);
            for (t = 8; t < 16; t++)
                o.game2Arr.push(this._socialModule.MoreGameArr[t]);
            for (t = 16; t < this._socialModule.MoreGameArr.length; t++)
                o.game3Arr.push(this._socialModule.MoreGameArr[t]);
        }
        ,
        o.prototype.updateItem = function(t, e) {
            t.game_list.array = 0 == e ? (t.title_lbl.text = "每周推荐",
            t.game_list.renderHandler = new Laya.Handler(this,this.item1List),
            o.game1Arr) : 1 == e ? (t.title_lbl.text = "最新上架",
            t.game_list.renderHandler = new Laya.Handler(this,this.item2List),
            o.game2Arr) : (t.title_lbl.text = "必玩精品",
            t.game_list.renderHandler = new Laya.Handler(this,this.item3List),
            o.game3Arr);
        }
        ,
        o.prototype.item1List = function(t, e) {
            var i = t.getChildByName("icon_img")
              , n = t.getChildByName("name_lbl")
              , a = t.getChildByName("count_lbl")
              , s = o.game1Arr[e];
            if (s) {
                if (i.skin = s.IconUrl,
                s.IsGif) {
                    var r = new Laya.Animation();
                    r.scale(i.width / 92, i.width / 92),
                    r.interval = 130,
                    r.loadImages(this.aniUrls(s.PicName + "_", s.PngCount)).play(),
                    i.addChild(r);
                }
                n.text = s.Name,
                a.text = s.PeopleCount + "万人在玩",
                t.on(Laya.Event.CLICK, this, this.gameShowClick1, [e]);
            }
        }
        ,
        o.prototype.item2List = function(t, e) {
            var i = t.getChildByName("icon_img")
              , n = t.getChildByName("name_lbl")
              , a = t.getChildByName("count_lbl")
              , s = o.game2Arr[e];
            if (s) {
                if (i.skin = s.IconUrl,
                s.IsGif) {
                    var r = new Laya.Animation();
                    r.scale(i.width / 92, i.width / 92),
                    r.interval = 130,
                    r.loadImages(this.aniUrls(s.PicName + "_", s.PngCount)).play(),
                    i.addChild(r);
                }
                n.text = s.Name,
                a.text = s.PeopleCount + "万人在玩",
                t.on(Laya.Event.CLICK, this, this.gameShowClick2, [e]);
            }
        }
        ,
        o.prototype.item3List = function(t, e) {
            var i = t.getChildByName("icon_img")
              , n = t.getChildByName("name_lbl")
              , a = t.getChildByName("count_lbl")
              , s = o.game3Arr[e];
            if (s) {
                if (i.skin = s.IconUrl,
                s.IsGif) {
                    var r = new Laya.Animation();
                    r.scale(i.width / 92, i.width / 92),
                    r.interval = 130,
                    r.loadImages(this.aniUrls(s.PicName + "_", s.PngCount)).play(),
                    i.addChild(r);
                }
                n.text = s.Name,
                a.text = s.PeopleCount + "万人在玩",
                t.on(Laya.Event.CLICK, this, this.gameShowClick3, [e]);
            }
        }
        ,
        o.prototype.aniUrls = function(t, e) {
            var i = [];
            return i;
        }
        ,
        o.prototype.gameShowClick1 = function(t) {
            o.game1Arr[t] && (console.log("点击了跳转： " + o.game1Arr[t].Name),
            IsWXGame() && wx.navigateToMiniProgram({
                appId: o.game1Arr[t].Id,
                path: o.game1Arr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("盒子_跳转到_" + o.game1Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("盒子_跳转到_" + o.game1Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + o.game1Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("盒子_跳转到_" + o.game1Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("盒子_跳转到_" + o.game1Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + o.game1Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_失败"),
                    asgard.ui.UIManager.openView(e.UIRes.EXITPANEL);
                }
            }));
        }
        ,
        o.prototype.gameShowClick2 = function(t) {
            o.game2Arr[t] && (console.log("点击了跳转： " + o.game2Arr[t].Name),
            IsWXGame() && wx.navigateToMiniProgram({
                appId: o.game2Arr[t].Id,
                path: o.game2Arr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("盒子_跳转到_" + o.game2Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("盒子_跳转到_" + o.game2Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + o.game2Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("盒子_跳转到_" + o.game2Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("盒子_跳转到_" + o.game2Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + o.game2Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_失败"),
                    asgard.ui.UIManager.openView(e.UIRes.EXITPANEL);
                }
            }));
        }
        ,
        o.prototype.gameShowClick3 = function(t) {
            o.game3Arr[t] && (console.log("点击了跳转： " + o.game3Arr[t].Name),
            IsWXGame() && wx.navigateToMiniProgram({
                appId: o.game3Arr[t].Id,
                path: o.game3Arr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("盒子_跳转到_" + o.game3Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("盒子_跳转到_" + o.game3Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + o.game3Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("盒子_跳转到_" + o.game3Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("盒子_跳转到_" + o.game3Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + o.game3Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_失败"),
                    asgard.ui.UIManager.openView(e.UIRes.EXITPANEL);
                }
            }));
        }
        ,
        o.prototype.onHide = function() {
            this._pnl.close_btn.off(laya.events.Event.CLICK, this, this.close),
            this._pnl.home_img.off(laya.events.Event.CLICK, this, this.goHome),
            this._pnl.game_img.off(laya.events.Event.CLICK, this, this.gameClick);
        }
        ,
        o.prototype.gameClick = function() {
            0 < this._socialModule.MoreGameArr.length && IsWXGame() && wx.navigateToMiniProgram({
                appId: this._socialModule.MoreGameArr[0].Id,
                path: this._socialModule.MoreGameArr[0].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {},
                fail: function() {}
            });
        }
        ,
        o.prototype.onopen = function() {}
        ,
        o.prototype.onFrame = function(t, e) {}
        ,
        o.prototype.onclose = function() {}
        ,
        o.prototype.close = function() {
            asgard.ui.UIManager.closeView(e.UIRes.MOREGAME);
        }
        ,
        o.prototype.goHome = function() {
            asgard.ui.UIManager.closeView(e.UIRes.MOREGAME),
            asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_BACK_HOME);
        }
        ,
        o;
    }(asgard.ui.BaseUIPanel);
    e.MoreGamePanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(n) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._offLinePanel || (this._offLinePanel = new ui.panel.OffLinePanelUI(),
            this._offLinePanel.onClosed = this.onclose.bind(this),
            this._offLinePanel.onOpened = this.onopen.bind(this)),
            this._offLinePanel;
        }
        ,
        t.prototype.onShow = function() {
            n.PlatForm.getInstance().aldSendEvent("打开离线界面"),
            this._playerModule = asgard.module.ModuleManager.getModule(n.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(n.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(n.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(n.MODULE_UIDATA),
            this._offLinePanel.btn_return.on(laya.events.Event.CLICK, this, this.close),
            this._offLinePanel.btn_get.on(laya.events.Event.CLICK, this, this.onGet),
            this._offLinePanel.btn_doubleGet.on(laya.events.Event.CLICK, this, this.onDoubleGet),
            this._offLinePanel.popupCenter = !0,
            this._offLinePanel.show(),
            this.init(),
            n.PlatForm.getInstance().showBannerAd();
            ishasAds ? this._offLinePanel.btn_doubleGet.visible = true : this._offLinePanel.btn_doubleGet.visible = false;
        }
        ,
        t.prototype.onHide = function() {
            this._offLinePanel.btn_return.off(laya.events.Event.CLICK, this, this.close),
            this._offLinePanel.btn_get.off(laya.events.Event.CLICK, this, this.onGet),
            this._offLinePanel.btn_doubleGet.off(laya.events.Event.CLICK, this, this.onDoubleGet),
            n.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.init = function() {
            7200 < this._playerModule.RoleInfo.OffLineTimer && (this._playerModule.RoleInfo.OffLineTimer = 7200),
            this._socialModule.getShareOrAd(n.ShareType.OffLine) == n.RewardType.Share ? (n.CommonUtil.Log("share"),
            this._offLinePanel.btn_doubleGet.skin = "gunPanel/分享双倍领取.png") : (n.CommonUtil.Log("ad"),
            this._offLinePanel.btn_doubleGet.skin = "gunPanel/双倍领取按钮.png"),
            this.gunMoney = this._playerModule.RoleInfo.OffLineTimer,
            this._offLinePanel.lab_offMoney.text = n.CommonUtil.moneyChange(this.gunMoney * this._playerModule.RoleInfo.SecondAddGold);
        }
        ,
        t.prototype.onGet = function() {
            var t = new n.DiamondFlutterPanel();
            t.gold(),
            Laya.stage.addChild(t),
            n.PlatForm.getInstance().aldSendEvent("领取奖励按钮"),
            this._playerModule.RoleInfo.Gold += this.gunMoney * this._playerModule.RoleInfo.SecondAddGold,
            this._playerModule.RoleInfo.AllGold += this.gunMoney * this._playerModule.RoleInfo.SecondAddGold,
            this.close();
        }
        ,
        t.prototype.onDoubleGet = function() {
            this._socialModule.doShareOrAd(n.ShareType.OffLine, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        t.prototype.successCallBack = function(t) {
            if (n.CommonUtil.Log("result------" + t),
            "ok" == t) {
                var e = new n.DiamondFlutterPanel();
                e.gold(),
                Laya.stage.addChild(e),
                this._playerModule.RoleInfo.Gold += this.gunMoney * this._playerModule.RoleInfo.SecondAddGold * 2,
                this._playerModule.RoleInfo.AllGold += this.gunMoney * this._playerModule.RoleInfo.SecondAddGold * 2,
                this._playerModule.RoleInfo.tipsDescribe = "Gain Success",
                asgard.ui.UIManager.openView(n.UIRes.TIPS),
                this.close();
            }
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(n.UIRes.OFFLINE),
            n.SystemHelper.playSoundById(n.SoundId.Button);
        }
        ,
        t.prototype.close = function() {
            n.PlatForm.getInstance().aldSendEvent("关闭离线界面"),
            this._playerModule.TrySaveGameData(),
            this._offLinePanel.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    n.OffLinePanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e._rankShowFame = 0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._rankPnl || (this._rankPnl = new ui.panel.RankUI(),
            this._rankPnl.onClosed = this.onclose.bind(this),
            this._rankPnl.onOpened = this.onopen.bind(this)),
            this._rankPnl;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._rankPnl.rankSkinTab.selectHandler = new Laya.Handler(this,this.onSelectTab),
            this._rankPnl.rankSkinTab.selectedIndex = 0,
            this._rankPnl.close_btn.on(laya.events.Event.CLICK, this, this.close),
            e.RankManager.getRankData(),
            this.refreshTexture(),
            e.RankManager.refreshRankMes("Rank", "chapter"),
            this._rankPnl.popupCenter = !0,
            this._rankPnl.show(),
            asgard.events.EventsDispatcher.registerEventListener(e.GameEvents.EVENT_GET_SHARE_INFO, this, this.sendShareInfo),
            e.PlatForm.getInstance().showBannerAd();
        }
        ,
        t.prototype.onSelectTab = function(t) {
            switch (t) {
            case 0:
                e.RankManager.getRankData(),
                e.RankManager.refreshRankMes("Rank", "chapter");
                break;

            case 1:
                e.RankManager.getRankData(),
                e.RankManager.refreshRankMes("Rank", "allgold");
            }
        }
        ,
        t.prototype.refreshTexture = function() {
            IsWXGame() && (this._rankShowFame = 0,
            e.PlatForm.getInstance().initOpenContext(this._rankPnl.wxRank_sp.width, this._rankPnl.wxRank_sp.height),
            this._rankTexture = new Laya.Texture(Laya.Browser.window.sharedCanvas),
            this._rankTexture.bitmap.alwaysChange = !0,
            this._rankPnl.wxRank_sp.graphics.cleanByTexture(this._rankTexture, 0, 0, this._rankTexture.width, this._rankTexture.height));
        }
        ,
        t.prototype.onHide = function() {
            e.RankManager.closeRankMes("Rank"),
            this._rankPnl.wxRank_sp.graphics.clear(),
            this._rankTexture && (this._rankTexture.bitmap.alwaysChange = !1,
            this._rankTexture = null),
            this._rankPnl.close_btn.off(laya.events.Event.CLICK, this, this.close),
            asgard.events.EventsDispatcher.unregisterEventListener(e.GameEvents.EVENT_GET_SHARE_INFO, this, this.sendShareInfo),
            e.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.sendShareInfo = function(t) {
            e.CommonUtil.Log("shareIndex:  " + t);
        }
        ,
        t.prototype.shareClick = function() {}
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.RANK),
            e.SystemHelper.playSoundById(e.SoundId.Button);
        }
        ,
        t.prototype.close = function() {
            this._rankPnl.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.RankPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._rapidPanel || (this._rapidPanel = new ui.panel.RapidPanelUI(),
            this._rapidPanel.onClosed = this.onclose.bind(this),
            this._rapidPanel.onOpened = this.onopen.bind(this)),
            this._rapidPanel;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(e.MODULE_UIDATA),
            this._rapidPanel.btn_return.on(laya.events.Event.CLICK, this, this.close),
            this._rapidPanel.btn_rapid.on(Laya.Event.CLICK, this, this.onRapid),
            this._rapidPanel.btn_addRapid.on(Laya.Event.CLICK, this, this.onAddRapid),
            this._rapidPanel.btn_diaChangeGold.on(Laya.Event.CLICK, this, this.diaReplaceGold),
            this._rapidPanel.popupCenter = !0,
            this._rapidPanel.show(),
            this._socialModule.getShareOrAd(e.ShareType.AddSpeed) == e.RewardType.Share ? (e.CommonUtil.Log("share"),
            this._rapidPanel.btn_addRapid.skin = "back/jiasu200.png") : (e.CommonUtil.Log("ad"),
            this._rapidPanel.btn_addRapid.skin = "back/shipin_jiasu_200.png"),
            e.PlatForm.getInstance().showBannerAd(),
            this.onSelectTab(0),
            this._rapidPanel.tab_rapid.selectedIndex = 0,
            this._rapidPanel.tab_rapid.selectHandler = new Laya.Handler(this,this.onSelectTab);
            ishasAds ? this._rapidPanel.btn_addRapid.visible = true : this._rapidPanel.btn_addRapid.visible = false;
        }
        ,
        t.prototype.onHide = function() {
            this._rapidPanel.btn_return.off(laya.events.Event.CLICK, this, this.close),
            this._rapidPanel.btn_rapid.off(Laya.Event.CLICK, this, this.onRapid),
            this._rapidPanel.btn_addRapid.off(Laya.Event.CLICK, this, this.onAddRapid),
            this._rapidPanel.btn_diaChangeGold.off(Laya.Event.CLICK, this, this.diaReplaceGold),
            e.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.onSelectTab = function(t) {
            switch (t) {
            case 0:
                this._rapidPanel.box_timer.visible = !1,
                this._rapidPanel.btn_addRapid.visible = !0,
                this._rapidPanel.btn_rapid.visible = !0,
                this._rapidPanel.img_skin.skin = "gunPanel/2倍.png";
                break;

            case 1:
                this._rapidPanel.box_timer.visible = !0,
                this._rapidPanel.btn_addRapid.visible = !1,
                this._rapidPanel.btn_rapid.visible = !1,
                this._rapidPanel.img_skin.skin = "gunPanel/2小时.png",
                this._rapidPanel.lab_goldNum.text = e.CommonUtil.moneyChange(7200 * this._playerModule.RoleInfo.SecondAddGold),
                this._rapidPanel.lab_diamondNum.text = e.CommonUtil.moneyChange(500 + 100 * this._playerModule.RoleInfo.diamondChangeGold);
            }
        }
        ,
        t.prototype.diaReplaceGold = function() {
            if (this._playerModule.RoleInfo.Diamond >= 500 + 100 * this._playerModule.RoleInfo.diamondChangeGold)
                e.PlatForm.getInstance().aldSendEvent("用户用钻石换取两小时收益"),
                this._playerModule.RoleInfo.Diamond -= 500 + 100 * this._playerModule.RoleInfo.diamondChangeGold,
                this._playerModule.RoleInfo.Gold += 7200 * this._playerModule.RoleInfo.SecondAddGold,
                this._playerModule.RoleInfo.diamondChangeGold++,
                this.onSelectTab(1);
            else {
                this._playerModule.RoleInfo.tipsDescribe = "Diamonds Less";
                var t = new e.TipsPanes();
                Laya.stage.addChild(t);
            }
        }
        ,
        t.prototype.onRapid = function() {
            if (this._uiDataModule.addTimer += 6e4,
            this._uiDataModule.speedUpTimer += 6e4,
            0 <= this._playerModule.RoleInfo.Diamond - 10)
                this._playerModule.RoleInfo.Diamond -= 10,
                this.close(),
                this._uiDataModule.isTrueRapid = !0;
            else {
                this._playerModule.RoleInfo.tipsDescribe = "Diamonds Less";
                var t = new e.TipsPanes();
                Laya.stage.addChild(t);
            }
        }
        ,
        t.prototype.onAddRapid = function() {
            this._socialModule.doShareOrAd(e.ShareType.AddSpeed, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        t.prototype.successCallBack = function(t) {
            e.CommonUtil.Log("result------" + t),
            "ok" == t && (this._uiDataModule.addTimer += 2e5,
            this._uiDataModule.speedUpTimer += 2e5,
            this._uiDataModule.isTrueRapid = !0,
            this._playerModule.RoleInfo.tipsDescribe = "Gain Success",
            asgard.ui.UIManager.openView(e.UIRes.TIPS),
            this.close());
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.RAPID),
            e.SystemHelper.playSoundById(e.SoundId.Button);
        }
        ,
        t.prototype.close = function() {
            this._playerModule.TrySaveGameData(),
            asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_SECONDADDGOLD),
            this._rapidPanel.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.RapidPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function r(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(r, i),
        r.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.RecentlyUseUI()),
            this._pnl;
        }
        ,
        r.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            IsWXGame(),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.close),
            this._pnl.v_list.vScrollBarSkin = "",
            this._pnl.v_list.array = [1],
            this._pnl.v_list.scrollBar.elasticBackTime = 500,
            this._pnl.v_list.scrollBar.elasticDistance = 100,
            this._pnl.v_list.itemRender = ui.item.RecentlyUseItemUI,
            this._pnl.v_list.renderHandler = new Laya.Handler(this,this.updateItem),
            r.game1Arr = [];
            for (var t = 0; t < 10; t++)
                r.game1Arr.push(this._socialModule.MoreGameArr[t]);
        }
        ,
        r.prototype.updateItem = function(t, e) {
            0 == e && (t.item_list.renderHandler = new Laya.Handler(this,this.item1List),
            t.item_list.array = r.game1Arr);
        }
        ,
        r.prototype.item1List = function(t, e) {
            var i = t.getChildByName("item_icon")
              , n = t.getChildByName("item_name")
              , a = (t.getChildByName("xing"),
            r.game1Arr[e]);
            if (a) {
                if (i.skin = a.IconUrl,
                a.IsGif) {
                    var s = new Laya.Animation();
                    s.scale(i.width / 100, i.width / 100),
                    s.interval = 130,
                    s.loadImages(this.aniUrls(a.PicName + "_", a.PngCount)).play(),
                    i.addChild(s);
                }
                n.text = a.Name,
                t.on(Laya.Event.CLICK, this, this.gameShowClick1, [e]);
            }
        }
        ,
        r.prototype.aniUrls = function(t, e) {
            var i = [];
            return i;
        }
        ,
        r.prototype.gameShowClick1 = function(t) {
            r.game1Arr[t] && IsWXGame() && wx.navigateToMiniProgram({
                appId: r.game1Arr[t].Id,
                path: r.game1Arr[t].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {
                    console.log("最近使用_跳转到_" + r.game1Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("最近使用_跳转到_" + r.game1Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + r.game1Arr[t].Name + "_成功"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_成功");
                },
                fail: function() {
                    console.log("最近使用_跳转到_" + r.game1Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("最近使用_跳转到_" + r.game1Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转到_" + r.game1Arr[t].Name + "_失败"),
                    e.PlatForm.getInstance().aldSendEvent("跳转_失败"),
                    asgard.ui.UIManager.openView(e.UIRes.EXITPANEL);
                }
            });
        }
        ,
        r.prototype.gameClick = function() {
            0 < this._socialModule.MoreGameArr.length && IsWXGame() && wx.navigateToMiniProgram({
                appId: this._socialModule.MoreGameArr[0].Id,
                path: this._socialModule.MoreGameArr[0].Path,
                extraData: {
                    foo: "bar"
                },
                envVersion: "release",
                success: function() {},
                fail: function() {}
            });
        }
        ,
        r.prototype.onopen = function() {}
        ,
        r.prototype.onFrame = function(t, e) {}
        ,
        r.prototype.onclose = function() {}
        ,
        r.prototype.close = function() {
            asgard.ui.UIManager.closeView(e.UIRes.RECENTLYUSE);
        }
        ,
        r.prototype.goHome = function() {
            asgard.ui.UIManager.closeView(e.UIRes.RECENTLYUSE),
            asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_BACK_HOME);
        }
        ,
        r;
    }(asgard.ui.BaseUIPanel);
    e.RecentlyUse = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(n) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._repetitionPanel || (this._repetitionPanel = new ui.panel.RepetitionPanelUI(),
            this._repetitionPanel.onClosed = this.onclose.bind(this),
            this._repetitionPanel.onOpened = this.onopen.bind(this)),
            this._repetitionPanel;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(n.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(n.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(n.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(n.MODULE_UIDATA),
            this._repetitionPanel.btn_return.on(laya.events.Event.CLICK, this, this.close),
            this._repetitionPanel.btn_confirm.on(Laya.Event.CLICK, this, this.getDiamond),
            this._repetitionPanel.popupCenter = !0,
            this._repetitionPanel.show(),
            this._socialModule.getShareOrAd(n.ShareType.Repetition) == n.RewardType.Share ? (n.CommonUtil.Log("share"),
            this._repetitionPanel.btn_confirm.skin = "gunPanel/分享领取.png") : (n.CommonUtil.Log("ad"),
            this._repetitionPanel.btn_confirm.skin = "gunPanel/视频领取.png"),
            this.num = 100 + 100 * this._playerModule.RoleInfo.SignInNum,
            this._repetitionPanel.lab_number.text = this.num.toString(),
            n.PlatForm.getInstance().showBannerAd();
            ishasAds ? this._repetitionPanel.btn_confirm.visible = true : this._repetitionPanel.btn_confirm.visible = false;
        }
        ,
        t.prototype.onHide = function() {
            this._repetitionPanel.btn_return.off(laya.events.Event.CLICK, this, this.close),
            n.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.getDiamond = function() {
            this._socialModule.doShareOrAd(n.ShareType.Repetition, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        t.prototype.successCallBack = function(t) {
            if (n.CommonUtil.Log("result------" + t),
            "ok" == t) {
                var e = new n.DiamondFlutterPanel();
                Laya.stage.addChild(e),
                e.diamond(),
                this._playerModule.RoleInfo.Diamond += this.num,
                this.close();
            }
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            this._playerModule.RoleInfo.repetitionGet = !1,
            asgard.ui.UIManager.closeView(n.UIRes.REPETTITION);
        }
        ,
        t.prototype.close = function() {
            this._playerModule.RoleInfo.repetitionGet = !1,
            this._repetitionPanel.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    n.RepetitionPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(n) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e._startRotation = 0,
            e._pie = new Laya.Sprite(),
            e._isOpenShareOrAd = !1,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.ReviveUI(),
            this._pnl.onClosed = this.onclose.bind(this),
            this._pnl.onOpened = this.onopen.bind(this)),
            this._pnl;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(n.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(n.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(n.MODULE_SOCIAL),
            this._time = 6e3,
            this._pnl.continue_Btn.on(laya.events.Event.CLICK, this, this.continueClick),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.closeClick),
            this._startRotation = -90,
            this._pie.graphics.drawPie(114, 114, 125, this._startRotation, 270, "#ff0000"),
            this._pnl.progress_img.mask = this._pie,
            this._pnl.show(),
            this._pnl.hero_img.skin = "player/Hero_" + this._playerModule.RoleInfo.SelectedPlayerId + ".png",
            Laya.timer.loop(1200, this, this.BigAndSmall),
            n.PlatForm.getInstance().showBannerAd(),
            this._isOpenShareOrAd = !1,
            this._socialModule.getShareOrAd(n.ShareType.Revive) == n.RewardType.Share ? (this._pnl.continue_Btn.skin = "game/分享继续游戏.png",
            console.log("分享--------复活")) : (this._pnl.continue_Btn.skin = "game/复活按钮.png",
            console.log("广告--------复活"));
            ishasAds ? this._pnl.continue_Btn.visible = true : this._pnl.continue_Btn.visible = false;
        }
        ,
        t.prototype.BigAndSmall = function() {
            var t = this;
            Laya.Tween.to(this._pnl.continue_Btn, {
                scaleX: 1.1,
                scaleY: 1.1
            }, 200, null, new Laya.Handler(this,function() {
                Laya.Tween.to(t._pnl.continue_Btn, {
                    scaleX: 1,
                    scaleY: 1
                }, 200, null, new Laya.Handler(t,function() {}
                ));
            }
            ));
        }
        ,
        t.prototype.onHide = function() {
            this._pnl.continue_Btn.off(laya.events.Event.CLICK, this, this.continueClick),
            this._pnl.close_btn.off(laya.events.Event.CLICK, this, this.closeClick),
            Laya.timer.clear(this, this.BigAndSmall);
        }
        ,
        t.prototype.continueClick = function() {
            this._isOpenShareOrAd = !0,
            this._socialModule.doShareOrAd(n.ShareType.Revive, new Laya.Handler(this,this.successCallBack));
        }
        ,
        t.prototype.successCallBack = function(t) {
            console.log("revive===== " + t),
            "ok" == t ? (this.close(),
            n.SpriteManager.getInstance().playerRevive()) : this._isOpenShareOrAd = !1;
        }
        ,
        t.prototype.closeClick = function() {
            this.close(),
            this._time = 0,
            this._gameModule.IsSnipe ? asgard.ui.UIManager.openView(n.UIRes.ENDSNIPE) : (asgard.ui.UIManager.openView(n.UIRes.ENDLOSE),
            asgard.ui.UIManager.openView(n.UIRes.RECENTLYUSE),
            n.PlatForm.getInstance().hideBannerAd());
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {
            if (this._pnl && 0 < this._time && this._pie && 0 == this._isOpenShareOrAd) {
                var i = .06 * e;
                this._time -= e,
                this._startRotation += i,
                this._pie.graphics.clear(),
                this._pie.graphics.drawPie(114, 114, 125, this._startRotation, 270, "#ff0000"),
                this._time <= 0 && (this.closeClick(),
                n.PlatForm.getInstance().hideBannerAd());
            }
        }
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(n.UIRes.REVIVE);
        }
        ,
        t.prototype.close = function() {
            this._pnl.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    n.RevivePanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(r) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e.releaseId = 1,
            e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._roleSkinPanel || (this._roleSkinPanel = new ui.panel.RoleSkinPanelUI()),
            this._roleSkinPanel;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(r.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(r.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(r.MODULE_SOCIAL),
            this._roleSkinPanel.close_btn.on(laya.events.Event.CLICK, this, this.close),
            this._roleSkinPanel.back_img.y = -262 + r.GameConst.CHANGE_HEIGHT,
            this.init(),
            this.onSelectTab(0),
            this._roleSkinPanel.roleSkinTab.selectedIndex = 0,
            this._roleSkinPanel.img_roleSkin.skin = "player/Hero_" + this._playerModule.RoleInfo.SelectedPlayerId + ".png",
            r.PlatForm.getInstance().showBannerAd();
        }
        ,
        t.prototype.onHide = function() {
            this._roleSkinPanel.close_btn.off(laya.events.Event.CLICK, this, this.close),
            r.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.init = function() {
            this.GrayFilter = new Laya.ColorFilter([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1]),
            this._roleSkinPanel.roleSkinTab.selectHandler = new Laya.Handler(this,this.onSelectTab),
            this._roleSkinPanel.roleSkinList.hScrollBarSkin = "",
            this.showDot();
        }
        ,
        t.prototype.onSelectTab = function(t) {
            switch (t) {
            case 0:
                this.gunItemArr = this.findType(1);
                break;

            case 1:
                this.gunItemArr = this.findType(2);
                break;

            case 2:
                this.gunItemArr = this.findType(3);
            }
            this._roleSkinPanel.roleSkinList.array = new Array(this.gunItemArr.length),
            this._roleSkinPanel.roleSkinList.itemRender = ui.item.RoleSkinItemUI,
            this._roleSkinPanel.roleSkinList.renderHandler = new Laya.Handler(this,this.updateItem);
        }
        ,
        t.prototype.findType = function(t) {
            for (var e = asgard.data.StaticDataManager.getSheetDatas(9), i = [], n = 0; n < e.length; n++) {
                e[n].Type == t && i.push(e[n]);
            }
            if (3 == t && i.sort(function(t, e) {
                return t.Condition - e.Condition;
            }),
            i.length % 6 != 0) {
                var a = 6 - i.length % 6;
                for (n = 0; n < a; n++)
                    i.push({
                        Id: 0,
                        istrue: !1,
                        pitchOn: !1,
                        redDot: !0,
                        type: 0
                    });
            }
            return i;
        }
        ,
        t.prototype.updateItem = function(t, e) {
            var i = this.gunItemArr[e];
            if (t.img_role.skin = "player/Hero_" + i.Id + ".png",
            t.img_Bg.on(Laya.Event.CLICK, this, this.btnClick, [e]),
            t.img_dot.visible = !1,
            0 == i.Id)
                return t.img_role.skin = "player/Hero_0.png",
                t.img_Bg.skin = "gunPanel/未解锁框.png",
                t.img_role.filters = [],
                void (t.lab_describe.text = "敬请期待");
            if (this.findRoleSkin(i.Id)) {
                var n = this.roleSkin(i.Id);
                t.img_role.filters = [],
                n.pitchOn ? (t.lab_describe.text = "Using",
                t.img_Bg.skin = "gunPanel/角色框_选中.png") : (t.lab_describe.text = "Own",
                t.img_Bg.skin = "gunPanel/角色框_未选中.png"),
                t.img_name.skin = "player/name_" + i.Id + ".png";
            } else
                t.img_role.filters = [this.GrayFilter],
                t.lab_describe.text = i.Describe,
                t.img_Bg.skin = "gunPanel/未解锁框.png",
                t.img_name.skin = "";
            for (var a = this._playerModule.RoleInfo.roleSkinArr, s = 0; s < a.length; s++) {
                var r = a[s];
                r.id == i.Id && (r.redDot ? t.img_dot.visible = !1 : t.img_dot.visible = !0);
            }
            this.showDot();
        }
        ,
        t.prototype.roleSkin = function(t) {
            for (var e = this._playerModule.RoleInfo.roleSkinArr, i = 0; i < e.length; i++) {
                var n = e[i];
                if (n.id == t)
                    return n;
            }
        }
        ,
        t.prototype.findRoleSkin = function(t) {
            for (var e = this._playerModule.RoleInfo.roleSkinArr, i = 0; i < e.length; i++) {
                var n = e[i];
                if (n.id == t && n.istrue)
                    return !0;
            }
            return !1;
        }
        ,
        t.prototype.btnClick = function(t) {
            var e = this.gunItemArr[t];
            if (0 == e.Id) {
                this._playerModule.RoleInfo.tipsDescribe = "敬请期待";
                var i = new r.TipsPanes();
                Laya.stage.addChild(i);
            } else if (1 == e.Type) {
                if (!this.findRoleSkin(e.Id)) {
                    r.PlatForm.getInstance().aldSendEvent("点击视频解锁皮肤按钮");
                    /*
					var r2 = confirm("Watch ads to get skin? " +e.Name + "?");
					if (r2 == true) {
						this.releaseId = e.Id;
						r.PlatForm.getInstance().createRewardedVideoAd(r.AD_ID.getADByIndex(r.AdType.Skin), Laya.Handler.create(this, this.SuccessCallBack))
					} else {
						
						return ;
					}*/
                    showBox(function() {
                        this.releaseId = e.Id;
                        r.PlatForm.getInstance().createRewardedVideoAd(r.AD_ID.getADByIndex(r.AdType.Skin), Laya.Handler.create(this, this.SuccessCallBack))
                    }
                    .bind(this), e.Name);

                }
            } else {
                if (!this.findRoleSkin(e.Id)) {
                    this._playerModule.RoleInfo.tipsDescribe = e.Describe;
                    i = new r.TipsPanes();
                    Laya.stage.addChild(i);
                }
            }
            var n = this.roleSkin(e.Id);
            if (n) {
                if (0 != n.id && !n.pitchOn && n.istrue) {
                    n.pitchOn = !0,
                    n.redDot = !0;
                    for (var a = 0; a < this._playerModule.RoleInfo.roleSkinArr.length; a++) {
                        var s = this._playerModule.RoleInfo.roleSkinArr[a];
                        s.id != n.id && (s.pitchOn = !1);
                    }
                }
                this._roleSkinPanel.img_roleSkin.skin = "player/Hero_" + n.id + ".png",
                this._playerModule.RoleInfo.SelectedPlayerId = n.id,
                this._roleSkinPanel.roleSkinList.refresh(),
                this._playerModule.TrySaveGameData();
            }
        }
        ,
        t.prototype.SuccessCallBack = function(t) {
            //alert("shism --->" + t)
            r.CommonUtil.Log("result------" + t),
            "ok" == t && (this._playerModule.RoleInfo.roleSkinArr.push({
                id: this.releaseId,
                istrue: !0,
                redDot: !1,
                pitchOn: !1,
                type: 1
            }),
            this.showDot(),
            this._roleSkinPanel.roleSkinList.refresh(),
            this._playerModule.TrySaveGameData(),
            this._playerModule.RoleInfo.EveryDayAdCount++);
        }
        ,
        t.prototype.vacancyGun = function() {
            for (var t = 0; t < this._playerModule.RoleInfo.ShowGunArr.length; t++) {
                if (0 == this._playerModule.RoleInfo.ShowGunArr[t])
                    return t;
            }
            return "false";
        }
        ,
        t.prototype.showDot = function() {
            this._roleSkinPanel.img_item0.visible = !1,
            this._roleSkinPanel.img_item1.visible = !1,
            this._roleSkinPanel.img_item2.visible = !1;
            for (var t = this._playerModule.RoleInfo.roleSkinArr, e = 0; e < t.length; e++)
                if (!t[e].redDot)
                    switch (t[e].type) {
                    case 1:
                        this._roleSkinPanel.img_item0.visible = !0;
                        break;

                    case 2:
                        this._roleSkinPanel.img_item1.visible = !0;
                        break;

                    case 3:
                        this._roleSkinPanel.img_item2.visible = !0;
                    }
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {}
        ,
        t.prototype.close = function() {
            asgard.events.EventsDispatcher.eventNotify(r.GameEvents.EVENT_REFRESH_MAIN_MENU),
            asgard.ui.UIManager.closeView(r.UIRes.ROLESKIN),
            r.SystemHelper.playSoundById(r.SoundId.Button);
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    r.RoleSkinPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e._isCloseClick = !1,
            e._rankShowFame = 0,
            e._addMoney = 0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.ShieldTipUI(),
            this._pnl.onClosed = this.onclose.bind(this),
            this._pnl.onOpened = this.onopen.bind(this)),
            this._pnl;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._isCloseClick = !1,
            this._pnl.get_btn.on(laya.events.Event.CLICK, this, this.getClick),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.closeClick),
            this._pnl.show(),
            this._pnl.light_img.rotation = 0,
            Laya.Tween.to(this._pnl.light_img, {
                rotation: 3e3
            }, 25e4),
            this._playerModule.RoleInfo.HasGetShieldCount <= 0 ? this._pnl.get_btn.skin = "gunPanel/免费领取 .png" : this._socialModule.getShareOrAd(e.ShareType.Shield) == e.RewardType.Share ? this._pnl.get_btn.skin = "gunPanel/分享领取.png" : this._pnl.get_btn.skin = "gunPanel/视频领取.png";
            ishasAds ? this._pnl.get_btn.visible = true : this._pnl.get_btn.visible = false;
        }
        ,
        t.prototype.onHide = function() {
            Laya.Tween.clearAll(this._pnl.light_img),
            this._pnl.get_btn.off(laya.events.Event.CLICK, this, this.getClick),
            this._pnl.close_btn.off(laya.events.Event.CLICK, this, this.closeClick);
        }
        ,
        t.prototype.sendShareInfo = function(t) {}
        ,
        t.prototype.getClick = function() {
            this._socialModule.doShareOrAd(e.ShareType.Shield, Laya.Handler.create(this, this.successCallBack))
        }
        ,
        t.prototype.successCallBack = function(t) {
            e.CommonUtil.Log("result------" + t),
            "ok" == t && (this._playerModule.RoleInfo.ShieldCount++,
            this._playerModule.RoleInfo.HasGetShieldCount++,
            e.SpriteManager.getInstance().Player.addLife(),
            this._playerModule.TrySaveGameData(),
            this.close());
        }
        ,
        t.prototype.closeClick = function() {
            this.close(),
            e.SystemHelper.playSoundById(e.SoundId.Button);
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {
            this._pnl;
        }
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.SHIELDTIP);
        }
        ,
        t.prototype.close = function() {
            this._pnl.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.ShieldTipPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(o) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._shopPanel || (this._shopPanel = new ui.panel.ShopPanelUI(),
            this._shopPanel.onClosed = this.onclose.bind(this),
            this._shopPanel.onOpened = this.onopen.bind(this)),
            this._shopPanel;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(o.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(o.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(o.MODULE_SOCIAL),
            this._shopPanel.close_btn.on(laya.events.Event.CLICK, this, this.close),
            this._shopPanel.popupCenter = !0,
            this._shopPanel.show(),
            o.PlatForm.getInstance().showBannerAd(),
            this.init();
        }
        ,
        t.prototype.Adaptive = function() {
            this._shopPanel.size(Laya.stage.width, Laya.stage.height),
            this._shopPanel.img_bg.width = Laya.stage.width,
            this._shopPanel.img_bg.height = Laya.stage.height,
            this._shopPanel.box.x = (Laya.stage.width - this._shopPanel.box.width) / 2,
            this._shopPanel.box.y = (Laya.stage.height - this._shopPanel.box.height) / 2;
        }
        ,
        t.prototype.onHide = function() {
            this._shopPanel.close_btn.off(laya.events.Event.CLICK, this, this.close),
            o.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.findGunMoney = function(t) {
            for (var e = o.DataUtils.getBuyGoldById(1e3 + t), i = this._playerModule.RoleInfo.gunBuyNum, n = data.StaticDataFactory.findGun(1e3 + t), a = 0; a < i.length; a++) {
                var s = i[a];
                if (s.id == t)
                    for (var r = 0; r < s.buyNum; r++)
                        e *= n.AddGold;
            }
            return e;
        }
        ,
        t.prototype.findGunJewel = function(t) {
            for (var e = data.StaticDataFactory.findGun(1e3 + t).StartJewel, i = this._playerModule.RoleInfo.gunBuyNum, n = data.StaticDataFactory.findGun(1e3 + t), a = 0; a < i.length; a++) {
                var s = i[a];
                if (s.id == t)
                    for (var r = 0; r < s.buyJewelNum; r++)
                        e += n.AddJewel;
            }
            return e;
        }
        ,
        t.prototype.init = function() {
            this._playerModule.RoleInfo.MaxGunId <= 10 ? this.freeGunId = this._playerModule.RoleInfo.MaxGunId - 4 : 11 == this._playerModule.RoleInfo.MaxGunId ? this.freeGunId = this._playerModule.RoleInfo.MaxGunId - 5 : this.freeGunId = this._playerModule.RoleInfo.MaxGunId - 6,
            this._shopPanel.shopList.vScrollBarSkin = "",
            this.gunItemArr = asgard.data.StaticDataManager.getSheetDatas(1);
            this._shopPanel.shopList.array = new Array(this.gunItemArr.length),
            this._shopPanel.shopList.itemRender = ui.item.ShopItemUI,
            this._shopPanel.shopList.renderHandler = new Laya.Handler(this,this.updateItem),
            this._shopPanel.shopList.scrollBar.value = 147 * (this._playerModule.RoleInfo.MaxGunId - 7);
        }
        ,
        t.prototype.updateItem = function(t, e) {
            var i = new Laya.ColorFilter([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1])
              , n = new Laya.ColorFilter([.6, 0, 0, 0, 0, .6, 0, 0, 0, 0, .6, 0, 0, 0, 0, 1, 1, 1, 1, 1])
              , a = this.gunItemArr[e];
            t.btn_conversion.on(Laya.Event.CLICK, this, this.btnClick, [e]),
            t.lab_gunId.text = e + 1,
            t.lab_name.text = a.Name,
            t.img_gunIcon.skin = "gun/gun_" + a.Level + ".png";
            var s = this.findGun(a.Level);
            s ? t.lab_price.text = "buyJewel" == s ? (t.img_gunIcon.filters = [],
            t.btn_conversion.filters = [],
            t.img_icon.visible = !0,
            t.img_icon.skin = "gunPanel/钻石.png",
            o.CommonUtil.moneyChange(this.findGunJewel(a.Level))) : (t.btn_conversion.filters = [],
            t.img_gunIcon.filters = [],
            t.img_icon.visible = !0,
            t.img_icon.skin = "gunPanel/金币.png",
            o.CommonUtil.moneyChange(this.findGunMoney(a.Level))) : (t.btn_conversion.off(Laya.Event.CLICK, this, this.btnClick),
            t.img_gunIcon.filters = [i],
            t.lab_price.text = "???",
            t.btn_conversion.filters = [n],
            t.img_icon.visible = !1),
            t.img_free.visible = !1,
            e + 1 == this.freeGunId && 7 <= this._playerModule.RoleInfo.MaxGunId && this._playerModule.RoleInfo.freeGunIstrue && (t.img_free.visible = !0);
            console.log("这是什么界面？")
        }
        ,
        t.prototype.btnClick = function(t) {
            if ("false" != this.vacancyGun()) {
                if (this.istrueGun(t + 1)) {
                    if (t + 1 == this.freeGunId && 7 <= this._playerModule.RoleInfo.MaxGunId && this._playerModule.RoleInfo.freeGunIstrue)
                        return this._socialModule.getShareOrAd(o.ShareType.FreeGun),
                        void this._socialModule.doShareOrAd(o.ShareType.FreeGun, Laya.Handler.create(this, this.SuccessCallBack));
                    if (t + 1 == this._playerModule.RoleInfo.MaxGunId - 2 || t + 1 == this._playerModule.RoleInfo.MaxGunId - 3) {
                        if (!(0 <= this._playerModule.RoleInfo.Diamond - this.findGunJewel(t + 1) && 0 < this._playerModule.RoleInfo.Diamond)) {
                            this._playerModule.RoleInfo.tipsDescribe = "Diamonds Less";
                            e = new o.TipsPanes();
                            return void Laya.stage.addChild(e);
                        }
                        o.PlatForm.getInstance().aldSendEvent("通过钻石购买枪支" + (t + 1)),
                        this.buyGunBuyNum(t + 1, "jewel"),
                        this._playerModule.RoleInfo.Diamond -= this.findGunJewel(t + 1),
                        this._playerModule.RoleInfo.Diamond < 0 && (this._playerModule.RoleInfo.Diamond = 0);
                    } else {
                        if (!(0 <= this._playerModule.RoleInfo.Gold - this.findGunMoney(t + 1) && 0 < this._playerModule.RoleInfo.Gold)) {
                            this._playerModule.RoleInfo.tipsDescribe = "金币不足";
                            e = new o.TipsPanes();
                            return void Laya.stage.addChild(e);
                        }
                        this.buyGunBuyNum(t + 1, "money"),
                        this._playerModule.RoleInfo.Gold -= this.findGunMoney(t + 1),
                        this._playerModule.RoleInfo.Gold < 0 && (this._playerModule.RoleInfo.Gold = 0);
                    }
                    asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_SHOP, t + 1),
                    Laya.SoundManager.playSound("sound/BuyCar.mp3"),
                    this._shopPanel.shopList.refresh();
                }
            } else {
                this._playerModule.RoleInfo.tipsDescribe = "The arsenal is full, please combine or drag the guns";
                var e = new o.TipsPanes();
                Laya.stage.addChild(e);
            }
        }
        ,
        t.prototype.SuccessCallBack = function(t) {
            o.CommonUtil.Log("result------" + t),
            "ok" == t && (asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_FREESHOP, this.freeGunId),
            this._playerModule.RoleInfo.freeGunIstrue = !1,
            this._shopPanel.shopList.refresh());
        }
        ,
        t.prototype.istrueGun = function(t) {
            for (var e = this._playerModule.RoleInfo.gunBuyNum, i = 0; i < e.length; i++) {
                if (e[i].id - 1 == t)
                    return !0;
            }
            return !1;
        }
        ,
        t.prototype.findGun = function(t) {
            for (var e = this._playerModule.RoleInfo.gunBuyNum, i = 0; i < e.length; i++) {
                var n = e[i];
                if (n.id == t && n.isTrue && t < this._playerModule.RoleInfo.MaxGunId - 3 || t < 2)
                    return !0;
                if (e.length <= 5)
                    return !1;
                if (t == this._playerModule.RoleInfo.MaxGunId - 2 || t == this._playerModule.RoleInfo.MaxGunId - 3)
                    return "buyJewel";
            }
            return !1;
        }
        ,
        t.prototype.vacancyGun = function() {
            for (var t = 0; t < this._playerModule.RoleInfo.ShowGunArr.length; t++) {
                if (0 == this._playerModule.RoleInfo.ShowGunArr[t])
                    return t;
            }
            return "false";
        }
        ,
        t.prototype.buyGunBuyNum = function(t, e) {
            for (var i = this._playerModule.RoleInfo.gunBuyNum, n = 0; n < i.length; n++) {
                var a = i[n];
                a.id == t && ("money" == e || a.buyJewelNum++);
            }
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(o.UIRes.SHOP),
            o.SystemHelper.playSoundById(o.SoundId.Button);
        }
        ,
        t.prototype.close = function() {
            this._shopPanel.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    o.ShopPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(n) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._signInPanel || (this._signInPanel = new ui.panel.SignInPanelUI(),
            this._signInPanel.onClosed = this.onclose.bind(this),
            this._signInPanel.onOpened = this.onopen.bind(this)),
            this._signInPanel;
        }
        ,
        t.prototype.onShow = function() {
            n.PlatForm.getInstance().aldSendEvent("打开签到界面"),
            this._playerModule = asgard.module.ModuleManager.getModule(n.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(n.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(n.MODULE_SOCIAL),
            this._uiDataModule = asgard.module.ModuleManager.getModule(n.MODULE_UIDATA),
            this._signInPanel.btn_return.on(laya.events.Event.CLICK, this, this.close),
            this._signInPanel.btn_get.on(laya.events.Event.CLICK, this, this.onGet),
            this._signInPanel.btn_doubleGet.on(laya.events.Event.CLICK, this, this.onDoubleGet),
            this._signInPanel.popupCenter = !0,
            this._signInPanel.show(),
            this.init(),
            this.showList(),
            this._socialModule.getShareOrAd(n.ShareType.SignIn) == n.RewardType.Share ? (n.CommonUtil.Log("share"),
            this._signInPanel.btn_doubleGet.skin = "gunPanel/分享双倍领取.png") : (n.CommonUtil.Log("ad"),
            this._signInPanel.btn_doubleGet.skin = "gunPanel/双倍领取按钮.png"),
            n.PlatForm.getInstance().showBannerAd();
            ishasAds ? this._signInPanel.btn_doubleGet.visible = true : this._signInPanel.btn_doubleGet.visible = false;
        }
        ,
        t.prototype.onHide = function() {
            this._signInPanel.btn_return.off(laya.events.Event.CLICK, this, this.close),
            this._signInPanel.btn_get.off(laya.events.Event.CLICK, this, this.onGet),
            this._signInPanel.btn_doubleGet.off(laya.events.Event.CLICK, this, this.onDoubleGet),
            n.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.init = function() {
            this._playerModule.RoleInfo.IstureSignIn ? (this._signInPanel.lab_gettion.visible = !0,
            this._signInPanel.btn_doubleGet.visible = !1,
            this._signInPanel.btn_get.visible = !1) : (this._signInPanel.lab_gettion.visible = !1,
            this._signInPanel.btn_doubleGet.visible = !0,
            this._signInPanel.btn_get.visible = !0);
        }
        ,
        t.prototype.showList = function() {
            var t = []
              , e = 0;
            this._playerModule.RoleInfo.SignInNum <= 6 ? (e = this._playerModule.RoleInfo.SignInNum,
            this._signInPanel.img_seventh.visible = !1) : (e = 6,
            this._signInPanel.img_seventh.visible = !0);
            for (var i = 0; i < e; i++)
                t.push({
                    index: i
                });
            this._signInPanel.signInList.array = t;
        }
        ,
        t.prototype.onGet = function() {
            this._playerModule.RoleInfo.repetitionGet = !0,
            n.PlatForm.getInstance().aldSendEvent("领取奖励按钮"),
            this._playerModule.RoleInfo.SignInNum++,
            this.showRoleSkin(),
            this._playerModule.RoleInfo.signDot = !0,
            this._playerModule.RoleInfo.IstureSignIn = !0;
            var t = this.getAward();
            this._playerModule.RoleInfo.Diamond += t,
            this._playerModule.RoleInfo.tipsDescribe = "Gain Success",
            asgard.ui.UIManager.openView(n.UIRes.TIPS),
            this.showList();
            var e = new n.DiamondFlutterPanel();
            e.diamond(),
            Laya.stage.addChild(e),
            this.init();
        }
        ,
        t.prototype.onDoubleGet = function() {
            this._socialModule.doShareOrAd(n.ShareType.SignIn, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        t.prototype.successCallBack = function(t) {
            if (n.CommonUtil.Log("result------" + t),
            "ok" == t) {
                this._playerModule.RoleInfo.repetitionGet = !0,
                this._playerModule.RoleInfo.SignInNum++,
                this.showRoleSkin(),
                this._playerModule.RoleInfo.IstureSignIn = !0,
                this._playerModule.RoleInfo.signDot = !0;
                var e = this.getAward();
                this._playerModule.RoleInfo.Diamond += 2 * e,
                this._playerModule.RoleInfo.tipsDescribe = "Gain Success",
                asgard.ui.UIManager.openView(n.UIRes.TIPS),
                this.showList();
                var i = new n.DiamondFlutterPanel();
                i.diamond(),
                Laya.stage.addChild(i),
                this.init();
            }
        }
        ,
        t.prototype.getAward = function() {
            var t = 0;
            switch (this._playerModule.RoleInfo.SignInNum) {
            case 1:
                t = 200;
                break;

            case 2:
                t = 300;
                break;

            case 3:
                t = 400;
                break;

            case 4:
                t = 500;
                break;

            case 5:
                t = 600;
                break;

            case 6:
                t = 700;
                break;

            case 7:
                t = 800;
            }
            return t;
        }
        ,
        t.prototype.showRoleSkin = function() {
            if (this.gunItemArr = this.findType(2),
            (3 == this._playerModule.RoleInfo.SignInNum || 7 == this._playerModule.RoleInfo.SignInNum) && !this._playerModule.RoleInfo.IstureSignIn)
                for (var t = 0; t < this.gunItemArr.length; t++) {
                    var e = this.gunItemArr[t];
                    if (e.Condition <= this._playerModule.RoleInfo.SignInNum && !this.istrueExist(e.Id))
                        return asgard.events.EventsDispatcher.eventNotify(n.GameEvents.EVENT_ROLESKIN, e.Id),
                        void this._playerModule.RoleInfo.roleSkinArr.push({
                            id: e.Id,
                            istrue: !0,
                            redDot: !1,
                            pitchOn: !1,
                            type: e.Type
                        });
                }
        }
        ,
        t.prototype.istrueExist = function(t) {
            for (var e = this._playerModule.RoleInfo.roleSkinArr, i = 0; i < e.length; i++) {
                if (e[i].id == t)
                    return !0;
            }
            return !1;
        }
        ,
        t.prototype.findType = function(t) {
            for (var e = asgard.data.StaticDataManager.getSheetDatas(9), i = [], n = 0; n < e.length; n++) {
                e[n].Type == t && i.push(e[n]);
            }
            return i;
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(n.UIRes.SIGNIN),
            n.SystemHelper.playSoundById(n.SoundId.Button);
        }
        ,
        t.prototype.close = function() {
            Laya.timer.once(1e3, this, this.getDiamond),
            n.PlatForm.getInstance().aldSendEvent("关闭签到界面"),
            asgard.events.EventsDispatcher.eventNotify(n.GameEvents.EVENT_REFRESH_MAIN_MENU),
            this._playerModule.TrySaveGameData(),
            this._signInPanel.close();
        }
        ,
        t.prototype.getDiamond = function() {
            this._playerModule.RoleInfo.repetitionGet && (n.PlatForm.getInstance().aldSendEvent("打开二次获取钻石奖励界面"),
            asgard.ui.UIManager.openView(n.UIRes.REPETTITION));
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    n.SignInPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.SnipeGoldTipUI(),
            this._pnl.onClosed = this.onclose.bind(this),
            this._pnl.onOpened = this.onopen.bind(this)),
            this._pnl;
        }
        ,
        t.prototype.onInit = function() {}
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._pnl.get_btn.on(laya.events.Event.CLICK, this, this.getClick),
            this._pnl.double_btn.on(laya.events.Event.CLICK, this, this.doubleClick),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.closeWindow),
            this._pnl.popupCenter = !0,
            this._pnl.show(),
            this._socialModule.getShareOrAd(e.ShareType.SnipeDouble) == e.RewardType.Share ? this._pnl.double_btn.skin = "gunPanel/分享双倍领取.png" : this._pnl.double_btn.skin = "gunPanel/双倍领取按钮.png",
            this._headShootMoney = 5 * this._playerModule.RoleInfo.SecondAddGold * this._gameModule.HeadShootTimes,
            this._pnl.headShootMoney_lbl.text = e.CommonUtil.moneyChange(this._headShootMoney),
            this._addMoney = 0,
            this._addMoney = 5 * this._playerModule.RoleInfo.SecondAddGold * this._gameModule.KillCount,
            this._pnl.money_lbl.text = e.CommonUtil.moneyChange(this._addMoney),
            e.PlatForm.getInstance().showBannerAd();
            ishasAds ? this._pnl.double_btn.visible = true : this._pnl.double_btn.visible = false;
        }
        ,
        t.prototype.onHide = function() {
            this._pnl.get_btn.off(laya.events.Event.CLICK, this, this.getClick),
            this._pnl.double_btn.off(laya.events.Event.CLICK, this, this.doubleClick),
            this._pnl.close_btn.off(laya.events.Event.CLICK, this, this.closeWindow),
            e.PlatForm.getInstance().hideBannerAd();
        }
        ,
        t.prototype.doubleClick = function() {
            this._socialModule.doShareOrAd(e.ShareType.SnipeDouble, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        t.prototype.getClick = function() {
            this._playerModule.RoleInfo.Gold += this._addMoney + this._headShootMoney,
            this._playerModule.RoleInfo.AllGold += this._addMoney + this._headShootMoney,
            this._playerModule.TrySaveGameData(),
            this.closeWindow();
        }
        ,
        t.prototype.successCallBack = function(t) {
            e.CommonUtil.Log("result------" + t),
            "ok" == t && (this._playerModule.RoleInfo.Gold += 2 * (this._addMoney + this._headShootMoney),
            this._playerModule.RoleInfo.AllGold += 2 * (this._addMoney + this._headShootMoney),
            this._playerModule.TrySaveGameData(),
            this.closeWindow());
        }
        ,
        t.prototype.closeWindow = function() {
            this.close();
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.SNIPEGOLD);
        }
        ,
        t.prototype.close = function() {
            this._pnl.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.SnipeGoldTipPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._taskPanel || (this._taskPanel = new ui.panel.TaskPanelUI(),
            this._taskPanel.onClosed = this.onclose.bind(this),
            this._taskPanel.onOpened = this.onopen.bind(this)),
            this._taskPanel;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._taskPanel.btn_return.on(laya.events.Event.CLICK, this, this.close),
            this._taskPanel.popupCenter = !0,
            this._taskPanel.show(),
            this.init();
        }
        ,
        t.prototype.onHide = function() {
            this._taskPanel.btn_return.off(laya.events.Event.CLICK, this, this.close);
        }
        ,
        t.prototype.init = function() {
            this._taskPanel.taskList.vScrollBarSkin = "",
            this.taskArr = asgard.data.StaticDataManager.getSheetDatas(11),
            this.sortArr(),
            this._taskPanel.taskList.array = new Array(this.taskArr.length),
            this._taskPanel.taskList.itemRender = ui.item.DailyTaskItemUI,
            this._taskPanel.taskList.renderHandler = new Laya.Handler(this,this.updateItem);
        }
        ,
        t.prototype.updateItem = function(t, e) {
            var i = this.taskArr[e];
            switch (t.btn_conversion.on(Laya.Event.CLICK, this, this.btnClick, [e]),
            t.lab_name.text = i.Describe,
            t.lab_numbar.text = i.Number,
            i.Tepe) {
            case 1:
                t.lab_schedule.text = "1/1",
                t.par_bar.value = 1;
                break;

            case 2:
                0 == this._playerModule.RoleInfo.IstrueTaskArr[i.Index] ? (t.lab_schedule.text = this._playerModule.RoleInfo.EveryDayCompound + "/" + i.Target,
                t.par_bar.value = this._playerModule.RoleInfo.EveryDayCompound / i.Target) : (t.lab_schedule.text = i.Target + "/" + i.Target,
                t.par_bar.value = 1);
                break;

            case 3:
                0 == this._playerModule.RoleInfo.IstrueTaskArr[i.Index] ? (t.lab_schedule.text = this._playerModule.RoleInfo.EveryDayKillCount + "/" + i.Target,
                t.par_bar.value = this._playerModule.RoleInfo.EveryDayKillCount / i.Target) : (t.lab_schedule.text = i.Target + "/" + i.Target,
                t.par_bar.value = 1);
                break;

            case 4:
                0 == this._playerModule.RoleInfo.IstrueTaskArr[i.Index] ? (t.lab_schedule.text = this._playerModule.RoleInfo.EveryDayShareCount + "/" + i.Target,
                t.par_bar.value = this._playerModule.RoleInfo.EveryDayShareCount / i.Target) : (t.lab_schedule.text = i.Target + "/" + i.Target,
                t.par_bar.value = 1);
                break;

            case 5:
                0 == this._playerModule.RoleInfo.IstrueTaskArr[i.Index] ? (t.lab_schedule.text = this._playerModule.RoleInfo.EveryDayAdCount + "/" + i.Target,
                t.par_bar.value = this._playerModule.RoleInfo.EveryDayAdCount / i.Target) : (t.lab_schedule.text = i.Target + "/" + i.Target,
                t.par_bar.value = 1);
                break;

            case 6:
                var n = this.istrueTask();
                12 <= n ? (t.lab_schedule.text = "1/1",
                t.par_bar.value = 1,
                0 == this._playerModule.RoleInfo.IstrueTaskArr[i.Index] && (this._playerModule.RoleInfo.IstrueTaskArr[i.Index] = 1)) : (t.lab_schedule.text = n + "/" + i.Target,
                t.par_bar.value = n / i.Target);
                break;

            case 7:
                0 == this._playerModule.RoleInfo.IstrueTaskArr[i.Index] ? (t.lab_schedule.text = this._playerModule.RoleInfo.EventDayWinNum + "/" + i.Target,
                t.par_bar.value = this._playerModule.RoleInfo.EventDayWinNum / i.Target) : (t.lab_schedule.text = i.Target + "/" + i.Target,
                t.par_bar.value = 1);
            }
            switch (this._playerModule.RoleInfo.IstrueTaskArr[i.Index]) {
            case 0:
                t.img_complete.visible = !1,
                t.btn_conversion.disabled = !0,
                t.btn_conversion.visible = !0;
                break;

            case 1:
                t.img_complete.visible = !1,
                t.btn_conversion.visible = !0,
                t.btn_conversion.disabled = !1;
                break;

            case 2:
                t.img_complete.visible = !0,
                t.btn_conversion.visible = !1,
                t.lab_schedule.text = "";
            }
        }
        ,
        t.prototype.istrueTask = function() {
            for (var t = 0, e = 0; e < this._playerModule.RoleInfo.IstrueTaskArr.length - 1; e++) {
                0 != this._playerModule.RoleInfo.IstrueTaskArr[e] && t++;
            }
            return t;
        }
        ,
        t.prototype.btnClick = function(t) {
            var e = this.taskArr[t];
            this._playerModule.RoleInfo.IstrueTaskArr[e.Index] = 2,
            this._playerModule.RoleInfo.Diamond += e.Number,
            this._taskPanel.taskList.refresh(),
            this.init(),
            this._playerModule.TrySaveGameData();
        }
        ,
        t.prototype.sortArr = function() {
            for (var t = [], e = [], i = [], n = 0; n < this._playerModule.RoleInfo.IstrueTaskArr.length; n++) {
                switch (this._playerModule.RoleInfo.IstrueTaskArr[n]) {
                case 0:
                    e.push(this.taskArr[n]);
                    break;

                case 1:
                    t.push(this.taskArr[n]);
                    break;

                case 2:
                    i.push(this.taskArr[n]);
                }
            }
            this.taskArr = t.concat(e, i);
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.TASK),
            e.SystemHelper.playSoundById(e.SoundId.Button);
        }
        ,
        t.prototype.close = function() {
            asgard.events.EventsDispatcher.eventNotify(e.GameEvents.EVENT_EVERYDAY_COMPOUND),
            this._taskPanel.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.TaskPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._tipsPanel || (this._tipsPanel = new ui.panel.TipsPanelUI(),
            this._tipsPanel.onClosed = this.onclose.bind(this),
            this._tipsPanel.onOpened = this.onopen.bind(this)),
            this._tipsPanel;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this.setData(this._playerModule.RoleInfo.tipsDescribe);
        }
        ,
        t.prototype.setData = function(t) {
            this._tipsPanel.contentLabel.text = t,
            this._tipsPanel.box.alpha = 1,
            Laya.Tween.clearAll(this._tipsPanel.box),
            Laya.Tween.to(this._tipsPanel.box, {
                alpha: 0
            }, 500, null, Laya.Handler.create(this, this.onclose), 1e3);
        }
        ,
        t.prototype.onHide = function() {}
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.TIPS);
        }
        ,
        t.prototype.close = function() {
            this._tipsPanel.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.TipsPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._uiDataModule = asgard.module.ModuleManager.getModule(i.MODULE_UIDATA),
            t._playerModule = asgard.module.ModuleManager.getModule(i.MODULE_PLAYER),
            t.onShow(),
            t;
        }
        return __extends(t, e),
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(i.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(i.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(i.MODULE_SOCIAL),
            this.setData(this._playerModule.RoleInfo.tipsDescribe);
        }
        ,
        t.prototype.setData = function(t) {
            var e = this;
            this.contentLabel.text = t,
            this.box.scaleX = 0,
            this.box.scaleY = 0,
            this.box.y = this.box.y + 200,
            Laya.Tween.to(this.box, {
                scaleX: 1,
                scaleY: 1,
                y: this.box.y - 200
            }, 200, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(e.box, {
                    scaleX: 1,
                    scaleY: 1
                }, 50, null, Laya.Handler.create(e, function() {
                    Laya.Tween.to(e.box, {
                        scaleX: 0,
                        scaleY: 0
                    }, 100, null, Laya.Handler.create(e, function() {
                        e.box.y = 640,
                        e.onclose();
                    }), 800);
                }));
            }));
        }
        ,
        t.prototype.onclose = function() {
            this.removeSelf();
        }
        ,
        t;
    }(ui.panel.TipsPanelUI);
    i.TipsPanes = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(e) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._isTip = !0,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._pnl || (this._pnl = new ui.panel.TryGunTipUI(),
            this._pnl.onClosed = this.onclose.bind(this),
            this._pnl.onOpened = this.onopen.bind(this)),
            this._pnl;
        }
        ,
        t.prototype.onInit = function() {}
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(e.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(e.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(e.MODULE_SOCIAL),
            this._pnl.get_btn.on(laya.events.Event.CLICK, this, this.getClick),
            this._pnl.close_btn.on(laya.events.Event.CLICK, this, this.closeWindow),
            this._pnl.freeGun_btn.on(laya.events.Event.CLICK, this, this.freeGetClick),
            this._pnl.light_img.rotation = 0,
            Laya.Tween.to(this._pnl.light_img, {
                rotation: 3e3
            }, 25e4),
            this._pnl.popupCenter = !0,
            this._pnl.show(),
            e.PlatForm.getInstance().showBannerAd(),
            this._socialModule.getShareOrAd(e.ShareType.FreeTry) == e.RewardType.Share ? this._pnl.get_btn.skin = "game/分享立即使用.png" : this._pnl.get_btn.skin = "game/立即使用.png",
            this._pnl.close_btn.visible = !1,
            this._pnl.get_btn.visible = !1,
            this._pnl.freeGun_btn.visible = !1,
            0 == this._playerModule.RoleInfo.Chapter ? (this._pnl.freeGun_btn.visible = !0,
            this._gameModule.TryGun = 40,
            e.PlatForm.getInstance().aldSendEvent("免费试用触发次数（新手关）")) : (this._gameModule.TryGun = this._playerModule.RoleInfo.MaxGunId + Math.floor(3 * Math.random()) + 1,
            this._pnl.close_btn.visible = !0,
            this._pnl.get_btn.visible = !0,
            e.PlatForm.getInstance().aldSendEvent("免费试用触发次数")),
            this._pnl.gun_img.skin = "gun/gun_" + this._gameModule.TryGun + ".png";
            ishasAds ? this._pnl.get_btn.visible = true : this._pnl.get_btn.visible = false;
        }
        ,
        t.prototype.onHide = function() {
            Laya.Tween.clearAll(this._pnl.light_img),
            this._pnl.get_btn.off(laya.events.Event.CLICK, this, this.getClick),
            this._pnl.close_btn.off(laya.events.Event.CLICK, this, this.closeWindow);
        }
        ,
        t.prototype.freeGetClick = function() {
            e.PlatForm.getInstance().aldSendEvent("免费试用按钮点击次数（新手关）"),
            e.SpriteManager.getInstance().changeGun(),
            this.closeWindow();
        }
        ,
        t.prototype.getClick = function() {
            this._socialModule.doShareOrAd(e.ShareType.FreeTry, Laya.Handler.create(this, this.successCallBack));
        }
        ,
        t.prototype.successCallBack = function(t) {
            e.CommonUtil.Log("result------" + t),
            "ok" == t && (e.SpriteManager.getInstance().changeGun(),
            this.closeWindow());
        }
        ,
        t.prototype.closeWindow = function() {
            this.close();
        }
        ,
        t.prototype.onopen = function() {}
        ,
        t.prototype.onFrame = function(t, e) {}
        ,
        t.prototype.onclose = function() {
            asgard.ui.UIManager.closeView(e.UIRes.TRYGUN);
        }
        ,
        t.prototype.close = function() {
            this._pnl.close();
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    e.TryGunTipPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(n) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.labY = -29,
            t.isReapidDonle = 1,
            t.addIstrue = 0,
            t.timeDelay = 0,
            t.addIstrue = 0,
            t.lab_money.text = "",
            t._uiDataModule = asgard.module.ModuleManager.getModule(n.MODULE_UIDATA),
            t._playerModule = asgard.module.ModuleManager.getModule(n.MODULE_PLAYER),
            t;
        }
        return __extends(t, e),
        t.prototype.gunType = function(t) {
            this.gun_Data = t,
            this.gunSkin(this.gun_Data.Level);
        }
        ,
        t.prototype.gunSkin = function(t) {
            this.img_gunItem.skin = "gun/gun_" + t + ".png",
            this.img_gun.skin = "gun/gun_" + t + ".png";
        }
        ,
        t.prototype.gunTween = function(t) {
            this.gun_Data = t,
            n.CommonUtil.pound(this.img_gunItem, 1),
            n.CommonUtil.pound(this.img_gun, .5),
            this.gunSkin(this.gun_Data.Level);
        }
        ,
        t.prototype.show = function(t) {
            this.lab_grade.text = t.toString(),
            this.img_bg.visible = !0;
        }
        ,
        t.prototype.hide = function() {
            this.lab_grade.text = "",
            this.img_bg.visible = !1;
        }
        ,
        t.prototype.playAni = function() {
            this.ani1.play(0, !0);
        }
        ,
        t.prototype.onFrame = function(t, e) {
            if (this.timeDelay += e,
            this._uiDataModule.isTrueRapid ? (this.addIstrue += e,
            this.isReapidDonle = 2,
            this.addIstrue >= this._uiDataModule.addTimer && (this._uiDataModule.isTrueRapid = !1,
            this.addIstrue = 0)) : (this.isReapidDonle = 1,
            this.addIstrue = 0),
            this.timeDelay >= this.gun_Data.GoldInterval) {
                this.timeDelay = 0,
                this._playerModule.RoleInfo.Gold += n.DataUtils.getEarnPerSecondById(this.gun_Data.Level + 1e3) * this.isReapidDonle * this.gun_Data.EarnSpace,
                this._playerModule.RoleInfo.AllGold += n.DataUtils.getEarnPerSecondById(this.gun_Data.Level + 1e3) * this.isReapidDonle * this.gun_Data.EarnSpace;
                var i = n.CommonUtil.moneyChange(n.DataUtils.getEarnPerSecondById(this.gun_Data.Level + 1e3) * this.isReapidDonle * this.gun_Data.EarnSpace);
                this.lab_money.text = "$ " + i,
                Laya.Tween.to(this.lab_money, {
                    y: this.lab_money.y - 20
                }, 200, null, Laya.Handler.create(this, function() {
                    Laya.Tween.to(this.lab_money, {
                        y: this.lab_money.y - 20,
                        alpha: 0
                    }, 200, null, Laya.Handler.create(this, function() {
                        this.lab_money.alpha = 1,
                        this.lab_money.y = this.labY,
                        this.lab_money.text = "";
                    }), 100);
                }));
            }
        }
        ,
        t;
    }(ui.item.GunItemUI);
    n.GunItemPanl = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.num = 200,
            t._uiDataModule = asgard.module.ModuleManager.getModule(i.MODULE_UIDATA),
            t._playerModule = asgard.module.ModuleManager.getModule(i.MODULE_PLAYER),
            t.img_left.visible = !1,
            t.img_right.visible = !1,
            t;
        }
        return __extends(t, e),
        t.prototype.gunType = function(t) {
            this.img_left.skin = "gun/gun_" + t + ".png",
            this.img_right.skin = "gun/gun_" + t + ".png",
            this.img_left.visible = !0,
            this.img_right.visible = !0,
            Laya.Tween.to(this.img_left, {
                x: this.img_left.x - 200
            }, this.num, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(this.img_left, {
                    x: this.img_left.x + 200
                }, this.num, null, null, 50);
            })),
            Laya.Tween.to(this.img_right, {
                x: this.img_right.x + 200
            }, this.num, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(this.img_right, {
                    x: this.img_right.x - 200
                }, this.num, null, Laya.Handler.create(this, function() {
                    this.img_left.visible = !1,
                    this.img_right.visible = !1;
                }), 50);
            }));
        }
        ,
        t;
    }(ui.item.GunMoveItemUI);
    i.GunMoveItemPanl = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(i) {
    var t = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._uiDataModule = asgard.module.ModuleManager.getModule(i.MODULE_UIDATA),
            t._playerModule = asgard.module.ModuleManager.getModule(i.MODULE_PLAYER),
            t.img_guang.visible = !1,
            t;
        }
        return __extends(t, e),
        t.prototype.playAni = function() {
            this.img_guang.visible = !0,
            this.ani1.play(0, !0);
        }
        ,
        t;
    }(ui.item.PedestalItemUI);
    i.PedestalItemPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(o) {
    var t = function(i) {
        function t(t) {
            var e = i.call(this, t) || this;
            return e._inited = !1,
            e._isloadSubPackage = !1,
            e._stepTime = o.DateUtils.getTimestamp(),
            e._sub1 = !1,
            e._sub2 = !1,
            e._sub3 = !1,
            e;
        }
        return __extends(t, i),
        t.prototype.createView = function() {
            return this._loadingPnl || (this._loadingPnl = new ui.panel.LoadingUI()),
            this._loadingPnl;
        }
        ,
        t.prototype.onShow = function() {
            this._playerModule = asgard.module.ModuleManager.getModule(o.MODULE_PLAYER),
            this._gameModule = asgard.module.ModuleManager.getModule(o.MODULE_GAME),
            this._socialModule = asgard.module.ModuleManager.getModule(o.MODULE_SOCIAL),
            o.SystemHelper.initSoundSystem();
            Laya.LocalStorage.getItem("oldUserId");
            this.sharePointInit(),
            this.loadConfig(),
            this.loadStaticData(),
            this._loadingPnl.load_ani.play(0, !0),
            this._loadingPnl.load_Progress.value = 0,
            IsWXGame() && (o.WeChat.preLoadAd(),
            o.WeChat.preLoadBanner());
        }
        ,
        t.prototype.onHide = function() {}
        ,
        t.prototype.onFrame = function(t, e) {
            this._loadingPnl && (this._loadingPnl.load_Progress.value < .9 && (this._loadingPnl.load_Progress.value += 18e-5 * e),
            this._loadingPnl.load_ani.x = 540 * this._loadingPnl.load_Progress.value + 20);
        }
        ,
        t.prototype.onLoginClick = function() {}
        ,
        t.prototype.loadStaticData = function() {
            var t = new o.ResLoadList();
            t.appendRessource(o.CommonRes.STATIC_DATA, Laya.Loader.BUFFER);
            o.ResLoader.load(t, Laya.Handler.create(this, this.onStaticDataLoaded));
        }
        ,
        t.prototype.onStaticDataLoaded = function(t) {
            var e = Laya.loader.getRes(o.CommonRes.STATIC_DATA);
            i = new Laya.Byte();
            i.endian = Laya.Byte.LITTLE_ENDIAN;
            i.writeArrayBuffer(e);
            i.pos = 0;
            asgard.data.StaticDataManager.loadStaticData(i, new data.StaticDataFactory());
            this._playerModule.initRoleInfo();
            this.login();
            this.loadResSubPackge();
        }
        ,
        t.prototype.loadResSubPackge = function() {
            var e = this;
            this.loadLocalUIData();
        }
        ,
        t.prototype.loadlocak = function() {
            this._sub1 && this._sub3 && this.loadLocalUIData();
        }
        ,
        t.prototype.loadLocalUIData = function() {
            var t = new o.ResLoadList();
            t.appendRessourceArr(o.CommonRes.getLocalUILoadList()),
            0 < t.Count ? o.ResLoader.load(t, Laya.Handler.create(this, this.loadCdnUIData), Laya.Handler.create(this, this.onLoading, null, !1)) : this.loadCdnUIData();
        }
        ,
        t.prototype.loadCdnUIData = function() {
            this.allDataLoaded();
        }
        ,
        t.prototype.login = function() {
            this.loginSuccess();
        }
        ,
        t.prototype.loginSuccess = function() {
            console.log("登录成功"),
            this.loadLocalGameData();
        }
        ,
        t.prototype.loadLocalGameData = function() {
            var t = o.PlatForm.getInstance().readDataFromFile(o.SystemConst.GAME_DATA_FILE);
            t ? (this._playerModule.loadGameData(t),
            this._playerModule.RoleInfo.UId || (this._playerModule.RoleInfo.createUser(),
            this._playerModule.TrySaveGameData())) : (this._playerModule.RoleInfo.createUser(),
            this._playerModule.TrySaveGameData());
        }
        ,
        t.prototype.onLoading = function(t) {
            .9 <= t && (Laya.Tween.clearAll(this._loadingPnl.load_Progress),
            this._loadingPnl.load_Progress.value = t);
        }
        ,
        t.prototype.allDataLoaded = function() {
            asgard.stage.StageManager.enterStage(o.STAGE_LOBBY),
            this._playerModule.HasLoaded = !0,
            this._playerModule._loadTime <= 3e3 ? o.PlatForm.getInstance().aldSendEvent("用户加载耗时1") : 3e3 < this._playerModule._loadTime && this._playerModule._loadTime <= 5e3 ? o.PlatForm.getInstance().aldSendEvent("用户加载耗时2") : 5e3 < this._playerModule._loadTime && this._playerModule._loadTime <= 6e3 ? o.PlatForm.getInstance().aldSendEvent("用户加载耗时3") : 6e3 < this._playerModule._loadTime && this._playerModule._loadTime <= 1e4 ? o.PlatForm.getInstance().aldSendEvent("用户加载耗时4") : 1e4 < this._playerModule._loadTime && this._playerModule._loadTime <= 13e3 ? o.PlatForm.getInstance().aldSendEvent("用户加载耗时5") : 13e3 < this._playerModule._loadTime && this._playerModule._loadTime <= 16e3 && o.PlatForm.getInstance().aldSendEvent("用户加载耗时6");
        }
        ,
        t.prototype.loadConfig = function() {
            HttpGetJSON(o.SystemConst.SYSTEM_CONFIG_PATH + "?t=112", new Laya.Handler(this,this.onConfigLoadSuccess), new Laya.Handler(this,this.onLoadConfigFail));
        }
        ,
        t.prototype.onLoadConfigFail = function() {}
        ,
        t.prototype.sharePointInit = function() {
            o.PlatformData.Instance.Share_Points.length = 0;
            for (var t = 1; t <= 19; t++) {
                var e = new o.ShareBtnInfo();
                e.shareIndex = t,
                e.shareOrAdTimes = 0,
                e.shareSeconds = 0,
                e.IsStartShareOrAd = 0,
                e.IsSharePoint = !1,
                o.PlatformData.Instance.Share_Points.push(e);
            }
        }
        ,
        t.prototype.onConfigLoadSuccess = function(t) {
            if (t) {
                o.PlatformData.Instance.Share_Points.length = 0;
                for (var e = t.sharePoints, i = 0; i < e.length; i++) {
                    var n = new o.ShareBtnInfo();
                    n.shareIndex = e[i].shareIndex,
                    n.shareOrAdTimes = e[i].shareOrAdTimes,
                    n.shareSeconds = e[i].shareSeconds,
                    n.IsStartShareOrAd = e[i].isShareStart,
                    1 == e[i].isSharePoint ? n.IsSharePoint = !0 : n.IsSharePoint = !1,
                    o.PlatformData.Instance.Share_Points.push(n);
                }
                o.CommonUtil.Log("PlatformData.Instance.Share_Points: " + o.PlatformData.Instance.Share_Points),
                null != t.shareFailedSecond && (o.PlatformData.Instance.Share_Failed_Seconds = t.shareFailedSecond),
                null != t.shareFailedTimes && (o.PlatformData.Instance.Share_Failed_Times = t.shareFailedTimes),
                1 == t.shareTip ? o.PlatformData.Instance.Share_Tip = "分享失败，请分享到不同的群" : o.PlatformData.Instance.Share_Tip = "分享失败",
                1 == t.firstShareCheck && (o.PlatformData.Instance.firstShareCheck = !0),
                1 == t.localCheck && (o.PlatformData.Instance.localCheck = !0),
                1 == t.moreGameCheck && (o.PlatformData.Instance.moreGameCheck = !0),
                null != t.userSharePoint && (o.PlatformData.Instance.Use_Share_Point = t.userSharePoint),
                o.CommonUtil.Log("++++++++" + t.isShare),
                1 == t.isShare ? (o.PlatformData.Instance.IsNewVersion = !1,
                o.PlatformData.Instance.ShareSwitch = !0) : (o.PlatformData.Instance.IsNewVersion = !0,
                o.PlatformData.Instance.ShareSwitch = !1),
                o.CommonUtil.Log("PlatformData.Instance.ShareSwitch++++++++" + o.PlatformData.Instance.ShareSwitch);
                var a = t.moreGameList;
                for (i = 0; i < a.length; i++) {
                    var s = a[i]
                      , r = new o.MoreGameInfo();
                    r.Id = s.appId,
                    r.IconUrl = s.iconUrl,
                    r.Name = s.gameName,
                    r.Path = s.path,
                    r.IsGif = s.isGif,
                    r.PngCount = s.pngCount,
                    r.PicName = s.picName,
                    "wx023415fb5ed7a6e2" == r.Id || "wx9626878ba22b417b" == r.Id ? r.PeopleCount = 100 + Math.floor(30 * Math.random()) : r.PeopleCount = 60 + Math.floor(30 * Math.random()),
                    this._socialModule.MoreGameArr.push(r);
                }
                asgard.events.EventsDispatcher.eventNotify(o.GameEvents.EVENT_REFRESH_GAME_LIST);
            }
        }
        ,
        t;
    }(asgard.ui.BaseUIPanel);
    o.LoadingPanel = t;
}(logic || (logic = {}));

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

var logic, MyButton = function(e) {
    function t() {
        var t = e.call(this) || this;
        return t.on(Laya.Event.MOUSE_DOWN, t, t.mouseDown),
        t.on(Laya.Event.MOUSE_UP, t, t.mouseUp),
        t.on(Laya.Event.MOUSE_OUT, t, t.mouseUp),
        t;
    }
    return __extends(t, e),
    t.prototype.mouseDown = function() {
        this.scale(.85, .85);
    }
    ,
    t.prototype.mouseUp = function() {
        this.scale(1, 1);
    }
    ,
    t;
}(Laya.Image);

__extends = this && this.__extends || function() {
    var n = function(t, e) {
        return (n = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(t, e) {
            t.__proto__ = e;
        }
        || function(t, e) {
            for (var i in e)
                e.hasOwnProperty(i) && (t[i] = e[i]);
        }
        )(t, e);
    };
    return function(t, e) {
        function i() {
            this.constructor = t;
        }
        n(t, e),
        t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype,
        new i());
    }
    ;
}();

!function(a) {
    var s = Laya.Tween
      , t = Laya.Sprite
      , r = Laya.Handler
      , o = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._alphaS = 1,
            t;
        }
        return __extends(t, e),
        Object.defineProperty(t.prototype, "alphaS", {
            get: function() {
                return this._alphaS;
            },
            set: function(t) {
                this._alphaS = t;
                var e = [0, 0, 0, this._alphaS, 0, 0, 0, 0, this._alphaS, 0, 0, 0, 0, this._alphaS, 0, 0, 0, 0, this._alphaS, 0]
                  , i = new Laya.ColorFilter(e);
                this.filters = [i];
            },
            enumerable: !0,
            configurable: !0
        }),
        t;
    }(t);
    a.SpriteEx = o;
    var e = function() {
        function n() {}
        return n.showLightAppear = function(t, e, i) {
            var n = this
              , a = new o();
            a.graphics.clear(),
            a.graphics.loadImage(t.skin, 0, 0, t.width, t.height),
            a.alphaS = 1,
            t.addChild(a),
            s.from(a, {
                alphaS: 0
            }, .5 * e, null, r.create(this, function() {
                s.to(a, {
                    alphaS: 0
                }, .5 * e, null, r.create(n, function() {
                    s.clearAll(a),
                    a.removeSelf(),
                    i && i.run();
                }));
            }));
        }
        ,
        n.showLightDisAppear = function(t, e, i) {
            var n = new o();
            n.graphics.clear(),
            n.graphics.loadImage(t.skin, 0, 0, t.width, t.height),
            n.alphaS = 1,
            t.addChild(n),
            s.from(n, {
                alphaS: 0
            }, e, null, r.create(this, function() {
                s.clearAll(n),
                n.removeSelf(),
                i && i.run();
            }));
        }
        ,
        n.testColorFilter = function(t) {
            var e = new Laya.ColorFilter([0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]);
            t.filters = [e];
        }
        ,
        n.qTan = function(t, e, i) {
            var n = this;
            Laya.Tween.clearAll(t),
            e ? Laya.Tween.to(t, {
                scaleX: -.88,
                scaleY: 1.12
            }, 60, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: -1.12,
                    scaleY: 1.12
                }, 90, null, Laya.Handler.create(n, function() {
                    Laya.Tween.to(t, {
                        scaleX: -1,
                        scaleY: 1
                    }, 65, null, i);
                }));
            })) : (t.scale(1, 1),
            Laya.Tween.to(t, {
                scaleX: .88,
                scaleY: 1.12
            }, 60, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: 1.12,
                    scaleY: .88
                }, 90, null, Laya.Handler.create(n, function() {
                    Laya.Tween.to(t, {
                        scaleX: 1,
                        scaleY: 1
                    }, 65, null, i);
                }));
            })));
        }
        ,
        n.qTanLoop = function(t) {
            var e = this;
            Laya.Tween.to(t, {
                scaleX: .985,
                scaleY: 1
            }, 600, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: 1.015,
                    scaleY: 1.005
                }, 1200, null, Laya.Handler.create(e, function() {
                    Laya.Tween.to(t, {
                        scaleX: 1,
                        scaleY: 1
                    }, 600, null, new Laya.Handler(e,e.qTanLoop,[t]));
                }));
            }));
        }
        ,
        n.qTan3Loop = function(t) {
            var e = this;
            Laya.Tween.to(t, {
                scaleX: 1.015,
                scaleY: 1
            }, 600, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: .985,
                    scaleY: 1.005
                }, 1200, null, Laya.Handler.create(e, function() {
                    Laya.Tween.to(t, {
                        scaleX: 1,
                        scaleY: 1
                    }, 600, null, new Laya.Handler(e,e.qTan3Loop,[t]));
                }));
            }));
        }
        ,
        n.qTan4Loop = function(t) {
            var e = this;
            Laya.Tween.to(t, {
                rotation: .6
            }, 600, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    rotation: -.6
                }, 1200, null, Laya.Handler.create(e, function() {
                    Laya.Tween.to(t, {
                        rotation: 0
                    }, 600, null, new Laya.Handler(e,e.qTan4Loop,[t]));
                }));
            }));
        }
        ,
        n.qTan2Loop = function(t) {
            var e = this
              , i = t.width
              , n = t.height;
            Laya.Tween.to(t, {
                width: i - 1,
                height: n + .5
            }, 300, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    width: i + 1,
                    height: n
                }, 600, null, Laya.Handler.create(e, function() {
                    Laya.Tween.to(t, {
                        width: i,
                        height: n
                    }, 300, null, new Laya.Handler(e,e.qTan2Loop,[t]));
                }));
            }));
        }
        ,
        n.qTan1 = function(t, e, i) {
            var n = this;
            Laya.Tween.clearAll(t),
            e ? Laya.Tween.to(t, {
                scaleX: -.88,
                scaleY: 1.12
            }, 60, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: -1.12,
                    scaleY: 1.12
                }, 90, null, Laya.Handler.create(n, function() {
                    Laya.Tween.to(t, {
                        scaleX: -1,
                        scaleY: 1
                    }, 65, null, i);
                }));
            })) : (t.scale(1, 1),
            Laya.Tween.to(t, {
                scaleX: .95,
                scaleY: 1.05
            }, 60, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: 1.05,
                    scaleY: .95
                }, 90, null, Laya.Handler.create(n, function() {
                    Laya.Tween.to(t, {
                        scaleX: 1,
                        scaleY: 1
                    }, 65, null, i);
                }));
            })));
        }
        ,
        n.myButtonDelay = function(t, e) {
            var i = this;
            t.alpha = 0,
            Laya.Tween.clearAll(t),
            Laya.timer.once(1500, n, function() {
                Laya.Tween.to(t, {
                    alpha: 1
                }, 100, Laya.Ease.linearNone, Laya.Handler.create(i, function() {})),
                e && n.isShow && (a.PlatForm.getInstance().showBannerAd(),
                console.log("banner广告预显示")),
                n.isShow = !1;
            }, [t]);
        }
        ,
        n.DelayTan = function(t) {
            var e = this;
            Laya.Tween.clearAll(t),
            Laya.Tween.to(t, {
                scaleX: .7,
                scaleY: .7
            }, 35, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: 1.2,
                    scaleY: 1.2
                }, 70, null, Laya.Handler.create(e, function() {
                    Laya.Tween.to(t, {
                        scaleX: 1,
                        scaleY: 1
                    }, 35, null);
                }));
            }));
        }
        ,
        n.lightShowAndHide = function(t, e) {
            Laya.Tween.clearAll(t);
            var i = 1 - t.alpha;
            Laya.Tween.to(t, {
                alpha: i
            }, e, null, Laya.Handler.create(this, this.lightShowAndHide, [t, e]));
        }
        ,
        n.BigAndSmall = function(t, e, i, n) {
            var a = this;
            Laya.Tween.clearAll(t),
            t.scale(1, 1),
            Laya.Tween.to(t, {
                scaleX: 1 - i,
                scaleY: 1 - i
            }, e, null, Laya.Handler.create(this, function() {
                Laya.Tween.to(t, {
                    scaleX: 1 + i,
                    scaleY: 1 + i
                }, 2 * e, null, Laya.Handler.create(a, function() {
                    n ? Laya.Tween.to(t, {
                        scaleX: 1,
                        scaleY: 1
                    }, e, null, Laya.Handler.create(a, a.BigAndSmall, [t, e])) : Laya.Tween.to(t, {
                        scaleX: 1,
                        scaleY: 1
                    }, e, null, null);
                }));
            }));
        }
        ,
        n.isShow = !1,
        n;
    }();
    a.UIAnimTool = e;
}(logic || (logic = {})),
function(e) {
    var t = function() {
        function t() {}
        return t.prototype.getUI = function(t) {
            switch (t) {
            case e.UIRes.MAINMENU:
                return new e.MainMenuPanel(t);

            case e.UIRes.LOADING:
                return new e.LoadingPanel(t);

            case e.UIRes.GAME:
                return new e.GamePanel(t);

            case e.UIRes.RANK:
                return new e.RankPanel(t);

            case e.UIRes.END:
                return new e.EndTipPanel(t);

            case e.UIRes.BATTLE:
                return new e.BattlePanel(t);

            case e.UIRes.SHOP:
                return new e.ShopPanel(t);

            case e.UIRes.CHANGEGUN:
                return new e.ChangeGunPanel(t);

            case e.UIRes.TIPS:
                return new e.TipsPanel(t);

            case e.UIRes.RAPID:
                return new e.RapidPanel(t);

            case e.UIRes.DIAL:
                return new e.DialPanel(t);

            case e.UIRes.GETGOLD:
                return new e.GetGoldPanel(t);

            case e.UIRes.SHIELDTIP:
                return new e.ShieldTipPanel(t);

            case e.UIRes.AWARDDIAL:
                return new e.AwardDialPanel(t);

            case e.UIRes.GETNEWGUN:
                return new e.GetNewGunPanel(t);

            case e.UIRes.GM:
                return new e.GMTipPanel(t);

            case e.UIRes.SIGNIN:
                return new e.SignInPanel(t);

            case e.UIRes.OFFLINE:
                return new e.OffLinePanel(t);

            case e.UIRes.ROLESKIN:
                return new e.RoleSkinPanel(t);

            case e.UIRes.REVIVE:
                return new e.RevivePanel(t);

            case e.UIRes.TRYGUN:
                return new e.TryGunTipPanel(t);

            case e.UIRes.ADDBULLET:
                return new e.BulletAddTipPanel(t);

            case e.UIRes.ENDSNIPE:
                return new e.EndSnipeTipPanel(t);

            case e.UIRes.SNIPEGOLD:
                return new e.SnipeGoldTipPanel(t);

            case e.UIRes.TASK:
                return new e.TaskPanel(t);

            case e.UIRes.REPETTITION:
                return new e.RepetitionPanel(t);

            case e.UIRes.ENDREWARD:
                return new e.EndRewardTipPanel(t);

            case e.UIRes.ENDLOSE:
                return new e.EndLoseTipPanel(t);

            case e.UIRes.MOREGAME:
                return new e.MoreGamePanel(t);

            case e.UIRes.RECENTLYUSE:
                return null;//new e.RecentlyUse(t);

            case e.UIRes.EXITPANEL:
                return new e.ExitPanel(t);
            }
            return null;
        }
        ,
        t;
    }();
    e.UIFactory = t;
}(logic || (logic = {}));

var Main = function() {
    function t() {
        this._ctrlDown = !1,
        this._qDown = !1,
        this._logicFrameDelta = 0,
        this._logicFrameCount = 0,
        Laya.MiniAdpter.init(!0, !1),
        logic.PlatForm.getInstance().initSDK(Laya.Handler.create(this, this._init));
    }
    return t.prototype._init = function(t, e) {
        var i = logic.SystemConst.SCEEN_HEIGHT / logic.SystemConst.SCEEN_WIDTH
          , n = e / t;
        if (logic.GameConst.REAL_STATIC = n / i,
        n < i) {
            var a = logic.SystemConst.SCEEN_HEIGHT
              , s = (r = t / e * logic.SystemConst.SCEEN_HEIGHT) - logic.SystemConst.SCEEN_WIDTH;
            logic.GameConst.PLAYER_LOCATE_X += .5 * s,
            console.log(r, a),
            Laya.init(r, a, laya.webgl.WebGL),
            Laya.stage.scaleMode = Laya.Stage.SCALE_FIXED_HEIGHT;

        } else {
            var r = logic.SystemConst.SCEEN_WIDTH;
            a = e / t * logic.SystemConst.SCEEN_WIDTH;
            logic.SystemConst.REAL_HEIGHT = a,
            console.log(r, a),
            Laya.init(r, a, laya.webgl.WebGL);
            var o = a - logic.SystemConst.SCEEN_HEIGHT;
            logic.GameConst.CHANGE_HEIGHT = .4 * o;
            var h = Math.floor(.3 * o);
            logic.GameConst.HEIGHT_CHANGE = h,
            logic.GameConst.BATTLE_FIELD_HEIGHT = logic.GameConst.BATTLE_FIELD_HEIGHT + h,
            console.log("战斗区域高度：" + logic.GameConst.BATTLE_FIELD_HEIGHT),
            console.log("近景高度偏移：" + logic.GameConst.NEAR_BKG_LOCATE_Y),
            logic.GameConst.SPRITE_LOCATE_Y = logic.GameConst.SPRITE_LOCATE_Y + h,
            logic.GameConst.BOTTOM_BOX_HEIGHT = logic.GameConst.BOTTOM_BOX_HEIGHT + h,
            Laya.stage.scaleMode = Laya.Stage.SCALE_FIXED_WIDTH;
        }
        Laya.stage.alignH = Laya.Stage.ALIGN_CENTER,
        Laya.stage.alignV = Laya.Stage.ALIGN_MIDDLE,
        Laya.stage.screenMode = Laya.Stage.SCREEN_VERTICAL,
        this.initGame();

        //if(Laya.Browser.onPC || Laya.Browser.onIPad)
        {
            Laya.stage.scaleMode = Laya.Stage.SCALE_SHOWALL;
            Laya.stage.screenMode = Laya.Stage.SCREEN_NONE;
            Laya.stage.alignH = Laya.Stage.ALIGN_CENTER;
        }

    }
    ,
    t.prototype.initGame = function() {
        logic.PlatForm.getInstance().aldSendEvent("用户启动游戏"),
        asgard.module.ModuleManager.init(new logic.ModuleFactory()),
        asgard.ui.UIManager.init(new logic.UIFactory()),
        asgard.stage.StageManager.init(logic.STAGE_LOADING, new logic.StageFactory()),
        Laya.timer.frameLoop(1, this, this.onFrame),
        this._playerModule = asgard.module.ModuleManager.getModule(logic.MODULE_PLAYER),
        this._gameModule = asgard.module.ModuleManager.getModule(logic.MODULE_GAME);
    }
    ,
    t.prototype.onFrame = function() {
        if (logic.SystemConst.FrameOpen) {
            var t = Laya.timer.currTimer
              , e = Laya.timer.delta;
            e < 1 && (e = 1),
            this._logicFrameDelta += e,
            e = this._logicFrameDelta,
            this._logicFrameDelta = 0,
            this._logicFrameCount = 0,
            asgard.ui.UIManager.onFrame(t, e),
            asgard.stage.StageManager.onFrame(t, e),
            logic.RankManager.onFrame(t, e),
            logic.AppResources.onFrame(t, e),
            this._playerModule && this._playerModule.onFrame(t, e),
            logic.PlatformData.Instance.onFrame(t, e);
        }
    }
    ,
    t.GMOpen = !1,
    t;
}();

window.entry = new Main();
